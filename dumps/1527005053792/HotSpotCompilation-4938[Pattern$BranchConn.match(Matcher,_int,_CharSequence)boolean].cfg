begin_compilation
  name " HotSpotCompilation-4938[java.util.regex.Pattern$BranchConn.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4938[java.util.regex.Pattern$BranchConn.match(Matcher, int, CharSequence)]"
  date 1527005188285
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B366" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a6237 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$BranchConn;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v6441 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6441 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a6237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6237 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6441 
=== Succesors ===
next: v6238 
=== Usages ===
?136 v6574 v6442 v6443 v6446 ?5642 ?88 ?119 ?32 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6441 #next: v6238  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5660 ?117 ?88 ?5644 ?136 v6488 ?1657 ?109 v3527 ?5658 ?5642 v6487 v3515 ?126 v2979 ?5647 v2918 ?138 ?539 ?209 ?243 ?683 ?163 ?656 ?270 ?304 ?1603 ?2086 v2965 ?195 ?333 ?214 ?275 ?566 v2971 v3418 v3521 v6486 ?992 ?256 ?400 v6448 v6453 v6469 v6628 v6629 v6630 v6631 v6632 v6633 v6634 v6635 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5642 v3527 ?88 v2979 ?136 v3038 ?109 v2646 ?126 v692 i212 i263 i273 v188 v799 v6507 ?195 ?333 v249 v795 v6456 ?256 ?400 v2667 v3059 i6235 v6236 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5642 v3527 ?88 v2979 ?136 ?109 ?126 v3418 v3521 v2918 v2971 ?1603 v2965 ?195 ?333 ?214 ?683 ?566 ?1657 v3515 v6454 ?256 ?400 ?275 v6577 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v5673 v6238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v6574 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
v6238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6238 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v6574 
=== Succesors ===
next: v3925 
=== Usages ===
v6166 
=== Predecessor ===
a6237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v6574 #next: v3925  <|@  <|@
f <@~|@floating>@ <|@
tid v6165 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6166 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6238 
y: v6165 
=== Succesors ===
=== Usages ===
v3925 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6238 y: v6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6189 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6190 v6218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6171 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6172 v6194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3883 v3902 v3904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6185 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6186 v6188 v6215 v6217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6183 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6184 v6187 v6212 v6216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5670 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5673 v6051 v5957 v5773 v5971 v5713 v5817 v5825 v5993 v6015 v5923 v5913 v5809 v5885 v5935 v5681 v5947 v5861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3915 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3916 v3917 v6226 v6227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6181 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6182 v6209 v6211 v6214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6175 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6176 v6178 v6180 v6196 v6198 v6200 v6202 v6204 v6206 v6208 v6210 v6213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3909 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] ⇊000000000000d800 ⇈000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3910 v3911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6454 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a6254 a6310 a6330 a6423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6173 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6174 v6191 v6195 v6219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6577 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v6253 v6309 v6329 v6422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6453 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6252 i6328 i6421 i6308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6169 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6170 v6177 v6179 v6193 v6197 v6199 v6201 v6203 v6205 v6207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6448 <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6246 a6278 a6291 a6318 a6322 a6380 a6399 a6415 a6428 a6438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6167 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6168 v6192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3925 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6166 
=== Succesors ===
trueSuccessor: v3922 
falseSuccessor: v3924 
=== Usages ===
=== Predecessor ===
v6238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6166 #trueSuccessor: v3922 #falseSuccessor: v3924  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v6443 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
a6240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid v6442 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
i6239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid a1107 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6563 v6496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3912 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3913 v3914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v1466 v1465 i1858 i233 i165 i294 i1858 i466 i1642 i263 i466 i533 i1808 i558 i1808 i1808 i650 i1808 i675 i1808 i1808 i1858 i1808 i1696 v953 i1808 i6235 i1858 i1808 i1808 i1858 v1034 i6234 i165 i1808 i1808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?32 ?5642 ?136 ?119 ?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 v47 v56 v196 ?1430 i213 v1402 v237 ?2086 v257 ?1288 i274 ?1220 v298 i165 v1247 v323 v1634 v390 ?1154 v518 v540 v1122 v562 ?2159 ?1008 v635 v657 v1076 v679 v1337 v1048 v709 v795 v816 ?2093 ?1529 v1513 v967 ?2110 v1688 ?591 v6236 ?656 ?678 ?88 ?195 ?561 ?117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v3922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B356" "B326" 
    successors "B3" "B364" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i31 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i28 i62 i6234 
=== Succesors ===
=== Usages ===
?32 v34 v6445 ?5642 v2999 ?119 i62 ?88 ?136 i6234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v30 values: i28 i62 i6234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7323718579767724
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v29 
=== Succesors ===
next: i6239 
=== Usages ===
i31 v49 v58 v63 v2088 v4800 v4506 v4790 v3929 v4441 v3939 v4727 v4721 v4596 v4709 v3964 v4703 v3974 v4436 v3984 v3989 v4631 v3999 v4004 v4009 v4626 v4019 v4024 v4501 v4034 v4039 v4616 v4049 v4581 v4761 v4745 v4521 v4074 v4079 v4084 v4641 v4094 v4566 v4104 v4109 v4561 v4119 v4124 v4451 v4511 v4139 v4481 v4149 v4154 v4646 v4164 v4169 v4739 v4179 v4785 v4189 v4194 v4551 v4206 v4212 v4546 v4224 v4230 v4586 v4242 v4248 v4254 v4536 v4266 v4271 v4606 v4281 v4286 v4291 v4601 v4691 v4306 v4751 v4316 v4681 v4326 v4331 v4676 v4341 v4346 v4351 v4671 v4361 v4366 v4576 v4376 v4381 v4779 v4391 v4396 v4656 v4406 v4411 v4491 v4421 v4426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v29 #next: i6239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6239 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6442 
=== Succesors ===
next: v3930 
=== Usages ===
v34 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6442 #next: v3930  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i6239 
=== Succesors ===
=== Usages ===
v3930 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i6239  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
v5681 i6241 a6244 v6245 a6246 i6247 v6250 a6322 i6323 v6326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v3930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v3926 
falseSuccessor: v3929 
=== Usages ===
=== Predecessor ===
i6239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v3926 #falseSuccessor: v3929  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B363" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6240 
=== Usages ===
=== Predecessor ===
v3930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6443 
=== Succesors ===
next: i6241 
=== Usages ===
a2589 v6444 
=== Predecessor ===
v3926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6443 #next: i6241  <|@  <|@
f <@~|@floating>@ <|@
tid v6444 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6240 
=== Succesors ===
=== Usages ===
i6241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6444 
=== Succesors ===
next: v3940 
=== Usages ===
v2999 
=== Predecessor ===
a6240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6444 #next: v3940  <|@  <|@
f <@~|@floating>@ <|@
tid v2999 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i6241 
=== Succesors ===
=== Usages ===
v3940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i6241  <|@  <|@
f <@*|@fixed>@ <|@
tid v3940 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2999 
=== Succesors ===
trueSuccessor: v3936 
falseSuccessor: v3939 
=== Usages ===
=== Predecessor ===
i6241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2999 #trueSuccessor: v3936 #falseSuccessor: v3939  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6242 
=== Usages ===
a6242 
=== Predecessor ===
v3940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6242  <|@  <|@
f <@~|@floating>@ <|@
tid a2589 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6240 
=== Succesors ===
=== Usages ===
v6445 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6240  <|@  <|@
f <@~|@floating>@ <|@
tid v6445 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2589 
index: i31 
=== Succesors ===
=== Usages ===
a6242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2589 index: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v3936 
address: v6445 
=== Succesors ===
next: v41 
=== Usages ===
v3546 ?2086 v6502 v6505 v6587 ?5644 ?209 ?117 ?138 ?243 ?109 
=== Predecessor ===
v3936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3936 address: v6445 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v3546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
value: a6242 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6242  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.4231234893543153
=== Inputs ===
condition: v3546 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
a6242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3546 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B138" 
    xhandlers
    flags 
    probability 4604777561679676257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6243 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6243  <|@  <|@
f <@~|@floating>@ <|@
tid v6446 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
a6243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6446 
=== Succesors ===
next: a6244 
=== Usages ===
v6447 
=== Predecessor ===
v39 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6446 #next: a6244  <|@  <|@
f <@~|@floating>@ <|@
tid v6447 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6243 
=== Succesors ===
=== Usages ===
a6244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6447 
=== Succesors ===
next: v6245 
=== Usages ===
a2614 v6575 v6449 v6452 
=== Predecessor ===
a6243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6447 #next: v6245  <|@  <|@
f <@~|@floating>@ <|@
tid v6575 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
v6245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6245 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6575 
=== Succesors ===
next: v101 
=== Usages ===
v6168 
=== Predecessor ===
a6244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6575 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v6168 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6245 
y: v6167 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6245 y: v6167  <|@  <|@
f <@~|@floating>@ <|@
tid a2614 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6244 
=== Succesors ===
=== Usages ===
?270 v2996 ?126 ?163 ?5647 ?304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6244  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.2729733862503736
=== Inputs ===
condition: v6168 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v6245 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6168 #trueSuccessor: v94 #falseSuccessor: v100  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B137" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6246 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6246 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6448 
=== Succesors ===
next: i6247 
=== Usages ===
a2622 v6450 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6448 #next: i6247  <|@  <|@
f <@~|@floating>@ <|@
tid v6450 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6246 
=== Succesors ===
=== Usages ===
i6247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6450 
=== Succesors ===
next: i6248 
=== Usages ===
v2639 
=== Predecessor ===
a6246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6450 #next: i6248  <|@  <|@
f <@~|@floating>@ <|@
tid v6449 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
i6248 i6320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6248 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6449 
=== Succesors ===
next: v3965 
=== Usages ===
v2639 v6451 
=== Predecessor ===
i6247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6449 #next: v3965  <|@  <|@
f <@~|@floating>@ <|@
tid v2639 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6248 
y: i6247 
=== Succesors ===
=== Usages ===
v3965 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6248 y: i6247  <|@  <|@
f <@*|@fixed>@ <|@
tid v3965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2639 
=== Succesors ===
trueSuccessor: v3961 
falseSuccessor: v3964 
=== Usages ===
=== Predecessor ===
i6248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2639 #trueSuccessor: v3961 #falseSuccessor: v3964  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B99" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6249 
=== Usages ===
i6251 v2646 
=== Predecessor ===
v3965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6249  <|@  <|@
f <@~|@floating>@ <|@
tid v6452 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
a6249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6249 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6452 
=== Succesors ===
next: v6250 
=== Usages ===
a2649 v6576 v6457 v6464 v6465 v6492 v6626 v6627 
=== Predecessor ===
v3961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6452 #next: v6250  <|@  <|@
f <@~|@floating>@ <|@
tid v6576 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
v6250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6576 
=== Succesors ===
next: i6251 
=== Usages ===
v6498 v6170 v6172 
=== Predecessor ===
a6249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6576 #next: i6251  <|@  <|@
f <@~|@floating>@ <|@
tid a2622 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6246 
=== Succesors ===
=== Usages ===
v6451 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6246  <|@  <|@
f <@~|@floating>@ <|@
tid v6451 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2622 
index: i6248 
=== Succesors ===
=== Usages ===
v2646 i6251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2622 index: i6248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6251 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v3961 
address: v6451 
=== Succesors ===
next: v2646 
=== Usages ===
?126 ?5647 v2995 ?304 ?163 ?270 
=== Predecessor ===
v6250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3961 address: v6451 #next: v2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v3961 
address: v6451 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
i6251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v3961 address: v6451 value: i3 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v6170 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6250 
y: v6169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6250 y: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid a2649 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6249 
=== Succesors ===
=== Usages ===
?683 v2979 ?826 ?1855 ?275 ?591 ?400 ?256 v2971 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6249  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
?126 ?5647 ?304 ?163 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7408435024506907
=== Inputs ===
condition: v6170 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v2646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6170 #trueSuccessor: v169 #falseSuccessor: v175  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B97" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6252 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6252 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v3975 
=== Usages ===
v249 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v3975  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6252 
=== Succesors ===
=== Usages ===
v3975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6252  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 i3 a4 i6251 - 
=== Succesors ===
=== Usages ===
v5773 v6253 i6255 v6258 v6262 v6266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 i3 a4 i6251 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v3975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v3971 
falseSuccessor: v3974 
=== Usages ===
=== Predecessor ===
i6252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v3971 #falseSuccessor: v3974  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B96" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6253 
=== Usages ===
=== Predecessor ===
v3975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6253 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6577 
=== Succesors ===
next: v3985 
=== Usages ===
v6174 
=== Predecessor ===
v3971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6577 #next: v3985  <|@  <|@
f <@~|@floating>@ <|@
tid v6174 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6253 
y: v6173 
=== Succesors ===
=== Usages ===
v3985 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6253 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v3985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6174 
=== Succesors ===
trueSuccessor: v3981 
falseSuccessor: v3984 
=== Usages ===
=== Predecessor ===
v6253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6174 #trueSuccessor: v3981 #falseSuccessor: v3984  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3990 
=== Usages ===
=== Predecessor ===
v3985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3990  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v3990 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v3990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v795 
=== Succesors ===
trueSuccessor: v3989 
falseSuccessor: v3986 
=== Usages ===
=== Predecessor ===
v3981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v795 #trueSuccessor: v3989 #falseSuccessor: v3986  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5778 
=== Usages ===
=== Predecessor ===
v3990 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5778  <|@  <|@
f <@~|@floating>@ <|@
tid i5779 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679955
stableDimension: 0
stamp: i32 [-679955] ⇊00000000fff59fed ⇈00000000fff59fed
stampKind: i32
value: int[-679955|0xfffffffffff59fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B95" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6254 
=== Usages ===
=== Predecessor ===
v3990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6254 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6255 
=== Usages ===
a2659 v6455 
=== Predecessor ===
v3986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6255  <|@  <|@
f <@~|@floating>@ <|@
tid v6455 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6254 
=== Succesors ===
=== Usages ===
i6255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6255 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6455 
=== Succesors ===
next: v4000 
=== Usages ===
v799 v2667 
=== Predecessor ===
a6254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6455 #next: v4000  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6255 
=== Succesors ===
=== Usages ===
v4000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6255  <|@  <|@
f <@*|@fixed>@ <|@
tid v4000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v3996 
falseSuccessor: v3999 
=== Usages ===
=== Predecessor ===
i6255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v3996 #falseSuccessor: v3999  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B94" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4005 
=== Usages ===
=== Predecessor ===
v4000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4005  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6255 
=== Succesors ===
=== Usages ===
v4005 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i6255  <|@  <|@
f <@*|@fixed>@ <|@
tid v4005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v4001 
falseSuccessor: v4004 
=== Usages ===
=== Predecessor ===
v3996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v4001 #falseSuccessor: v4004  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B93" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6256 
=== Usages ===
i6256 
=== Predecessor ===
v4005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6256  <|@  <|@
f <@~|@floating>@ <|@
tid a2659 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6254 
=== Succesors ===
=== Usages ===
v6456 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6254  <|@  <|@
f <@~|@floating>@ <|@
tid v6456 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2659 
index: i3 
=== Succesors ===
=== Usages ===
i6256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2659 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6256 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4001 
address: v6456 
=== Succesors ===
next: v4010 
=== Usages ===
i2675 j3563 v3911 v3917 
=== Predecessor ===
v4001 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4001 address: v6456 #next: v4010  <|@  <|@
f <@~|@floating>@ <|@
tid v3911 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6256 
y: i3909 
=== Succesors ===
=== Usages ===
v4010 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6256 y: i3909  <|@  <|@
f <@*|@fixed>@ <|@
tid v4010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3911 
=== Succesors ===
trueSuccessor: v4006 
falseSuccessor: v4009 
=== Usages ===
=== Predecessor ===
i6256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3911 #trueSuccessor: v4006 #falseSuccessor: v4009  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6257 
=== Usages ===
=== Predecessor ===
v4010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6257  <|@  <|@
f <@~|@floating>@ <|@
tid v6457 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6257 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6457 
=== Succesors ===
next: v6258 
=== Usages ===
?1008 v6578 v6458 v6459 ?1132 v6625 
=== Predecessor ===
v4006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6457 #next: v6258  <|@  <|@
f <@~|@floating>@ <|@
tid v6578 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
v6258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6258 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6578 
=== Succesors ===
next: v604 
=== Usages ===
v6177 v6176 
=== Predecessor ===
a6257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6578 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v6176 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6258 
y: v6175 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6258 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6458 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
i6259 a6261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
?660 ?256 ?400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@~|@floating>@ <|@
tid i2675 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6256 
=== Succesors ===
=== Usages ===
v2808 ?5649 v2816 ?826 v1317 ?1855 v1313 ?256 ?400 ?591 v2706 v999 ?1220 ?1132 v2720 v1211 v995 ?1008 v2713 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6256  <|@  <|@
tid ?400 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?270 
values: a2649 a2 i3 a4 i2675 
=== Succesors ===
=== Usages ===
?826 ?5652 ?591 ?1855 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: a2649 a2 i3 a4 i2675  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?270 
values: - - - - - 
=== Succesors ===
=== Usages ===
?5658 ?1603 ?656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v6465 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6276 a6289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i3 
y: i61 
=== Succesors ===
=== Usages ===
v2918 v2917 v2794 v2882 ?1603 v2892 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6469 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6282 a6295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6176 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v6258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6176 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590005314200476746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6259 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6458 
=== Succesors ===
next: v998 
=== Usages ===
v995 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6458 #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6259 
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6259  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v995 
=== Succesors ===
trueSuccessor: v996 
falseSuccessor: v997 
=== Usages ===
=== Predecessor ===
i6259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v995 #trueSuccessor: v996 #falseSuccessor: v997  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4565915827229334165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6260 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6260  <|@  <|@
f <@~|@floating>@ <|@
tid v6459 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
i6260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6260 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6459 
=== Succesors ===
next: v4020 
=== Usages ===
v999 
=== Predecessor ===
v997 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6459 #next: v4020  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6260 
y: i2675 
=== Succesors ===
=== Usages ===
v4020 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6260 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v4019 
falseSuccessor: v4016 
=== Usages ===
=== Predecessor ===
i6260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v4019 #falseSuccessor: v4016  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5790 
=== Usages ===
=== Predecessor ===
v4020 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5790  <|@  <|@
f <@~|@floating>@ <|@
tid i5791 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -687379
stableDimension: 0
stamp: i32 [-687379] ⇊00000000fff582ed ⇈00000000fff582ed
stampKind: i32
value: int[-687379|0xfffffffffff582ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v4020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B92" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4025 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4025  <|@  <|@
f <@~|@floating>@ <|@
tid v6177 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6258 
y: v6169 
=== Succesors ===
=== Usages ===
v4025 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6258 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6177 
=== Succesors ===
trueSuccessor: v4021 
falseSuccessor: v4024 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6177 #trueSuccessor: v4021 #falseSuccessor: v4024  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6261 
=== Usages ===
=== Predecessor ===
v4025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6261 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6458 
=== Succesors ===
next: v6262 
=== Usages ===
?1220 v6579 v6460 v6461 ?5649 v6624 
=== Predecessor ===
v4021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6458 #next: v6262  <|@  <|@
f <@~|@floating>@ <|@
tid v6579 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
v6262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6262 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6579 
=== Succesors ===
next: v1021 
=== Usages ===
v6179 v6178 
=== Predecessor ===
a6261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6579 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v6178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6262 
y: v6175 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6262 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6460 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
i6263 a6265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
tid ?826 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 
=== Succesors ===
=== Usages ===
?1132 ?5651 ?1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6178 
=== Succesors ===
trueSuccessor: v1014 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v6262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6178 #trueSuccessor: v1014 #falseSuccessor: v1020  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4585501602410042383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6263 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6263 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6460 
=== Succesors ===
next: v1210 
=== Usages ===
v1207 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6460 #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6263 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v1208 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
i6263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v1208 #falseSuccessor: v1209  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561412053862212708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2192 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2192  <|@  <|@
f <@*|@fixed>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
v1208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6264 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6264  <|@  <|@
f <@~|@floating>@ <|@
tid v6461 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
i6264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6264 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6461 
=== Succesors ===
next: v4035 
=== Usages ===
v1211 
=== Predecessor ===
v1209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6461 #next: v4035  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6264 
y: i2675 
=== Succesors ===
=== Usages ===
v4035 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6264 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1211 
=== Succesors ===
trueSuccessor: v4034 
falseSuccessor: v4031 
=== Usages ===
=== Predecessor ===
i6264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1211 #trueSuccessor: v4034 #falseSuccessor: v4031  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5796 
=== Usages ===
=== Predecessor ===
v4035 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5796  <|@  <|@
f <@~|@floating>@ <|@
tid i5797 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -689939
stableDimension: 0
stamp: i32 [-689939] ⇊00000000fff578ed ⇈00000000fff578ed
stampKind: i32
value: int[-689939|0xfffffffffff578ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4034 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B68" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v4035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2016  <|@  <|@
f <@*|@fixed>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B91" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4040 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4040  <|@  <|@
f <@~|@floating>@ <|@
tid v6179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6262 
y: v6169 
=== Succesors ===
=== Usages ===
v4040 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6262 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6179 
=== Succesors ===
trueSuccessor: v4036 
falseSuccessor: v4039 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6179 #trueSuccessor: v4036 #falseSuccessor: v4039  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6265 
=== Usages ===
=== Predecessor ===
v4040 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6265 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6460 
=== Succesors ===
next: v6266 
=== Usages ===
a2699 v6580 v6462 v6463 
=== Predecessor ===
v4036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6460 #next: v6266  <|@  <|@
f <@~|@floating>@ <|@
tid v6580 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
v6266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6266 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6580 
=== Succesors ===
next: v1233 
=== Usages ===
v6180 
=== Predecessor ===
a6265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6580 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v6180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6266 
y: v6175 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6266 y: v6175  <|@  <|@
tid ?1132 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?826 
values: a6257 i2675 
=== Succesors ===
=== Usages ===
?5650 ?5649 ?1220 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: a6257 i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6180 
=== Succesors ===
trueSuccessor: v1226 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
v6266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6180 #trueSuccessor: v1226 #falseSuccessor: v1232  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580997890621963534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6267 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6267  <|@  <|@
f <@~|@floating>@ <|@
tid v6462 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
i6267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6267 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6462 
=== Succesors ===
next: v1316 
=== Usages ===
v1313 
=== Predecessor ===
v1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6462 #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6267 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1314 
falseSuccessor: v1315 
=== Usages ===
=== Predecessor ===
i6267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1314 #falseSuccessor: v1315  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4556908280498739924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2240 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
v1314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6268 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6268  <|@  <|@
f <@~|@floating>@ <|@
tid v6463 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
i6268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6268 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6463 
=== Succesors ===
next: v4050 
=== Usages ===
v1317 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6463 #next: v4050  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6268 
y: i2675 
=== Succesors ===
=== Usages ===
v4050 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6268 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4050 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1317 
=== Succesors ===
trueSuccessor: v4049 
falseSuccessor: v4046 
=== Usages ===
=== Predecessor ===
i6268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1317 #trueSuccessor: v4049 #falseSuccessor: v4046  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5802 
=== Usages ===
=== Predecessor ===
v4050 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5802  <|@  <|@
f <@~|@floating>@ <|@
tid i5803 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -692499
stableDimension: 0
stamp: i32 [-692499] ⇊00000000fff56eed ⇈00000000fff56eed
stampKind: i32
value: int[-692499|0xfffffffffff56eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v4050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2067  <|@  <|@
f <@*|@fixed>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B67" 
    xhandlers
    flags 
    probability 4580997666309968492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid a2699 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6265 
=== Succesors ===
=== Usages ===
v2706 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6265  <|@  <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5ab11aca
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2699 i2675 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2699 i2675  <|@  <|@
tid ?5649 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1132 
values: a6261 i2675 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: a6261 i2675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2706 
stateDuring: ?5649 
=== Succesors ===
next: v1125 
=== Usages ===
v1122 
=== Predecessor ===
v1232 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2706 stateDuring: ?5649 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1120 
y: i28 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1120 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1123 #falseSuccessor: v1124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4552503787519490370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2239  <|@  <|@
f <@*|@fixed>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B66" 
    xhandlers
    flags 
    probability 4559368492574505914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2239 v2240 
=== Succesors ===
next: a6269 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2239 v2240 #next: a6269  <|@  <|@
f <@~|@floating>@ <|@
tid v6624 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
a6269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6269 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6624 
=== Succesors ===
next: v6607 
=== Usages ===
a2709 v6607 
=== Predecessor ===
v2238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6624 #next: v6607  <|@  <|@
tid ?1220 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1132 
values: a6261 i2675 i28 
=== Succesors ===
=== Usages ===
v6607 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: a6261 i2675 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1220 
object: a6269 
=== Succesors ===
next: i1128 
=== Usages ===
=== Predecessor ===
a6269 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1220 object: a6269 #next: i1128  <|@  <|@
f <@~|@floating>@ <|@
tid a2709 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6269 
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6269  <|@  <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2ac3590d
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2709 i2675 
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2709 i2675  <|@  <|@
tid ?5650 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1132 
values: - - 
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1128 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2713 
stateDuring: ?5650 
=== Succesors ===
next: v819 
=== Usages ===
v816 
=== Predecessor ===
v6607 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2713 stateDuring: ?5650 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1128 
y: i28 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1128 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
i1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v818  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4531000174654467634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2191  <|@  <|@
f <@*|@fixed>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B65" 
    xhandlers
    flags 
    probability 4561488343692636445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2191 v2192 
=== Succesors ===
next: a6270 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2191 v2192 #next: a6270  <|@  <|@
f <@~|@floating>@ <|@
tid v6625 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
a6270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6270 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6625 
=== Succesors ===
next: v6608 
=== Usages ===
a2716 v6608 
=== Predecessor ===
v2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6625 #next: v6608  <|@  <|@
tid ?1008 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?826 
values: a6257 i2675 i28 
=== Succesors ===
=== Usages ===
v6608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: a6257 i2675 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1008 
object: a6270 
=== Succesors ===
next: i822 
=== Usages ===
=== Predecessor ===
a6270 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1008 object: a6270 #next: i822  <|@  <|@
f <@~|@floating>@ <|@
tid a2716 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6270 
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6270  <|@  <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@54b24352
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2716 i2675 
=== Succesors ===
=== Usages ===
i822 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2716 i2675  <|@  <|@
tid ?5651 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?826 
values: - - 
=== Succesors ===
=== Usages ===
i822 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i822 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2720 
stateDuring: ?5651 
=== Succesors ===
next: v393 
=== Usages ===
v390 i1858 
=== Predecessor ===
v6608 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2720 stateDuring: ?5651 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i822 
y: i28 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i822 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i822 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4532661730250397969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2175 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2175 v2176 
=== Succesors ===
next: a6271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2175 v2176 #next: a6271  <|@  <|@
f <@~|@floating>@ <|@
tid v6464 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6271 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6464 
=== Succesors ===
next: v6272 
=== Usages ===
a2723 v6581 v6475 
=== Predecessor ===
v2174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6464 #next: v6272  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 i28 
=== Succesors ===
=== Usages ===
v5923 v6272 i6274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6581 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6271 
=== Succesors ===
=== Usages ===
v6272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6272 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?591 
guard: - 
address: v6581 
=== Succesors ===
next: v630 
=== Usages ===
v6182 
=== Predecessor ===
a6271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?591 guard: - address: v6581 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v6182 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6272 
y: v6181 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6272 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6182 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v6272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6182 #trueSuccessor: v623 #falseSuccessor: v629  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6273 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6273  <|@  <|@
f <@~|@floating>@ <|@
tid v6475 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6271 
=== Succesors ===
=== Usages ===
a6273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6273 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6475 
=== Succesors ===
next: i6274 
=== Usages ===
v6477 v6476 
=== Predecessor ===
v623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6475 #next: i6274  <|@  <|@
f <@~|@floating>@ <|@
tid v6476 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6273 
=== Succesors ===
=== Usages ===
i6274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6274 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?591 
guard: - 
address: v6476 
=== Succesors ===
next: v4075 
=== Usages ===
v2808 
=== Predecessor ===
a6273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?591 guard: - address: v6476 #next: v4075  <|@  <|@
f <@~|@floating>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6274 
=== Succesors ===
=== Usages ===
v4075 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2675 y: i6274  <|@  <|@
f <@*|@fixed>@ <|@
tid v4075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2808 
=== Succesors ===
trueSuccessor: v4071 
falseSuccessor: v4074 
=== Usages ===
=== Predecessor ===
i6274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2808 #trueSuccessor: v4071 #falseSuccessor: v4074  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4080 
=== Usages ===
i6275 
=== Predecessor ===
v4075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4080  <|@  <|@
f <@~|@floating>@ <|@
tid v3917 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6256 
y: i3915 
=== Succesors ===
=== Usages ===
v4080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6256 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3917 
=== Succesors ===
trueSuccessor: v4076 
falseSuccessor: v4079 
=== Usages ===
=== Predecessor ===
v4071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3917 #trueSuccessor: v4076 #falseSuccessor: v4079  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6275 
=== Usages ===
=== Predecessor ===
v4080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6275  <|@  <|@
f <@~|@floating>@ <|@
tid j3563 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6256 
=== Succesors ===
=== Usages ===
v6477 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6256  <|@  <|@
f <@~|@floating>@ <|@
tid v6477 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j3563 
index: a6273 
=== Succesors ===
=== Usages ===
i6275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3563 index: a6273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6275 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4071 
address: v6477 
=== Succesors ===
next: v1472 
=== Usages ===
i3564 
=== Predecessor ===
v4076 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4071 address: v6477 #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid i3564 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6275 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6275  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i6275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5928 
=== Usages ===
=== Predecessor ===
v4080 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5928  <|@  <|@
f <@~|@floating>@ <|@
tid i5929 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -716563
stableDimension: 0
stamp: i32 [-716563] ⇊00000000fff510ed ⇈00000000fff510ed
stampKind: i32
value: int[-716563|0xfffffffffff510ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5918 
=== Predecessor ===
v4079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5926 
=== Usages ===
=== Predecessor ===
v4075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5926  <|@  <|@
f <@~|@floating>@ <|@
tid i5927 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -719131
stableDimension: 0
stamp: i32 [-719131] ⇊00000000fff506e5 ⇈00000000fff506e5
stampKind: i32
value: int[-719131|0xfffffffffff506e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5918 
=== Predecessor ===
v4074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5921 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-719131 - -697355] ⇊00000000fff500e5 ⇈00000000fff55ffd
valueDescription: i32
=== Inputs ===
merge: v5918 
values: i5927 i5929 
=== Succesors ===
=== Usages ===
v5923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5918 values: i5927 i5929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5926 v5928 
=== Succesors ===
next: v5923 
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5926 v5928 #next: v5923  <|@  <|@
f <@*|@fixed>@ <|@
tid v5923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
actionAndReason: i5921 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5918 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?591 actionAndReason: i5921 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i396 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i396  <|@  <|@
f <@~|@floating>@ <|@
tid a2723 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6271 
=== Succesors ===
=== Usages ===
v2816 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6271  <|@  <|@
tid v2816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@76f4c4e3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2723 i2675 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2723 i2675  <|@  <|@
tid ?5652 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?400 
values: - - 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2816 
stateDuring: ?5652 
=== Succesors ===
next: v402 
=== Usages ===
i403 
=== Predecessor ===
v629 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2816 stateDuring: ?5652 #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i403 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v401 
values: i396 i3564 
=== Succesors ===
=== Usages ===
?256 v257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: i396 i3564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v1472 
=== Succesors ===
next: v4085 
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v1472 #next: v4085  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?270 
values: a2649 a2 i3 a4 i2675 i403 
=== Succesors ===
=== Usages ===
v5861 v6277 i6279 i6283 v6286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: a2649 a2 i3 a4 i2675 i403  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i403 
y: i28 
=== Succesors ===
=== Usages ===
v4085 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i403 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v4084 
falseSuccessor: v4081 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v4084 #falseSuccessor: v4081  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5857 
=== Usages ===
=== Predecessor ===
v4085 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5857  <|@  <|@
f <@~|@floating>@ <|@
tid i5858 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -697619
stableDimension: 0
stamp: i32 [-697619] ⇊00000000fff55aed ⇈00000000fff55aed
stampKind: i32
value: int[-697619|0xfffffffffff55aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6276 
=== Usages ===
=== Predecessor ===
v4085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6465 
=== Succesors ===
next: v6277 
=== Usages ===
a2728 v6582 v6466 v6470 v6474 
=== Predecessor ===
v4081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6465 #next: v6277  <|@  <|@
f <@~|@floating>@ <|@
tid v6582 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
v6277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6277 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6582 
=== Succesors ===
next: v4095 
=== Usages ===
v6184 
=== Predecessor ===
a6276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6582 #next: v4095  <|@  <|@
f <@~|@floating>@ <|@
tid v6184 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6277 
y: v6183 
=== Succesors ===
=== Usages ===
v4095 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6277 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4095 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6184 
=== Succesors ===
trueSuccessor: v4091 
falseSuccessor: v4094 
=== Usages ===
=== Predecessor ===
v6277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6184 #trueSuccessor: v4091 #falseSuccessor: v4094  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B62" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6278 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6279 
=== Usages ===
a2732 v6467 
=== Predecessor ===
v4091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6279  <|@  <|@
f <@~|@floating>@ <|@
tid v6467 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6278 
=== Succesors ===
=== Usages ===
i6279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6467 
=== Succesors ===
next: i6280 
=== Usages ===
v2740 
=== Predecessor ===
a6278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6467 #next: i6280  <|@  <|@
f <@~|@floating>@ <|@
tid v6466 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
i6280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6280 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6466 
=== Succesors ===
next: v4105 
=== Usages ===
v6468 v2740 
=== Predecessor ===
i6279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6466 #next: v4105  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6280 
y: i6279 
=== Succesors ===
=== Usages ===
v4105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6280 y: i6279  <|@  <|@
f <@*|@fixed>@ <|@
tid v4105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2740 
=== Succesors ===
trueSuccessor: v4101 
falseSuccessor: v4104 
=== Usages ===
=== Predecessor ===
i6280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2740 #trueSuccessor: v4101 #falseSuccessor: v4104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6281 
=== Usages ===
i6281 
=== Predecessor ===
v4105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6281  <|@  <|@
f <@~|@floating>@ <|@
tid a2732 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6278 
=== Succesors ===
=== Usages ===
v6468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6278  <|@  <|@
f <@~|@floating>@ <|@
tid v6468 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2732 
index: i6280 
=== Succesors ===
=== Usages ===
i6281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2732 index: i6280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4101 
address: v6468 
=== Succesors ===
next: v4110 
=== Usages ===
v635 v2785 i5662 
=== Predecessor ===
v4101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4101 address: v6468 #next: v4110  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6281 
y: i28 
=== Succesors ===
=== Usages ===
v4110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6281 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v4109 
falseSuccessor: v4106 
=== Usages ===
=== Predecessor ===
i6281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v4109 #falseSuccessor: v4106  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5870 
=== Usages ===
=== Predecessor ===
v4110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5870  <|@  <|@
f <@~|@floating>@ <|@
tid i5871 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -703507
stableDimension: 0
stamp: i32 [-703507] ⇊00000000fff543ed ⇈00000000fff543ed
stampKind: i32
value: int[-703507|0xfffffffffff543ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B61" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6282 
=== Usages ===
=== Predecessor ===
v4110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6469 
=== Succesors ===
next: i6283 
=== Usages ===
a2752 v6471 
=== Predecessor ===
v4106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6469 #next: i6283  <|@  <|@
f <@~|@floating>@ <|@
tid v6471 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6282 
=== Succesors ===
=== Usages ===
i6283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6283 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6471 
=== Succesors ===
next: i6284 
=== Usages ===
v2787 v2778 
=== Predecessor ===
a6282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6471 #next: i6284  <|@  <|@
f <@~|@floating>@ <|@
tid v6470 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
i6284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6284 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6470 
=== Succesors ===
next: v4120 
=== Usages ===
v2778 i650 v6472 
=== Predecessor ===
i6283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6470 #next: v4120  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6284 
y: i6283 
=== Succesors ===
=== Usages ===
v4120 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6284 y: i6283  <|@  <|@
f <@*|@fixed>@ <|@
tid v4120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2778 
=== Succesors ===
trueSuccessor: v4116 
falseSuccessor: v4119 
=== Usages ===
=== Predecessor ===
i6284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2778 #trueSuccessor: v4116 #falseSuccessor: v4119  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B60" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4125 
=== Usages ===
i6288 v2785 
=== Predecessor ===
v4120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4125  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6284 
y: i61 
=== Succesors ===
=== Usages ===
v6473 v2787 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6284 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i650 
y: i6283 
=== Succesors ===
=== Usages ===
v4125 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i650 y: i6283  <|@  <|@
f <@*|@fixed>@ <|@
tid v4125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2787 
=== Succesors ===
trueSuccessor: v4121 
falseSuccessor: v4124 
=== Usages ===
=== Predecessor ===
v4116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2787 #trueSuccessor: v4121 #falseSuccessor: v4124  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6285 
=== Usages ===
i6287 v2794 
=== Predecessor ===
v4125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6285  <|@  <|@
f <@~|@floating>@ <|@
tid v6474 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
a6285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6474 
=== Succesors ===
next: v6286 
=== Usages ===
a2797 v6583 
=== Predecessor ===
v4121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6474 #next: v6286  <|@  <|@
f <@~|@floating>@ <|@
tid v6583 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6285 
=== Succesors ===
=== Usages ===
v6286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6583 
=== Succesors ===
next: i6287 
=== Usages ===
v6186 
=== Predecessor ===
a6285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6583 #next: i6287  <|@  <|@
f <@~|@floating>@ <|@
tid a2752 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6282 
=== Succesors ===
=== Usages ===
v6472 a1614 v6473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6282  <|@  <|@
f <@~|@floating>@ <|@
tid v6473 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2752 
index: i650 
=== Succesors ===
=== Usages ===
v2794 i6287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2752 index: i650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4121 
address: v6473 
=== Succesors ===
next: i6288 
=== Usages ===
i1620 i1618 
=== Predecessor ===
v6286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4121 address: v6473 #next: i6288  <|@  <|@
f <@~|@floating>@ <|@
tid v6472 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2752 
index: i6284 
=== Succesors ===
=== Usages ===
v2785 i6288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2752 index: i6284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4116 
address: v6472 
=== Succesors ===
next: v2785 
=== Usages ===
i1617 i1615 
=== Predecessor ===
i6287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4116 address: v6472 #next: v2785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4116 
address: v6472 
value: i6281 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2794 
=== Usages ===
=== Predecessor ===
i6288 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4116 address: v6472 value: i6281 stateAfter: - lastLocationAccess: - #next: v2794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4121 
address: v6473 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4121 address: v6473 value: i263 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v6186 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6286 
y: v6185 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6286 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a2728 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6276 
=== Succesors ===
=== Usages ===
a1609 a1610 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6276  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6186 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6186 #trueSuccessor: v843 #falseSuccessor: v849  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B76" 
    xhandlers
    flags 
    probability 4564516866529163683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B83" 
    xhandlers
    flags 
    probability 4554435969718103183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid a2797 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6285 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5876 
=== Usages ===
=== Predecessor ===
v4125 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5876  <|@  <|@
f <@~|@floating>@ <|@
tid i5877 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -713755
stableDimension: 0
stamp: i32 [-713755] ⇊00000000fff51be5 ⇈00000000fff51be5
stampKind: i32
value: int[-713755|0xfffffffffff51be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5874 
=== Usages ===
=== Predecessor ===
v4120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5874  <|@  <|@
f <@~|@floating>@ <|@
tid i5875 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -711451
stableDimension: 0
stamp: i32 [-711451] ⇊00000000fff524e5 ⇈00000000fff524e5
stampKind: i32
value: int[-711451|0xfffffffffff524e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5868 
=== Usages ===
=== Predecessor ===
v4105 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5868  <|@  <|@
f <@~|@floating>@ <|@
tid i5869 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -701723
stableDimension: 0
stamp: i32 [-701723] ⇊00000000fff54ae5 ⇈00000000fff54ae5
stampKind: i32
value: int[-701723|0xfffffffffff54ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5864 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5864  <|@  <|@
f <@~|@floating>@ <|@
tid i5865 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -698931
stableDimension: 0
stamp: i32 [-698931] ⇊00000000fff555cd ⇈00000000fff555cd
stampKind: i32
value: int[-698931|0xfffffffffff555cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4094 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B50" "B63" "B62" "B54" "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5859 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-716299 - -697619] ⇊00000000fff500c5 ⇈00000000fff57ffd
valueDescription: i32
=== Inputs ===
merge: v5856 
values: i5858 i5865 i5869 i5871 i5875 i5877 
=== Succesors ===
=== Usages ===
v5861 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5856 values: i5858 i5865 i5869 i5871 i5875 i5877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5857 v5864 v5868 v5870 v5874 v5876 
=== Succesors ===
next: v5861 
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5857 v5864 v5868 v5870 v5874 v5876 #next: v5861  <|@  <|@
f <@*|@fixed>@ <|@
tid v5861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
actionAndReason: i5859 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5856 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?256 actionAndReason: i5859 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B68" 
    xhandlers
    flags 
    probability 4561386092056026297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B68" 
    xhandlers
    flags 
    probability 4559292202744082177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1856 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580932261907603961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" "B67" "B27" "B20" "B34" 
    successors "B69" "B89" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1858 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1853 
values: i822 i61 i61 i61 i61 i61 
=== Succesors ===
=== Usages ===
?1855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: i822 i61 i61 i61 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1856 v1880 v2016 v2050 v2067 
=== Succesors ===
next: a6289 
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1856 v1880 v2016 v2050 v2067 #next: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6289 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6465 
=== Succesors ===
next: v6290 
=== Usages ===
a2818 v6584 v6478 v6481 v6485 
=== Predecessor ===
v1853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6465 #next: v6290  <|@  <|@
tid ?1855 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 i1858 
=== Succesors ===
=== Usages ===
v5993 v6290 i6292 i6296 v6299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675 i1858  <|@  <|@
f <@~|@floating>@ <|@
tid v6584 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
v6290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6290 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6584 
=== Succesors ===
next: v4140 
=== Usages ===
v6187 
=== Predecessor ===
a6289 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6584 #next: v4140  <|@  <|@
f <@~|@floating>@ <|@
tid v6187 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6290 
y: v6183 
=== Succesors ===
=== Usages ===
v4140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6290 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6187 
=== Succesors ===
trueSuccessor: v4136 
falseSuccessor: v4139 
=== Usages ===
=== Predecessor ===
v6290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6187 #trueSuccessor: v4136 #falseSuccessor: v4139  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B88" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6291 
=== Usages ===
=== Predecessor ===
v4140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6291 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6292 
=== Usages ===
a2822 v6479 
=== Predecessor ===
v4136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6292  <|@  <|@
f <@~|@floating>@ <|@
tid v6479 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6291 
=== Succesors ===
=== Usages ===
i6292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6292 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6479 
=== Succesors ===
next: i6293 
=== Usages ===
v2830 
=== Predecessor ===
a6291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6479 #next: i6293  <|@  <|@
f <@~|@floating>@ <|@
tid v6478 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
i6293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6293 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6478 
=== Succesors ===
next: v4150 
=== Usages ===
v6480 v2830 
=== Predecessor ===
i6292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6478 #next: v4150  <|@  <|@
f <@~|@floating>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6293 
y: i6292 
=== Succesors ===
=== Usages ===
v4150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6293 y: i6292  <|@  <|@
f <@*|@fixed>@ <|@
tid v4150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2830 
=== Succesors ===
trueSuccessor: v4146 
falseSuccessor: v4149 
=== Usages ===
=== Predecessor ===
i6293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2830 #trueSuccessor: v4146 #falseSuccessor: v4149  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6294 
=== Usages ===
i6294 
=== Predecessor ===
v4150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6294  <|@  <|@
f <@~|@floating>@ <|@
tid a2822 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6291 
=== Succesors ===
=== Usages ===
v6480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6291  <|@  <|@
f <@~|@floating>@ <|@
tid v6480 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2822 
index: i6293 
=== Succesors ===
=== Usages ===
i6294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2822 index: i6293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6294 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4146 
address: v6480 
=== Succesors ===
next: v4155 
=== Usages ===
v1634 v2873 i5662 
=== Predecessor ===
v4146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4146 address: v6480 #next: v4155  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6294 
y: i28 
=== Succesors ===
=== Usages ===
v4155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6294 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1634 
=== Succesors ===
trueSuccessor: v4154 
falseSuccessor: v4151 
=== Usages ===
=== Predecessor ===
i6294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1634 #trueSuccessor: v4154 #falseSuccessor: v4151  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6000 
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6000  <|@  <|@
f <@~|@floating>@ <|@
tid i6001 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -726547
stableDimension: 0
stamp: i32 [-726547] ⇊00000000fff4e9ed ⇈00000000fff4e9ed
stampKind: i32
value: int[-726547|0xfffffffffff4e9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B87" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6295 
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6295 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6469 
=== Succesors ===
next: i6296 
=== Usages ===
a2840 v6482 
=== Predecessor ===
v4151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6469 #next: i6296  <|@  <|@
f <@~|@floating>@ <|@
tid v6482 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6295 
=== Succesors ===
=== Usages ===
i6296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6296 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6482 
=== Succesors ===
next: i6297 
=== Usages ===
v2875 v2866 
=== Predecessor ===
a6295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6482 #next: i6297  <|@  <|@
f <@~|@floating>@ <|@
tid v6481 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
i6297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6297 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6481 
=== Succesors ===
next: v4165 
=== Usages ===
v2866 v6483 i1642 
=== Predecessor ===
i6296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6481 #next: v4165  <|@  <|@
f <@~|@floating>@ <|@
tid v2866 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6297 
y: i6296 
=== Succesors ===
=== Usages ===
v4165 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6297 y: i6296  <|@  <|@
f <@*|@fixed>@ <|@
tid v4165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2866 
=== Succesors ===
trueSuccessor: v4161 
falseSuccessor: v4164 
=== Usages ===
=== Predecessor ===
i6297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2866 #trueSuccessor: v4161 #falseSuccessor: v4164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4170 
=== Usages ===
i6301 v2873 
=== Predecessor ===
v4165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4170  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6297 
y: i61 
=== Succesors ===
=== Usages ===
v2875 v6484 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6297 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1642 
y: i6296 
=== Succesors ===
=== Usages ===
v4170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1642 y: i6296  <|@  <|@
f <@*|@fixed>@ <|@
tid v4170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2875 
=== Succesors ===
trueSuccessor: v4166 
falseSuccessor: v4169 
=== Usages ===
=== Predecessor ===
v4161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2875 #trueSuccessor: v4166 #falseSuccessor: v4169  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B82" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6298 
=== Usages ===
i6300 v2882 
=== Predecessor ===
v4170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6298  <|@  <|@
f <@~|@floating>@ <|@
tid v6485 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
a6298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6298 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6485 
=== Succesors ===
next: v6299 
=== Usages ===
a2885 v6585 
=== Predecessor ===
v4166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6485 #next: v6299  <|@  <|@
f <@~|@floating>@ <|@
tid v6585 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6298 
=== Succesors ===
=== Usages ===
v6299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6299 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6585 
=== Succesors ===
next: i6300 
=== Usages ===
v6188 
=== Predecessor ===
a6298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6585 #next: i6300  <|@  <|@
f <@~|@floating>@ <|@
tid a2840 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6295 
=== Succesors ===
=== Usages ===
v6483 a1614 v6484 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6295  <|@  <|@
f <@~|@floating>@ <|@
tid v6484 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2840 
index: i1642 
=== Succesors ===
=== Usages ===
v2882 i6300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2840 index: i1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6300 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4166 
address: v6484 
=== Succesors ===
next: i6301 
=== Usages ===
i1618 i1620 
=== Predecessor ===
v6299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4166 address: v6484 #next: i6301  <|@  <|@
f <@~|@floating>@ <|@
tid v6483 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2840 
index: i6297 
=== Succesors ===
=== Usages ===
v2873 i6301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2840 index: i6297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6301 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4161 
address: v6483 
=== Succesors ===
next: v2873 
=== Usages ===
i1615 i1617 
=== Predecessor ===
i6300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4161 address: v6483 #next: v2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4161 
address: v6483 
value: i6294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2882 
=== Usages ===
=== Predecessor ===
i6301 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4161 address: v6483 value: i6294 stateAfter: - lastLocationAccess: - #next: v2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4166 
address: v6484 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v2873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4166 address: v6484 value: i263 stateAfter: - lastLocationAccess: - #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v6188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6299 
y: v6185 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6299 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a2818 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6289 
=== Succesors ===
=== Usages ===
a1609 a1610 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6188 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v2882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6188 #trueSuccessor: v1646 #falseSuccessor: v1651  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4593377818679571269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B58" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1610 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1601 
values: a2728 a2818 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: a2728 a2818  <|@  <|@
f <@~|@floating>@ <|@
tid i5662 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6281 i6294 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6281 i6294  <|@  <|@
f <@~|@floating>@ <|@
tid a1614 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1601 
values: a2752 a2840 
=== Succesors ===
=== Usages ===
v6491 v6490 v6489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: a2752 a2840  <|@  <|@
f <@~|@floating>@ <|@
tid i1617 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6288 i6301 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6288 i6301  <|@  <|@
f <@~|@floating>@ <|@
tid i1620 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6287 i6300 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6287 i6300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1602 v1604 
=== Succesors ===
next: i6302 
=== Usages ===
a1610 i5662 a1614 i1617 i1620 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1602 v1604 #next: i6302  <|@  <|@
f <@~|@floating>@ <|@
tid v6486 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6302 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6486 
=== Succesors ===
next: v4180 
=== Usages ===
v1034 
=== Predecessor ===
v1601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6486 #next: v4180  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6302 
y: i61 
=== Succesors ===
=== Usages ===
v4180 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6302 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v4180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1034 
=== Succesors ===
trueSuccessor: v4179 
falseSuccessor: v4176 
=== Usages ===
=== Predecessor ===
i6302 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1034 #trueSuccessor: v4179 #falseSuccessor: v4176  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5943 
=== Usages ===
=== Predecessor ===
v4180 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5943  <|@  <|@
f <@~|@floating>@ <|@
tid i5944 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -739603
stableDimension: 0
stamp: i32 [-739603] ⇊00000000fff4b6ed ⇈00000000fff4b6ed
stampKind: i32
value: int[-739603|0xfffffffffff4b6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
v4179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6303 
=== Usages ===
=== Predecessor ===
v4180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6303  <|@  <|@
f <@~|@floating>@ <|@
tid v6489 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
i6303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6489 
=== Succesors ===
next: v4190 
=== Usages ===
v3883 
=== Predecessor ===
v4176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6489 #next: v4190  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6303 
y: i2599 
=== Succesors ===
=== Usages ===
v4190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6303 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4190 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3883 
=== Succesors ===
trueSuccessor: v4189 
falseSuccessor: v4186 
=== Usages ===
=== Predecessor ===
i6303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3883 #trueSuccessor: v4189 #falseSuccessor: v4186  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5950 
=== Usages ===
=== Predecessor ===
v4190 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5950  <|@  <|@
f <@~|@floating>@ <|@
tid i5951 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -914459
stableDimension: 0
stamp: i32 [-914459] ⇊00000000fff20be5 ⇈00000000fff20be5
stampKind: i32
value: int[-914459|0xfffffffffff20be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
v4189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5945 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-914459 - -739603] ⇊00000000fff002e5 ⇈00000000fff6bfed
valueDescription: i32
=== Inputs ===
merge: v5942 
values: i5944 i5951 
=== Succesors ===
=== Usages ===
v5947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5942 values: i5944 i5951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5943 v5950 
=== Succesors ===
next: v5947 
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5943 v5950 #next: v5947  <|@  <|@
tid ?1603 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a1610 a2 i263 a4 i5662 i1617 i1620 
=== Succesors ===
=== Usages ===
v5947 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1610 a2 i263 a4 i5662 i1617 i1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v5947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1603 
actionAndReason: i5945 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5942 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1603 actionAndReason: i5945 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2892 
=== Usages ===
v2908 v2917 
=== Predecessor ===
v4190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2892  <|@  <|@
f <@~|@floating>@ <|@
tid v6487 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6487 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6304 
=== Usages ===
=== Predecessor ===
v4186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6487 value: i263 stateAfter: - lastLocationAccess: - #next: i6304  <|@  <|@
f <@~|@floating>@ <|@
tid v6488 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6488 
=== Succesors ===
next: v2908 
=== Usages ===
v2908 
=== Predecessor ===
v2892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6488 #next: v2908  <|@  <|@
f <@~|@floating>@ <|@
tid v6490 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
v2908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4186 
address: v6490 
value: i6304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2917 
=== Usages ===
=== Predecessor ===
i6304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4186 address: v6490 value: i6304 stateAfter: - lastLocationAccess: - #next: v2917  <|@  <|@
f <@~|@floating>@ <|@
tid v6491 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
v2917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4186 
address: v6491 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v2908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4186 address: v6491 value: i263 stateAfter: - lastLocationAccess: - #next: v1731  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v2917 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4583009622221332317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@~|@floating>@ <|@
tid a2885 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6298 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6298  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B59" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1609 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1605 
values: a2728 a2818 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: a2728 a2818  <|@  <|@
f <@~|@floating>@ <|@
tid a1621 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v1605 
values: a2797 a2885 
=== Succesors ===
=== Usages ===
v2918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: a2797 a2885  <|@  <|@
f <@~|@floating>@ <|@
tid i1615 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1605 
values: i6288 i6301 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: i6288 i6301  <|@  <|@
f <@~|@floating>@ <|@
tid i1618 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1605 
values: i6287 i6300 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: i6287 i6300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1606 v1608 
=== Succesors ===
next: i655 
=== Usages ===
a1609 a1621 i1615 i1618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1606 v1608 #next: i655  <|@  <|@
tid v2918 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@24c1e7bd
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1621 a2 i263 a4 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1621 a2 i263 a4  <|@  <|@
tid ?5658 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a1609 a2 - - - i1615 i1618 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1609 a2 - - - i1615 i1618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i655 <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2918 
stateDuring: ?5658 
=== Succesors ===
next: v4195 
=== Usages ===
v657 
=== Predecessor ===
v1605 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2918 stateDuring: ?5658 #next: v4195  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i655 
y: i28 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i655 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v4194 
falseSuccessor: v4191 
=== Usages ===
=== Predecessor ===
i655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v4194 #falseSuccessor: v4191  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4192 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4192  <|@  <|@
tid ?656 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?660 
values: a1609 a2 - - - i1615 i1618 i28 
=== Succesors ===
=== Usages ===
v4192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1609 a2 - - - i1615 i1618 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4192 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2919
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4194 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?656  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v4191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6006 
=== Usages ===
=== Predecessor ===
v4170 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6006  <|@  <|@
f <@~|@floating>@ <|@
tid i6007 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -736283
stableDimension: 0
stamp: i32 [-736283] ⇊00000000fff4c3e5 ⇈00000000fff4c3e5
stampKind: i32
value: int[-736283|0xfffffffffff4c3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6004 
=== Usages ===
=== Predecessor ===
v4165 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6004  <|@  <|@
f <@~|@floating>@ <|@
tid i6005 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -733979
stableDimension: 0
stamp: i32 [-733979] ⇊00000000fff4cce5 ⇈00000000fff4cce5
stampKind: i32
value: int[-733979|0xfffffffffff4cce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5998 
=== Usages ===
=== Predecessor ===
v4150 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5998  <|@  <|@
f <@~|@floating>@ <|@
tid i5999 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -724763
stableDimension: 0
stamp: i32 [-724763] ⇊00000000fff4f0e5 ⇈00000000fff4f0e5
stampKind: i32
value: int[-724763|0xfffffffffff4f0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5994 
=== Usages ===
=== Predecessor ===
v4140 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5994  <|@  <|@
f <@~|@floating>@ <|@
tid i5995 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -721971
stableDimension: 0
stamp: i32 [-721971] ⇊00000000fff4fbcd ⇈00000000fff4fbcd
stampKind: i32
value: int[-721971|0xfffffffffff4fbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" "B71" "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5991 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-738827 - -721675] ⇊00000000fff480c5 ⇈00000000fff4fffd
valueDescription: i32
=== Inputs ===
merge: v5988 
values: i5995 i5999 i6001 i6005 i6007 
=== Succesors ===
=== Usages ===
v5993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5988 values: i5995 i5999 i6001 i6005 i6007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5994 v5998 v6000 v6004 v6006 
=== Succesors ===
next: v5993 
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5994 v5998 v6000 v6004 v6006 #next: v5993  <|@  <|@
f <@*|@fixed>@ <|@
tid v5993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1855 
actionAndReason: i5991 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5988 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1855 actionAndReason: i5991 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5798 
=== Usages ===
=== Predecessor ===
v4040 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5798  <|@  <|@
f <@~|@floating>@ <|@
tid i5799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -690227
stableDimension: 0
stamp: i32 [-690227] ⇊00000000fff577cd ⇈00000000fff577cd
stampKind: i32
value: int[-690227|0xfffffffffff577cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5792 
=== Usages ===
=== Predecessor ===
v4025 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5792  <|@  <|@
f <@~|@floating>@ <|@
tid i5793 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -687667
stableDimension: 0
stamp: i32 [-687667] ⇊00000000fff581cd ⇈00000000fff581cd
stampKind: i32
value: int[-687667|0xfffffffffff581cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5786 
=== Usages ===
=== Predecessor ===
v4010 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5786  <|@  <|@
f <@~|@floating>@ <|@
tid i5787 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -685075
stableDimension: 0
stamp: i32 [-685075] ⇊00000000fff58bed ⇈00000000fff58bed
stampKind: i32
value: int[-685075|0xfffffffffff58bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4009 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5784 
=== Usages ===
=== Predecessor ===
v4005 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5784  <|@  <|@
f <@~|@floating>@ <|@
tid i5785 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -683035
stableDimension: 0
stamp: i32 [-683035] ⇊00000000fff593e5 ⇈00000000fff593e5
stampKind: i32
value: int[-683035|0xfffffffffff593e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5782 
=== Usages ===
=== Predecessor ===
v4000 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5782  <|@  <|@
f <@~|@floating>@ <|@
tid i5783 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -682259
stableDimension: 0
stamp: i32 [-682259] ⇊00000000fff596ed ⇈00000000fff596ed
stampKind: i32
value: int[-682259|0xfffffffffff596ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5776 
=== Usages ===
=== Predecessor ===
v3985 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5776  <|@  <|@
f <@~|@floating>@ <|@
tid i5777 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679731
stableDimension: 0
stamp: i32 [-679731] ⇊00000000fff5a0cd ⇈00000000fff5a0cd
stampKind: i32
value: int[-679731|0xfffffffffff5a0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5769 
=== Usages ===
=== Predecessor ===
v3975 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5769  <|@  <|@
f <@~|@floating>@ <|@
tid i5770 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679187
stableDimension: 0
stamp: i32 [-679187] ⇊00000000fff5a2ed ⇈00000000fff5a2ed
stampKind: i32
value: int[-679187|0xfffffffffff5a2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" "B11" "B95" "B94" "B93" "B19" "B92" "B26" "B91" "B33" 
    successors 
    xhandlers
    flags 
    probability 2370582253857144832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5771 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-692499 - -679187] ⇊00000000fff500c5 ⇈00000000fff5fffd
valueDescription: i32
=== Inputs ===
merge: v5768 
values: i5770 i5777 i5779 i5783 i5785 i5787 i5791 i5793 i5797 i5799 i5803 
=== Succesors ===
=== Usages ===
v5773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5768 values: i5770 i5777 i5779 i5783 i5785 i5787 i5791 i5793 i5797 i5799 i5803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5769 v5776 v5778 v5782 v5784 v5786 v5790 v5792 v5796 v5798 v5802 
=== Succesors ===
next: v5773 
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5769 v5776 v5778 v5782 v5784 v5786 v5790 v5792 v5796 v5798 v5802 #next: v5773  <|@  <|@
f <@*|@fixed>@ <|@
tid v5773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?126 
actionAndReason: i5771 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5768 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?126 actionAndReason: i5771 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4587633914563151070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v6172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6250 
y: v6171 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6250 y: v6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5997069951717903
=== Inputs ===
condition: v6172 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6172 #trueSuccessor: v181 #falseSuccessor: v184  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4584620554336281545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
?275 ?5648 ?683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@~|@floating>@ <|@
tid v6626 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
i6305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B116" 
    successors "B102" "B129" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4585559686677057366
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i273 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i3 i6316 
=== Succesors ===
=== Usages ===
?275 v2971 i675 v662 v1052 v6494 v1048 v2942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i3 i6316  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i28 i294 
=== Succesors ===
=== Usages ===
?275 v277 v2971 ?683 i294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i28 i294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2046558316457305
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v271 
=== Succesors ===
next: i6305 
=== Usages ===
i273 i274 v279 v289 v295 v4265 v4241 v4253 v4205 v4211 v4247 v4223 v4229 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v271 #next: i6305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6305 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6626 
=== Succesors ===
next: v283 
=== Usages ===
v277 
=== Predecessor ===
v272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6626 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i6305 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i6305  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2649 a2 i273 a4 i274 
=== Succesors ===
=== Usages ===
v5885 v6307 v6309 i6311 v6613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2649 a2 i273 a4 i274  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5533923900859385
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i6305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6306 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6306  <|@  <|@
f <@~|@floating>@ <|@
tid v6492 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6306 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6492 
=== Succesors ===
next: v6307 
=== Usages ===
v6586 v6497 v6495 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6492 #next: v6307  <|@  <|@
f <@~|@floating>@ <|@
tid v6586 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
v6307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6586 
=== Succesors ===
next: v4207 
=== Usages ===
v6190 
=== Predecessor ===
a6306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6586 #next: v4207  <|@  <|@
f <@~|@floating>@ <|@
tid v6190 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6307 
y: v6189 
=== Succesors ===
=== Usages ===
v4207 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6307 y: v6189  <|@  <|@
f <@*|@fixed>@ <|@
tid v4207 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6190 
=== Succesors ===
trueSuccessor: v4202 
falseSuccessor: v4205 
=== Usages ===
=== Predecessor ===
v6307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6190 #trueSuccessor: v4202 #falseSuccessor: v4205  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6308 
=== Usages ===
=== Predecessor ===
v4207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6308 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4213 
=== Usages ===
v662 
=== Predecessor ===
v4202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4213  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6308 
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i6308  <|@  <|@
f <@*|@fixed>@ <|@
tid v4213 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v4208 
falseSuccessor: v4211 
=== Usages ===
=== Predecessor ===
i6308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v4208 #falseSuccessor: v4211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6309 
=== Usages ===
=== Predecessor ===
v4213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6309 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6577 
=== Succesors ===
next: v4225 
=== Usages ===
v6191 
=== Predecessor ===
v4208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6577 #next: v4225  <|@  <|@
f <@~|@floating>@ <|@
tid v6191 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6309 
y: v6173 
=== Succesors ===
=== Usages ===
v4225 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6309 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6191 
=== Succesors ===
trueSuccessor: v4220 
falseSuccessor: v4223 
=== Usages ===
=== Predecessor ===
v6309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6191 #trueSuccessor: v4220 #falseSuccessor: v4223  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4231 
=== Usages ===
=== Predecessor ===
v4225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4231  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i28 
=== Succesors ===
=== Usages ===
v4231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v4229 
falseSuccessor: v4226 
=== Usages ===
=== Predecessor ===
v4220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v4229 #falseSuccessor: v4226  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4230 
=== Usages ===
=== Predecessor ===
v4231 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5894 
=== Usages ===
=== Predecessor ===
v4229 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5894  <|@  <|@
f <@~|@floating>@ <|@
tid i5895 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -750355
stableDimension: 0
stamp: i32 [-750355] ⇊00000000fff48ced ⇈00000000fff48ced
stampKind: i32
value: int[-750355|0xfffffffffff48ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6310 
=== Usages ===
=== Predecessor ===
v4231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6310 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6311 
=== Usages ===
a2934 v6493 
=== Predecessor ===
v4226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6311  <|@  <|@
f <@~|@floating>@ <|@
tid v6493 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6310 
=== Succesors ===
=== Usages ===
i6311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6493 
=== Succesors ===
next: v4243 
=== Usages ===
v1052 v2942 
=== Predecessor ===
a6310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6493 #next: v4243  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6311 
=== Succesors ===
=== Usages ===
v4243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i6311  <|@  <|@
f <@*|@fixed>@ <|@
tid v4243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v4238 
falseSuccessor: v4241 
=== Usages ===
=== Predecessor ===
i6311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v4238 #falseSuccessor: v4241  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4249 
=== Usages ===
=== Predecessor ===
v4243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4249  <|@  <|@
f <@~|@floating>@ <|@
tid v2942 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6311 
=== Succesors ===
=== Usages ===
v4249 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i6311  <|@  <|@
f <@*|@fixed>@ <|@
tid v4249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2942 
=== Succesors ===
trueSuccessor: v4244 
falseSuccessor: v4247 
=== Usages ===
=== Predecessor ===
v4238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2942 #trueSuccessor: v4244 #falseSuccessor: v4247  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6312 
=== Usages ===
i6312 
=== Predecessor ===
v4249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6312  <|@  <|@
f <@~|@floating>@ <|@
tid a2934 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6310 
=== Succesors ===
=== Usages ===
v6494 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6310  <|@  <|@
f <@~|@floating>@ <|@
tid v6494 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2934 
index: i273 
=== Succesors ===
=== Usages ===
i6312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2934 index: i273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6312 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4244 
address: v6494 
=== Succesors ===
next: v4255 
=== Usages ===
v3914 j3579 
=== Predecessor ===
v4244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4244 address: v6494 #next: v4255  <|@  <|@
f <@~|@floating>@ <|@
tid v3914 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6312 
y: i3912 
=== Succesors ===
=== Usages ===
v4255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6312 y: i3912  <|@  <|@
f <@*|@fixed>@ <|@
tid v4255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3914 
=== Succesors ===
trueSuccessor: v4250 
falseSuccessor: v4253 
=== Usages ===
=== Predecessor ===
i6312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3914 #trueSuccessor: v4250 #falseSuccessor: v4253  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6313 
=== Usages ===
i6314 
=== Predecessor ===
v4255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6313  <|@  <|@
f <@~|@floating>@ <|@
tid v6495 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
i6313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6495 
=== Succesors ===
next: i6314 
=== Usages ===
v1060 
=== Predecessor ===
v4250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6495 #next: i6314  <|@  <|@
f <@~|@floating>@ <|@
tid j3579 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6312 
=== Succesors ===
=== Usages ===
v6496 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6312  <|@  <|@
f <@~|@floating>@ <|@
tid v6496 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1107 
index: j3579 
=== Succesors ===
=== Usages ===
i6314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1107 index: j3579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6314 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4250 
address: v6496 
=== Succesors ===
next: v673 
=== Usages ===
v1060 
=== Predecessor ===
i6313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4250 address: v6496 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
x: i6313 
y: i6314 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i6313 y: i6314  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8923207656059002
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
i6314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v289 #falseSuccessor: v672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580989179136727805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6315 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6315  <|@  <|@
f <@~|@floating>@ <|@
tid v6497 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
a6315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6315 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6497 
=== Succesors ===
next: v6613 
=== Usages ===
a2961 v6613 
=== Predecessor ===
v672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6497 #next: v6613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a6315 
=== Succesors ===
next: i677 
=== Usages ===
=== Predecessor ===
a6315 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a6315 #next: i677  <|@  <|@
f <@~|@floating>@ <|@
tid a2961 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6315 
=== Succesors ===
=== Usages ===
v2965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6315  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i273 
y: i61 
=== Succesors ===
=== Usages ===
v2965 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i273 y: i61  <|@  <|@
tid v2965 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@147ad919
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a2961 a2 i675 a4 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2961 a2 i675 a4  <|@  <|@
tid ?683 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2649 a2 - a4 i274 
=== Succesors ===
=== Usages ===
?678 ?5646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2649 a2 - a4 i274  <|@  <|@
tid ?5646 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?683 
values: - - - - 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?683 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i677 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2965 
stateDuring: ?5646 
=== Succesors ===
next: v4267 
=== Usages ===
v679 
=== Predecessor ===
v6613 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2965 stateDuring: ?5646 #next: v4267  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i677 
y: i28 
=== Succesors ===
=== Usages ===
v4267 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i677 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v4265 
falseSuccessor: v4262 
=== Usages ===
=== Predecessor ===
i677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v4265 #falseSuccessor: v4262  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4266 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4266  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4263 
=== Usages ===
=== Predecessor ===
v4265 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4263  <|@  <|@
tid ?678 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?683 
values: - - - - i28 
=== Succesors ===
=== Usages ===
v4263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?683 values: - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4263 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2966
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?678 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4266 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?678  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B101" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6316 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6316  <|@  <|@
f <@~|@floating>@ <|@
tid v6630 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6316 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6630 
=== Succesors ===
next: v295 
=== Usages ===
i273 
=== Predecessor ===
v4262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6630 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i274 
y: i61 
=== Succesors ===
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i274 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6316 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v272  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4254 
=== Usages ===
=== Predecessor ===
v4255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4254  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5902 
=== Usages ===
=== Predecessor ===
v4253 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5902  <|@  <|@
f <@~|@floating>@ <|@
tid i5903 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -755475
stableDimension: 0
stamp: i32 [-755475] ⇊00000000fff478ed ⇈00000000fff478ed
stampKind: i32
value: int[-755475|0xfffffffffff478ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4248 
=== Usages ===
=== Predecessor ===
v4249 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4248  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5900 
=== Usages ===
=== Predecessor ===
v4247 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5900  <|@  <|@
f <@~|@floating>@ <|@
tid i5901 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -753435
stableDimension: 0
stamp: i32 [-753435] ⇊00000000fff480e5 ⇈00000000fff480e5
stampKind: i32
value: int[-753435|0xfffffffffff480e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4242 
=== Usages ===
=== Predecessor ===
v4243 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4242  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5898 
=== Usages ===
=== Predecessor ===
v4241 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5898  <|@  <|@
f <@~|@floating>@ <|@
tid i5899 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -752659
stableDimension: 0
stamp: i32 [-752659] ⇊00000000fff483ed ⇈00000000fff483ed
stampKind: i32
value: int[-752659|0xfffffffffff483ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4224 
=== Usages ===
=== Predecessor ===
v4225 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4224  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5892 
=== Usages ===
=== Predecessor ===
v4223 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5892  <|@  <|@
f <@~|@floating>@ <|@
tid i5893 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -750131
stableDimension: 0
stamp: i32 [-750131] ⇊00000000fff48dcd ⇈00000000fff48dcd
stampKind: i32
value: int[-750131|0xfffffffffff48dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4212 
=== Usages ===
=== Predecessor ===
v4213 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4212  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5888 
=== Usages ===
=== Predecessor ===
v4211 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5888  <|@  <|@
f <@~|@floating>@ <|@
tid i5889 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -749587
stableDimension: 0
stamp: i32 [-749587] ⇊00000000fff48fed ⇈00000000fff48fed
stampKind: i32
value: int[-749587|0xfffffffffff48fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4206 
=== Usages ===
=== Predecessor ===
v4207 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4206  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5886 
=== Usages ===
=== Predecessor ===
v4205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5886  <|@  <|@
f <@~|@floating>@ <|@
tid i5887 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -749107
stableDimension: 0
stamp: i32 [-749107] ⇊00000000fff491cd ⇈00000000fff491cd
stampKind: i32
value: int[-749107|0xfffffffffff491cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: i6317 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: i6317  <|@  <|@
f <@~|@floating>@ <|@
tid v6627 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
i6317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6317 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6627 
=== Succesors ===
next: v4272 
=== Usages ===
v298 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6627 #next: v4272  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6317 
y: i28 
=== Succesors ===
=== Usages ===
v4272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6317 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4272 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v4268 
falseSuccessor: v4271 
=== Usages ===
=== Predecessor ===
i6317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v4268 #falseSuccessor: v4271  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i301 
=== Usages ===
=== Predecessor ===
v4272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i301  <|@  <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5214b017
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a2649 a2 i273 i274 a4 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2649 a2 i273 i274 a4  <|@  <|@
tid ?5648 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - - - - 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i301 <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2971 
stateDuring: ?5648 
=== Succesors ===
next: v1469 
=== Usages ===
i165 
=== Predecessor ===
v4268 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2971 stateDuring: ?5648 #next: v1469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
i301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5906 
=== Usages ===
=== Predecessor ===
v4272 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5906  <|@  <|@
f <@~|@floating>@ <|@
tid i5907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -760339
stableDimension: 0
stamp: i32 [-760339] ⇊00000000fff465ed ⇈00000000fff465ed
stampKind: i32
value: int[-760339|0xfffffffffff465ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" "B124" "B107" "B122" "B120" "B118" "B131" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5883 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-760339 - -748811] ⇊00000000fff400c5 ⇈00000000fff4fffd
valueDescription: i32
=== Inputs ===
merge: v5880 
values: i5887 i5889 i5893 i5895 i5899 i5901 i5903 i5907 
=== Succesors ===
=== Usages ===
v5885 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5880 values: i5887 i5889 i5893 i5895 i5899 i5901 i5903 i5907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5886 v5888 v5892 v5894 v5898 v5900 v5902 v5906 
=== Succesors ===
next: v5885 
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5886 v5888 v5892 v5894 v5898 v5900 v5902 v5906 #next: v5885  <|@  <|@
f <@*|@fixed>@ <|@
tid v5885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i5883 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5880 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i5883 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 4581640075535279603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2975 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v6498 <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v6250 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v6250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v6498 
=== Succesors ===
next: j2978 
=== Usages ===
v6499 v2979 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6498 #next: j2978  <|@  <|@
f <@~|@floating>@ <|@
tid v6499 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v2975 
index: - 
=== Succesors ===
=== Usages ===
j2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v2975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6499 
=== Succesors ===
next: i129 
=== Usages ===
v2979 
=== Predecessor ===
v2975 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6499 #next: i129  <|@  <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@217b56a
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j2978 
metaspaceMethod: v2975 
arguments: a2649 a2 i3 a4 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j2978 metaspaceMethod: v2975 arguments: a2649 a2 i3 a4  <|@  <|@
tid ?5647 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2979 
stateDuring: ?5647 
=== Succesors ===
next: v164 
=== Usages ===
i165 
=== Predecessor ===
j2978 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2979 stateDuring: ?5647 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B85" "B112" "B130" "B81" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v162 
values: i129 i61 i28 i301 i61 
=== Succesors ===
=== Usages ===
?163 i90 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v162 values: i129 i61 i28 i301 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v164 v170 v182 v1469 v1731 
=== Succesors ===
next: a6318 
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v164 v170 v182 v1469 v1731 #next: a6318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6318 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6319 
=== Usages ===
a2981 v6500 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6319  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - i165 
=== Succesors ===
=== Usages ===
v5817 i6319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 - i165  <|@  <|@
f <@~|@floating>@ <|@
tid v6500 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6318 
=== Succesors ===
=== Usages ===
i6319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6319 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?163 
guard: - 
address: v6500 
=== Succesors ===
next: i6320 
=== Usages ===
v2988 
=== Predecessor ===
a6318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?163 guard: - address: v6500 #next: i6320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6320 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6449 
=== Succesors ===
next: v4282 
=== Usages ===
v6501 v2988 
=== Predecessor ===
i6319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6449 #next: v4282  <|@  <|@
f <@~|@floating>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6320 
y: i6319 
=== Succesors ===
=== Usages ===
v4282 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6320 y: i6319  <|@  <|@
f <@*|@fixed>@ <|@
tid v4282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2988 
=== Succesors ===
trueSuccessor: v4278 
falseSuccessor: v4281 
=== Usages ===
=== Predecessor ===
i6320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2988 #trueSuccessor: v4278 #falseSuccessor: v4281  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2995 
=== Usages ===
v2995 
=== Predecessor ===
v4282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid a2981 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6318 
=== Succesors ===
=== Usages ===
v6501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6318  <|@  <|@
f <@~|@floating>@ <|@
tid v6501 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2981 
index: i6320 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2981 index: i6320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4278 
address: v6501 
value: i6251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v4278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4278 address: v6501 value: i6251 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v2995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5817 
=== Usages ===
=== Predecessor ===
v4282 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5817  <|@  <|@
f <@~|@floating>@ <|@
tid i5819 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -765211
stableDimension: 0
stamp: i32 [-765211] ⇊00000000fff452e5 ⇈00000000fff452e5
stampKind: i32
value: int[-765211|0xfffffffffff452e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5817 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?163 
actionAndReason: i5819 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4281 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?163 actionAndReason: i5819 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5694 
=== Usages ===
=== Predecessor ===
v3965 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5694  <|@  <|@
f <@~|@floating>@ <|@
tid i5695 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -675867
stableDimension: 0
stamp: i32 [-675867] ⇊00000000fff5afe5 ⇈00000000fff5afe5
stampKind: i32
value: int[-675867|0xfffffffffff5afe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B139" 
    xhandlers
    flags 
    probability 4602975297990065613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i45 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i45  <|@  <|@
tid v2996 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@29c0569a
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a2614 a2 i3 a4 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2614 a2 i3 a4  <|@  <|@
tid ?5642 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2996 
stateDuring: ?5642 
=== Succesors ===
next: v89 
=== Usages ===
i90 
=== Predecessor ===
v100 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2996 stateDuring: ?5642 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
i45 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i90 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v87 
values: i45 i165 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i45 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v95 
=== Succesors ===
next: v4287 
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v95 #next: v4287  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i28 
=== Succesors ===
=== Usages ===
v4287 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v4286 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v4286 #falseSuccessor: v49  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4284 
=== Usages ===
=== Predecessor ===
v4287 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4284  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 i28 
=== Succesors ===
=== Usages ===
v4284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4284 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2997
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4286 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?88  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v4287 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i61 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i61 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B143" "B362" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6321 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6321  <|@  <|@
f <@~|@floating>@ <|@
tid v6587 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
v6321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6321 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6587 
=== Succesors ===
next: v4292 
=== Usages ===
v6192 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6587 #next: v4292  <|@  <|@
f <@~|@floating>@ <|@
tid v6192 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6321 
y: v6167 
=== Succesors ===
=== Usages ===
v4292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6321 y: v6167  <|@  <|@
f <@*|@fixed>@ <|@
tid v4292 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6192 
=== Succesors ===
trueSuccessor: v4288 
falseSuccessor: v4291 
=== Usages ===
=== Predecessor ===
v6321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6192 #trueSuccessor: v4288 #falseSuccessor: v4291  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B361" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6322 
=== Usages ===
=== Predecessor ===
v4292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6322 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6448 
=== Succesors ===
next: i6323 
=== Usages ===
a3014 v6503 
=== Predecessor ===
v4288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6448 #next: i6323  <|@  <|@
f <@~|@floating>@ <|@
tid v6503 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6322 
=== Succesors ===
=== Usages ===
i6323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6323 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6503 
=== Succesors ===
next: i6324 
=== Usages ===
v3031 
=== Predecessor ===
a6322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6503 #next: i6324  <|@  <|@
f <@~|@floating>@ <|@
tid v6502 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
i6324 i6412 i6417 i6430 i6440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6324 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4307 
=== Usages ===
v3031 v6504 
=== Predecessor ===
i6323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4307  <|@  <|@
f <@~|@floating>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6324 
y: i6323 
=== Succesors ===
=== Usages ===
v4307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6324 y: i6323  <|@  <|@
f <@*|@fixed>@ <|@
tid v4307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3031 
=== Succesors ===
trueSuccessor: v4303 
falseSuccessor: v4306 
=== Usages ===
=== Predecessor ===
i6324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3031 #trueSuccessor: v4303 #falseSuccessor: v4306  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B312" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6325 
=== Usages ===
i6327 v3038 
=== Predecessor ===
v4307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6325  <|@  <|@
f <@~|@floating>@ <|@
tid v6505 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
a6325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6325 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6505 
=== Succesors ===
next: v6326 
=== Usages ===
a3041 v6588 v6508 v6530 v6531 v6559 v6622 v6623 
=== Predecessor ===
v4303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6505 #next: v6326  <|@  <|@
f <@~|@floating>@ <|@
tid v6588 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
v6326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6326 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6588 
=== Succesors ===
next: i6327 
=== Usages ===
v6570 v6193 v6194 
=== Predecessor ===
a6325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6588 #next: i6327  <|@  <|@
f <@~|@floating>@ <|@
tid a3014 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6322 
=== Succesors ===
=== Usages ===
v6504 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6322  <|@  <|@
f <@~|@floating>@ <|@
tid v6504 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3014 
index: i6324 
=== Succesors ===
=== Usages ===
v3038 i6327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3014 index: i6324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6327 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4303 
address: v6504 
=== Succesors ===
next: v3038 
=== Usages ===
?109 ?5644 v3543 ?117 ?138 ?209 ?243 v3490 v3417 v3435 ?2086 
=== Predecessor ===
v6326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4303 address: v6504 #next: v3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4303 
address: v6504 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
i6327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4303 address: v6504 value: i3 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v6193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6326 
y: v6169 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6326 y: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid a3041 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6325 
=== Succesors ===
=== Usages ===
?566 v3527 ?719 ?2093 ?214 ?1805 ?333 ?195 v3521 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6325  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
?109 ?5644 ?117 ?138 ?209 ?243 ?2086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7408435024506907
=== Inputs ===
condition: v6193 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6193 #trueSuccessor: v144 #falseSuccessor: v150  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B310" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6328 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6328 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4317 
=== Usages ===
v188 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4317  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6328 
=== Succesors ===
=== Usages ===
v4317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6328  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 i3 a4 i6327 - 
=== Succesors ===
=== Usages ===
v5713 v6329 i6331 v6334 v6338 v6342 v6346 v6350 v6354 v6358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 i3 a4 i6327 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v4317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v4313 
falseSuccessor: v4316 
=== Usages ===
=== Predecessor ===
i6328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v4313 #falseSuccessor: v4316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B309" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6329 
=== Usages ===
=== Predecessor ===
v4317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6329 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6577 
=== Succesors ===
next: v4327 
=== Usages ===
v6195 
=== Predecessor ===
v4313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6577 #next: v4327  <|@  <|@
f <@~|@floating>@ <|@
tid v6195 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6329 
y: v6173 
=== Succesors ===
=== Usages ===
v4327 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6329 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6195 
=== Succesors ===
trueSuccessor: v4323 
falseSuccessor: v4326 
=== Usages ===
=== Predecessor ===
v6329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6195 #trueSuccessor: v4323 #falseSuccessor: v4326  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4332 
=== Usages ===
=== Predecessor ===
v4327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4332  <|@  <|@
f <@~|@floating>@ <|@
tid v6236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v4332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v6236 
=== Succesors ===
trueSuccessor: v4331 
falseSuccessor: v4328 
=== Usages ===
=== Predecessor ===
v4323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6236 #trueSuccessor: v4331 #falseSuccessor: v4328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5718 
=== Usages ===
=== Predecessor ===
v4332 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5718  <|@  <|@
f <@~|@floating>@ <|@
tid i5719 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -780307
stableDimension: 0
stamp: i32 [-780307] ⇊00000000fff417ed ⇈00000000fff417ed
stampKind: i32
value: int[-780307|0xfffffffffff417ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B308" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6330 
=== Usages ===
=== Predecessor ===
v4332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6330 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6331 
=== Usages ===
a3051 v6506 
=== Predecessor ===
v4328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6331  <|@  <|@
f <@~|@floating>@ <|@
tid v6506 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6330 
=== Succesors ===
=== Usages ===
i6331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6331 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6506 
=== Succesors ===
next: v4342 
=== Usages ===
v692 v3059 
=== Predecessor ===
a6330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6506 #next: v4342  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6331 
=== Succesors ===
=== Usages ===
v4342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6331  <|@  <|@
f <@*|@fixed>@ <|@
tid v4342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v4338 
falseSuccessor: v4341 
=== Usages ===
=== Predecessor ===
i6331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v4338 #falseSuccessor: v4341  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B307" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4347 
=== Usages ===
=== Predecessor ===
v4342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4347  <|@  <|@
f <@~|@floating>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6331 
=== Succesors ===
=== Usages ===
v4347 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i6331  <|@  <|@
f <@*|@fixed>@ <|@
tid v4347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3059 
=== Succesors ===
trueSuccessor: v4343 
falseSuccessor: v4346 
=== Usages ===
=== Predecessor ===
v4338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3059 #trueSuccessor: v4343 #falseSuccessor: v4346  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B306" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6332 
=== Usages ===
i6332 
=== Predecessor ===
v4347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid a3051 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6330 
=== Succesors ===
=== Usages ===
v6507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6330  <|@  <|@
f <@~|@floating>@ <|@
tid v6507 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3051 
index: i3 
=== Succesors ===
=== Usages ===
i6332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3051 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6332 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4343 
address: v6507 
=== Succesors ===
next: v4352 
=== Usages ===
i3067 j3595 v3910 v3916 j6224 j6225 v6226 v6227 
=== Predecessor ===
v4343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4343 address: v6507 #next: v4352  <|@  <|@
f <@~|@floating>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3909 
=== Succesors ===
=== Usages ===
v4352 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3909  <|@  <|@
f <@*|@fixed>@ <|@
tid v4352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3910 
=== Succesors ===
trueSuccessor: v4348 
falseSuccessor: v4351 
=== Usages ===
=== Predecessor ===
i6332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3910 #trueSuccessor: v4348 #falseSuccessor: v4351  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B158" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6333 
=== Usages ===
=== Predecessor ===
v4352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6333  <|@  <|@
f <@~|@floating>@ <|@
tid v6508 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6333 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6508 
=== Succesors ===
next: v6334 
=== Usages ===
?2110 v6589 v6509 v6510 ?1086 v6621 
=== Predecessor ===
v4348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6508 #next: v6334  <|@  <|@
f <@~|@floating>@ <|@
tid v6589 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
v6334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6334 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6589 
=== Succesors ===
next: v477 
=== Usages ===
v6197 v6196 
=== Predecessor ===
a6333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6589 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v6196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6334 
y: v6175 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6334 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6509 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
i6335 a6337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
?543 ?195 ?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@~|@floating>@ <|@
tid i3067 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
?1430 ?1288 v3306 ?719 v1457 ?2110 v1453 ?195 ?333 ?5653 v1275 v880 v1417 ?1086 v3208 v944 ?2093 v876 ?1805 ?1523 v1552 v1421 v940 v1145 ?1412 ?1257 v3188 v1199 v3152 v1141 ?1154 v1352 ?2159 v3180 v1195 v1279 v3159 ?1347 v3166 v1356 v3138 v1556 v3145 ?1529 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?209 
values: a3041 a2 i3 a4 i3067 
=== Succesors ===
=== Usages ===
?2093 ?719 ?1805 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a3041 a2 i3 a4 i3067  <|@  <|@
tid ?543 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?209 
values: - - - - - 
=== Succesors ===
=== Usages ===
?5660 ?1657 ?539 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v6531 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6378 a6397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@~|@floating>@ <|@
tid i6235 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i3 
y: i61 
=== Succesors ===
=== Usages ===
v3385 v3403 ?1657 v3418 v3285 v3376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6634 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6384 a6403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6196 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v6334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6196 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4600340445249586512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6335 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6335 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6509 
=== Succesors ===
next: v879 
=== Usages ===
v876 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6509 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6335 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6335  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v877 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
i6335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v877 #falseSuccessor: v878  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576318602178265368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2094 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6336 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6336  <|@  <|@
f <@~|@floating>@ <|@
tid v6510 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
i6336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6336 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6510 
=== Succesors ===
next: v4362 
=== Usages ===
v880 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6510 #next: v4362  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6336 
y: i3067 
=== Succesors ===
=== Usages ===
v4362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6336 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v4361 
falseSuccessor: v4358 
=== Usages ===
=== Predecessor ===
i6336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v4361 #falseSuccessor: v4358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5730 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5730  <|@  <|@
f <@~|@floating>@ <|@
tid i5731 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -787731
stableDimension: 0
stamp: i32 [-787731] ⇊00000000fff3faed ⇈00000000fff3faed
stampKind: i32
value: int[-787731|0xfffffffffff3faed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B272" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B159" "B305" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4367 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4367  <|@  <|@
f <@~|@floating>@ <|@
tid v6197 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6334 
y: v6169 
=== Succesors ===
=== Usages ===
v4367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6334 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6197 
=== Succesors ===
trueSuccessor: v4363 
falseSuccessor: v4366 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6197 #trueSuccessor: v4363 #falseSuccessor: v4366  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B160" "B165" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6337 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6337 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6509 
=== Succesors ===
next: v6338 
=== Usages ===
?1154 v6590 v6511 v6512 ?1257 v6620 
=== Predecessor ===
v4363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6509 #next: v6338  <|@  <|@
f <@~|@floating>@ <|@
tid v6590 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
v6338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6338 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6590 
=== Succesors ===
next: v902 
=== Usages ===
v6199 v6198 
=== Predecessor ===
a6337 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6590 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v6198 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6338 
y: v6175 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6338 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6511 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
i6339 a6341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
tid ?719 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 
=== Succesors ===
=== Usages ===
?2110 ?1086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6198 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v901 
=== Usages ===
=== Predecessor ===
v6338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6198 #trueSuccessor: v895 #falseSuccessor: v901  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4595836705571515441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6339 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6339 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6511 
=== Succesors ===
next: v1144 
=== Usages ===
v1141 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6511 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6339 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
i6339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1142 #falseSuccessor: v1143  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B220" 
    xhandlers
    flags 
    probability 4571814894082148562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6340 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6340  <|@  <|@
f <@~|@floating>@ <|@
tid v6512 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
i6340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6512 
=== Succesors ===
next: v4377 
=== Usages ===
v1145 
=== Predecessor ===
v1143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6512 #next: v4377  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6340 
y: i3067 
=== Succesors ===
=== Usages ===
v4377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6340 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v4376 
falseSuccessor: v4373 
=== Usages ===
=== Predecessor ===
i6340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v4376 #falseSuccessor: v4373  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5736 
=== Usages ===
=== Predecessor ===
v4377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5736  <|@  <|@
f <@~|@floating>@ <|@
tid i5737 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -790291
stableDimension: 0
stamp: i32 [-790291] ⇊00000000fff3f0ed ⇈00000000fff3f0ed
stampKind: i32
value: int[-790291|0xfffffffffff3f0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B272" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v4377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B166" "B304" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4382 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4382  <|@  <|@
f <@~|@floating>@ <|@
tid v6199 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6338 
y: v6169 
=== Succesors ===
=== Usages ===
v4382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6338 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6199 
=== Succesors ===
trueSuccessor: v4378 
falseSuccessor: v4381 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6199 #trueSuccessor: v4378 #falseSuccessor: v4381  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B167" "B172" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6341 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6511 
=== Succesors ===
next: v6342 
=== Usages ===
?1288 v6591 v6513 v6514 ?1347 v6619 
=== Predecessor ===
v4378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6511 #next: v6342  <|@  <|@
f <@~|@floating>@ <|@
tid v6591 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
v6342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6591 
=== Succesors ===
next: v1167 
=== Usages ===
v6201 v6200 
=== Predecessor ===
a6341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6591 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid v6200 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6342 
y: v6175 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6342 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6513 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
i6343 a6345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
tid ?1086 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?719 
values: a6333 i3067 
=== Succesors ===
=== Usages ===
?1257 ?5659 ?1154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?719 values: a6333 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6200 
=== Succesors ===
trueSuccessor: v1160 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v6342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6200 #trueSuccessor: v1160 #falseSuccessor: v1166  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    probability 4591332965896385548
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6343 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6513 
=== Succesors ===
next: v1278 
=== Usages ===
v1275 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6513 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6343 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v1276 
falseSuccessor: v1277 
=== Usages ===
=== Predecessor ===
i6343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v1276 #falseSuccessor: v1277  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B210" 
    xhandlers
    flags 
    probability 4567311185988309688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2127  <|@  <|@
f <@*|@fixed>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6344 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6344  <|@  <|@
f <@~|@floating>@ <|@
tid v6514 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
i6344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6344 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6514 
=== Succesors ===
next: v4392 
=== Usages ===
v1279 
=== Predecessor ===
v1277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6514 #next: v4392  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6344 
y: i3067 
=== Succesors ===
=== Usages ===
v4392 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6344 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v4391 
falseSuccessor: v4388 
=== Usages ===
=== Predecessor ===
i6344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v4391 #falseSuccessor: v4388  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5742 
=== Usages ===
=== Predecessor ===
v4392 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5742  <|@  <|@
f <@~|@floating>@ <|@
tid i5743 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792851
stableDimension: 0
stamp: i32 [-792851] ⇊00000000fff3e6ed ⇈00000000fff3e6ed
stampKind: i32
value: int[-792851|0xfffffffffff3e6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B272" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v4392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B173" "B303" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4397 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4397  <|@  <|@
f <@~|@floating>@ <|@
tid v6201 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6342 
y: v6169 
=== Succesors ===
=== Usages ===
v4397 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6342 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6201 
=== Succesors ===
trueSuccessor: v4393 
falseSuccessor: v4396 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6201 #trueSuccessor: v4393 #falseSuccessor: v4396  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B179" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6345 
=== Usages ===
=== Predecessor ===
v4397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6345 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6513 
=== Succesors ===
next: v6346 
=== Usages ===
?2159 v6592 v6515 v6516 ?1412 v6618 
=== Predecessor ===
v4393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6513 #next: v6346  <|@  <|@
f <@~|@floating>@ <|@
tid v6592 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
v6346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6346 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6592 
=== Succesors ===
next: v1301 
=== Usages ===
v6203 v6202 
=== Predecessor ===
a6345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6592 #next: v1301  <|@  <|@
f <@~|@floating>@ <|@
tid v6202 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6346 
y: v6175 
=== Succesors ===
=== Usages ===
v1301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6346 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6515 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
i6347 a6349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
tid ?1257 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1086 
values: a6337 i3067 
=== Succesors ===
=== Usages ===
?1347 ?5657 ?1288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: a6337 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6202 
=== Succesors ===
trueSuccessor: v1294 
falseSuccessor: v1300 
=== Usages ===
=== Predecessor ===
v6346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6202 #trueSuccessor: v1294 #falseSuccessor: v1300  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4586829226224196771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6347 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6347 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6515 
=== Succesors ===
next: v1355 
=== Usages ===
v1352 
=== Predecessor ===
v1294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6515 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6347 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i6347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1353 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B208" 
    xhandlers
    flags 
    probability 4562807477896748697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2143 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
v1353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6348 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6348  <|@  <|@
f <@~|@floating>@ <|@
tid v6516 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
i6348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6348 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6516 
=== Succesors ===
next: v4407 
=== Usages ===
v1356 
=== Predecessor ===
v1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6516 #next: v4407  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6348 
y: i3067 
=== Succesors ===
=== Usages ===
v4407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6348 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4407 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v4406 
falseSuccessor: v4403 
=== Usages ===
=== Predecessor ===
i6348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v4406 #falseSuccessor: v4403  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5748 
=== Usages ===
=== Predecessor ===
v4407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5748  <|@  <|@
f <@~|@floating>@ <|@
tid i5749 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -795411
stableDimension: 0
stamp: i32 [-795411] ⇊00000000fff3dced ⇈00000000fff3dced
stampKind: i32
value: int[-795411|0xfffffffffff3dced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B272" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2409 
=== Usages ===
=== Predecessor ===
v4407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2409  <|@  <|@
f <@*|@fixed>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B180" "B302" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4412 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4412  <|@  <|@
f <@~|@floating>@ <|@
tid v6203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6346 
y: v6169 
=== Succesors ===
=== Usages ===
v4412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6346 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6203 
=== Succesors ===
trueSuccessor: v4408 
falseSuccessor: v4411 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6203 #trueSuccessor: v4408 #falseSuccessor: v4411  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" "B186" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6349 
=== Usages ===
=== Predecessor ===
v4412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6349 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6515 
=== Succesors ===
next: v6350 
=== Usages ===
?1430 v6593 v6517 v6518 ?1523 v6617 
=== Predecessor ===
v4408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6515 #next: v6350  <|@  <|@
f <@~|@floating>@ <|@
tid v6593 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
v6350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6350 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6593 
=== Succesors ===
next: v1378 
=== Usages ===
v6205 v6204 
=== Predecessor ===
a6349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6593 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v6204 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6350 
y: v6175 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6350 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6517 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
i6351 a6353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
tid ?1347 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1257 
values: a6341 i3067 
=== Succesors ===
=== Usages ===
?1412 ?5656 ?2159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: a6341 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6204 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v6350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6204 #trueSuccessor: v1371 #falseSuccessor: v1377  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4582325486554949048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6351 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6351 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6517 
=== Succesors ===
next: v1420 
=== Usages ===
v1417 
=== Predecessor ===
v1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6517 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6351 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6351  <|@  <|@
f <@*|@fixed>@ <|@
tid v1420 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1419 
=== Usages ===
=== Predecessor ===
i6351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v1418 #falseSuccessor: v1419  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B206" 
    xhandlers
    flags 
    probability 4558303769807465541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2160 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6352 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6352  <|@  <|@
f <@~|@floating>@ <|@
tid v6518 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
i6352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6518 
=== Succesors ===
next: v4422 
=== Usages ===
v1421 
=== Predecessor ===
v1419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6518 #next: v4422  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6352 
y: i3067 
=== Succesors ===
=== Usages ===
v4422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6352 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4422 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1421 
=== Succesors ===
trueSuccessor: v4421 
falseSuccessor: v4418 
=== Usages ===
=== Predecessor ===
i6352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1421 #trueSuccessor: v4421 #falseSuccessor: v4418  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5754 
=== Usages ===
=== Predecessor ===
v4422 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5754  <|@  <|@
f <@~|@floating>@ <|@
tid i5755 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -797971
stableDimension: 0
stamp: i32 [-797971] ⇊00000000fff3d2ed ⇈00000000fff3d2ed
stampKind: i32
value: int[-797971|0xfffffffffff3d2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B272" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2427 
=== Usages ===
=== Predecessor ===
v4422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2427  <|@  <|@
f <@*|@fixed>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B187" "B301" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4427 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4427  <|@  <|@
f <@~|@floating>@ <|@
tid v6205 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6350 
y: v6169 
=== Succesors ===
=== Usages ===
v4427 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6350 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6205 
=== Succesors ===
trueSuccessor: v4423 
falseSuccessor: v4426 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6205 #trueSuccessor: v4423 #falseSuccessor: v4426  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B193" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6353 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6517 
=== Succesors ===
next: v6354 
=== Usages ===
?1529 v6594 v6519 v6520 ?5653 v6616 
=== Predecessor ===
v4423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6517 #next: v6354  <|@  <|@
f <@~|@floating>@ <|@
tid v6594 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
v6354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6594 
=== Succesors ===
next: v1443 
=== Usages ===
v6207 v6206 
=== Predecessor ===
a6353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6594 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid v6206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6354 
y: v6175 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6354 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6519 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
i6355 a6357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
tid ?1412 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1347 
values: a6345 i3067 
=== Succesors ===
=== Usages ===
?1523 ?5655 ?1430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: a6345 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6206 
=== Succesors ===
trueSuccessor: v1436 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
v6354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6206 #trueSuccessor: v1436 #falseSuccessor: v1442  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4577821746888642316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6355 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6519 
=== Succesors ===
next: v1456 
=== Usages ===
v1453 
=== Predecessor ===
v1436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6519 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6355 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1454 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
i6355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1454 #falseSuccessor: v1455  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B204" 
    xhandlers
    flags 
    probability 4553800061720460172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6356 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6356  <|@  <|@
f <@~|@floating>@ <|@
tid v6520 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
i6356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6520 
=== Succesors ===
next: v4437 
=== Usages ===
v1457 
=== Predecessor ===
v1455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6520 #next: v4437  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6356 
y: i3067 
=== Succesors ===
=== Usages ===
v4437 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6356 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4437 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1457 
=== Succesors ===
trueSuccessor: v4436 
falseSuccessor: v4433 
=== Usages ===
=== Predecessor ===
i6356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1457 #trueSuccessor: v4436 #falseSuccessor: v4433  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5760 
=== Usages ===
=== Predecessor ===
v4437 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5760  <|@  <|@
f <@~|@floating>@ <|@
tid i5761 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -800531
stableDimension: 0
stamp: i32 [-800531] ⇊00000000fff3c8ed ⇈00000000fff3c8ed
stampKind: i32
value: int[-800531|0xfffffffffff3c8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B272" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2463 
=== Usages ===
=== Predecessor ===
v4437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2463  <|@  <|@
f <@*|@fixed>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B194" "B300" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4442 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4442  <|@  <|@
f <@~|@floating>@ <|@
tid v6207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6354 
y: v6169 
=== Succesors ===
=== Usages ===
v4442 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6354 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6207 
=== Succesors ===
trueSuccessor: v4438 
falseSuccessor: v4441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6207 #trueSuccessor: v4438 #falseSuccessor: v4441  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B200" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6357 
=== Usages ===
=== Predecessor ===
v4442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6357 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6519 
=== Succesors ===
next: v6358 
=== Usages ===
a3131 v6595 v6521 v6522 
=== Predecessor ===
v4438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6519 #next: v6358  <|@  <|@
f <@~|@floating>@ <|@
tid v6595 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
v6358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6358 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6595 
=== Succesors ===
next: v1542 
=== Usages ===
v6208 
=== Predecessor ===
a6357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6595 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid v6208 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6358 
y: v6175 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6358 y: v6175  <|@  <|@
tid ?1523 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1412 
values: a6349 i3067 
=== Succesors ===
=== Usages ===
?5654 ?5653 ?1529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: a6349 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6208 
=== Succesors ===
trueSuccessor: v1535 
falseSuccessor: v1541 
=== Usages ===
=== Predecessor ===
v6358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6208 #trueSuccessor: v1535 #falseSuccessor: v1541  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4573318007225276515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6359 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6359  <|@  <|@
f <@~|@floating>@ <|@
tid v6521 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
i6359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6521 
=== Succesors ===
next: v1555 
=== Usages ===
v1552 
=== Predecessor ===
v1535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6521 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6359 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1552 
=== Succesors ===
trueSuccessor: v1553 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
i6359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1552 #trueSuccessor: v1553 #falseSuccessor: v1554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B202" 
    xhandlers
    flags 
    probability 4549296353635732543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2224 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2224  <|@  <|@
f <@*|@fixed>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6360 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6360  <|@  <|@
f <@~|@floating>@ <|@
tid v6522 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
i6360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6360 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6522 
=== Succesors ===
next: v4452 
=== Usages ===
v1556 
=== Predecessor ===
v1554 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6522 #next: v4452  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6360 
y: i3067 
=== Succesors ===
=== Usages ===
v4452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6360 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4452 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v4451 
falseSuccessor: v4448 
=== Usages ===
=== Predecessor ===
i6360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v4451 #falseSuccessor: v4448  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5766 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5766  <|@  <|@
f <@~|@floating>@ <|@
tid i5767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -803091
stableDimension: 0
stamp: i32 [-803091] ⇊00000000fff3beed ⇈00000000fff3beed
stampKind: i32
value: int[-803091|0xfffffffffff3beed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2391 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2391  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v4448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B201" "B239" 
    xhandlers
    flags 
    probability 4573317727165049133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1511 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1511  <|@  <|@
f <@~|@floating>@ <|@
tid a3131 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6357 
=== Succesors ===
=== Usages ===
v3138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6357  <|@  <|@
tid v3138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6b30e0aa
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3131 i3067 
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3131 i3067  <|@  <|@
tid ?5653 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1523 
values: a6353 i3067 
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: a6353 i3067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1511 <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3138 
stateDuring: ?5653 
=== Succesors ===
next: v1516 
=== Usages ===
v1513 
=== Predecessor ===
v1541 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3138 stateDuring: ?5653 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1511 
y: i28 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1511 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1513 
=== Succesors ===
trueSuccessor: v1514 
falseSuccessor: v1515 
=== Usages ===
=== Predecessor ===
i1511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1513 #trueSuccessor: v1514 #falseSuccessor: v1515  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B202" 
    xhandlers
    flags 
    probability 4544854622813912742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2223 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2223  <|@  <|@
f <@*|@fixed>@ <|@
tid v2223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B196" 
    successors "B203" "B238" 
    xhandlers
    flags 
    probability 4551909452847958930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2223 v2224 
=== Succesors ===
next: a6361 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2223 v2224 #next: a6361  <|@  <|@
f <@~|@floating>@ <|@
tid v6616 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
a6361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6361 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6616 
=== Succesors ===
next: v6609 
=== Usages ===
a3141 v6609 
=== Predecessor ===
v2222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6616 #next: v6609  <|@  <|@
tid ?1529 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1523 
values: a6353 i3067 i28 
=== Succesors ===
=== Usages ===
v6609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: a6353 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1529 
object: a6361 
=== Succesors ===
next: i1519 
=== Usages ===
=== Predecessor ===
a6361 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1529 object: a6361 #next: i1519  <|@  <|@
f <@~|@floating>@ <|@
tid a3141 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6361 
=== Succesors ===
=== Usages ===
v3145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6361  <|@  <|@
tid v3145 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1c5361d3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3141 i3067 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3141 i3067  <|@  <|@
tid ?5654 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1523 
values: - - 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1519 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3145 
stateDuring: ?5654 
=== Succesors ===
next: v1405 
=== Usages ===
v1402 
=== Predecessor ===
v6609 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3145 stateDuring: ?5654 #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1519 
y: i28 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1519 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1404 
=== Usages ===
=== Predecessor ===
i1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1403 #falseSuccessor: v1404  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4523206434734423763
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2207 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2207  <|@  <|@
f <@*|@fixed>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B189" 
    successors "B205" "B237" 
    xhandlers
    flags 
    probability 4553847686786724362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2207 v2208 
=== Succesors ===
next: a6362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2207 v2208 #next: a6362  <|@  <|@
f <@~|@floating>@ <|@
tid v6617 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
a6362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6362 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6617 
=== Succesors ===
next: v6610 
=== Usages ===
a3148 v6610 
=== Predecessor ===
v2206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6617 #next: v6610  <|@  <|@
tid ?1430 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1412 
values: a6349 i3067 i28 
=== Succesors ===
=== Usages ===
v6610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: a6349 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1430 
object: a6362 
=== Succesors ===
next: i1408 
=== Usages ===
=== Predecessor ===
a6362 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1430 object: a6362 #next: i1408  <|@  <|@
f <@~|@floating>@ <|@
tid a3148 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6362 
=== Succesors ===
=== Usages ===
v3152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6362  <|@  <|@
tid v3152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@23d03bd6
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3148 i3067 
=== Succesors ===
=== Usages ===
i1408 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3148 i3067  <|@  <|@
tid ?5655 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1412 
values: - - 
=== Succesors ===
=== Usages ===
i1408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1408 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3152 
stateDuring: ?5655 
=== Succesors ===
next: v1340 
=== Usages ===
v1337 
=== Predecessor ===
v6610 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3152 stateDuring: ?5655 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1408 
y: i28 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1408 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1337 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1337 #trueSuccessor: v1338 #falseSuccessor: v1339  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" 
    xhandlers
    flags 
    probability 4525280936536781846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v1338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" "B182" 
    successors "B207" "B236" 
    xhandlers
    flags 
    probability 4558335685863263097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2158 v2160 
=== Succesors ===
next: a6363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2158 v2160 #next: a6363  <|@  <|@
f <@~|@floating>@ <|@
tid v6618 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
a6363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6363 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6618 
=== Succesors ===
next: v6611 
=== Usages ===
a3155 v6611 
=== Predecessor ===
v2157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6618 #next: v6611  <|@  <|@
tid ?2159 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1347 
values: a6345 i3067 i28 
=== Succesors ===
=== Usages ===
v6611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: a6345 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2159 
object: a6363 
=== Succesors ===
next: i1343 
=== Usages ===
=== Predecessor ===
a6363 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2159 object: a6363 #next: i1343  <|@  <|@
f <@~|@floating>@ <|@
tid a3155 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6363 
=== Succesors ===
=== Usages ===
v3159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6363  <|@  <|@
tid v3159 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@80fcdb0
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3155 i3067 
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3155 i3067  <|@  <|@
tid ?5656 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1347 
values: - - 
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1343 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3159 
stateDuring: ?5656 
=== Succesors ===
next: v1250 
=== Usages ===
v1247 
=== Predecessor ===
v6611 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3159 stateDuring: ?5656 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1343 
y: i28 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1343 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1247 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
i1343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1247 #trueSuccessor: v1248 #falseSuccessor: v1249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" 
    xhandlers
    flags 
    probability 4529760080500910324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2142 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2142  <|@  <|@
f <@*|@fixed>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
v1248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B175" 
    successors "B209" "B235" 
    xhandlers
    flags 
    probability 4562839298422611714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2142 v2143 
=== Succesors ===
next: a6364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2142 v2143 #next: a6364  <|@  <|@
f <@~|@floating>@ <|@
tid v6619 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
a6364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6364 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6619 
=== Succesors ===
next: v6612 
=== Usages ===
a3162 v6612 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6619 #next: v6612  <|@  <|@
tid ?1288 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1257 
values: a6341 i3067 i28 
=== Succesors ===
=== Usages ===
v6612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: a6341 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1288 
object: a6364 
=== Succesors ===
next: i1253 
=== Usages ===
=== Predecessor ===
a6364 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1288 object: a6364 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid a3162 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6364 
=== Succesors ===
=== Usages ===
v3166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6364  <|@  <|@
tid v3166 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@645659ab
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3162 i3067 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3162 i3067  <|@  <|@
tid ?5657 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1257 
values: - - 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3166 
stateDuring: ?5657 
=== Succesors ===
next: v1079 
=== Usages ===
v1076 
=== Predecessor ===
v6612 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3166 stateDuring: ?5657 #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1253 
y: i28 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1253 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1077 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1077 #falseSuccessor: v1078  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B210" 
    xhandlers
    flags 
    probability 4534263700400648468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2126  <|@  <|@
f <@*|@fixed>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
v1077 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" "B168" 
    successors "B211" "B217" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2126 v2127 
=== Succesors ===
next: a6365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2126 v2127 #next: a6365  <|@  <|@
f <@~|@floating>@ <|@
tid v6620 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
a6365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6365 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6620 
=== Succesors ===
next: v6366 
=== Usages ===
a3169 v6596 v6523 
=== Predecessor ===
v2125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6620 #next: v6366  <|@  <|@
tid ?1154 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1086 
values: a6337 i3067 i28 
=== Succesors ===
=== Usages ===
v5935 v6366 i6368 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: a6337 i3067 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6596 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6365 
=== Succesors ===
=== Usages ===
v6366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6366 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1154 
guard: - 
address: v6596 
=== Succesors ===
next: v1193 
=== Usages ===
v6209 
=== Predecessor ===
a6365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1154 guard: - address: v6596 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid v6209 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6366 
y: v6181 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6366 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6209 
=== Succesors ===
trueSuccessor: v1186 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v6366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6209 #trueSuccessor: v1186 #falseSuccessor: v1192  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B212" "B215" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4482 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4482  <|@  <|@
f <@~|@floating>@ <|@
tid v6227 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4482 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6227 
=== Succesors ===
trueSuccessor: v4478 
falseSuccessor: v4481 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6227 #trueSuccessor: v4478 #falseSuccessor: v4481  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6367 
=== Usages ===
=== Predecessor ===
v4482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6367  <|@  <|@
f <@~|@floating>@ <|@
tid v6523 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6365 
=== Succesors ===
=== Usages ===
a6367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6523 
=== Succesors ===
next: i6368 
=== Usages ===
v6525 v6524 
=== Predecessor ===
v4478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6523 #next: i6368  <|@  <|@
f <@~|@floating>@ <|@
tid v6524 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6367 
=== Succesors ===
=== Usages ===
i6368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6368 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1154 
guard: - 
address: v6524 
=== Succesors ===
next: v4492 
=== Usages ===
v3180 
=== Predecessor ===
a6367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1154 guard: - address: v6524 #next: v4492  <|@  <|@
f <@~|@floating>@ <|@
tid v3180 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6368 
=== Succesors ===
=== Usages ===
v4492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6368  <|@  <|@
f <@*|@fixed>@ <|@
tid v4492 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3180 
=== Succesors ===
trueSuccessor: v4488 
falseSuccessor: v4491 
=== Usages ===
=== Predecessor ===
i6368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3180 #trueSuccessor: v4488 #falseSuccessor: v4491  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6369 
=== Usages ===
i6369 
=== Predecessor ===
v4492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6369  <|@  <|@
f <@~|@floating>@ <|@
tid j3595 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6525 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6525 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j3595 
index: a6367 
=== Succesors ===
=== Usages ===
i6369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3595 index: a6367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6369 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4488 
address: v6525 
=== Succesors ===
next: v1484 
=== Usages ===
i3596 
=== Predecessor ===
v4488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4488 address: v6525 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i3596 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6369 
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6369  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
i6369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5940 
=== Usages ===
=== Predecessor ===
v4492 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5940  <|@  <|@
f <@~|@floating>@ <|@
tid i5941 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -814363
stableDimension: 0
stamp: i32 [-814363] ⇊00000000fff392e5 ⇈00000000fff392e5
stampKind: i32
value: int[-814363|0xfffffffffff392e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5930 
=== Predecessor ===
v4491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5936 
=== Usages ===
=== Predecessor ===
v4482 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5936  <|@  <|@
f <@~|@floating>@ <|@
tid i5937 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -811795
stableDimension: 0
stamp: i32 [-811795] ⇊00000000fff39ced ⇈00000000fff39ced
stampKind: i32
value: int[-811795|0xfffffffffff39ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5930 
=== Predecessor ===
v4481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5933 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-814363 - -811531] ⇊00000000fff390e5 ⇈00000000fff39ffd
valueDescription: i32
=== Inputs ===
merge: v5930 
values: i5937 i5941 
=== Succesors ===
=== Usages ===
v5935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5930 values: i5937 i5941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5936 v5940 
=== Succesors ===
next: v5935 
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5936 v5940 #next: v5935  <|@  <|@
f <@*|@fixed>@ <|@
tid v5935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1154 
actionAndReason: i5933 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5930 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1154 actionAndReason: i5933 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1082 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid a3169 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6365 
=== Succesors ===
=== Usages ===
v3188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6365  <|@  <|@
tid v3188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@638ce10b
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3169 i3067 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3169 i3067  <|@  <|@
tid ?5659 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1086 
values: - - 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1082 <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3188 
stateDuring: ?5659 
=== Succesors ===
next: v908 
=== Usages ===
i891 
=== Predecessor ===
v1192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3188 stateDuring: ?5659 #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
i1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B213" 
    successors "B219" "B234" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i891 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v888 
values: i1082 i3596 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v888 values: i1082 i3596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v908 v1484 
=== Succesors ===
next: v712 
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v908 v1484 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i891 
y: i28 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i891 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B220" 
    xhandlers
    flags 
    probability 4538767470182288717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" "B161" 
    successors "B221" "B226" 
    xhandlers
    flags 
    probability 4571846715351865631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2109 v2111 
=== Succesors ===
next: a6370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2109 v2111 #next: a6370  <|@  <|@
f <@~|@floating>@ <|@
tid v6621 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
a6370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6370 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6621 
=== Succesors ===
next: v6371 
=== Usages ===
v6597 v6527 v6526 
=== Predecessor ===
v2108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6621 #next: v6371  <|@  <|@
tid ?2110 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?719 
values: a6333 i3067 i28 
=== Succesors ===
=== Usages ===
v6051 v6371 i6375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?719 values: a6333 i3067 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6597 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
v6371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6371 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2110 
guard: - 
address: v6597 
=== Succesors ===
next: v928 
=== Usages ===
v6211 v6210 
=== Predecessor ===
a6370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2110 guard: - address: v6597 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v6210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6371 
y: v6175 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6371 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6526 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
i6372 a6374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6210 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v6371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6210 #trueSuccessor: v921 #falseSuccessor: v927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6372 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6372 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6526 
=== Succesors ===
next: v1198 
=== Usages ===
v1195 
=== Predecessor ===
v921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6526 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6372 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
i6372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1196 #falseSuccessor: v1197  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B242" 
    xhandlers
    flags 
    probability 4543174463840632876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6373 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6373  <|@  <|@
f <@~|@floating>@ <|@
tid v6527 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
i6373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6373 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6527 
=== Succesors ===
next: v4502 
=== Usages ===
v1199 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6527 #next: v4502  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6373 
y: i3067 
=== Succesors ===
=== Usages ===
v4502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6373 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1199 
=== Succesors ===
trueSuccessor: v4501 
falseSuccessor: v4498 
=== Usages ===
=== Predecessor ===
i6373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1199 #trueSuccessor: v4501 #falseSuccessor: v4498  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6052 
=== Usages ===
=== Predecessor ===
v4502 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6052  <|@  <|@
f <@~|@floating>@ <|@
tid i6053 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818451
stableDimension: 0
stamp: i32 [-818451] ⇊00000000fff382ed ⇈00000000fff382ed
stampKind: i32
value: int[-818451|0xfffffffffff382ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2270 
=== Usages ===
=== Predecessor ===
v4502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B227" "B232" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4507 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4507  <|@  <|@
f <@~|@floating>@ <|@
tid v6211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6371 
y: v6181 
=== Succesors ===
=== Usages ===
v4507 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6371 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v4507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6211 
=== Succesors ===
trueSuccessor: v4503 
falseSuccessor: v4506 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6211 #trueSuccessor: v4503 #falseSuccessor: v4506  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4512 
=== Usages ===
=== Predecessor ===
v4507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4512  <|@  <|@
f <@~|@floating>@ <|@
tid v6226 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6226 
=== Succesors ===
trueSuccessor: v4508 
falseSuccessor: v4511 
=== Usages ===
=== Predecessor ===
v4503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6226 #trueSuccessor: v4508 #falseSuccessor: v4511  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6374 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6374 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6526 
=== Succesors ===
next: i6375 
=== Usages ===
v6529 v6528 
=== Predecessor ===
v4508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6526 #next: i6375  <|@  <|@
f <@~|@floating>@ <|@
tid v6528 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6374 
=== Succesors ===
=== Usages ===
i6375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6375 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2110 
guard: - 
address: v6528 
=== Succesors ===
next: v4522 
=== Usages ===
v3208 
=== Predecessor ===
a6374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2110 guard: - address: v6528 #next: v4522  <|@  <|@
f <@~|@floating>@ <|@
tid v3208 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6375 
=== Succesors ===
=== Usages ===
v4522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6375  <|@  <|@
f <@*|@fixed>@ <|@
tid v4522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3208 
=== Succesors ===
trueSuccessor: v4518 
falseSuccessor: v4521 
=== Usages ===
=== Predecessor ===
i6375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3208 #trueSuccessor: v4518 #falseSuccessor: v4521  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B240" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6376 
=== Usages ===
i6376 
=== Predecessor ===
v4522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6376  <|@  <|@
f <@~|@floating>@ <|@
tid j6224 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6529 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6529 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j6224 
index: a6374 
=== Succesors ===
=== Usages ===
i6376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6224 index: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4518 
address: v6529 
=== Succesors ===
next: v1478 
=== Usages ===
i3598 
=== Predecessor ===
v4518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4518 address: v6529 #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid i3598 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6376 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
i6376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6060 
=== Usages ===
=== Predecessor ===
v4522 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6060  <|@  <|@
f <@~|@floating>@ <|@
tid i6061 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -821531
stableDimension: 0
stamp: i32 [-821531] ⇊00000000fff376e5 ⇈00000000fff376e5
stampKind: i32
value: int[-821531|0xfffffffffff376e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6056 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6056  <|@  <|@
f <@~|@floating>@ <|@
tid i6057 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818963
stableDimension: 0
stamp: i32 [-818963] ⇊00000000fff380ed ⇈00000000fff380ed
stampKind: i32
value: int[-818963|0xfffffffffff380ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6054 
=== Usages ===
=== Predecessor ===
v4507 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6054  <|@  <|@
f <@~|@floating>@ <|@
tid i6055 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818739
stableDimension: 0
stamp: i32 [-818739] ⇊00000000fff381cd ⇈00000000fff381cd
stampKind: i32
value: int[-818739|0xfffffffffff381cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B224" "B232" "B231" "B230" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i6049 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-821531 - -817163] ⇊00000000fff300c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v6046 
values: i6053 i6055 i6057 i6061 
=== Succesors ===
=== Usages ===
v6051 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6046 values: i6053 i6055 i6057 i6061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6052 v6054 v6056 v6060 
=== Succesors ===
next: v6051 
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6052 v6054 v6056 v6060 #next: v6051  <|@  <|@
f <@*|@fixed>@ <|@
tid v6051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2110 
actionAndReason: i6049 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6046 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2110 actionAndReason: i6049 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567279364053927502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B272" 
    xhandlers
    flags 
    probability 4562775657212507808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2481 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B272" 
    xhandlers
    flags 
    probability 4558272044811537063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2499 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B272" 
    xhandlers
    flags 
    probability 4553783854675129250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2445 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2445  <|@  <|@
f <@*|@fixed>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B272" 
    xhandlers
    flags 
    probability 4551814202715430551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2517 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573236067814667058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2356  <|@  <|@
f <@*|@fixed>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B229" "B239" "B199" 
    successors "B241" "B271" 
    xhandlers
    flags 
    probability 4578999117796592610
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i466 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v463 
values: i3598 i61 i61 
=== Succesors ===
=== Usages ===
i1808 v323 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v463 values: i3598 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1478 v2356 v2391 
=== Succesors ===
next: v326 
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1478 v2356 v2391 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i466 
y: i28 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i466 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4550281384080835476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B154" "B222" 
    successors "B243" "B269" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2092 v2094 v2287 
=== Succesors ===
next: a6377 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2092 v2094 v2287 #next: a6377  <|@  <|@
f <@~|@floating>@ <|@
tid v6530 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6377 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6530 
=== Succesors ===
next: v6614 
=== Usages ===
v6599 v6614 v6540 v6541 
=== Predecessor ===
v2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6530 #next: v6614  <|@  <|@
tid ?2093 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 i28 
=== Succesors ===
=== Usages ===
v6015 v6614 v6379 i6381 i6385 v6615 i6392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
object: a6377 
=== Succesors ===
next: a6378 
=== Usages ===
=== Predecessor ===
a6377 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2093 object: a6377 #next: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6378 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6531 
=== Succesors ===
next: v6379 
=== Usages ===
a3220 v6598 v6532 v6535 v6539 
=== Predecessor ===
v6614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6531 #next: v6379  <|@  <|@
f <@~|@floating>@ <|@
tid v6598 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
v6379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6379 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6598 
=== Succesors ===
next: v4537 
=== Usages ===
v6212 
=== Predecessor ===
a6378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6598 #next: v4537  <|@  <|@
f <@~|@floating>@ <|@
tid v6212 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6379 
y: v6183 
=== Succesors ===
=== Usages ===
v4537 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6379 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4537 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6212 
=== Succesors ===
trueSuccessor: v4533 
falseSuccessor: v4536 
=== Usages ===
=== Predecessor ===
v6379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6212 #trueSuccessor: v4533 #falseSuccessor: v4536  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B268" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6380 
=== Usages ===
=== Predecessor ===
v4537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6380 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6381 
=== Usages ===
a3224 v6533 
=== Predecessor ===
v4533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6381  <|@  <|@
f <@~|@floating>@ <|@
tid v6533 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6380 
=== Succesors ===
=== Usages ===
i6381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6381 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6533 
=== Succesors ===
next: i6382 
=== Usages ===
v3232 
=== Predecessor ===
a6380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6533 #next: i6382  <|@  <|@
f <@~|@floating>@ <|@
tid v6532 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
i6382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6532 
=== Succesors ===
next: v4547 
=== Usages ===
v6534 v3232 
=== Predecessor ===
i6381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6532 #next: v4547  <|@  <|@
f <@~|@floating>@ <|@
tid v3232 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6382 
y: i6381 
=== Succesors ===
=== Usages ===
v4547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6382 y: i6381  <|@  <|@
f <@*|@fixed>@ <|@
tid v4547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3232 
=== Succesors ===
trueSuccessor: v4543 
falseSuccessor: v4546 
=== Usages ===
=== Predecessor ===
i6382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3232 #trueSuccessor: v4543 #falseSuccessor: v4546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6383 
=== Usages ===
i6383 
=== Predecessor ===
v4547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6383  <|@  <|@
f <@~|@floating>@ <|@
tid a3224 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6380 
=== Succesors ===
=== Usages ===
v6534 a2532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6380  <|@  <|@
f <@~|@floating>@ <|@
tid v6534 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3224 
index: i6382 
=== Succesors ===
=== Usages ===
i6383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3224 index: i6382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4543 
address: v6534 
=== Succesors ===
next: v4552 
=== Usages ===
v518 v3276 i5665 
=== Predecessor ===
v4543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4543 address: v6534 #next: v4552  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6383 
y: i28 
=== Succesors ===
=== Usages ===
v4552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6383 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v4551 
falseSuccessor: v4548 
=== Usages ===
=== Predecessor ===
i6383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v4551 #falseSuccessor: v4548  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6024 
=== Usages ===
=== Predecessor ===
v4552 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6024  <|@  <|@
f <@~|@floating>@ <|@
tid i6025 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -829459
stableDimension: 0
stamp: i32 [-829459] ⇊00000000fff357ed ⇈00000000fff357ed
stampKind: i32
value: int[-829459|0xfffffffffff357ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B267" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6384 
=== Usages ===
=== Predecessor ===
v4552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6634 
=== Succesors ===
next: i6385 
=== Usages ===
a3243 v6536 
=== Predecessor ===
v4548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6634 #next: i6385  <|@  <|@
f <@~|@floating>@ <|@
tid v6536 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6384 
=== Succesors ===
=== Usages ===
i6385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6536 
=== Succesors ===
next: i6386 
=== Usages ===
v3278 v3269 
=== Predecessor ===
a6384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6536 #next: i6386  <|@  <|@
f <@~|@floating>@ <|@
tid v6535 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
i6386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6386 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6535 
=== Succesors ===
next: v4562 
=== Usages ===
v3269 i533 v6537 
=== Predecessor ===
i6385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6535 #next: v4562  <|@  <|@
f <@~|@floating>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6386 
y: i6385 
=== Succesors ===
=== Usages ===
v4562 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6386 y: i6385  <|@  <|@
f <@*|@fixed>@ <|@
tid v4562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3269 
=== Succesors ===
trueSuccessor: v4558 
falseSuccessor: v4561 
=== Usages ===
=== Predecessor ===
i6386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3269 #trueSuccessor: v4558 #falseSuccessor: v4561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B248" "B266" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4567 
=== Usages ===
i6395 v3276 
=== Predecessor ===
v4562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4567  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6386 
y: i61 
=== Succesors ===
=== Usages ===
v6538 v3278 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6386 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v3278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i533 
y: i6385 
=== Succesors ===
=== Usages ===
v4567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i533 y: i6385  <|@  <|@
f <@*|@fixed>@ <|@
tid v4567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3278 
=== Succesors ===
trueSuccessor: v4563 
falseSuccessor: v4566 
=== Usages ===
=== Predecessor ===
v4558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3278 #trueSuccessor: v4563 #falseSuccessor: v4566  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B249" "B254" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6387 
=== Usages ===
i6394 v3285 
=== Predecessor ===
v4567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6387  <|@  <|@
f <@~|@floating>@ <|@
tid v6539 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
a6387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6387 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6539 
=== Succesors ===
next: v6615 
=== Usages ===
a3288 v6615 v6600 
=== Predecessor ===
v4563 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6539 #next: v6615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
object: a6387 
=== Succesors ===
next: v6388 
=== Usages ===
=== Predecessor ===
a6387 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2093 object: a6387 #next: v6388  <|@  <|@
f <@~|@floating>@ <|@
tid v6599 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
v6388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6388 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6599 
=== Succesors ===
next: v503 
=== Usages ===
v6214 v6213 
=== Predecessor ===
v6615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6599 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v6213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6388 
y: v6175 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6388 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6540 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
i6389 a6391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6213 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v6388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6213 #trueSuccessor: v496 #falseSuccessor: v502  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6389 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6389 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6540 
=== Succesors ===
next: v4577 
=== Usages ===
v940 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6540 #next: v4577  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6389 
=== Succesors ===
=== Usages ===
v4577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6389  <|@  <|@
f <@*|@fixed>@ <|@
tid v4577 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v4576 
falseSuccessor: v4573 
=== Usages ===
=== Predecessor ===
i6389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v4576 #falseSuccessor: v4573  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6034 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6034  <|@  <|@
f <@~|@floating>@ <|@
tid i6035 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843283
stableDimension: 0
stamp: i32 [-843283] ⇊00000000fff321ed ⇈00000000fff321ed
stampKind: i32
value: int[-843283|0xfffffffffff321ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6390 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6390  <|@  <|@
f <@~|@floating>@ <|@
tid v6541 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
i6390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6390 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6541 
=== Succesors ===
next: v4582 
=== Usages ===
v944 
=== Predecessor ===
v4573 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6541 #next: v4582  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6390 
y: i3067 
=== Succesors ===
=== Usages ===
v4582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6390 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v944 
=== Succesors ===
trueSuccessor: v4581 
falseSuccessor: v4578 
=== Usages ===
=== Predecessor ===
i6390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v944 #trueSuccessor: v4581 #falseSuccessor: v4578  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6036 
=== Usages ===
=== Predecessor ===
v4582 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6036  <|@  <|@
f <@~|@floating>@ <|@
tid i6037 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843539
stableDimension: 0
stamp: i32 [-843539] ⇊00000000fff320ed ⇈00000000fff320ed
stampKind: i32
value: int[-843539|0xfffffffffff320ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v4582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6605 
=== Predecessor ===
v4578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B265" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4587 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4587  <|@  <|@
f <@~|@floating>@ <|@
tid v6214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6388 
y: v6181 
=== Succesors ===
=== Usages ===
v4587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6388 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v4587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6214 
=== Succesors ===
trueSuccessor: v4583 
falseSuccessor: v4586 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6214 #trueSuccessor: v4583 #falseSuccessor: v4586  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B256" "B264" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6391 
=== Usages ===
=== Predecessor ===
v4587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6391 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6540 
=== Succesors ===
next: i6392 
=== Usages ===
v6543 v6542 
=== Predecessor ===
v4583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6540 #next: i6392  <|@  <|@
f <@~|@floating>@ <|@
tid v6542 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6391 
=== Succesors ===
=== Usages ===
i6392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6392 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6542 
=== Succesors ===
next: v4597 
=== Usages ===
v3306 
=== Predecessor ===
a6391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6542 #next: v4597  <|@  <|@
f <@~|@floating>@ <|@
tid v3306 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6392 
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6392  <|@  <|@
f <@*|@fixed>@ <|@
tid v4597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3306 
=== Succesors ===
trueSuccessor: v4593 
falseSuccessor: v4596 
=== Usages ===
=== Predecessor ===
i6392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3306 #trueSuccessor: v4593 #falseSuccessor: v4596  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B263" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4602 
=== Usages ===
i6393 
=== Predecessor ===
v4597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4602  <|@  <|@
f <@~|@floating>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3916 
=== Succesors ===
trueSuccessor: v4598 
falseSuccessor: v4601 
=== Usages ===
=== Predecessor ===
v4593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3916 #trueSuccessor: v4598 #falseSuccessor: v4601  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B258" "B259" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6393 
=== Usages ===
=== Predecessor ===
v4602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6393  <|@  <|@
f <@~|@floating>@ <|@
tid j6225 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6543 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6543 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j6225 
index: a6391 
=== Succesors ===
=== Usages ===
i6393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6225 index: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6393 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4593 
address: v6543 
=== Succesors ===
next: v4607 
=== Usages ===
i3607 
=== Predecessor ===
v4598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4593 address: v6543 #next: v4607  <|@  <|@
f <@~|@floating>@ <|@
tid i3607 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6393 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6393  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3607 
y: i28 
=== Succesors ===
=== Usages ===
v4607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3607 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v4606 
falseSuccessor: v4603 
=== Usages ===
=== Predecessor ===
i6393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v4606 #falseSuccessor: v4603  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4604 
=== Usages ===
=== Predecessor ===
v4607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4604  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?209 
values: a3041 a2 i3 a4 i3067 i28 
=== Succesors ===
=== Usages ===
v4604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a3041 a2 i3 a4 i3067 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4604 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 3217
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?195 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4606 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?195  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6606 
=== Usages ===
=== Predecessor ===
v4607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6606  <|@  <|@
f <@*|@fixed>@ <|@
tid v6606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6605 
=== Predecessor ===
v4603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B253" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6606 v335 
=== Succesors ===
next: i6394 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6606 v335 #next: i6394  <|@  <|@
f <@~|@floating>@ <|@
tid a3243 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6384 
=== Succesors ===
=== Usages ===
v6537 a1668 v6538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6384  <|@  <|@
f <@~|@floating>@ <|@
tid v6538 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3243 
index: i533 
=== Succesors ===
=== Usages ===
v3285 i6394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3243 index: i533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6394 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4563 
address: v6538 
=== Succesors ===
next: i6395 
=== Usages ===
i1674 i1672 
=== Predecessor ===
v6605 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4563 address: v6538 #next: i6395  <|@  <|@
f <@~|@floating>@ <|@
tid v6537 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3243 
index: i6386 
=== Succesors ===
=== Usages ===
v3276 i6395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3243 index: i6386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6395 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4558 
address: v6537 
=== Succesors ===
next: v3276 
=== Usages ===
i1671 i1669 
=== Predecessor ===
i6394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4558 address: v6537 #next: v3276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4558 
address: v6537 
value: i6383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3285 
=== Usages ===
=== Predecessor ===
i6395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4558 address: v6537 value: i6383 stateAfter: - lastLocationAccess: - #next: v3285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4563 
address: v6538 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v6396 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4563 address: v6538 value: i6235 stateAfter: - lastLocationAccess: - #next: v6396  <|@  <|@
f <@~|@floating>@ <|@
tid v6600 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6387 
=== Succesors ===
=== Usages ===
v6396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6396 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6600 
=== Succesors ===
next: v752 
=== Usages ===
v6215 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6600 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v6215 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6396 
y: v6185 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6396 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a3220 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6378 
=== Succesors ===
=== Usages ===
a1663 a1664 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6378  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6215 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v6396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6215 #trueSuccessor: v745 #falseSuccessor: v751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B280" 
    xhandlers
    flags 
    probability 4575391099144321446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B289" 
    xhandlers
    flags 
    probability 4565018579343288473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid a3288 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6387 
=== Succesors ===
=== Usages ===
a1675 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6044 
=== Usages ===
=== Predecessor ===
v4602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6044  <|@  <|@
f <@~|@floating>@ <|@
tid i6045 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -844051
stableDimension: 0
stamp: i32 [-844051] ⇊00000000fff31eed ⇈00000000fff31eed
stampKind: i32
value: int[-844051|0xfffffffffff31eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6042 
=== Usages ===
=== Predecessor ===
v4597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6042  <|@  <|@
f <@~|@floating>@ <|@
tid i6043 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -846619
stableDimension: 0
stamp: i32 [-846619] ⇊00000000fff314e5 ⇈00000000fff314e5
stampKind: i32
value: int[-846619|0xfffffffffff314e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6038 
=== Usages ===
=== Predecessor ===
v4587 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6038  <|@  <|@
f <@~|@floating>@ <|@
tid i6039 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843827
stableDimension: 0
stamp: i32 [-843827] ⇊00000000fff31fcd ⇈00000000fff31fcd
stampKind: i32
value: int[-843827|0xfffffffffff31fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6030 
=== Usages ===
=== Predecessor ===
v4567 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6030  <|@  <|@
f <@~|@floating>@ <|@
tid i6031 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -839451
stableDimension: 0
stamp: i32 [-839451] ⇊00000000fff330e5 ⇈00000000fff330e5
stampKind: i32
value: int[-839451|0xfffffffffff330e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6028 
=== Usages ===
=== Predecessor ===
v4562 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6028  <|@  <|@
f <@~|@floating>@ <|@
tid i6029 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -837147
stableDimension: 0
stamp: i32 [-837147] ⇊00000000fff339e5 ⇈00000000fff339e5
stampKind: i32
value: int[-837147|0xfffffffffff339e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6022 
=== Usages ===
=== Predecessor ===
v4547 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6022  <|@  <|@
f <@~|@floating>@ <|@
tid i6023 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -827675
stableDimension: 0
stamp: i32 [-827675] ⇊00000000fff35ee5 ⇈00000000fff35ee5
stampKind: i32
value: int[-827675|0xfffffffffff35ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6018 
=== Usages ===
=== Predecessor ===
v4537 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6018  <|@  <|@
f <@~|@floating>@ <|@
tid i6019 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -824883
stableDimension: 0
stamp: i32 [-824883] ⇊00000000fff369cd ⇈00000000fff369cd
stampKind: i32
value: int[-824883|0xfffffffffff369cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B268" "B245" "B267" "B266" "B250" "B252" "B265" "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i6013 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-846619 - -823307] ⇊00000000fff300c5 ⇈00000000fff37ffd
valueDescription: i32
=== Inputs ===
merge: v6010 
values: i6019 i6023 i6025 i6029 i6031 i6035 i6037 i6039 i6043 i6045 
=== Succesors ===
=== Usages ===
v6015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6010 values: i6019 i6023 i6025 i6029 i6031 i6035 i6037 i6039 i6043 i6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6018 v6022 v6024 v6028 v6030 v6034 v6036 v6038 v6042 v6044 
=== Succesors ===
next: v6015 
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6018 v6022 v6024 v6028 v6030 v6034 v6036 v6038 v6042 v6044 #next: v6015  <|@  <|@
f <@*|@fixed>@ <|@
tid v6015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
actionAndReason: i6013 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6010 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2093 actionAndReason: i6013 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B272" 
    xhandlers
    flags 
    probability 4578903034045592532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B234" "B157" "B164" "B225" "B171" "B178" "B185" "B237" "B192" "B235" "B236" "B238" 
    successors "B273" "B298" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1808 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1803 
values: i466 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 
=== Succesors ===
=== Usages ===
?1805 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1803 values: i466 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1804 v1806 v1914 v1931 v2270 v2374 v2409 v2427 v2445 v2463 v2481 v2499 v2517 
=== Succesors ===
next: a6397 
=== Usages ===
i1808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1804 v1806 v1914 v1931 v2270 v2374 v2409 v2427 v2445 v2463 v2481 v2499 v2517 #next: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6531 
=== Succesors ===
next: v6398 
=== Usages ===
a3312 v6601 v6544 v6547 v6551 
=== Predecessor ===
v1803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6531 #next: v6398  <|@  <|@
tid ?1805 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 i1808 
=== Succesors ===
=== Usages ===
v5971 v6398 i6400 i6404 v6407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067 i1808  <|@  <|@
f <@~|@floating>@ <|@
tid v6601 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
v6398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6601 
=== Succesors ===
next: v4617 
=== Usages ===
v6216 
=== Predecessor ===
a6397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6601 #next: v4617  <|@  <|@
f <@~|@floating>@ <|@
tid v6216 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6398 
y: v6183 
=== Succesors ===
=== Usages ===
v4617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6398 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4617 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6216 
=== Succesors ===
trueSuccessor: v4613 
falseSuccessor: v4616 
=== Usages ===
=== Predecessor ===
v6398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6216 #trueSuccessor: v4613 #falseSuccessor: v4616  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B274" "B297" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6399 
=== Usages ===
=== Predecessor ===
v4617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6400 
=== Usages ===
a3316 v6545 
=== Predecessor ===
v4613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6400  <|@  <|@
f <@~|@floating>@ <|@
tid v6545 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6399 
=== Succesors ===
=== Usages ===
i6400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6400 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6545 
=== Succesors ===
next: i6401 
=== Usages ===
v3324 
=== Predecessor ===
a6399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6545 #next: i6401  <|@  <|@
f <@~|@floating>@ <|@
tid v6544 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
i6401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6401 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6544 
=== Succesors ===
next: v4627 
=== Usages ===
v6546 v3324 
=== Predecessor ===
i6400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6544 #next: v4627  <|@  <|@
f <@~|@floating>@ <|@
tid v3324 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6401 
y: i6400 
=== Succesors ===
=== Usages ===
v4627 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6401 y: i6400  <|@  <|@
f <@*|@fixed>@ <|@
tid v4627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3324 
=== Succesors ===
trueSuccessor: v4623 
falseSuccessor: v4626 
=== Usages ===
=== Predecessor ===
i6401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3324 #trueSuccessor: v4623 #falseSuccessor: v4626  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B275" "B276" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6402 
=== Usages ===
i6402 
=== Predecessor ===
v4627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6402  <|@  <|@
f <@~|@floating>@ <|@
tid a3316 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6399 
=== Succesors ===
=== Usages ===
v6546 a2532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6399  <|@  <|@
f <@~|@floating>@ <|@
tid v6546 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3316 
index: i6401 
=== Succesors ===
=== Usages ===
i6402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3316 index: i6401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4623 
address: v6546 
=== Succesors ===
next: v4632 
=== Usages ===
v1688 v3367 i5665 
=== Predecessor ===
v4623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4623 address: v6546 #next: v4632  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6402 
y: i28 
=== Succesors ===
=== Usages ===
v4632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6402 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1688 
=== Succesors ===
trueSuccessor: v4631 
falseSuccessor: v4628 
=== Usages ===
=== Predecessor ===
i6402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1688 #trueSuccessor: v4631 #falseSuccessor: v4628  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5978 
=== Usages ===
=== Predecessor ===
v4632 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5978  <|@  <|@
f <@~|@floating>@ <|@
tid i5979 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -853011
stableDimension: 0
stamp: i32 [-853011] ⇊00000000fff2fbed ⇈00000000fff2fbed
stampKind: i32
value: int[-853011|0xfffffffffff2fbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B277" "B296" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6403 
=== Usages ===
=== Predecessor ===
v4632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6634 
=== Succesors ===
next: i6404 
=== Usages ===
a3334 v6548 
=== Predecessor ===
v4628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6634 #next: i6404  <|@  <|@
f <@~|@floating>@ <|@
tid v6548 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6403 
=== Succesors ===
=== Usages ===
i6404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6404 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6548 
=== Succesors ===
next: i6405 
=== Usages ===
v3369 v3360 
=== Predecessor ===
a6403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6548 #next: i6405  <|@  <|@
f <@~|@floating>@ <|@
tid v6547 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
i6405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6405 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6547 
=== Succesors ===
next: v4642 
=== Usages ===
v3360 v6549 i1696 
=== Predecessor ===
i6404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6547 #next: v4642  <|@  <|@
f <@~|@floating>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6405 
y: i6404 
=== Succesors ===
=== Usages ===
v4642 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6405 y: i6404  <|@  <|@
f <@*|@fixed>@ <|@
tid v4642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3360 
=== Succesors ===
trueSuccessor: v4638 
falseSuccessor: v4641 
=== Usages ===
=== Predecessor ===
i6405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3360 #trueSuccessor: v4638 #falseSuccessor: v4641  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B278" "B295" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4647 
=== Usages ===
i6409 v3367 
=== Predecessor ===
v4642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4647  <|@  <|@
f <@~|@floating>@ <|@
tid i1696 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6405 
y: i61 
=== Succesors ===
=== Usages ===
v3369 v6550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6405 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v3369 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1696 
y: i6404 
=== Succesors ===
=== Usages ===
v4647 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1696 y: i6404  <|@  <|@
f <@*|@fixed>@ <|@
tid v4647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3369 
=== Succesors ===
trueSuccessor: v4643 
falseSuccessor: v4646 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3369 #trueSuccessor: v4643 #falseSuccessor: v4646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B279" "B288" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6406 
=== Usages ===
i6408 v3376 
=== Predecessor ===
v4647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6406  <|@  <|@
f <@~|@floating>@ <|@
tid v6551 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
a6406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6551 
=== Succesors ===
next: v6407 
=== Usages ===
a3379 v6602 
=== Predecessor ===
v4643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6551 #next: v6407  <|@  <|@
f <@~|@floating>@ <|@
tid v6602 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6406 
=== Succesors ===
=== Usages ===
v6407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6407 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6602 
=== Succesors ===
next: i6408 
=== Usages ===
v6217 
=== Predecessor ===
a6406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6602 #next: i6408  <|@  <|@
f <@~|@floating>@ <|@
tid a3334 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6403 
=== Succesors ===
=== Usages ===
v6549 a1668 v6550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6403  <|@  <|@
f <@~|@floating>@ <|@
tid v6550 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3334 
index: i1696 
=== Succesors ===
=== Usages ===
v3376 i6408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3334 index: i1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4643 
address: v6550 
=== Succesors ===
next: i6409 
=== Usages ===
i1672 i1674 
=== Predecessor ===
v6407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4643 address: v6550 #next: i6409  <|@  <|@
f <@~|@floating>@ <|@
tid v6549 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3334 
index: i6405 
=== Succesors ===
=== Usages ===
v3367 i6409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3334 index: i6405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6409 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4638 
address: v6549 
=== Succesors ===
next: v3367 
=== Usages ===
i1669 i1671 
=== Predecessor ===
i6408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4638 address: v6549 #next: v3367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4638 
address: v6549 
value: i6402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3376 
=== Usages ===
=== Predecessor ===
i6409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4638 address: v6549 value: i6402 stateAfter: - lastLocationAccess: - #next: v3376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4643 
address: v6550 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v3367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4643 address: v6550 value: i6235 stateAfter: - lastLocationAccess: - #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v6217 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6407 
y: v6185 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6407 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a3312 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6397 
=== Succesors ===
=== Usages ===
a1663 a1664 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6217 
=== Succesors ===
trueSuccessor: v1700 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6217 #trueSuccessor: v1700 #falseSuccessor: v1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" 
    xhandlers
    flags 
    probability 4603613911725518006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1658  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B261" "B279" 
    successors "B281" "B282" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1664 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3220 a3312 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3220 a3312  <|@  <|@
f <@~|@floating>@ <|@
tid i5665 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6383 i6402 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6383 i6402  <|@  <|@
f <@~|@floating>@ <|@
tid a1668 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3243 a3334 
=== Succesors ===
=== Usages ===
v6554 v6553 v6552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3243 a3334  <|@  <|@
f <@~|@floating>@ <|@
tid i1671 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6395 i6409 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6395 i6409  <|@  <|@
f <@~|@floating>@ <|@
tid i1674 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6394 i6408 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6394 i6408  <|@  <|@
f <@~|@floating>@ <|@
tid a2532 <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3224 a3316 
=== Succesors ===
=== Usages ===
v6556 v6555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3224 a3316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1656 v1658 
=== Succesors ===
next: i6410 
=== Usages ===
a1664 i5665 a1668 i1671 i1674 a2532 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1656 v1658 #next: i6410  <|@  <|@
f <@~|@floating>@ <|@
tid v6633 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6410 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6633 
=== Succesors ===
next: v4657 
=== Usages ===
v953 
=== Predecessor ===
v1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6633 #next: v4657  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6410 
y: i61 
=== Succesors ===
=== Usages ===
v4657 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6410 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v4657 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v4656 
falseSuccessor: v4653 
=== Usages ===
=== Predecessor ===
i6410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v4656 #falseSuccessor: v4653  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5953 
=== Usages ===
=== Predecessor ===
v4657 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5953  <|@  <|@
f <@~|@floating>@ <|@
tid i5954 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -866067
stableDimension: 0
stamp: i32 [-866067] ⇊00000000fff2c8ed ⇈00000000fff2c8ed
stampKind: i32
value: int[-866067|0xfffffffffff2c8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B283" "B286" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6411 
=== Usages ===
=== Predecessor ===
v4657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6411  <|@  <|@
f <@~|@floating>@ <|@
tid v6555 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2532 
index: - 
=== Succesors ===
=== Usages ===
i6411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2532 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6411 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6555 
=== Succesors ===
next: i6412 
=== Usages ===
v3410 
=== Predecessor ===
v4653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6555 #next: i6412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6412 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4672 
=== Usages ===
v6556 v3410 
=== Predecessor ===
i6411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4672  <|@  <|@
f <@~|@floating>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6412 
y: i6411 
=== Succesors ===
=== Usages ===
v4672 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6412 y: i6411  <|@  <|@
f <@*|@fixed>@ <|@
tid v4672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3410 
=== Succesors ===
trueSuccessor: v4668 
falseSuccessor: v4671 
=== Usages ===
=== Predecessor ===
i6412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3410 #trueSuccessor: v4668 #falseSuccessor: v4671  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" "B285" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6413 
=== Usages ===
v3417 
=== Predecessor ===
v4672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6413  <|@  <|@
f <@~|@floating>@ <|@
tid v6552 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
i6413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6413 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6552 
=== Succesors ===
next: v4677 
=== Usages ===
v3902 
=== Predecessor ===
v4668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6552 #next: v4677  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6413 
y: i2599 
=== Succesors ===
=== Usages ===
v4677 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6413 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4677 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3902 
=== Succesors ===
trueSuccessor: v4676 
falseSuccessor: v4673 
=== Usages ===
=== Predecessor ===
i6413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3902 #trueSuccessor: v4676 #falseSuccessor: v4673  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5964 
=== Usages ===
=== Predecessor ===
v4677 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5964  <|@  <|@
f <@~|@floating>@ <|@
tid i5965 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -925467
stableDimension: 0
stamp: i32 [-925467] ⇊00000000fff1e0e5 ⇈00000000fff1e0e5
stampKind: i32
value: int[-925467|0xfffffffffff1e0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B358" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3385 
=== Usages ===
v3397 v3403 
=== Predecessor ===
v4677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3385  <|@  <|@
f <@~|@floating>@ <|@
tid v6631 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6631 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6414 
=== Usages ===
=== Predecessor ===
v4673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6631 value: i6235 stateAfter: - lastLocationAccess: - #next: i6414  <|@  <|@
f <@~|@floating>@ <|@
tid v6628 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6414 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6628 
=== Succesors ===
next: v3397 
=== Usages ===
v3397 
=== Predecessor ===
v3385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6628 #next: v3397  <|@  <|@
f <@~|@floating>@ <|@
tid v6553 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
v3397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4673 
address: v6553 
value: i6414 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3403 
=== Usages ===
=== Predecessor ===
i6414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4673 address: v6553 value: i6414 stateAfter: - lastLocationAccess: - #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid v6554 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4673 
address: v6554 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3417 
=== Usages ===
=== Predecessor ===
v3397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4673 address: v6554 value: i6235 stateAfter: - lastLocationAccess: - #next: v3417  <|@  <|@
f <@~|@floating>@ <|@
tid v6556 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2532 
index: i6412 
=== Succesors ===
=== Usages ===
v3417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2532 index: i6412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4668 
address: v6556 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2338 
=== Usages ===
=== Predecessor ===
v3403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4668 address: v6556 value: i6327 stateAfter: - lastLocationAccess: - #next: v2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v3417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5962 
=== Usages ===
=== Predecessor ===
v4672 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5962  <|@  <|@
f <@~|@floating>@ <|@
tid i5963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -873243
stableDimension: 0
stamp: i32 [-873243] ⇊00000000fff2ace5 ⇈00000000fff2ace5
stampKind: i32
value: int[-873243|0xfffffffffff2ace5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B281" "B286" "B284" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5955 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-925467 - -866067] ⇊00000000fff080e5 ⇈00000000fff3eced
valueDescription: i32
=== Inputs ===
merge: v5952 
values: i5954 i5963 i5965 
=== Succesors ===
=== Usages ===
v5957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5952 values: i5954 i5963 i5965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5953 v5962 v5964 
=== Succesors ===
next: v5957 
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5953 v5962 v5964 #next: v5957  <|@  <|@
tid ?1657 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?543 
values: a1664 a2 i6235 a4 i5665 i1671 i1674 
=== Succesors ===
=== Usages ===
v5957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1664 a2 i6235 a4 i5665 i1671 i1674  <|@  <|@
f <@*|@fixed>@ <|@
tid v5957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1657 
actionAndReason: i5955 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5952 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1657 actionAndReason: i5955 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B289" 
    xhandlers
    flags 
    probability 4593757210952074687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid a3379 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6406 
=== Succesors ===
=== Usages ===
a1675 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B262" "B288" 
    successors "B290" "B291" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1663 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1659 
values: a3220 a3312 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: a3220 a3312  <|@  <|@
f <@~|@floating>@ <|@
tid a1675 <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v1659 
values: a3288 a3379 
=== Succesors ===
=== Usages ===
v3418 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: a3288 a3379  <|@  <|@
f <@~|@floating>@ <|@
tid i1669 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1659 
values: i6395 i6409 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: i6395 i6409  <|@  <|@
f <@~|@floating>@ <|@
tid i1672 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1659 
values: i6394 i6408 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: i6394 i6408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1660 v1662 
=== Succesors ===
next: i538 
=== Usages ===
a1663 a1675 i1669 i1672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1660 v1662 #next: i538  <|@  <|@
tid v3418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@41206827
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1675 a2 i6235 a4 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1675 a2 i6235 a4  <|@  <|@
tid ?5660 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?543 
values: a1663 a2 - - - i1669 i1672 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1663 a2 - - - i1669 i1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i538 <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3418 
stateDuring: ?5660 
=== Succesors ===
next: v4682 
=== Usages ===
v540 ?539 
=== Predecessor ===
v1659 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3418 stateDuring: ?5660 #next: v4682  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?543 
values: a1663 a2 - - - i1669 i1672 i538 
=== Succesors ===
=== Usages ===
v5913 i6416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1663 a2 - - - i1669 i1672 i538  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i28 
=== Succesors ===
=== Usages ===
v4682 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i538 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v4681 
falseSuccessor: v4678 
=== Usages ===
=== Predecessor ===
i538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v4681 #falseSuccessor: v4678  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5909 
=== Usages ===
=== Predecessor ===
v4682 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5909  <|@  <|@
f <@~|@floating>@ <|@
tid i5910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -875283
stableDimension: 0
stamp: i32 [-875283] ⇊00000000fff2a4ed ⇈00000000fff2a4ed
stampKind: i32
value: int[-875283|0xfffffffffff2a4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5908 
=== Predecessor ===
v4681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B292" "B293" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6415 
=== Usages ===
=== Predecessor ===
v4682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6415 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6416 
=== Usages ===
a3421 v6557 
=== Predecessor ===
v4678 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6416  <|@  <|@
f <@~|@floating>@ <|@
tid v6557 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6415 
=== Succesors ===
=== Usages ===
i6416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6416 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?539 
guard: - 
address: v6557 
=== Succesors ===
next: i6417 
=== Usages ===
v3428 
=== Predecessor ===
a6415 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?539 guard: - address: v6557 #next: i6417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4692 
=== Usages ===
v6558 v3428 
=== Predecessor ===
i6416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4692  <|@  <|@
f <@~|@floating>@ <|@
tid v3428 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6417 
y: i6416 
=== Succesors ===
=== Usages ===
v4692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6417 y: i6416  <|@  <|@
f <@*|@fixed>@ <|@
tid v4692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3428 
=== Succesors ===
trueSuccessor: v4688 
falseSuccessor: v4691 
=== Usages ===
=== Predecessor ===
i6417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3428 #trueSuccessor: v4688 #falseSuccessor: v4691  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B358" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3435 
=== Usages ===
v3435 
=== Predecessor ===
v4692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3435  <|@  <|@
f <@~|@floating>@ <|@
tid a3421 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6415 
=== Succesors ===
=== Usages ===
v6558 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6415  <|@  <|@
f <@~|@floating>@ <|@
tid v6558 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3421 
index: i6417 
=== Succesors ===
=== Usages ===
v3435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3421 index: i6417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4688 
address: v6558 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v4688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4688 address: v6558 value: i6327 stateAfter: - lastLocationAccess: - #next: v1741  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v3435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5916 
=== Usages ===
=== Predecessor ===
v4692 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5916  <|@  <|@
f <@~|@floating>@ <|@
tid i5917 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -877851
stableDimension: 0
stamp: i32 [-877851] ⇊00000000fff29ae5 ⇈00000000fff29ae5
stampKind: i32
value: int[-877851|0xfffffffffff29ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5908 
=== Predecessor ===
v4691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B290" "B293" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5911 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-877851 - -875283] ⇊00000000fff280e5 ⇈00000000fff2bffd
valueDescription: i32
=== Inputs ===
merge: v5908 
values: i5910 i5917 
=== Succesors ===
=== Usages ===
v5913 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5908 values: i5910 i5917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5909 v5916 
=== Succesors ===
next: v5913 
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5909 v5916 #next: v5913  <|@  <|@
f <@*|@fixed>@ <|@
tid v5913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
actionAndReason: i5911 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5908 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?539 actionAndReason: i5911 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5984 
=== Usages ===
=== Predecessor ===
v4647 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5984  <|@  <|@
f <@~|@floating>@ <|@
tid i5985 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -862747
stableDimension: 0
stamp: i32 [-862747] ⇊00000000fff2d5e5 ⇈00000000fff2d5e5
stampKind: i32
value: int[-862747|0xfffffffffff2d5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5982 
=== Usages ===
=== Predecessor ===
v4642 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5982  <|@  <|@
f <@~|@floating>@ <|@
tid i5983 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -860443
stableDimension: 0
stamp: i32 [-860443] ⇊00000000fff2dee5 ⇈00000000fff2dee5
stampKind: i32
value: int[-860443|0xfffffffffff2dee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5976 
=== Usages ===
=== Predecessor ===
v4627 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5976  <|@  <|@
f <@~|@floating>@ <|@
tid i5977 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -851227
stableDimension: 0
stamp: i32 [-851227] ⇊00000000fff302e5 ⇈00000000fff302e5
stampKind: i32
value: int[-851227|0xfffffffffff302e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5972 
=== Usages ===
=== Predecessor ===
v4617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5972  <|@  <|@
f <@~|@floating>@ <|@
tid i5973 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -848435
stableDimension: 0
stamp: i32 [-848435] ⇊00000000fff30dcd ⇈00000000fff30dcd
stampKind: i32
value: int[-848435|0xfffffffffff30dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" "B297" "B275" "B296" "B295" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5969 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-865291 - -848139] ⇊00000000fff200c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v5966 
values: i5973 i5977 i5979 i5983 i5985 
=== Succesors ===
=== Usages ===
v5971 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5966 values: i5973 i5977 i5979 i5983 i5985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5972 v5976 v5978 v5982 v5984 
=== Succesors ===
next: v5971 
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5972 v5976 v5978 v5982 v5984 #next: v5971  <|@  <|@
f <@*|@fixed>@ <|@
tid v5971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1805 
actionAndReason: i5969 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5966 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1805 actionAndReason: i5969 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5762 
=== Usages ===
=== Predecessor ===
v4442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5762  <|@  <|@
f <@~|@floating>@ <|@
tid i5763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -800819
stableDimension: 0
stamp: i32 [-800819] ⇊00000000fff3c7cd ⇈00000000fff3c7cd
stampKind: i32
value: int[-800819|0xfffffffffff3c7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5756 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5756  <|@  <|@
f <@~|@floating>@ <|@
tid i5757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -798259
stableDimension: 0
stamp: i32 [-798259] ⇊00000000fff3d1cd ⇈00000000fff3d1cd
stampKind: i32
value: int[-798259|0xfffffffffff3d1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5750 
=== Usages ===
=== Predecessor ===
v4412 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5750  <|@  <|@
f <@~|@floating>@ <|@
tid i5751 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -795699
stableDimension: 0
stamp: i32 [-795699] ⇊00000000fff3dbcd ⇈00000000fff3dbcd
stampKind: i32
value: int[-795699|0xfffffffffff3dbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5744 
=== Usages ===
=== Predecessor ===
v4397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5744  <|@  <|@
f <@~|@floating>@ <|@
tid i5745 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -793139
stableDimension: 0
stamp: i32 [-793139] ⇊00000000fff3e5cd ⇈00000000fff3e5cd
stampKind: i32
value: int[-793139|0xfffffffffff3e5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5738 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5738  <|@  <|@
f <@~|@floating>@ <|@
tid i5739 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -790579
stableDimension: 0
stamp: i32 [-790579] ⇊00000000fff3efcd ⇈00000000fff3efcd
stampKind: i32
value: int[-790579|0xfffffffffff3efcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5732 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5732  <|@  <|@
f <@~|@floating>@ <|@
tid i5733 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -788019
stableDimension: 0
stamp: i32 [-788019] ⇊00000000fff3f9cd ⇈00000000fff3f9cd
stampKind: i32
value: int[-788019|0xfffffffffff3f9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5726 
=== Usages ===
=== Predecessor ===
v4352 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5726  <|@  <|@
f <@~|@floating>@ <|@
tid i5727 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -785427
stableDimension: 0
stamp: i32 [-785427] ⇊00000000fff403ed ⇈00000000fff403ed
stampKind: i32
value: int[-785427|0xfffffffffff403ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5724 
=== Usages ===
=== Predecessor ===
v4347 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5724  <|@  <|@
f <@~|@floating>@ <|@
tid i5725 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -783387
stableDimension: 0
stamp: i32 [-783387] ⇊00000000fff40be5 ⇈00000000fff40be5
stampKind: i32
value: int[-783387|0xfffffffffff40be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5722 
=== Usages ===
=== Predecessor ===
v4342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5722  <|@  <|@
f <@~|@floating>@ <|@
tid i5723 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -782611
stableDimension: 0
stamp: i32 [-782611] ⇊00000000fff40eed ⇈00000000fff40eed
stampKind: i32
value: int[-782611|0xfffffffffff40eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5716 
=== Usages ===
=== Predecessor ===
v4327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5716  <|@  <|@
f <@~|@floating>@ <|@
tid i5717 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -780083
stableDimension: 0
stamp: i32 [-780083] ⇊00000000fff418cd ⇈00000000fff418cd
stampKind: i32
value: int[-780083|0xfffffffffff418cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5709 
=== Usages ===
=== Predecessor ===
v4317 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5709  <|@  <|@
f <@~|@floating>@ <|@
tid i5710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -779539
stableDimension: 0
stamp: i32 [-779539] ⇊00000000fff41aed ⇈00000000fff41aed
stampKind: i32
value: int[-779539|0xfffffffffff41aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" "B309" "B148" "B308" "B307" "B306" "B156" "B305" "B163" "B304" "B170" "B303" "B177" "B302" "B184" "B301" "B191" "B300" "B198" 
    successors 
    xhandlers
    flags 
    probability 2374241428554383360
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5711 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-803091 - -779539] ⇊00000000fff000c5 ⇈00000000fff7fffd
valueDescription: i32
=== Inputs ===
merge: v5708 
values: i5710 i5717 i5719 i5723 i5725 i5727 i5731 i5733 i5737 i5739 i5743 i5745 i5749 i5751 i5755 i5757 i5761 i5763 i5767 
=== Succesors ===
=== Usages ===
v5713 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5708 values: i5710 i5717 i5719 i5723 i5725 i5727 i5731 i5733 i5737 i5739 i5743 i5745 i5749 i5751 i5755 i5757 i5761 i5763 i5767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5709 v5716 v5718 v5722 v5724 v5726 v5730 v5732 v5736 v5738 v5742 v5744 v5748 v5750 v5754 v5756 v5760 v5762 v5766 
=== Succesors ===
next: v5713 
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5709 v5716 v5718 v5722 v5724 v5726 v5730 v5732 v5736 v5738 v5742 v5744 v5748 v5750 v5754 v5756 v5760 v5762 v5766 #next: v5713  <|@  <|@
f <@*|@fixed>@ <|@
tid v5713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i5711 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5708 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i5711 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B313" "B353" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598337202097469275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v6194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6326 
y: v6171 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6326 y: v6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.59970699517179
=== Inputs ===
condition: v6194 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6194 #trueSuccessor: v156 #falseSuccessor: v159  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B314" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594763984829801405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
?214 ?5645 ?566 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@~|@floating>@ <|@
tid v6622 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
i6418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" "B336" "B332" 
    successors "B315" "B349" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4595909231606444902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i3 i6436 i558 
=== Succesors ===
=== Usages ===
?214 v3521 i558 v545 v971 v6561 v967 v3458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i3 i6436 i558  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i28 i233 i233 
=== Succesors ===
=== Usages ===
?214 v216 v3521 ?566 i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i28 i233 i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2046558316457305
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v210 
=== Succesors ===
next: i6418 
=== Usages ===
i212 i213 v218 v228 v234 v1755 v4784 v4778 v4744 v4738 v4702 v4708 v4750 v4720 v4726 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v210 #next: i6418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6418 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6622 
=== Succesors ===
next: v222 
=== Usages ===
v216 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6622 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i6418 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i213 y: i6418  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a3041 a2 i212 a4 i213 
=== Succesors ===
=== Usages ===
v5825 v6420 v6422 i6424 i6429 v6432 i6434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a3041 a2 i212 a4 i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5533923900859385
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
i6418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v217 #falseSuccessor: v218  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B316" "B347" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6419 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6419  <|@  <|@
f <@~|@floating>@ <|@
tid v6559 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6419 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6559 
=== Succesors ===
next: v6420 
=== Usages ===
v6603 v6566 v6562 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6559 #next: v6420  <|@  <|@
f <@~|@floating>@ <|@
tid v6603 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
v6420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6420 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6603 
=== Succesors ===
next: v4704 
=== Usages ===
v6218 
=== Predecessor ===
a6419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6603 #next: v4704  <|@  <|@
f <@~|@floating>@ <|@
tid v6218 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6420 
y: v6189 
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6420 y: v6189  <|@  <|@
f <@*|@fixed>@ <|@
tid v4704 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6218 
=== Succesors ===
trueSuccessor: v4699 
falseSuccessor: v4702 
=== Usages ===
=== Predecessor ===
v6420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6218 #trueSuccessor: v4699 #falseSuccessor: v4702  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B317" "B345" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6421 
=== Usages ===
=== Predecessor ===
v4704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6421 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4710 
=== Usages ===
v545 
=== Predecessor ===
v4699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4710  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6421 
=== Succesors ===
=== Usages ===
v4710 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i6421  <|@  <|@
f <@*|@fixed>@ <|@
tid v4710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v4705 
falseSuccessor: v4708 
=== Usages ===
=== Predecessor ===
i6421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v4705 #falseSuccessor: v4708  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" "B343" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6422 
=== Usages ===
=== Predecessor ===
v4710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6422 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6577 
=== Succesors ===
next: v4722 
=== Usages ===
v6219 
=== Predecessor ===
v4705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6577 #next: v4722  <|@  <|@
f <@~|@floating>@ <|@
tid v6219 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6422 
y: v6173 
=== Succesors ===
=== Usages ===
v4722 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6422 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4722 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6219 
=== Succesors ===
trueSuccessor: v4717 
falseSuccessor: v4720 
=== Usages ===
=== Predecessor ===
v6422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6219 #trueSuccessor: v4717 #falseSuccessor: v4720  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B319" "B321" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4728 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4728  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i28 
=== Succesors ===
=== Usages ===
v4728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v967 
=== Succesors ===
trueSuccessor: v4726 
falseSuccessor: v4723 
=== Usages ===
=== Predecessor ===
v4717 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v967 #trueSuccessor: v4726 #falseSuccessor: v4723  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B320" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4727 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4727  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B319" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5834 
=== Usages ===
=== Predecessor ===
v4726 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5834  <|@  <|@
f <@~|@floating>@ <|@
tid i5835 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -882451
stableDimension: 0
stamp: i32 [-882451] ⇊00000000fff288ed ⇈00000000fff288ed
stampKind: i32
value: int[-882451|0xfffffffffff288ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B322" "B341" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6423 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6423 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6424 
=== Usages ===
a3450 v6560 
=== Predecessor ===
v4723 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6424  <|@  <|@
f <@~|@floating>@ <|@
tid v6560 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6423 
=== Succesors ===
=== Usages ===
i6424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6424 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6560 
=== Succesors ===
next: v4740 
=== Usages ===
v971 v3458 
=== Predecessor ===
a6423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6560 #next: v4740  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6424 
=== Succesors ===
=== Usages ===
v4740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i6424  <|@  <|@
f <@*|@fixed>@ <|@
tid v4740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v4735 
falseSuccessor: v4738 
=== Usages ===
=== Predecessor ===
i6424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v4735 #falseSuccessor: v4738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B323" "B339" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4746 
=== Usages ===
=== Predecessor ===
v4740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4746  <|@  <|@
f <@~|@floating>@ <|@
tid v3458 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6424 
=== Succesors ===
=== Usages ===
v4746 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i212 y: i6424  <|@  <|@
f <@*|@fixed>@ <|@
tid v4746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3458 
=== Succesors ===
trueSuccessor: v4741 
falseSuccessor: v4744 
=== Usages ===
=== Predecessor ===
v4735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3458 #trueSuccessor: v4741 #falseSuccessor: v4744  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B324" "B337" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6425 
=== Usages ===
i6425 
=== Predecessor ===
v4746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6425  <|@  <|@
f <@~|@floating>@ <|@
tid a3450 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6423 
=== Succesors ===
=== Usages ===
v6561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6423  <|@  <|@
f <@~|@floating>@ <|@
tid v6561 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3450 
index: i212 
=== Succesors ===
=== Usages ===
i6425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3450 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6425 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4741 
address: v6561 
=== Succesors ===
next: v4752 
=== Usages ===
v3913 j3621 
=== Predecessor ===
v4741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4741 address: v6561 #next: v4752  <|@  <|@
f <@~|@floating>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6425 
y: i3912 
=== Succesors ===
=== Usages ===
v4752 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6425 y: i3912  <|@  <|@
f <@*|@fixed>@ <|@
tid v4752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3913 
=== Succesors ===
trueSuccessor: v4747 
falseSuccessor: v4750 
=== Usages ===
=== Predecessor ===
i6425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3913 #trueSuccessor: v4747 #falseSuccessor: v4750  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B325" "B328" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6426 
=== Usages ===
i6427 
=== Predecessor ===
v4752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6426  <|@  <|@
f <@~|@floating>@ <|@
tid v6562 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
i6426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6426 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6562 
=== Succesors ===
next: i6427 
=== Usages ===
v979 
=== Predecessor ===
v4747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6562 #next: i6427  <|@  <|@
f <@~|@floating>@ <|@
tid j3621 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6425 
=== Succesors ===
=== Usages ===
v6563 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6425  <|@  <|@
f <@~|@floating>@ <|@
tid v6563 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1107 
index: j3621 
=== Succesors ===
=== Usages ===
i6427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1107 index: j3621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6427 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4747 
address: v6563 
=== Succesors ===
next: v556 
=== Usages ===
v979 
=== Predecessor ===
i6426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4747 address: v6563 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
x: i6426 
y: i6427 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i6426 y: i6427  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8923207656059002
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
i6427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v228 #falseSuccessor: v555  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B326" "B327" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: a6428 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: a6428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6428 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6429 
=== Usages ===
a3476 v6564 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6429  <|@  <|@
f <@~|@floating>@ <|@
tid v6564 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6428 
=== Succesors ===
=== Usages ===
i6429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6429 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6564 
=== Succesors ===
next: i6430 
=== Usages ===
v3483 
=== Predecessor ===
a6428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6564 #next: i6430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6430 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4762 
=== Usages ===
v6565 v3483 
=== Predecessor ===
i6429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4762  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6430 
y: i6429 
=== Succesors ===
=== Usages ===
v4762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6430 y: i6429  <|@  <|@
f <@*|@fixed>@ <|@
tid v4762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3483 
=== Succesors ===
trueSuccessor: v4758 
falseSuccessor: v4761 
=== Usages ===
=== Predecessor ===
i6430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3483 #trueSuccessor: v4758 #falseSuccessor: v4761  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3490 
=== Usages ===
v3490 
=== Predecessor ===
v4762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3490  <|@  <|@
f <@~|@floating>@ <|@
tid a3476 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6428 
=== Succesors ===
=== Usages ===
v6565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6428  <|@  <|@
f <@~|@floating>@ <|@
tid v6565 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3476 
index: i6430 
=== Succesors ===
=== Usages ===
v3490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3476 index: i6430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4758 
address: v6565 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3906 
=== Usages ===
=== Predecessor ===
v4758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4758 address: v6565 value: i6327 stateAfter: - lastLocationAccess: - #next: v3906  <|@  <|@
tid ?2086 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 i28 
=== Succesors ===
=== Usages ===
v3906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2086 
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v3490 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?2086 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid i6234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i31 
y: i61 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i31 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3906 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5846 
=== Usages ===
=== Predecessor ===
v4762 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5846  <|@  <|@
f <@~|@floating>@ <|@
tid i5847 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -891931
stableDimension: 0
stamp: i32 [-891931] ⇊00000000fff263e5 ⇈00000000fff263e5
stampKind: i32
value: int[-891931|0xfffffffffff263e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B329" "B333" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4577580840296619801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6431 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6431  <|@  <|@
f <@~|@floating>@ <|@
tid v6566 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
a6431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6431 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6566 
=== Succesors ===
next: v6432 
=== Usages ===
a3493 v6604 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6566 #next: v6432  <|@  <|@
f <@~|@floating>@ <|@
tid v6604 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6431 
=== Succesors ===
=== Usages ===
v6432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6432 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6604 
=== Succesors ===
next: v793 
=== Usages ===
v6221 
=== Predecessor ===
a6431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6604 #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v6220 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6432 
y: v6220 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6432 y: v6220  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i213 
y: i61 
=== Succesors ===
=== Usages ===
i213 i213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i61  <|@  <|@
tid ?566 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a3041 a2 - a4 i213 
=== Succesors ===
=== Usages ===
?994 ?561 ?5643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a3041 a2 - a4 i213  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i212 
y: i61 
=== Succesors ===
=== Usages ===
v3515 ?992 v3495 i212 v3514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6632 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3495 i6436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Node; target_method=match target_method_class=Ljava/util/regex/Pattern$Node; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7022928681952456
=== Inputs ===
condition: v6221 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v792 
=== Usages ===
=== Predecessor ===
v6432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6221 #trueSuccessor: v786 #falseSuccessor: v792  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" "B332" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Node; target_method=match target_method_class=Ljava/util/regex/Pattern$Node; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6433 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6433  <|@  <|@
f <@~|@floating>@ <|@
tid v6635 <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6433 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6635 
=== Succesors ===
next: i6434 
=== Usages ===
v6569 v6568 v6567 
=== Predecessor ===
v786 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6635 #next: i6434  <|@  <|@
f <@~|@floating>@ <|@
tid v6567 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
i6434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6434 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6567 
=== Succesors ===
next: v4780 
=== Usages ===
v3904 
=== Predecessor ===
a6433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6567 #next: v4780  <|@  <|@
f <@~|@floating>@ <|@
tid v3904 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6434 
y: i2599 
=== Succesors ===
=== Usages ===
v4780 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6434 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4780 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3904 
=== Succesors ===
trueSuccessor: v4778 
falseSuccessor: v4775 
=== Usages ===
=== Predecessor ===
i6434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3904 #trueSuccessor: v4778 #falseSuccessor: v4775  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B331" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4779 
=== Usages ===
=== Predecessor ===
v4780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4779  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5852 
=== Usages ===
=== Predecessor ===
v4778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5852  <|@  <|@
f <@~|@floating>@ <|@
tid i5853 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -927771
stableDimension: 0
stamp: i32 [-927771] ⇊00000000fff1d7e5 ⇈00000000fff1d7e5
stampKind: i32
value: int[-927771|0xfffffffffff1d7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3495 
=== Usages ===
v3508 v3514 
=== Predecessor ===
v4780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6632 
value: i558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6435 
=== Usages ===
=== Predecessor ===
v4775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6632 value: i558 stateAfter: - lastLocationAccess: - #next: i6435  <|@  <|@
f <@~|@floating>@ <|@
tid v6629 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 11]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6629 
=== Succesors ===
next: v3508 
=== Usages ===
v3508 
=== Predecessor ===
v3495 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6629 #next: v3508  <|@  <|@
f <@~|@floating>@ <|@
tid v6568 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
v3508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4775 
address: v6568 
value: i6435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3514 
=== Usages ===
=== Predecessor ===
i6435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4775 address: v6568 value: i6435 stateAfter: - lastLocationAccess: - #next: v3514  <|@  <|@
f <@~|@floating>@ <|@
tid v6569 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
v3514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4775 
address: v6569 
value: i558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3907 
=== Usages ===
=== Predecessor ===
v3508 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4775 address: v6569 value: i558 stateAfter: - lastLocationAccess: - #next: v3907  <|@  <|@
tid ?994 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?566 
values: - - - - 
=== Succesors ===
=== Usages ===
?992 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - -  <|@  <|@
tid ?992 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Pattern$Node.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3412
stackSize: 0
=== Inputs ===
outerFrameState: ?994 
values: - a2 i558 - 
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?994 values: - a2 i558 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?992 
=== Succesors ===
next: v1755 
=== Usages ===
=== Predecessor ===
v3514 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?992 #next: v1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v211 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3907 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B334" "B336" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i560 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i560  <|@  <|@
f <@~|@floating>@ <|@
tid a3493 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6431 
=== Succesors ===
=== Usages ===
v3515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6431  <|@  <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@37b45ffe
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a3493 a2 i558 a4 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3493 a2 i558 a4  <|@  <|@
tid ?5643 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?566 
values: - - - - 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i560 <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3515 
stateDuring: ?5643 
=== Succesors ===
next: v4786 
=== Usages ===
v562 
=== Predecessor ===
v792 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3515 stateDuring: ?5643 #next: v4786  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i28 
=== Succesors ===
=== Usages ===
v4786 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i560 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v4784 
falseSuccessor: v4781 
=== Usages ===
=== Predecessor ===
i560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v4784 #falseSuccessor: v4781  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B335" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4785 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4785  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B334" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4782 
=== Usages ===
=== Predecessor ===
v4784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4782  <|@  <|@
tid ?561 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?566 
values: - - - - i28 
=== Succesors ===
=== Usages ===
v4782 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4782 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 3516
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?561 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4785 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?561  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6436 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6436 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6632 
=== Succesors ===
next: v234 
=== Usages ===
i212 
=== Predecessor ===
v4781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6632 #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v211 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6436 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v211  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B338" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4751 
=== Usages ===
=== Predecessor ===
v4752 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4751  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B337" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5842 
=== Usages ===
=== Predecessor ===
v4750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5842  <|@  <|@
f <@~|@floating>@ <|@
tid i5843 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -887571
stableDimension: 0
stamp: i32 [-887571] ⇊00000000fff274ed ⇈00000000fff274ed
stampKind: i32
value: int[-887571|0xfffffffffff274ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B340" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4745 
=== Usages ===
=== Predecessor ===
v4746 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4745  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5840 
=== Usages ===
=== Predecessor ===
v4744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5840  <|@  <|@
f <@~|@floating>@ <|@
tid i5841 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -885531
stableDimension: 0
stamp: i32 [-885531] ⇊00000000fff27ce5 ⇈00000000fff27ce5
stampKind: i32
value: int[-885531|0xfffffffffff27ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4739 
=== Usages ===
=== Predecessor ===
v4740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4739  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B341" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5838 
=== Usages ===
=== Predecessor ===
v4738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5838  <|@  <|@
f <@~|@floating>@ <|@
tid i5839 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -884755
stableDimension: 0
stamp: i32 [-884755] ⇊00000000fff27fed ⇈00000000fff27fed
stampKind: i32
value: int[-884755|0xfffffffffff27fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B344" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4721 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B343" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5832 
=== Usages ===
=== Predecessor ===
v4720 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5832  <|@  <|@
f <@~|@floating>@ <|@
tid i5833 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -882227
stableDimension: 0
stamp: i32 [-882227] ⇊00000000fff289cd ⇈00000000fff289cd
stampKind: i32
value: int[-882227|0xfffffffffff289cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B346" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4709 
=== Usages ===
=== Predecessor ===
v4710 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B345" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5828 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5828  <|@  <|@
f <@~|@floating>@ <|@
tid i5829 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -881683
stableDimension: 0
stamp: i32 [-881683] ⇊00000000fff28bed ⇈00000000fff28bed
stampKind: i32
value: int[-881683|0xfffffffffff28bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B348" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4703 
=== Usages ===
=== Predecessor ===
v4704 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4703  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B347" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5826 
=== Usages ===
=== Predecessor ===
v4702 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5826  <|@  <|@
f <@~|@floating>@ <|@
tid i5827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -881203
stableDimension: 0
stamp: i32 [-881203] ⇊00000000fff28dcd ⇈00000000fff28dcd
stampKind: i32
value: int[-881203|0xfffffffffff28dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4703 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B350" "B351" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: i6437 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: i6437  <|@  <|@
f <@~|@floating>@ <|@
tid v6623 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
i6437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6437 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6623 
=== Succesors ===
next: v4791 
=== Usages ===
v237 
=== Predecessor ===
v218 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6623 #next: v4791  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6437 
y: i28 
=== Succesors ===
=== Usages ===
v4791 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6437 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4791 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v4787 
falseSuccessor: v4790 
=== Usages ===
=== Predecessor ===
i6437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v4787 #falseSuccessor: v4790  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i240 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i240  <|@  <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6179c3a2
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a3041 a2 i212 i213 a4 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3041 a2 i212 i213 a4  <|@  <|@
tid ?5645 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: - - - - - 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i240 <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3521 
stateDuring: ?5645 
=== Succesors ===
next: v1468 
=== Usages ===
i140 
=== Predecessor ===
v4787 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3521 stateDuring: ?5645 #next: v1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
i240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5854 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5854  <|@  <|@
f <@~|@floating>@ <|@
tid i5855 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -901139
stableDimension: 0
stamp: i32 [-901139] ⇊00000000fff23fed ⇈00000000fff23fed
stampKind: i32
value: int[-901139|0xfffffffffff23fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B348" "B346" "B344" "B320" "B342" "B340" "B338" "B327" "B331" "B351" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5823 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-927771 - -880907] ⇊00000000fff000c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v5820 
values: i5827 i5829 i5833 i5835 i5839 i5841 i5843 i5847 i5853 i5855 
=== Succesors ===
=== Usages ===
v5825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5820 values: i5827 i5829 i5833 i5835 i5839 i5841 i5843 i5847 i5853 i5855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5826 v5828 v5832 v5834 v5838 v5840 v5842 v5846 v5852 v5854 
=== Succesors ===
next: v5825 
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5826 v5828 v5832 v5834 v5838 v5840 v5842 v5846 v5852 v5854 #next: v5825  <|@  <|@
f <@*|@fixed>@ <|@
tid v5825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?214 
actionAndReason: i5823 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5820 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?214 actionAndReason: i5823 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592134820302886386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3524 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3524  <|@  <|@
f <@~|@floating>@ <|@
tid v6570 <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v6326 
=== Succesors ===
=== Usages ===
v3524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v6326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3524 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v6570 
=== Succesors ===
next: j3526 
=== Usages ===
v6571 v3527 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6570 #next: j3526  <|@  <|@
f <@~|@floating>@ <|@
tid v6571 <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v3524 
index: - 
=== Succesors ===
=== Usages ===
j3526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3526 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6571 
=== Succesors ===
next: i112 
=== Usages ===
v3527 
=== Predecessor ===
v3524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6571 #next: i112  <|@  <|@
tid v3527 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@65f9f23f
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j3526 
metaspaceMethod: v3524 
arguments: a3041 a2 i3 a4 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j3526 metaspaceMethod: v3524 arguments: a3041 a2 i3 a4  <|@  <|@
tid ?5644 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i112 <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3527 
stateDuring: ?5644 
=== Succesors ===
next: v139 
=== Usages ===
i140 
=== Predecessor ===
j3526 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3527 stateDuring: ?5644 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
i112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B353" "B350" 
    successors "B355" "B360" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i140 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v137 
values: i112 i240 
=== Succesors ===
=== Usages ===
?138 v56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v137 values: i112 i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v1468 
=== Succesors ===
next: a6438 
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v1468 #next: a6438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6438 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6439 
=== Usages ===
a3529 v6572 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6439  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - i140 
=== Succesors ===
=== Usages ===
v5809 i6439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 - i140  <|@  <|@
f <@~|@floating>@ <|@
tid v6572 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6438 
=== Succesors ===
=== Usages ===
i6439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6439 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v6572 
=== Succesors ===
next: i6440 
=== Usages ===
v3536 
=== Predecessor ===
a6438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v6572 #next: i6440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6440 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4801 
=== Usages ===
v6573 v3536 
=== Predecessor ===
i6439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4801  <|@  <|@
f <@~|@floating>@ <|@
tid v3536 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6440 
y: i6439 
=== Succesors ===
=== Usages ===
v4801 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6440 y: i6439  <|@  <|@
f <@*|@fixed>@ <|@
tid v4801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3536 
=== Succesors ===
trueSuccessor: v4797 
falseSuccessor: v4800 
=== Usages ===
=== Predecessor ===
i6440 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3536 #trueSuccessor: v4797 #falseSuccessor: v4800  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors "B356" "B357" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3543 
=== Usages ===
v3543 
=== Predecessor ===
v4801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3543  <|@  <|@
f <@~|@floating>@ <|@
tid a3529 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6438 
=== Succesors ===
=== Usages ===
v6573 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6438  <|@  <|@
f <@~|@floating>@ <|@
tid v6573 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3529 
index: i6440 
=== Succesors ===
=== Usages ===
v3543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3529 index: i6440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4797 
address: v6573 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v4797 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4797 address: v6573 value: i6327 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i28 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i140 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7328374790421298
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v1737  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594111651120888596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3905 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3905  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 i28 
=== Succesors ===
=== Usages ===
v3905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?117 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?117 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i31 
y: i61 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i31 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3905 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B358" 
    xhandlers
    flags 
    probability 4587369802088720489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B357" "B292" "B285" 
    successors "B359" 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1739 v1741 v2338 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1739 v1741 v2338 #next: v58  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B358" 
    successors 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v1466 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i61 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i61 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5809 
=== Usages ===
=== Predecessor ===
v4801 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5809  <|@  <|@
f <@~|@floating>@ <|@
tid i5811 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -905499
stableDimension: 0
stamp: i32 [-905499] ⇊00000000fff22ee5 ⇈00000000fff22ee5
stampKind: i32
value: int[-905499|0xfffffffffff22ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i5811 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4800 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i5811 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5704 
=== Usages ===
=== Predecessor ===
v4307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5704  <|@  <|@
f <@~|@floating>@ <|@
tid i5705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -776219
stableDimension: 0
stamp: i32 [-776219] ⇊00000000fff427e5 ⇈00000000fff427e5
stampKind: i32
value: int[-776219|0xfffffffffff427e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v4306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5698 
=== Usages ===
=== Predecessor ===
v4292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5698  <|@  <|@
f <@~|@floating>@ <|@
tid i5699 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -770355
stableDimension: 0
stamp: i32 [-770355] ⇊00000000fff43ecd ⇈00000000fff43ecd
stampKind: i32
value: int[-770355|0xfffffffffff43ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v4291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B363"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5684 
=== Usages ===
=== Predecessor ===
v3940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5684  <|@  <|@
f <@~|@floating>@ <|@
tid i5685 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -664603
stableDimension: 0
stamp: i32 [-664603] ⇊00000000fff5dbe5 ⇈00000000fff5dbe5
stampKind: i32
value: int[-664603|0xfffffffffff5dbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B364"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5677 
=== Usages ===
=== Predecessor ===
v3930 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5677  <|@  <|@
f <@~|@floating>@ <|@
tid i5678 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -661779
stableDimension: 0
stamp: i32 [-661779] ⇊00000000fff5e6ed ⇈00000000fff5e6ed
stampKind: i32
value: int[-661779|0xfffffffffff5e6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B365"
    from_bci -1
    to_bci -1
    predecessors "B364" "B363" "B137" "B362" "B361" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5679 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-778763 - -661779] ⇊00000000fff400c5 ⇈00000000fff5fffd
valueDescription: i32
=== Inputs ===
merge: v5676 
values: i5678 i5685 i5695 i5699 i5705 
=== Succesors ===
=== Usages ===
v5681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5676 values: i5678 i5685 i5695 i5699 i5705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5677 v5684 v5694 v5698 v5704 
=== Succesors ===
next: v5681 
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5677 v5684 v5694 v5698 v5704 #next: v5681  <|@  <|@
f <@*|@fixed>@ <|@
tid v5681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i5679 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5676 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i5679 speculation: a5670  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B366"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v5673 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5673  <|@  <|@
f <@~|@floating>@ <|@
tid i5675 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -660787
stableDimension: 0
stamp: i32 [-660787] ⇊00000000fff5eacd ⇈00000000fff5eacd
stampKind: i32
value: int[-660787|0xfffffffffff5eacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i5675 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3924 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i5675 speculation: a5670  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B366" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a6237 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/regex/Pattern$BranchConn;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 v6441 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6441 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a6237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6237 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 1]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6441 
=== Succesors ===
next: v6238 
=== Usages ===
?136 v6574 v6442 v6443 v6446 ?5642 ?88 ?119 ?32 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6441 #next: v6238  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a# Ljava/util/regex/Matcher;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5660 ?117 ?88 ?5644 ?136 v6488 ?1657 ?109 v3527 ?5658 ?5642 v6487 v3515 ?126 v2979 ?5647 v2918 ?138 ?539 ?209 ?243 ?683 ?163 ?656 ?270 ?304 ?1603 ?2086 v2965 ?195 ?333 ?214 ?275 ?566 v2971 v3418 v3521 v6486 ?992 ?256 ?400 v6448 v6453 v6469 v6628 v6629 v6630 v6631 v6632 v6633 v6634 v6635 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3 <|@
result v2|DWORD <|@
d <@d|@=== Debug Properties ===
index: 2
stamp: i32
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5642 v3527 ?88 v2979 ?136 v3038 ?109 v2646 ?126 v692 i212 i263 i273 v188 v799 v6507 ?195 ?333 v249 v795 v6456 ?256 ?400 v2667 v3059 i6235 v6236 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a4 <|@
result v3|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 3
stamp: a -
uncheckedStamp: a Ljava/lang/CharSequence;
=== Inputs ===
=== Succesors ===
=== Usages ===
?5 ?119 ?32 v2996 ?5642 v3527 ?88 v2979 ?136 ?109 ?126 v3418 v3521 v2918 v2971 ?1603 v2965 ?195 ?333 ?214 ?683 ?566 ?1657 v3515 v6454 ?256 ?400 ?275 v6577 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?5 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 i3 a4 
=== Succesors ===
=== Usages ===
v5673 v6238 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 i3 a4  <|@  <|@
f <@~|@floating>@ <|@
tid v6574 <|@
result [v4|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
v6238 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6238 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?5 
guard: - 
address: v6574 
=== Succesors ===
next: v3925 
=== Usages ===
v6166 
=== Predecessor ===
a6237 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?5 guard: - address: v6574 #next: v3925  <|@  <|@
f <@~|@floating>@ <|@
tid v6165 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6166 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6166 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6238 
y: v6165 
=== Succesors ===
=== Usages ===
v3925 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6238 y: v6165  <|@  <|@
f <@~|@floating>@ <|@
tid v6189 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6190 v6218 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6171 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6172 v6194 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2599 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3883 v3902 v3904 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6185 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6186 v6188 v6215 v6217 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6183 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6184 v6187 v6212 v6216 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a5670 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5673 v6051 v5957 v5773 v5971 v5713 v5817 v5825 v5993 v6015 v5923 v5913 v5809 v5885 v5935 v5681 v5947 v5861 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3915 <|@
result short[256|0x100] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 256
stableDimension: 0
stamp: i16 [256] ⇊0000000000000100 ⇈0000000000000100
stampKind: i16
value: short[256|0x100]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3916 v3917 v6226 v6227 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6181 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6182 v6209 v6211 v6214 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6175 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6176 v6178 v6180 v6196 v6198 v6200 v6202 v6204 v6206 v6208 v6210 v6213 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3909 <|@
result short[-10240|0xffffffffffffd800] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: -10240
stableDimension: 0
stamp: i16 [-10240] ⇊000000000000d800 ⇈000000000000d800
stampKind: i16
value: short[-10240|0xffffffffffffd800]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3910 v3911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6454 <|@
result [v3|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
a6254 a6310 a6330 a6423 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6173 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6174 v6191 v6195 v6219 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6577 <|@
result [v3|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a4 
index: - 
=== Succesors ===
=== Usages ===
v6253 v6309 v6329 v6422 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a4 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6453 <|@
result [v1|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6252 i6328 i6421 i6308 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6169 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6170 v6177 v6179 v6193 v6197 v6199 v6201 v6203 v6205 v6207 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6448 <|@
result [v1|QWORD[.] + 60] <|@
d <@d|@=== Debug Properties ===
displacement: 60
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6246 a6278 a6291 a6318 a6322 a6380 a6399 a6415 a6428 a6438 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v6167 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6168 v6192 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v3925 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6166 
=== Succesors ===
trueSuccessor: v3922 
falseSuccessor: v3924 
=== Usages ===
=== Predecessor ===
v6238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6166 #trueSuccessor: v3922 #falseSuccessor: v3924  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3922 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v29 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v29  <|@  <|@
f <@~|@floating>@ <|@
tid v6443 <|@
result [v4|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
a6240 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid v6442 <|@
result [v4|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
i6239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@~|@floating>@ <|@
tid a1107 <|@
result v5|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 7]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: int[128]{8192, 8192, 8192, 8192, 8192, ...}
stableDimension: 0
stamp: a!# [I
stampKind: a -
value: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v6563 v6496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3912 <|@
result short[128|0x80] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 128
stableDimension: 0
stamp: i16 [128] ⇊0000000000000080 ⇈0000000000000080
stampKind: i16
value: short[128|0x80]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3913 v3914 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i61 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i62 v1466 v1465 i1858 i233 i165 i294 i1858 i466 i1642 i263 i466 i533 i1808 i558 i1808 i1808 i650 i1808 i675 i1808 i1808 i1858 i1808 i1696 v953 i1808 i6235 i1858 i1808 i1808 i1858 v1034 i6234 i165 i1808 i1808 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?66 <|@
d <@d|@=== Debug Properties ===
bci: 7
code: ResolvedJavaMethodBytecode<Pattern$BranchConn.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4570
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - - - - 
=== Succesors ===
=== Usages ===
?32 ?5642 ?136 ?119 ?88 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid i28 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 0]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
i31 v47 v56 v196 ?1430 i213 v1402 v237 ?2086 v257 ?1288 i274 ?1220 v298 i165 v1247 v323 v1634 v390 ?1154 v518 v540 v1122 v562 ?2159 ?1008 v635 v657 v1076 v679 v1337 v1048 v709 v795 v816 ?2093 ?1529 v1513 v967 ?2110 v1688 ?591 v6236 ?656 ?678 ?88 ?195 ?561 ?117 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v29 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v30 
=== Predecessor ===
v3922 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v5|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B356" "B326" 
    successors "B3" "B364" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i31 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v30 
values: i28 i62 i6234 
=== Succesors ===
=== Usages ===
?32 v34 v6445 ?5642 v2999 ?119 i62 ?88 ?136 i6234 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v30 values: i28 i62 i6234  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v30 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.7323718579767724
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v29 
=== Succesors ===
next: i6239 
=== Usages ===
i31 v49 v58 v63 v2088 v4800 v4506 v4790 v3929 v4441 v3939 v4727 v4721 v4596 v4709 v3964 v4703 v3974 v4436 v3984 v3989 v4631 v3999 v4004 v4009 v4626 v4019 v4024 v4501 v4034 v4039 v4616 v4049 v4581 v4761 v4745 v4521 v4074 v4079 v4084 v4641 v4094 v4566 v4104 v4109 v4561 v4119 v4124 v4451 v4511 v4139 v4481 v4149 v4154 v4646 v4164 v4169 v4739 v4179 v4785 v4189 v4194 v4551 v4206 v4212 v4546 v4224 v4230 v4586 v4242 v4248 v4254 v4536 v4266 v4271 v4606 v4281 v4286 v4291 v4601 v4691 v4306 v4751 v4316 v4681 v4326 v4331 v4676 v4341 v4346 v4351 v4671 v4361 v4366 v4576 v4376 v4381 v4779 v4391 v4396 v4656 v4406 v4411 v4491 v4421 v4426 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v29 #next: i6239  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6239 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.size
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 6]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6442 
=== Succesors ===
next: v3930 
=== Usages ===
v34 
=== Predecessor ===
v30 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6442 #next: v3930  <|@  <|@
f <@~|@floating>@ <|@
tid v34 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i6239 
=== Succesors ===
=== Usages ===
v3930 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i31 y: i6239  <|@  <|@
tid ?32 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4602
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
v5681 i6241 a6244 v6245 a6246 i6247 v6250 a6322 i6323 v6326 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v3930 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v34 
=== Succesors ===
trueSuccessor: v3926 
falseSuccessor: v3929 
=== Usages ===
=== Predecessor ===
i6239 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v34 #trueSuccessor: v3926 #falseSuccessor: v3929  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B363" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3926 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6240 
=== Usages ===
=== Predecessor ===
v3930 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6240 <|@
result v8|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.atoms
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n [Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6443 
=== Succesors ===
next: i6241 
=== Usages ===
a2589 v6444 
=== Predecessor ===
v3926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6443 #next: i6241  <|@  <|@
f <@~|@floating>@ <|@
tid v6444 <|@
result [v8|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6240 
=== Succesors ===
=== Usages ===
i6241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6241 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6444 
=== Succesors ===
next: v3940 
=== Usages ===
v2999 
=== Predecessor ===
a6240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6444 #next: v3940  <|@  <|@
f <@~|@floating>@ <|@
tid v2999 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 46]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i31 
y: i6241 
=== Succesors ===
=== Usages ===
v3940 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i31 y: i6241  <|@  <|@
f <@*|@fixed>@ <|@
tid v3940 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2999 
=== Succesors ===
trueSuccessor: v3936 
falseSuccessor: v3939 
=== Usages ===
=== Predecessor ===
i6241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2999 #trueSuccessor: v3936 #falseSuccessor: v3939  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v4|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v6|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3936 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6242 
=== Usages ===
a6242 
=== Predecessor ===
v3940 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6242  <|@  <|@
f <@~|@floating>@ <|@
tid a2589 <|@
result v9|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 13]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a [Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6240 
=== Succesors ===
=== Usages ===
v6445 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6240  <|@  <|@
f <@~|@floating>@ <|@
tid v6445 <|@
result [v9|QWORD[.] + v6|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2589 
index: i31 
=== Succesors ===
=== Usages ===
a6242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2589 index: i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6242 <|@
result v10|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: Object
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: v3936 
address: v6445 
=== Succesors ===
next: v41 
=== Usages ===
v3546 ?2086 v6502 v6505 v6587 ?5644 ?209 ?117 ?138 ?243 ?109 
=== Predecessor ===
v3936 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3936 address: v6445 #next: v41  <|@  <|@
f <@~|@floating>@ <|@
tid v3546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
value: a6242 
=== Succesors ===
=== Usages ===
v41 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a6242  <|@  <|@
f <@*|@fixed>@ <|@
tid v41 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 19]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.4231234893543153
=== Inputs ===
condition: v3546 
=== Succesors ===
trueSuccessor: v39 
falseSuccessor: v40 
=== Usages ===
=== Predecessor ===
a6242 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3546 #trueSuccessor: v39 #falseSuccessor: v40  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B138" 
    xhandlers
    flags 
    probability 4604777561679676257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v39 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 22]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6243 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6243  <|@  <|@
f <@~|@floating>@ <|@
tid v6446 <|@
result [v4|DWORD[.] * 8 + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6237 
=== Succesors ===
=== Usages ===
a6243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6237  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6243 <|@
result v11|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Branch.conn
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 23]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6446 
=== Succesors ===
next: a6244 
=== Usages ===
v6447 
=== Predecessor ===
v39 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6446 #next: a6244  <|@  <|@
f <@~|@floating>@ <|@
tid v6447 <|@
result [v11|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6243 
=== Succesors ===
=== Usages ===
a6244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6244 <|@
result v12|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6447 
=== Succesors ===
next: v6245 
=== Usages ===
a2614 v6575 v6449 v6452 
=== Predecessor ===
a6243 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6447 #next: v6245  <|@  <|@
f <@~|@floating>@ <|@
tid v6575 <|@
result [v12|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
v6245 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6245 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6575 
=== Succesors ===
next: v101 
=== Usages ===
v6168 
=== Predecessor ===
a6244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6575 #next: v101  <|@  <|@
f <@~|@floating>@ <|@
tid v6168 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6245 
y: v6167 
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6245 y: v6167  <|@  <|@
f <@~|@floating>@ <|@
tid a2614 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 26]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6244 
=== Succesors ===
=== Usages ===
?270 v2996 ?126 ?163 ?5647 ?304 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6244  <|@  <|@
f <@*|@fixed>@ <|@
tid v101 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.2729733862503736
=== Inputs ===
condition: v6168 
=== Succesors ===
trueSuccessor: v94 
falseSuccessor: v100 
=== Usages ===
=== Predecessor ===
v6245 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6168 #trueSuccessor: v94 #falseSuccessor: v100  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v4|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v12|DWORD[.] = MOV [v11|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v12|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B137" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v94 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6246 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6246 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6448 
=== Succesors ===
next: i6247 
=== Usages ===
a2622 v6450 
=== Predecessor ===
v94 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6448 #next: i6247  <|@  <|@
f <@~|@floating>@ <|@
tid v6450 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6246 
=== Succesors ===
=== Usages ===
i6247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6246  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6247 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6450 
=== Succesors ===
next: i6248 
=== Usages ===
v2639 
=== Predecessor ===
a6246 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6450 #next: i6248  <|@  <|@
f <@~|@floating>@ <|@
tid v6449 <|@
result [v12|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
i6248 i6320 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6248 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6449 
=== Succesors ===
next: v3965 
=== Usages ===
v2639 v6451 
=== Predecessor ===
i6247 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6449 #next: v3965  <|@  <|@
f <@~|@floating>@ <|@
tid v2639 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6248 
y: i6247 
=== Succesors ===
=== Usages ===
v3965 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6248 y: i6247  <|@  <|@
f <@*|@fixed>@ <|@
tid v3965 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2639 
=== Succesors ===
trueSuccessor: v3961 
falseSuccessor: v3964 
=== Usages ===
=== Predecessor ===
i6248 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2639 #trueSuccessor: v3961 #falseSuccessor: v3964  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B99" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3961 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6249 
=== Usages ===
i6251 v2646 
=== Predecessor ===
v3965 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6249  <|@  <|@
f <@~|@floating>@ <|@
tid v6452 <|@
result [v12|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6244 
=== Succesors ===
=== Usages ===
a6249 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6244  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6249 <|@
result v17|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6452 
=== Succesors ===
next: v6250 
=== Usages ===
a2649 v6576 v6457 v6464 v6465 v6492 v6626 v6627 
=== Predecessor ===
v3961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6452 #next: v6250  <|@  <|@
f <@~|@floating>@ <|@
tid v6576 <|@
result [v17|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
v6250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6250 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6576 
=== Succesors ===
next: i6251 
=== Usages ===
v6498 v6170 v6172 
=== Predecessor ===
a6249 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6576 #next: i6251  <|@  <|@
f <@~|@floating>@ <|@
tid a2622 <|@
result v19|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6246 
=== Succesors ===
=== Usages ===
v6451 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6246  <|@  <|@
f <@~|@floating>@ <|@
tid v6451 <|@
result [v19|QWORD[.] + v16|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2622 
index: i6248 
=== Succesors ===
=== Usages ===
v2646 i6251 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2622 index: i6248  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6251 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v3961 
address: v6451 
=== Succesors ===
next: v2646 
=== Usages ===
?126 ?5647 v2995 ?304 ?163 ?270 
=== Predecessor ===
v6250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v3961 address: v6451 #next: v2646  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v3961 
address: v6451 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v176 
=== Usages ===
=== Predecessor ===
i6251 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v3961 address: v6451 value: i3 stateAfter: - lastLocationAccess: - #next: v176  <|@  <|@
f <@~|@floating>@ <|@
tid v6170 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6250 
y: v6169 
=== Succesors ===
=== Usages ===
v176 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6250 y: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid a2649 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6249 
=== Succesors ===
=== Usages ===
?683 v2979 ?826 ?1855 ?275 ?591 ?400 ?256 v2971 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6249  <|@  <|@
tid ?136 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
?126 ?5647 ?304 ?163 ?270 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7408435024506907
=== Inputs ===
condition: v6170 
=== Succesors ===
trueSuccessor: v169 
falseSuccessor: v175 
=== Usages ===
=== Predecessor ===
v2646 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6170 #trueSuccessor: v169 #falseSuccessor: v175  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v16|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B97" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6252 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6252  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6252 <|@
result v22|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v3975 
=== Usages ===
v249 
=== Predecessor ===
v169 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v3975  <|@  <|@
f <@~|@floating>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6252 
=== Succesors ===
=== Usages ===
v3975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6252  <|@  <|@
tid ?126 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 i3 a4 i6251 - 
=== Succesors ===
=== Usages ===
v5773 v6253 i6255 v6258 v6262 v6266 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 i3 a4 i6251 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v3975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v249 
=== Succesors ===
trueSuccessor: v3971 
falseSuccessor: v3974 
=== Usages ===
=== Predecessor ===
i6252 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v249 #trueSuccessor: v3971 #falseSuccessor: v3974  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B96" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3971 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6253 
=== Usages ===
=== Predecessor ===
v3975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6253  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6253 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6577 
=== Succesors ===
next: v3985 
=== Usages ===
v6174 
=== Predecessor ===
v3971 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6577 #next: v3985  <|@  <|@
f <@~|@floating>@ <|@
tid v6174 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6253 
y: v6173 
=== Succesors ===
=== Usages ===
v3985 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6253 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v3985 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6174 
=== Succesors ===
trueSuccessor: v3981 
falseSuccessor: v3984 
=== Usages ===
=== Predecessor ===
v6253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6174 #trueSuccessor: v3981 #falseSuccessor: v3984  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3981 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3990 
=== Usages ===
=== Predecessor ===
v3985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3990  <|@  <|@
f <@~|@floating>@ <|@
tid v795 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v3990 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v3990 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v795 
=== Succesors ===
trueSuccessor: v3989 
falseSuccessor: v3986 
=== Usages ===
=== Predecessor ===
v3981 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v795 #trueSuccessor: v3989 #falseSuccessor: v3986  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5778 
=== Usages ===
=== Predecessor ===
v3990 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5778  <|@  <|@
f <@~|@floating>@ <|@
tid i5779 <|@
result int[-679955|0xfffffffffff59fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679955
stableDimension: 0
stamp: i32 [-679955] ⇊00000000fff59fed ⇈00000000fff59fed
stampKind: i32
value: int[-679955|0xfffffffffff59fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3989 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679955|0xfffffffffff59fed]] destination: B11 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B95" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3986 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6254 
=== Usages ===
=== Predecessor ===
v3990 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6254 <|@
result v23|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6255 
=== Usages ===
a2659 v6455 
=== Predecessor ===
v3986 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6255  <|@  <|@
f <@~|@floating>@ <|@
tid v6455 <|@
result [v23|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6254 
=== Succesors ===
=== Usages ===
i6255 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6254  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6255 <|@
result v24|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6455 
=== Succesors ===
next: v4000 
=== Usages ===
v799 v2667 
=== Predecessor ===
a6254 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6455 #next: v4000  <|@  <|@
f <@~|@floating>@ <|@
tid v799 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6255 
=== Succesors ===
=== Usages ===
v4000 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6255  <|@  <|@
f <@*|@fixed>@ <|@
tid v4000 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v799 
=== Succesors ===
trueSuccessor: v3996 
falseSuccessor: v3999 
=== Usages ===
=== Predecessor ===
i6255 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v799 #trueSuccessor: v3996 #falseSuccessor: v3999  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B94" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4005 
=== Usages ===
=== Predecessor ===
v4000 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4005  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6255 
=== Succesors ===
=== Usages ===
v4005 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i6255  <|@  <|@
f <@*|@fixed>@ <|@
tid v4005 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v4001 
falseSuccessor: v4004 
=== Usages ===
=== Predecessor ===
v3996 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v4001 #falseSuccessor: v4004  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B93" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4001 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6256 
=== Usages ===
i6256 
=== Predecessor ===
v4005 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6256  <|@  <|@
f <@~|@floating>@ <|@
tid a2659 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6254 
=== Succesors ===
=== Usages ===
v6456 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6254  <|@  <|@
f <@~|@floating>@ <|@
tid v6456 <|@
result [v25|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2659 
index: i3 
=== Succesors ===
=== Usages ===
i6256 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2659 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6256 <|@
result v26|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4001 
address: v6456 
=== Succesors ===
next: v4010 
=== Usages ===
i2675 j3563 v3911 v3917 
=== Predecessor ===
v4001 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4001 address: v6456 #next: v4010  <|@  <|@
f <@~|@floating>@ <|@
tid v3911 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6256 
y: i3909 
=== Succesors ===
=== Usages ===
v4010 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6256 y: i3909  <|@  <|@
f <@*|@fixed>@ <|@
tid v4010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3911 
=== Succesors ===
trueSuccessor: v4006 
falseSuccessor: v4009 
=== Usages ===
=== Predecessor ===
i6256 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3911 #trueSuccessor: v4006 #falseSuccessor: v4009  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4006 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6257 
=== Usages ===
=== Predecessor ===
v4010 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6257  <|@  <|@
f <@~|@floating>@ <|@
tid v6457 <|@
result [v17|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6257 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6257 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6457 
=== Succesors ===
next: v6258 
=== Usages ===
?1008 v6578 v6458 v6459 ?1132 v6625 
=== Predecessor ===
v4006 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6457 #next: v6258  <|@  <|@
f <@~|@floating>@ <|@
tid v6578 <|@
result [v27|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
v6258 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6258 <|@
result v28|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6578 
=== Succesors ===
next: v604 
=== Usages ===
v6177 v6176 
=== Predecessor ===
a6257 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6578 #next: v604  <|@  <|@
f <@~|@floating>@ <|@
tid v6176 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6258 
y: v6175 
=== Succesors ===
=== Usages ===
v604 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6258 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6458 <|@
result [v27|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
i6259 a6261 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
?660 ?256 ?400 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@~|@floating>@ <|@
tid i2675 <|@
result v29|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6256 
=== Succesors ===
=== Usages ===
v2808 ?5649 v2816 ?826 v1317 ?1855 v1313 ?256 ?400 ?591 v2706 v999 ?1220 ?1132 v2720 v1211 v995 ?1008 v2713 v1207 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6256  <|@  <|@
tid ?400 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?270 
values: a2649 a2 i3 a4 i2675 
=== Succesors ===
=== Usages ===
?826 ?5652 ?591 ?1855 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: a2649 a2 i3 a4 i2675  <|@  <|@
tid ?660 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?270 
values: - - - - - 
=== Succesors ===
=== Usages ===
?5658 ?1603 ?656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v6465 <|@
result [v17|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6276 a6289 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@~|@floating>@ <|@
tid i263 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i3 
y: i61 
=== Succesors ===
=== Usages ===
v2918 v2917 v2794 v2882 ?1603 v2892 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6469 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6282 a6295 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v604 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6176 
=== Succesors ===
trueSuccessor: v597 
falseSuccessor: v603 
=== Usages ===
=== Predecessor ===
v6258 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6176 #trueSuccessor: v597 #falseSuccessor: v603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590005314200476746
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6259 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6259  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6259 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6458 
=== Succesors ===
next: v998 
=== Usages ===
v995 
=== Predecessor ===
v597 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6458 #next: v998  <|@  <|@
f <@~|@floating>@ <|@
tid v995 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6259 
=== Succesors ===
=== Usages ===
v998 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6259  <|@  <|@
f <@*|@fixed>@ <|@
tid v998 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v995 
=== Succesors ===
trueSuccessor: v996 
falseSuccessor: v997 
=== Usages ===
=== Predecessor ===
i6259 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v995 #trueSuccessor: v996 #falseSuccessor: v997  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4565915827229334165
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v996 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2176 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2176  <|@  <|@
f <@*|@fixed>@ <|@
tid v2176 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
v996 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6260 
=== Usages ===
=== Predecessor ===
v998 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6260  <|@  <|@
f <@~|@floating>@ <|@
tid v6459 <|@
result [v27|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
i6260 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6260 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6459 
=== Succesors ===
next: v4020 
=== Usages ===
v999 
=== Predecessor ===
v997 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6459 #next: v4020  <|@  <|@
f <@~|@floating>@ <|@
tid v999 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6260 
y: i2675 
=== Succesors ===
=== Usages ===
v4020 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6260 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4020 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v999 
=== Succesors ===
trueSuccessor: v4019 
falseSuccessor: v4016 
=== Usages ===
=== Predecessor ===
i6260 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v999 #trueSuccessor: v4019 #falseSuccessor: v4016  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4019 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5790 
=== Usages ===
=== Predecessor ===
v4020 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5790  <|@  <|@
f <@~|@floating>@ <|@
tid i5791 <|@
result int[-687379|0xfffffffffff582ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -687379
stableDimension: 0
stamp: i32 [-687379] ⇊00000000fff582ed ⇈00000000fff582ed
stampKind: i32
value: int[-687379|0xfffffffffff582ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5790 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-687379|0xfffffffffff582ed]] destination: B19 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4016 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2050 
=== Usages ===
=== Predecessor ===
v4020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2050  <|@  <|@
f <@*|@fixed>@ <|@
tid v2050 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4016 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B92" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4025 
=== Usages ===
=== Predecessor ===
v604 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4025  <|@  <|@
f <@~|@floating>@ <|@
tid v6177 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6258 
y: v6169 
=== Succesors ===
=== Usages ===
v4025 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6258 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4025 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6177 
=== Succesors ===
trueSuccessor: v4021 
falseSuccessor: v4024 
=== Usages ===
=== Predecessor ===
v603 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6177 #trueSuccessor: v4021 #falseSuccessor: v4024  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6261 
=== Usages ===
=== Predecessor ===
v4025 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6261 <|@
result v31|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6458 
=== Succesors ===
next: v6262 
=== Usages ===
?1220 v6579 v6460 v6461 ?5649 v6624 
=== Predecessor ===
v4021 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6458 #next: v6262  <|@  <|@
f <@~|@floating>@ <|@
tid v6579 <|@
result [v31|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
v6262 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6262 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6579 
=== Succesors ===
next: v1021 
=== Usages ===
v6179 v6178 
=== Predecessor ===
a6261 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6579 #next: v1021  <|@  <|@
f <@~|@floating>@ <|@
tid v6178 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6262 
y: v6175 
=== Succesors ===
=== Usages ===
v1021 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6262 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6460 <|@
result [v31|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
i6263 a6265 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
tid ?826 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 
=== Succesors ===
=== Usages ===
?1132 ?5651 ?1008 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1021 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6178 
=== Succesors ===
trueSuccessor: v1014 
falseSuccessor: v1020 
=== Usages ===
=== Predecessor ===
v6262 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6178 #trueSuccessor: v1014 #falseSuccessor: v1020  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v27|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v32|DWORD = MOV [v31|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4585501602410042383
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1014 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6263 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6263  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6263 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6460 
=== Succesors ===
next: v1210 
=== Usages ===
v1207 
=== Predecessor ===
v1014 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6460 #next: v1210  <|@  <|@
f <@~|@floating>@ <|@
tid v1207 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6263 
=== Succesors ===
=== Usages ===
v1210 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6263  <|@  <|@
f <@*|@fixed>@ <|@
tid v1210 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1207 
=== Succesors ===
trueSuccessor: v1208 
falseSuccessor: v1209 
=== Usages ===
=== Predecessor ===
i6263 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1207 #trueSuccessor: v1208 #falseSuccessor: v1209  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v31|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561412053862212708
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2192 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2192  <|@  <|@
f <@*|@fixed>@ <|@
tid v2192 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
v1208 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1209 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6264 
=== Usages ===
=== Predecessor ===
v1210 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6264  <|@  <|@
f <@~|@floating>@ <|@
tid v6461 <|@
result [v31|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
i6264 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6264 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6461 
=== Succesors ===
next: v4035 
=== Usages ===
v1211 
=== Predecessor ===
v1209 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6461 #next: v4035  <|@  <|@
f <@~|@floating>@ <|@
tid v1211 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6264 
y: i2675 
=== Succesors ===
=== Usages ===
v4035 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6264 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4035 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1211 
=== Succesors ===
trueSuccessor: v4034 
falseSuccessor: v4031 
=== Usages ===
=== Predecessor ===
i6264 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1211 #trueSuccessor: v4034 #falseSuccessor: v4031  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v31|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5796 
=== Usages ===
=== Predecessor ===
v4035 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5796  <|@  <|@
f <@~|@floating>@ <|@
tid i5797 <|@
result int[-689939|0xfffffffffff578ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -689939
stableDimension: 0
stamp: i32 [-689939] ⇊00000000fff578ed ⇈00000000fff578ed
stampKind: i32
value: int[-689939|0xfffffffffff578ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5796 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4034 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-689939|0xfffffffffff578ed]] destination: B26 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B68" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v4035 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2016  <|@  <|@
f <@*|@fixed>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B91" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1020 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4040 
=== Usages ===
=== Predecessor ===
v1021 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4040  <|@  <|@
f <@~|@floating>@ <|@
tid v6179 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6262 
y: v6169 
=== Succesors ===
=== Usages ===
v4040 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6262 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6179 
=== Succesors ===
trueSuccessor: v4036 
falseSuccessor: v4039 
=== Usages ===
=== Predecessor ===
v1020 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6179 #trueSuccessor: v4036 #falseSuccessor: v4039  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6265 
=== Usages ===
=== Predecessor ===
v4040 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6265 <|@
result v33|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6460 
=== Succesors ===
next: v6266 
=== Usages ===
a2699 v6580 v6462 v6463 
=== Predecessor ===
v4036 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6460 #next: v6266  <|@  <|@
f <@~|@floating>@ <|@
tid v6580 <|@
result [v33|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
v6266 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6266 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?126 
guard: - 
address: v6580 
=== Succesors ===
next: v1233 
=== Usages ===
v6180 
=== Predecessor ===
a6265 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?126 guard: - address: v6580 #next: v1233  <|@  <|@
f <@~|@floating>@ <|@
tid v6180 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6266 
y: v6175 
=== Succesors ===
=== Usages ===
v1233 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6266 y: v6175  <|@  <|@
tid ?1132 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?826 
values: a6257 i2675 
=== Succesors ===
=== Usages ===
?5650 ?5649 ?1220 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: a6257 i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v1233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6180 
=== Succesors ===
trueSuccessor: v1226 
falseSuccessor: v1232 
=== Usages ===
=== Predecessor ===
v6266 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6180 #trueSuccessor: v1226 #falseSuccessor: v1232  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v31|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580997890621963534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6267 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6267  <|@  <|@
f <@~|@floating>@ <|@
tid v6462 <|@
result [v33|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
i6267 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6267 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6462 
=== Succesors ===
next: v1316 
=== Usages ===
v1313 
=== Predecessor ===
v1226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6462 #next: v1316  <|@  <|@
f <@~|@floating>@ <|@
tid v1313 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6267 
=== Succesors ===
=== Usages ===
v1316 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i2675 y: i6267  <|@  <|@
f <@*|@fixed>@ <|@
tid v1316 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1313 
=== Succesors ===
trueSuccessor: v1314 
falseSuccessor: v1315 
=== Usages ===
=== Predecessor ===
i6267 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1313 #trueSuccessor: v1314 #falseSuccessor: v1315  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v33|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4556908280498739924
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1314 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2240 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2240  <|@  <|@
f <@*|@fixed>@ <|@
tid v2240 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
v1314 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1315 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6268 
=== Usages ===
=== Predecessor ===
v1316 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6268  <|@  <|@
f <@~|@floating>@ <|@
tid v6463 <|@
result [v33|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6265 
=== Succesors ===
=== Usages ===
i6268 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6268 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6463 
=== Succesors ===
next: v4050 
=== Usages ===
v1317 
=== Predecessor ===
v1315 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6463 #next: v4050  <|@  <|@
f <@~|@floating>@ <|@
tid v1317 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6268 
y: i2675 
=== Succesors ===
=== Usages ===
v4050 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6268 y: i2675  <|@  <|@
f <@*|@fixed>@ <|@
tid v4050 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1317 
=== Succesors ===
trueSuccessor: v4049 
falseSuccessor: v4046 
=== Usages ===
=== Predecessor ===
i6268 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1317 #trueSuccessor: v4049 #falseSuccessor: v4046  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v33|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4049 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5802 
=== Usages ===
=== Predecessor ===
v4050 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5802  <|@  <|@
f <@~|@floating>@ <|@
tid i5803 <|@
result int[-692499|0xfffffffffff56eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -692499
stableDimension: 0
stamp: i32 [-692499] ⇊00000000fff56eed ⇈00000000fff56eed
stampKind: i32
value: int[-692499|0xfffffffffff56eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5802 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4049 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-692499|0xfffffffffff56eed]] destination: B33 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4046 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2067 
=== Usages ===
=== Predecessor ===
v4050 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2067  <|@  <|@
f <@*|@fixed>@ <|@
tid v2067 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v4046 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B67" 
    xhandlers
    flags 
    probability 4580997666309968492
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1232 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1120 
=== Usages ===
=== Predecessor ===
v1233 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1120  <|@  <|@
f <@~|@floating>@ <|@
tid a2699 <|@
result v35|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6265 
=== Succesors ===
=== Usages ===
v2706 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6265  <|@  <|@
tid v2706 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5ab11aca
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2699 i2675 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2699 i2675  <|@  <|@
tid ?5649 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1132 
values: a6261 i2675 
=== Succesors ===
=== Usages ===
i1120 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: a6261 i2675  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1120 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2706 
stateDuring: ?5649 
=== Succesors ===
next: v1125 
=== Usages ===
v1122 
=== Predecessor ===
v1232 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2706 stateDuring: ?5649 #next: v1125  <|@  <|@
f <@~|@floating>@ <|@
tid v1122 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1120 
y: i28 
=== Succesors ===
=== Usages ===
v1125 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1120 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1122 
=== Succesors ===
trueSuccessor: v1123 
falseSuccessor: v1124 
=== Usages ===
=== Predecessor ===
i1120 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1122 #trueSuccessor: v1123 #falseSuccessor: v1124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v31|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4552503787519490370
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1123 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2239  <|@  <|@
f <@*|@fixed>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2238 
=== Predecessor ===
v1123 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B66" 
    xhandlers
    flags 
    probability 4559368492574505914
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2238 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2239 v2240 
=== Succesors ===
next: a6269 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2239 v2240 #next: a6269  <|@  <|@
f <@~|@floating>@ <|@
tid v6624 <|@
result [v31|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6261 
=== Succesors ===
=== Usages ===
a6269 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6261  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6269 <|@
result v37|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6624 
=== Succesors ===
next: v6607 
=== Usages ===
a2709 v6607 
=== Predecessor ===
v2238 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6624 #next: v6607  <|@  <|@
tid ?1220 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1132 
values: a6261 i2675 i28 
=== Succesors ===
=== Usages ===
v6607 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: a6261 i2675 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6607 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1220 
object: a6269 
=== Succesors ===
next: i1128 
=== Usages ===
=== Predecessor ===
a6269 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1220 object: a6269 #next: i1128  <|@  <|@
f <@~|@floating>@ <|@
tid a2709 <|@
result v38|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6269 
=== Succesors ===
=== Usages ===
v2713 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6269  <|@  <|@
tid v2713 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@2ac3590d
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2709 i2675 
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2709 i2675  <|@  <|@
tid ?5650 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1132 
values: - - 
=== Succesors ===
=== Usages ===
i1128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1132 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1128 <|@
result v39|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2713 
stateDuring: ?5650 
=== Succesors ===
next: v819 
=== Usages ===
v816 
=== Predecessor ===
v6607 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2713 stateDuring: ?5650 #next: v819  <|@  <|@
f <@~|@floating>@ <|@
tid v816 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1128 
y: i28 
=== Succesors ===
=== Usages ===
v819 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1128 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v819 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v816 
=== Succesors ===
trueSuccessor: v817 
falseSuccessor: v818 
=== Usages ===
=== Predecessor ===
i1128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v816 #trueSuccessor: v817 #falseSuccessor: v818  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v31|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v31|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4531000174654467634
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2191  <|@  <|@
f <@*|@fixed>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
v817 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B65" 
    xhandlers
    flags 
    probability 4561488343692636445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2191 v2192 
=== Succesors ===
next: a6270 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2191 v2192 #next: a6270  <|@  <|@
f <@~|@floating>@ <|@
tid v6625 <|@
result [v27|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6257 
=== Succesors ===
=== Usages ===
a6270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6257  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6270 <|@
result v40|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6625 
=== Succesors ===
next: v6608 
=== Usages ===
a2716 v6608 
=== Predecessor ===
v2190 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6625 #next: v6608  <|@  <|@
tid ?1008 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?826 
values: a6257 i2675 i28 
=== Succesors ===
=== Usages ===
v6608 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: a6257 i2675 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1008 
object: a6270 
=== Succesors ===
next: i822 
=== Usages ===
=== Predecessor ===
a6270 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1008 object: a6270 #next: i822  <|@  <|@
f <@~|@floating>@ <|@
tid a2716 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6270 
=== Succesors ===
=== Usages ===
v2720 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6270  <|@  <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@54b24352
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2716 i2675 
=== Succesors ===
=== Usages ===
i822 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2716 i2675  <|@  <|@
tid ?5651 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?826 
values: - - 
=== Succesors ===
=== Usages ===
i822 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?826 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i822 <|@
result v42|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2720 
stateDuring: ?5651 
=== Succesors ===
next: v393 
=== Usages ===
v390 i1858 
=== Predecessor ===
v6608 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2720 stateDuring: ?5651 #next: v393  <|@  <|@
f <@~|@floating>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i822 
y: i28 
=== Succesors ===
=== Usages ===
v393 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i822 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v390 
=== Succesors ===
trueSuccessor: v391 
falseSuccessor: v392 
=== Usages ===
=== Predecessor ===
i822 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v390 #trueSuccessor: v391 #falseSuccessor: v392  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v27|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4532661730250397969
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2175 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2175  <|@  <|@
f <@*|@fixed>@ <|@
tid v2175 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2174 
=== Predecessor ===
v391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2175 v2176 
=== Succesors ===
next: a6271 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2175 v2176 #next: a6271  <|@  <|@
f <@~|@floating>@ <|@
tid v6464 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6271 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6271 <|@
result v43|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6464 
=== Succesors ===
next: v6272 
=== Usages ===
a2723 v6581 v6475 
=== Predecessor ===
v2174 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6464 #next: v6272  <|@  <|@
tid ?591 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 i28 
=== Succesors ===
=== Usages ===
v5923 v6272 i6274 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6581 <|@
result [v43|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6271 
=== Succesors ===
=== Usages ===
v6272 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6272 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?591 
guard: - 
address: v6581 
=== Succesors ===
next: v630 
=== Usages ===
v6182 
=== Predecessor ===
a6271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?591 guard: - address: v6581 #next: v630  <|@  <|@
f <@~|@floating>@ <|@
tid v6182 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6272 
y: v6181 
=== Succesors ===
=== Usages ===
v630 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6272 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v630 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6182 
=== Succesors ===
trueSuccessor: v623 
falseSuccessor: v629 
=== Usages ===
=== Predecessor ===
v6272 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6182 #trueSuccessor: v623 #falseSuccessor: v629  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v43|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6273 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6273  <|@  <|@
f <@~|@floating>@ <|@
tid v6475 <|@
result [v43|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6271 
=== Succesors ===
=== Usages ===
a6273 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6273 <|@
result v44|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6475 
=== Succesors ===
next: i6274 
=== Usages ===
v6477 v6476 
=== Predecessor ===
v623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6475 #next: i6274  <|@  <|@
f <@~|@floating>@ <|@
tid v6476 <|@
result [v44|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6273 
=== Succesors ===
=== Usages ===
i6274 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6274 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?591 
guard: - 
address: v6476 
=== Succesors ===
next: v4075 
=== Usages ===
v2808 
=== Predecessor ===
a6273 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?591 guard: - address: v6476 #next: v4075  <|@  <|@
f <@~|@floating>@ <|@
tid v2808 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i2675 
y: i6274 
=== Succesors ===
=== Usages ===
v4075 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i2675 y: i6274  <|@  <|@
f <@*|@fixed>@ <|@
tid v4075 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2808 
=== Succesors ===
trueSuccessor: v4071 
falseSuccessor: v4074 
=== Usages ===
=== Predecessor ===
i6274 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2808 #trueSuccessor: v4071 #falseSuccessor: v4074  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v29|DWORD, y: [v44|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4071 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4080 
=== Usages ===
i6275 
=== Predecessor ===
v4075 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4080  <|@  <|@
f <@~|@floating>@ <|@
tid v3917 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6256 
y: i3915 
=== Succesors ===
=== Usages ===
v4080 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6256 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3917 
=== Succesors ===
trueSuccessor: v4076 
falseSuccessor: v4079 
=== Usages ===
=== Predecessor ===
v4071 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3917 #trueSuccessor: v4076 #falseSuccessor: v4079  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4076 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6275 
=== Usages ===
=== Predecessor ===
v4080 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6275  <|@  <|@
f <@~|@floating>@ <|@
tid j3563 <|@
result v45|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6256 
=== Succesors ===
=== Usages ===
v6477 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6256  <|@  <|@
f <@~|@floating>@ <|@
tid v6477 <|@
result [v45|QWORD + v44|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j3563 
index: a6273 
=== Succesors ===
=== Usages ===
i6275 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3563 index: a6273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6275 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4071 
address: v6477 
=== Succesors ===
next: v1472 
=== Usages ===
i3564 
=== Predecessor ===
v4076 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4071 address: v6477 #next: v1472  <|@  <|@
f <@~|@floating>@ <|@
tid i3564 <|@
result v46|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6275 
=== Succesors ===
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6275  <|@  <|@
f <@*|@fixed>@ <|@
tid v1472 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i6275 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVZX v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v45|QWORD + v44|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5928 
=== Usages ===
=== Predecessor ===
v4080 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5928  <|@  <|@
f <@~|@floating>@ <|@
tid i5929 <|@
result int[-716563|0xfffffffffff510ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -716563
stableDimension: 0
stamp: i32 [-716563] ⇊00000000fff510ed ⇈00000000fff510ed
stampKind: i32
value: int[-716563|0xfffffffffff510ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5928 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5918 
=== Predecessor ===
v4079 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-716563|0xfffffffffff510ed]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4074 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5926 
=== Usages ===
=== Predecessor ===
v4075 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5926  <|@  <|@
f <@~|@floating>@ <|@
tid i5927 <|@
result int[-719131|0xfffffffffff506e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -719131
stableDimension: 0
stamp: i32 [-719131] ⇊00000000fff506e5 ⇈00000000fff506e5
stampKind: i32
value: int[-719131|0xfffffffffff506e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5918 
=== Predecessor ===
v4074 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-719131|0xfffffffffff506e5]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5921 <|@
result v47|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-719131 - -697355] ⇊00000000fff500e5 ⇈00000000fff55ffd
valueDescription: i32
=== Inputs ===
merge: v5918 
values: i5927 i5929 
=== Succesors ===
=== Usages ===
v5923 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5918 values: i5927 i5929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5926 v5928 
=== Succesors ===
next: v5923 
=== Usages ===
i5921 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5926 v5928 #next: v5923  <|@  <|@
f <@*|@fixed>@ <|@
tid v5923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?591 
actionAndReason: i5921 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5918 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?591 actionAndReason: i5921 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i396 
=== Usages ===
=== Predecessor ===
v630 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i396  <|@  <|@
f <@~|@floating>@ <|@
tid a2723 <|@
result v48|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6271 
=== Succesors ===
=== Usages ===
v2816 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6271  <|@  <|@
tid v2816 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@76f4c4e3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a2723 i2675 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2723 i2675  <|@  <|@
tid ?5652 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?400 
values: - - 
=== Succesors ===
=== Usages ===
i396 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i396 <|@
result v49|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2816 
stateDuring: ?5652 
=== Succesors ===
next: v402 
=== Usages ===
i403 
=== Predecessor ===
v629 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2816 stateDuring: ?5652 #next: v402  <|@  <|@
f <@*|@fixed>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v401 
=== Predecessor ===
i396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i403 <|@
result v50|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v401 
values: i396 i3564 
=== Succesors ===
=== Usages ===
?256 v257 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v401 values: i396 i3564  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v402 v1472 
=== Succesors ===
next: v4085 
=== Usages ===
i403 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v402 v1472 #next: v4085  <|@  <|@
tid ?256 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?270 
values: a2649 a2 i3 a4 i2675 i403 
=== Succesors ===
=== Usages ===
v5861 v6277 i6279 i6283 v6286 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?270 values: a2649 a2 i3 a4 i2675 i403  <|@  <|@
f <@~|@floating>@ <|@
tid v257 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i403 
y: i28 
=== Succesors ===
=== Usages ===
v4085 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i403 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4085 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v257 
=== Succesors ===
trueSuccessor: v4084 
falseSuccessor: v4081 
=== Usages ===
=== Predecessor ===
v401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v257 #trueSuccessor: v4084 #falseSuccessor: v4081  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4084 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5857 
=== Usages ===
=== Predecessor ===
v4085 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5857  <|@  <|@
f <@~|@floating>@ <|@
tid i5858 <|@
result int[-697619|0xfffffffffff55aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -697619
stableDimension: 0
stamp: i32 [-697619] ⇊00000000fff55aed ⇈00000000fff55aed
stampKind: i32
value: int[-697619|0xfffffffffff55aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4084 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-697619|0xfffffffffff55aed]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4081 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6276 
=== Usages ===
=== Predecessor ===
v4085 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6276 <|@
result v51|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6465 
=== Succesors ===
next: v6277 
=== Usages ===
a2728 v6582 v6466 v6470 v6474 
=== Predecessor ===
v4081 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6465 #next: v6277  <|@  <|@
f <@~|@floating>@ <|@
tid v6582 <|@
result [v51|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
v6277 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6277 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6582 
=== Succesors ===
next: v4095 
=== Usages ===
v6184 
=== Predecessor ===
a6276 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6582 #next: v4095  <|@  <|@
f <@~|@floating>@ <|@
tid v6184 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6277 
y: v6183 
=== Succesors ===
=== Usages ===
v4095 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6277 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4095 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6184 
=== Succesors ===
trueSuccessor: v4091 
falseSuccessor: v4094 
=== Usages ===
=== Predecessor ===
v6277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6184 #trueSuccessor: v4091 #falseSuccessor: v4094  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v51|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B62" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6278 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6278 <|@
result v52|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6279 
=== Usages ===
a2732 v6467 
=== Predecessor ===
v4091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6279  <|@  <|@
f <@~|@floating>@ <|@
tid v6467 <|@
result [v52|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6278 
=== Succesors ===
=== Usages ===
i6279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6279 <|@
result v53|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6467 
=== Succesors ===
next: i6280 
=== Usages ===
v2740 
=== Predecessor ===
a6278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6467 #next: i6280  <|@  <|@
f <@~|@floating>@ <|@
tid v6466 <|@
result [v51|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
i6280 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6280 <|@
result v54|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6466 
=== Succesors ===
next: v4105 
=== Usages ===
v6468 v2740 
=== Predecessor ===
i6279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6466 #next: v4105  <|@  <|@
f <@~|@floating>@ <|@
tid v2740 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6280 
y: i6279 
=== Succesors ===
=== Usages ===
v4105 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6280 y: i6279  <|@  <|@
f <@*|@fixed>@ <|@
tid v4105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2740 
=== Succesors ===
trueSuccessor: v4101 
falseSuccessor: v4104 
=== Usages ===
=== Predecessor ===
i6280 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2740 #trueSuccessor: v4101 #falseSuccessor: v4104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v53|DWORD = MOV [v52|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v51|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6281 
=== Usages ===
i6281 
=== Predecessor ===
v4105 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6281  <|@  <|@
f <@~|@floating>@ <|@
tid a2732 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6278 
=== Succesors ===
=== Usages ===
v6468 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6278  <|@  <|@
f <@~|@floating>@ <|@
tid v6468 <|@
result [v55|QWORD[.] + v54|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2732 
index: i6280 
=== Succesors ===
=== Usages ===
i6281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2732 index: i6280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6281 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4101 
address: v6468 
=== Succesors ===
next: v4110 
=== Usages ===
v635 v2785 i5662 
=== Predecessor ===
v4101 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4101 address: v6468 #next: v4110  <|@  <|@
f <@~|@floating>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6281 
y: i28 
=== Succesors ===
=== Usages ===
v4110 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6281 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v635 
=== Succesors ===
trueSuccessor: v4109 
falseSuccessor: v4106 
=== Usages ===
=== Predecessor ===
i6281 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v635 #trueSuccessor: v4109 #falseSuccessor: v4106  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD[.] + v54|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4109 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5870 
=== Usages ===
=== Predecessor ===
v4110 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5870  <|@  <|@
f <@~|@floating>@ <|@
tid i5871 <|@
result int[-703507|0xfffffffffff543ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -703507
stableDimension: 0
stamp: i32 [-703507] ⇊00000000fff543ed ⇈00000000fff543ed
stampKind: i32
value: int[-703507|0xfffffffffff543ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5870 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4109 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-703507|0xfffffffffff543ed]] destination: B54 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B61" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6282 
=== Usages ===
=== Predecessor ===
v4110 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6282 <|@
result v57|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6469 
=== Succesors ===
next: i6283 
=== Usages ===
a2752 v6471 
=== Predecessor ===
v4106 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6469 #next: i6283  <|@  <|@
f <@~|@floating>@ <|@
tid v6471 <|@
result [v57|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6282 
=== Succesors ===
=== Usages ===
i6283 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6283 <|@
result v58|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6471 
=== Succesors ===
next: i6284 
=== Usages ===
v2787 v2778 
=== Predecessor ===
a6282 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6471 #next: i6284  <|@  <|@
f <@~|@floating>@ <|@
tid v6470 <|@
result [v51|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
i6284 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6284 <|@
result v59|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6470 
=== Succesors ===
next: v4120 
=== Usages ===
v2778 i650 v6472 
=== Predecessor ===
i6283 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6470 #next: v4120  <|@  <|@
f <@~|@floating>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6284 
y: i6283 
=== Succesors ===
=== Usages ===
v4120 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6284 y: i6283  <|@  <|@
f <@*|@fixed>@ <|@
tid v4120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2778 
=== Succesors ===
trueSuccessor: v4116 
falseSuccessor: v4119 
=== Usages ===
=== Predecessor ===
i6284 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2778 #trueSuccessor: v4116 #falseSuccessor: v4119  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v58|DWORD = MOV [v57|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v51|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B60" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4116 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4125 
=== Usages ===
i6288 v2785 
=== Predecessor ===
v4120 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4125  <|@  <|@
f <@~|@floating>@ <|@
tid i650 <|@
result v60|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6284 
y: i61 
=== Succesors ===
=== Usages ===
v6473 v2787 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6284 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v2787 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i650 
y: i6283 
=== Succesors ===
=== Usages ===
v4125 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i650 y: i6283  <|@  <|@
f <@*|@fixed>@ <|@
tid v4125 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2787 
=== Succesors ===
trueSuccessor: v4121 
falseSuccessor: v4124 
=== Usages ===
=== Predecessor ===
v4116 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2787 #trueSuccessor: v4121 #falseSuccessor: v4124  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4121 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6285 
=== Usages ===
i6287 v2794 
=== Predecessor ===
v4125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6285  <|@  <|@
f <@~|@floating>@ <|@
tid v6474 <|@
result [v51|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6276 
=== Succesors ===
=== Usages ===
a6285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6285 <|@
result v61|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6474 
=== Succesors ===
next: v6286 
=== Usages ===
a2797 v6583 
=== Predecessor ===
v4121 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6474 #next: v6286  <|@  <|@
f <@~|@floating>@ <|@
tid v6583 <|@
result [v61|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6285 
=== Succesors ===
=== Usages ===
v6286 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6286 <|@
result v62|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?256 
guard: - 
address: v6583 
=== Succesors ===
next: i6287 
=== Usages ===
v6186 
=== Predecessor ===
a6285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?256 guard: - address: v6583 #next: i6287  <|@  <|@
f <@~|@floating>@ <|@
tid a2752 <|@
result v63|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6282 
=== Succesors ===
=== Usages ===
v6472 a1614 v6473 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6282  <|@  <|@
f <@~|@floating>@ <|@
tid v6473 <|@
result [v63|QWORD[.] + v60|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2752 
index: i650 
=== Succesors ===
=== Usages ===
v2794 i6287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2752 index: i650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6287 <|@
result v64|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4121 
address: v6473 
=== Succesors ===
next: i6288 
=== Usages ===
i1620 i1618 
=== Predecessor ===
v6286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4121 address: v6473 #next: i6288  <|@  <|@
f <@~|@floating>@ <|@
tid v6472 <|@
result [v63|QWORD[.] + v59|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2752 
index: i6284 
=== Succesors ===
=== Usages ===
v2785 i6288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2752 index: i6284  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6288 <|@
result v65|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4116 
address: v6472 
=== Succesors ===
next: v2785 
=== Usages ===
i1617 i1615 
=== Predecessor ===
i6287 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4116 address: v6472 #next: v2785  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4116 
address: v6472 
value: i6281 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2794 
=== Usages ===
=== Predecessor ===
i6288 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4116 address: v6472 value: i6281 stateAfter: - lastLocationAccess: - #next: v2794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4121 
address: v6473 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v850 
=== Usages ===
=== Predecessor ===
v2785 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4121 address: v6473 value: i263 stateAfter: - lastLocationAccess: - #next: v850  <|@  <|@
f <@~|@floating>@ <|@
tid v6186 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6286 
y: v6185 
=== Succesors ===
=== Usages ===
v850 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6286 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a2728 <|@
result v66|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6276 
=== Succesors ===
=== Usages ===
a1609 a1610 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6276  <|@  <|@
f <@*|@fixed>@ <|@
tid v850 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6186 
=== Succesors ===
trueSuccessor: v843 
falseSuccessor: v849 
=== Usages ===
=== Predecessor ===
v2794 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6186 #trueSuccessor: v843 #falseSuccessor: v849  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v62|DWORD = MOV [v61|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|QWORD[.] + v59|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v59|DWORD * 4 + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v60|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B76" 
    xhandlers
    flags 
    probability 4564516866529163683
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v843 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1602 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1602  <|@  <|@
f <@*|@fixed>@ <|@
tid v1602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v843 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v56|DWORD, v63|QWORD[.], v65|DWORD, v64|DWORD] destination: B58 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B83" 
    xhandlers
    flags 
    probability 4554435969718103183
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v849 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v850 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@~|@floating>@ <|@
tid a2797 <|@
result v67|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6285 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6285  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
v849 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v67|QWORD[.], v65|DWORD, v64|DWORD] destination: B59 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5876 
=== Usages ===
=== Predecessor ===
v4125 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5876  <|@  <|@
f <@~|@floating>@ <|@
tid i5877 <|@
result int[-713755|0xfffffffffff51be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -713755
stableDimension: 0
stamp: i32 [-713755] ⇊00000000fff51be5 ⇈00000000fff51be5
stampKind: i32
value: int[-713755|0xfffffffffff51be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-713755|0xfffffffffff51be5]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4119 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5874 
=== Usages ===
=== Predecessor ===
v4120 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5874  <|@  <|@
f <@~|@floating>@ <|@
tid i5875 <|@
result int[-711451|0xfffffffffff524e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -711451
stableDimension: 0
stamp: i32 [-711451] ⇊00000000fff524e5 ⇈00000000fff524e5
stampKind: i32
value: int[-711451|0xfffffffffff524e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5874 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4119 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-711451|0xfffffffffff524e5]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5868 
=== Usages ===
=== Predecessor ===
v4105 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5868  <|@  <|@
f <@~|@floating>@ <|@
tid i5869 <|@
result int[-701723|0xfffffffffff54ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -701723
stableDimension: 0
stamp: i32 [-701723] ⇊00000000fff54ae5 ⇈00000000fff54ae5
stampKind: i32
value: int[-701723|0xfffffffffff54ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5868 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4104 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-701723|0xfffffffffff54ae5]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4094 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5864 
=== Usages ===
=== Predecessor ===
v4095 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5864  <|@  <|@
f <@~|@floating>@ <|@
tid i5865 <|@
result int[-698931|0xfffffffffff555cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -698931
stableDimension: 0
stamp: i32 [-698931] ⇊00000000fff555cd ⇈00000000fff555cd
stampKind: i32
value: int[-698931|0xfffffffffff555cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5864 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5856 
=== Predecessor ===
v4094 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-698931|0xfffffffffff555cd]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B50" "B63" "B62" "B54" "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5859 <|@
result v68|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-716299 - -697619] ⇊00000000fff500c5 ⇈00000000fff57ffd
valueDescription: i32
=== Inputs ===
merge: v5856 
values: i5858 i5865 i5869 i5871 i5875 i5877 
=== Succesors ===
=== Usages ===
v5861 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5856 values: i5858 i5865 i5869 i5871 i5875 i5877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5857 v5864 v5868 v5870 v5874 v5876 
=== Succesors ===
next: v5861 
=== Usages ===
i5859 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5857 v5864 v5868 v5870 v5874 v5876 #next: v5861  <|@  <|@
f <@*|@fixed>@ <|@
tid v5861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?256 
actionAndReason: i5859 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5856 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?256 actionAndReason: i5859 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B68" 
    xhandlers
    flags 
    probability 4561386092056026297
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1854 
=== Usages ===
=== Predecessor ===
v393 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1854  <|@  <|@
f <@*|@fixed>@ <|@
tid v1854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v392 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B68" 
    xhandlers
    flags 
    probability 4559292202744082177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v818 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1856 
=== Usages ===
=== Predecessor ===
v819 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1856  <|@  <|@
f <@*|@fixed>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v818 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580932261907603961
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v1125 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1880  <|@  <|@
f <@*|@fixed>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1853 
=== Predecessor ===
v1124 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" "B67" "B27" "B20" "B34" 
    successors "B69" "B89" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1858 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1853 
values: i822 i61 i61 i61 i61 i61 
=== Succesors ===
=== Usages ===
?1855 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1853 values: i822 i61 i61 i61 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1853 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1854 v1856 v1880 v2016 v2050 v2067 
=== Succesors ===
next: a6289 
=== Usages ===
i1858 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1854 v1856 v1880 v2016 v2050 v2067 #next: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6289 <|@
result v70|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6465 
=== Succesors ===
next: v6290 
=== Usages ===
a2818 v6584 v6478 v6481 v6485 
=== Predecessor ===
v1853 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6465 #next: v6290  <|@  <|@
tid ?1855 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?400 
values: a2649 i2675 i1858 
=== Succesors ===
=== Usages ===
v5993 v6290 i6292 i6296 v6299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?400 values: a2649 i2675 i1858  <|@  <|@
f <@~|@floating>@ <|@
tid v6584 <|@
result [v70|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
v6290 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6290 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6584 
=== Succesors ===
next: v4140 
=== Usages ===
v6187 
=== Predecessor ===
a6289 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6584 #next: v4140  <|@  <|@
f <@~|@floating>@ <|@
tid v6187 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6290 
y: v6183 
=== Succesors ===
=== Usages ===
v4140 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6290 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4140 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6187 
=== Succesors ===
trueSuccessor: v4136 
falseSuccessor: v4139 
=== Usages ===
=== Predecessor ===
v6290 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6187 #trueSuccessor: v4136 #falseSuccessor: v4139  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v70|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B88" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4136 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6291 
=== Usages ===
=== Predecessor ===
v4140 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6291 <|@
result v71|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6292 
=== Usages ===
a2822 v6479 
=== Predecessor ===
v4136 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6292  <|@  <|@
f <@~|@floating>@ <|@
tid v6479 <|@
result [v71|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6291 
=== Succesors ===
=== Usages ===
i6292 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6291  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6292 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6479 
=== Succesors ===
next: i6293 
=== Usages ===
v2830 
=== Predecessor ===
a6291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6479 #next: i6293  <|@  <|@
f <@~|@floating>@ <|@
tid v6478 <|@
result [v70|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
i6293 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6293 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6478 
=== Succesors ===
next: v4150 
=== Usages ===
v6480 v2830 
=== Predecessor ===
i6292 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6478 #next: v4150  <|@  <|@
f <@~|@floating>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6293 
y: i6292 
=== Succesors ===
=== Usages ===
v4150 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6293 y: i6292  <|@  <|@
f <@*|@fixed>@ <|@
tid v4150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2830 
=== Succesors ===
trueSuccessor: v4146 
falseSuccessor: v4149 
=== Usages ===
=== Predecessor ===
i6293 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2830 #trueSuccessor: v4146 #falseSuccessor: v4149  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v72|DWORD = MOV [v71|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4146 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6294 
=== Usages ===
i6294 
=== Predecessor ===
v4150 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6294  <|@  <|@
f <@~|@floating>@ <|@
tid a2822 <|@
result v74|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6291 
=== Succesors ===
=== Usages ===
v6480 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6291  <|@  <|@
f <@~|@floating>@ <|@
tid v6480 <|@
result [v74|QWORD[.] + v73|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2822 
index: i6293 
=== Succesors ===
=== Usages ===
i6294 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2822 index: i6293  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6294 <|@
result v75|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4146 
address: v6480 
=== Succesors ===
next: v4155 
=== Usages ===
v1634 v2873 i5662 
=== Predecessor ===
v4146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4146 address: v6480 #next: v4155  <|@  <|@
f <@~|@floating>@ <|@
tid v1634 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6294 
y: i28 
=== Succesors ===
=== Usages ===
v4155 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6294 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4155 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1634 
=== Succesors ===
trueSuccessor: v4154 
falseSuccessor: v4151 
=== Usages ===
=== Predecessor ===
i6294 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1634 #trueSuccessor: v4154 #falseSuccessor: v4151  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4154 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6000 
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6000  <|@  <|@
f <@~|@floating>@ <|@
tid i6001 <|@
result int[-726547|0xfffffffffff4e9ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -726547
stableDimension: 0
stamp: i32 [-726547] ⇊00000000fff4e9ed ⇈00000000fff4e9ed
stampKind: i32
value: int[-726547|0xfffffffffff4e9ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6000 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4154 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-726547|0xfffffffffff4e9ed]] destination: B71 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B87" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6295 
=== Usages ===
=== Predecessor ===
v4155 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6295 <|@
result v76|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6469 
=== Succesors ===
next: i6296 
=== Usages ===
a2840 v6482 
=== Predecessor ===
v4151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6469 #next: i6296  <|@  <|@
f <@~|@floating>@ <|@
tid v6482 <|@
result [v76|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6295 
=== Succesors ===
=== Usages ===
i6296 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6295  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6296 <|@
result v77|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6482 
=== Succesors ===
next: i6297 
=== Usages ===
v2875 v2866 
=== Predecessor ===
a6295 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6482 #next: i6297  <|@  <|@
f <@~|@floating>@ <|@
tid v6481 <|@
result [v70|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
i6297 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6297 <|@
result v78|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6481 
=== Succesors ===
next: v4165 
=== Usages ===
v2866 v6483 i1642 
=== Predecessor ===
i6296 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6481 #next: v4165  <|@  <|@
f <@~|@floating>@ <|@
tid v2866 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6297 
y: i6296 
=== Succesors ===
=== Usages ===
v4165 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6297 y: i6296  <|@  <|@
f <@*|@fixed>@ <|@
tid v4165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2866 
=== Succesors ===
trueSuccessor: v4161 
falseSuccessor: v4164 
=== Usages ===
=== Predecessor ===
i6297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2866 #trueSuccessor: v4161 #falseSuccessor: v4164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4161 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4170 
=== Usages ===
i6301 v2873 
=== Predecessor ===
v4165 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4170  <|@  <|@
f <@~|@floating>@ <|@
tid i1642 <|@
result v79|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6297 
y: i61 
=== Succesors ===
=== Usages ===
v2875 v6484 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6297 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1642 
y: i6296 
=== Succesors ===
=== Usages ===
v4170 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1642 y: i6296  <|@  <|@
f <@*|@fixed>@ <|@
tid v4170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2875 
=== Succesors ===
trueSuccessor: v4166 
falseSuccessor: v4169 
=== Usages ===
=== Predecessor ===
v4161 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2875 #trueSuccessor: v4166 #falseSuccessor: v4169  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B82" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6298 
=== Usages ===
i6300 v2882 
=== Predecessor ===
v4170 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6298  <|@  <|@
f <@~|@floating>@ <|@
tid v6485 <|@
result [v70|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6289 
=== Succesors ===
=== Usages ===
a6298 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6289  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6298 <|@
result v80|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6485 
=== Succesors ===
next: v6299 
=== Usages ===
a2885 v6585 
=== Predecessor ===
v4166 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6485 #next: v6299  <|@  <|@
f <@~|@floating>@ <|@
tid v6585 <|@
result [v80|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6298 
=== Succesors ===
=== Usages ===
v6299 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6299 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1855 
guard: - 
address: v6585 
=== Succesors ===
next: i6300 
=== Usages ===
v6188 
=== Predecessor ===
a6298 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1855 guard: - address: v6585 #next: i6300  <|@  <|@
f <@~|@floating>@ <|@
tid a2840 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6295 
=== Succesors ===
=== Usages ===
v6483 a1614 v6484 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6295  <|@  <|@
f <@~|@floating>@ <|@
tid v6484 <|@
result [v82|QWORD[.] + v79|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2840 
index: i1642 
=== Succesors ===
=== Usages ===
v2882 i6300 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2840 index: i1642  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6300 <|@
result v83|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4166 
address: v6484 
=== Succesors ===
next: i6301 
=== Usages ===
i1618 i1620 
=== Predecessor ===
v6299 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4166 address: v6484 #next: i6301  <|@  <|@
f <@~|@floating>@ <|@
tid v6483 <|@
result [v82|QWORD[.] + v78|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2840 
index: i6297 
=== Succesors ===
=== Usages ===
v2873 i6301 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2840 index: i6297  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6301 <|@
result v84|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4161 
address: v6483 
=== Succesors ===
next: v2873 
=== Usages ===
i1615 i1617 
=== Predecessor ===
i6300 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4161 address: v6483 #next: v2873  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4161 
address: v6483 
value: i6294 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2882 
=== Usages ===
=== Predecessor ===
i6301 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4161 address: v6483 value: i6294 stateAfter: - lastLocationAccess: - #next: v2882  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4166 
address: v6484 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1652 
=== Usages ===
=== Predecessor ===
v2873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4166 address: v6484 value: i263 stateAfter: - lastLocationAccess: - #next: v1652  <|@  <|@
f <@~|@floating>@ <|@
tid v6188 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6299 
y: v6185 
=== Succesors ===
=== Usages ===
v1652 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6299 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a2818 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6289 
=== Succesors ===
=== Usages ===
a1609 a1610 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6289  <|@  <|@
f <@*|@fixed>@ <|@
tid v1652 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6188 
=== Succesors ===
trueSuccessor: v1646 
falseSuccessor: v1651 
=== Usages ===
=== Predecessor ===
v2882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6188 #trueSuccessor: v1646 #falseSuccessor: v1651  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v70|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v81|DWORD = MOV [v80|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + v79|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v78|DWORD * 4 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v79|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4593377818679571269
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1604 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1604  <|@  <|@
f <@*|@fixed>@ <|@
tid v1604 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1601 
=== Predecessor ===
v1646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v75|DWORD, v82|QWORD[.], v84|DWORD, v83|DWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B58" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1610 <|@
result v86|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1601 
values: a2728 a2818 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: a2728 a2818  <|@  <|@
f <@~|@floating>@ <|@
tid i5662 <|@
result v87|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6281 i6294 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6281 i6294  <|@  <|@
f <@~|@floating>@ <|@
tid a1614 <|@
result v88|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1601 
values: a2752 a2840 
=== Succesors ===
=== Usages ===
v6491 v6490 v6489 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: a2752 a2840  <|@  <|@
f <@~|@floating>@ <|@
tid i1617 <|@
result v89|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6288 i6301 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6288 i6301  <|@  <|@
f <@~|@floating>@ <|@
tid i1620 <|@
result v90|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1601 
values: i6287 i6300 
=== Succesors ===
=== Usages ===
?1603 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1601 values: i6287 i6300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1601 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1602 v1604 
=== Succesors ===
next: i6302 
=== Usages ===
a1610 i5662 a1614 i1617 i1620 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1602 v1604 #next: i6302  <|@  <|@
f <@~|@floating>@ <|@
tid v6486 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6302 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6302 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6486 
=== Succesors ===
next: v4180 
=== Usages ===
v1034 
=== Predecessor ===
v1601 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6486 #next: v4180  <|@  <|@
f <@~|@floating>@ <|@
tid v1034 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6302 
y: i61 
=== Succesors ===
=== Usages ===
v4180 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6302 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v4180 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1034 
=== Succesors ===
trueSuccessor: v4179 
falseSuccessor: v4176 
=== Usages ===
=== Predecessor ===
i6302 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1034 #trueSuccessor: v4179 #falseSuccessor: v4176  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD[.], v87|DWORD, v88|QWORD[.], v89|DWORD, v90|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5943 
=== Usages ===
=== Predecessor ===
v4180 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5943  <|@  <|@
f <@~|@floating>@ <|@
tid i5944 <|@
result int[-739603|0xfffffffffff4b6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -739603
stableDimension: 0
stamp: i32 [-739603] ⇊00000000fff4b6ed ⇈00000000fff4b6ed
stampKind: i32
value: int[-739603|0xfffffffffff4b6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5943 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
v4179 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-739603|0xfffffffffff4b6ed]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6303 
=== Usages ===
=== Predecessor ===
v4180 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6303  <|@  <|@
f <@~|@floating>@ <|@
tid v6489 <|@
result [v88|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
i6303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6303 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6489 
=== Succesors ===
next: v4190 
=== Usages ===
v3883 
=== Predecessor ===
v4176 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6489 #next: v4190  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6303 
y: i2599 
=== Succesors ===
=== Usages ===
v4190 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6303 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4190 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3883 
=== Succesors ===
trueSuccessor: v4189 
falseSuccessor: v4186 
=== Usages ===
=== Predecessor ===
i6303 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3883 #trueSuccessor: v4189 #falseSuccessor: v4186  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v88|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4189 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5950 
=== Usages ===
=== Predecessor ===
v4190 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5950  <|@  <|@
f <@~|@floating>@ <|@
tid i5951 <|@
result int[-914459|0xfffffffffff20be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -914459
stableDimension: 0
stamp: i32 [-914459] ⇊00000000fff20be5 ⇈00000000fff20be5
stampKind: i32
value: int[-914459|0xfffffffffff20be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5950 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5942 
=== Predecessor ===
v4189 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-914459|0xfffffffffff20be5]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5945 <|@
result v91|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-914459 - -739603] ⇊00000000fff002e5 ⇈00000000fff6bfed
valueDescription: i32
=== Inputs ===
merge: v5942 
values: i5944 i5951 
=== Succesors ===
=== Usages ===
v5947 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5942 values: i5944 i5951  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5942 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5943 v5950 
=== Succesors ===
next: v5947 
=== Usages ===
i5945 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5943 v5950 #next: v5947  <|@  <|@
tid ?1603 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a1610 a2 i263 a4 i5662 i1617 i1620 
=== Succesors ===
=== Usages ===
v5947 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1610 a2 i263 a4 i5662 i1617 i1620  <|@  <|@
f <@*|@fixed>@ <|@
tid v5947 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1603 
actionAndReason: i5945 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5942 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1603 actionAndReason: i5945 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v86|QWORD[.] v1|QWORD[.] v30|DWORD v3|QWORD[.] v87|DWORD v89|DWORD v90|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2892 
=== Usages ===
v2908 v2917 
=== Predecessor ===
v4190 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2892  <|@  <|@
f <@~|@floating>@ <|@
tid v6487 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v2892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6487 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6304 
=== Usages ===
=== Predecessor ===
v4186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6487 value: i263 stateAfter: - lastLocationAccess: - #next: i6304  <|@  <|@
f <@~|@floating>@ <|@
tid v6488 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6304 <|@
result v92|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6488 
=== Succesors ===
next: v2908 
=== Usages ===
v2908 
=== Predecessor ===
v2892 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6488 #next: v2908  <|@  <|@
f <@~|@floating>@ <|@
tid v6490 <|@
result [v88|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
v2908 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2908 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4186 
address: v6490 
value: i6304 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2917 
=== Usages ===
=== Predecessor ===
i6304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4186 address: v6490 value: i6304 stateAfter: - lastLocationAccess: - #next: v2917  <|@  <|@
f <@~|@floating>@ <|@
tid v6491 <|@
result [v88|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1614 
index: - 
=== Succesors ===
=== Usages ===
v2917 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1614 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2917 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4186 
address: v6491 
value: i263 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1731 
=== Usages ===
=== Predecessor ===
v2908 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4186 address: v6491 value: i263 stateAfter: - lastLocationAccess: - #next: v1731  <|@  <|@
f <@*|@fixed>@ <|@
tid v1731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v2917 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B81 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4583009622221332317
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1608 
=== Usages ===
=== Predecessor ===
v1652 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1608  <|@  <|@
f <@~|@floating>@ <|@
tid a2885 <|@
result v93|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6298 
=== Succesors ===
=== Usages ===
a1621 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6298  <|@  <|@
f <@*|@fixed>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1605 
=== Predecessor ===
v1651 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v93|QWORD[.], v84|DWORD, v83|DWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B59" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1609 <|@
result v94|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1605 
values: a2728 a2818 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: a2728 a2818  <|@  <|@
f <@~|@floating>@ <|@
tid a1621 <|@
result v95|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v1605 
values: a2797 a2885 
=== Succesors ===
=== Usages ===
v2918 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: a2797 a2885  <|@  <|@
f <@~|@floating>@ <|@
tid i1615 <|@
result v96|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1605 
values: i6288 i6301 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: i6288 i6301  <|@  <|@
f <@~|@floating>@ <|@
tid i1618 <|@
result v97|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1605 
values: i6287 i6300 
=== Succesors ===
=== Usages ===
?656 ?5658 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1605 values: i6287 i6300  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1606 v1608 
=== Succesors ===
next: i655 
=== Usages ===
a1609 a1621 i1615 i1618 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1606 v1608 #next: i655  <|@  <|@
tid v2918 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@24c1e7bd
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1621 a2 i263 a4 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1621 a2 i263 a4  <|@  <|@
tid ?5658 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?660 
values: a1609 a2 - - - i1615 i1618 
=== Succesors ===
=== Usages ===
i655 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1609 a2 - - - i1615 i1618  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i655 <|@
result v98|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2918 
stateDuring: ?5658 
=== Succesors ===
next: v4195 
=== Usages ===
v657 
=== Predecessor ===
v1605 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2918 stateDuring: ?5658 #next: v4195  <|@  <|@
f <@~|@floating>@ <|@
tid v657 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i655 
y: i28 
=== Succesors ===
=== Usages ===
v4195 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i655 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4195 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v657 
=== Succesors ===
trueSuccessor: v4194 
falseSuccessor: v4191 
=== Usages ===
=== Predecessor ===
i655 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v657 #trueSuccessor: v4194 #falseSuccessor: v4191  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4194 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4192 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4192  <|@  <|@
tid ?656 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?660 
values: a1609 a2 - - - i1615 i1618 i28 
=== Succesors ===
=== Usages ===
v4192 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?660 values: a1609 a2 - - - i1615 i1618 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4192 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2919
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?656 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4194 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?656  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -747283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4191 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v170 
=== Usages ===
=== Predecessor ===
v4195 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v170  <|@  <|@
f <@*|@fixed>@ <|@
tid v170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v4191 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B85 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4169 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6006 
=== Usages ===
=== Predecessor ===
v4170 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6006  <|@  <|@
f <@~|@floating>@ <|@
tid i6007 <|@
result int[-736283|0xfffffffffff4c3e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -736283
stableDimension: 0
stamp: i32 [-736283] ⇊00000000fff4c3e5 ⇈00000000fff4c3e5
stampKind: i32
value: int[-736283|0xfffffffffff4c3e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6006 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4169 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-736283|0xfffffffffff4c3e5]] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6004 
=== Usages ===
=== Predecessor ===
v4165 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6004  <|@  <|@
f <@~|@floating>@ <|@
tid i6005 <|@
result int[-733979|0xfffffffffff4cce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -733979
stableDimension: 0
stamp: i32 [-733979] ⇊00000000fff4cce5 ⇈00000000fff4cce5
stampKind: i32
value: int[-733979|0xfffffffffff4cce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6004 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4164 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-733979|0xfffffffffff4cce5]] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4149 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5998 
=== Usages ===
=== Predecessor ===
v4150 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5998  <|@  <|@
f <@~|@floating>@ <|@
tid i5999 <|@
result int[-724763|0xfffffffffff4f0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -724763
stableDimension: 0
stamp: i32 [-724763] ⇊00000000fff4f0e5 ⇈00000000fff4f0e5
stampKind: i32
value: int[-724763|0xfffffffffff4f0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4149 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-724763|0xfffffffffff4f0e5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5994 
=== Usages ===
=== Predecessor ===
v4140 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5994  <|@  <|@
f <@~|@floating>@ <|@
tid i5995 <|@
result int[-721971|0xfffffffffff4fbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -721971
stableDimension: 0
stamp: i32 [-721971] ⇊00000000fff4fbcd ⇈00000000fff4fbcd
stampKind: i32
value: int[-721971|0xfffffffffff4fbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5994 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5988 
=== Predecessor ===
v4139 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-721971|0xfffffffffff4fbcd]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" "B71" "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5991 <|@
result v99|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-738827 - -721675] ⇊00000000fff480c5 ⇈00000000fff4fffd
valueDescription: i32
=== Inputs ===
merge: v5988 
values: i5995 i5999 i6001 i6005 i6007 
=== Succesors ===
=== Usages ===
v5993 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5988 values: i5995 i5999 i6001 i6005 i6007  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5988 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5994 v5998 v6000 v6004 v6006 
=== Succesors ===
next: v5993 
=== Usages ===
i5991 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5994 v5998 v6000 v6004 v6006 #next: v5993  <|@  <|@
f <@*|@fixed>@ <|@
tid v5993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1855 
actionAndReason: i5991 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5988 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1855 actionAndReason: i5991 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4039 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5798 
=== Usages ===
=== Predecessor ===
v4040 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5798  <|@  <|@
f <@~|@floating>@ <|@
tid i5799 <|@
result int[-690227|0xfffffffffff577cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -690227
stableDimension: 0
stamp: i32 [-690227] ⇊00000000fff577cd ⇈00000000fff577cd
stampKind: i32
value: int[-690227|0xfffffffffff577cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4039 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-690227|0xfffffffffff577cd]] destination: B91 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4024 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5792 
=== Usages ===
=== Predecessor ===
v4025 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5792  <|@  <|@
f <@~|@floating>@ <|@
tid i5793 <|@
result int[-687667|0xfffffffffff581cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -687667
stableDimension: 0
stamp: i32 [-687667] ⇊00000000fff581cd ⇈00000000fff581cd
stampKind: i32
value: int[-687667|0xfffffffffff581cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4024 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-687667|0xfffffffffff581cd]] destination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4009 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5786 
=== Usages ===
=== Predecessor ===
v4010 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5786  <|@  <|@
f <@~|@floating>@ <|@
tid i5787 <|@
result int[-685075|0xfffffffffff58bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -685075
stableDimension: 0
stamp: i32 [-685075] ⇊00000000fff58bed ⇈00000000fff58bed
stampKind: i32
value: int[-685075|0xfffffffffff58bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5786 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4009 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-685075|0xfffffffffff58bed]] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4004 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5784 
=== Usages ===
=== Predecessor ===
v4005 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5784  <|@  <|@
f <@~|@floating>@ <|@
tid i5785 <|@
result int[-683035|0xfffffffffff593e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -683035
stableDimension: 0
stamp: i32 [-683035] ⇊00000000fff593e5 ⇈00000000fff593e5
stampKind: i32
value: int[-683035|0xfffffffffff593e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v4004 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-683035|0xfffffffffff593e5]] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3999 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5782 
=== Usages ===
=== Predecessor ===
v4000 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5782  <|@  <|@
f <@~|@floating>@ <|@
tid i5783 <|@
result int[-682259|0xfffffffffff596ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -682259
stableDimension: 0
stamp: i32 [-682259] ⇊00000000fff596ed ⇈00000000fff596ed
stampKind: i32
value: int[-682259|0xfffffffffff596ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5782 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3999 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-682259|0xfffffffffff596ed]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3984 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5776 
=== Usages ===
=== Predecessor ===
v3985 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5776  <|@  <|@
f <@~|@floating>@ <|@
tid i5777 <|@
result int[-679731|0xfffffffffff5a0cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679731
stableDimension: 0
stamp: i32 [-679731] ⇊00000000fff5a0cd ⇈00000000fff5a0cd
stampKind: i32
value: int[-679731|0xfffffffffff5a0cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3984 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679731|0xfffffffffff5a0cd]] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5769 
=== Usages ===
=== Predecessor ===
v3975 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5769  <|@  <|@
f <@~|@floating>@ <|@
tid i5770 <|@
result int[-679187|0xfffffffffff5a2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -679187
stableDimension: 0
stamp: i32 [-679187] ⇊00000000fff5a2ed ⇈00000000fff5a2ed
stampKind: i32
value: int[-679187|0xfffffffffff5a2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5769 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5768 
=== Predecessor ===
v3974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679187|0xfffffffffff5a2ed]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" "B11" "B95" "B94" "B93" "B19" "B92" "B26" "B91" "B33" 
    successors 
    xhandlers
    flags 
    probability 2370582253857144832
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5771 <|@
result v100|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-692499 - -679187] ⇊00000000fff500c5 ⇈00000000fff5fffd
valueDescription: i32
=== Inputs ===
merge: v5768 
values: i5770 i5777 i5779 i5783 i5785 i5787 i5791 i5793 i5797 i5799 i5803 
=== Succesors ===
=== Usages ===
v5773 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5768 values: i5770 i5777 i5779 i5783 i5785 i5787 i5791 i5793 i5797 i5799 i5803  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5768 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5769 v5776 v5778 v5782 v5784 v5786 v5790 v5792 v5796 v5798 v5802 
=== Succesors ===
next: v5773 
=== Usages ===
i5771 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5769 v5776 v5778 v5782 v5784 v5786 v5790 v5792 v5796 v5798 v5802 #next: v5773  <|@  <|@
f <@*|@fixed>@ <|@
tid v5773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?126 
actionAndReason: i5771 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5768 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?126 actionAndReason: i5771 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4587633914563151070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v185 
=== Usages ===
=== Predecessor ===
v176 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v185  <|@  <|@
f <@~|@floating>@ <|@
tid v6172 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6250 
y: v6171 
=== Succesors ===
=== Usages ===
v185 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6250 y: v6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v185 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5997069951717903
=== Inputs ===
condition: v6172 
=== Succesors ===
trueSuccessor: v181 
falseSuccessor: v184 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6172 #trueSuccessor: v181 #falseSuccessor: v184  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4584620554336281545
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v181 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v271 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v271  <|@  <|@
tid ?304 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
?275 ?5648 ?683 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@~|@floating>@ <|@
tid v6626 <|@
result [v17|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
i6305 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@*|@fixed>@ <|@
tid v271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v272 
=== Predecessor ===
v181 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B116" 
    successors "B102" "B129" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4585559686677057366
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i273 <|@
result v101|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i3 i6316 
=== Succesors ===
=== Usages ===
?275 v2971 i675 v662 v1052 v6494 v1048 v2942 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i3 i6316  <|@  <|@
f <@~|@floating>@ <|@
tid i274 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v272 
values: i28 i294 
=== Succesors ===
=== Usages ===
?275 v277 v2971 ?683 i294 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v272 values: i28 i294  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v272 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2046558316457305
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v271 
=== Succesors ===
next: i6305 
=== Usages ===
i273 i274 v279 v289 v295 v4265 v4241 v4253 v4205 v4211 v4247 v4223 v4229 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v271 #next: i6305  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6305 <|@
result v103|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6626 
=== Succesors ===
next: v283 
=== Usages ===
v277 
=== Predecessor ===
v272 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6626 #next: v283  <|@  <|@
f <@~|@floating>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i274 
y: i6305 
=== Succesors ===
=== Usages ===
v283 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i274 y: i6305  <|@  <|@
tid ?275 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2649 a2 i273 a4 i274 
=== Succesors ===
=== Usages ===
v5885 v6307 v6309 i6311 v6613 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2649 a2 i273 a4 i274  <|@  <|@
f <@*|@fixed>@ <|@
tid v283 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5533923900859385
=== Inputs ===
condition: v277 
=== Succesors ===
trueSuccessor: v278 
falseSuccessor: v279 
=== Usages ===
=== Predecessor ===
i6305 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v277 #trueSuccessor: v278 #falseSuccessor: v279  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6306 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6306  <|@  <|@
f <@~|@floating>@ <|@
tid v6492 <|@
result [v17|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
a6306 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6306 <|@
result v104|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6492 
=== Succesors ===
next: v6307 
=== Usages ===
v6586 v6497 v6495 
=== Predecessor ===
v278 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6492 #next: v6307  <|@  <|@
f <@~|@floating>@ <|@
tid v6586 <|@
result [v104|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
v6307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6307 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6586 
=== Succesors ===
next: v4207 
=== Usages ===
v6190 
=== Predecessor ===
a6306 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6586 #next: v4207  <|@  <|@
f <@~|@floating>@ <|@
tid v6190 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6307 
y: v6189 
=== Succesors ===
=== Usages ===
v4207 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6307 y: v6189  <|@  <|@
f <@*|@fixed>@ <|@
tid v4207 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6190 
=== Succesors ===
trueSuccessor: v4202 
falseSuccessor: v4205 
=== Usages ===
=== Predecessor ===
v6307 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6190 #trueSuccessor: v4202 #falseSuccessor: v4205  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v17|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v104|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4202 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6308 
=== Usages ===
=== Predecessor ===
v4207 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6308  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6308 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4213 
=== Usages ===
v662 
=== Predecessor ===
v4202 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4213  <|@  <|@
f <@~|@floating>@ <|@
tid v662 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6308 
=== Succesors ===
=== Usages ===
v4213 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i6308  <|@  <|@
f <@*|@fixed>@ <|@
tid v4213 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v662 
=== Succesors ===
trueSuccessor: v4208 
falseSuccessor: v4211 
=== Usages ===
=== Predecessor ===
i6308 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v662 #trueSuccessor: v4208 #falseSuccessor: v4211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4208 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6309 
=== Usages ===
=== Predecessor ===
v4213 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6309 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6577 
=== Succesors ===
next: v4225 
=== Usages ===
v6191 
=== Predecessor ===
v4208 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6577 #next: v4225  <|@  <|@
f <@~|@floating>@ <|@
tid v6191 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6309 
y: v6173 
=== Succesors ===
=== Usages ===
v4225 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6309 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4225 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6191 
=== Succesors ===
trueSuccessor: v4220 
falseSuccessor: v4223 
=== Usages ===
=== Predecessor ===
v6309 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6191 #trueSuccessor: v4220 #falseSuccessor: v4223  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4231 
=== Usages ===
=== Predecessor ===
v4225 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4231  <|@  <|@
f <@~|@floating>@ <|@
tid v1048 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i28 
=== Succesors ===
=== Usages ===
v4231 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4231 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1048 
=== Succesors ===
trueSuccessor: v4229 
falseSuccessor: v4226 
=== Usages ===
=== Predecessor ===
v4220 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1048 #trueSuccessor: v4229 #falseSuccessor: v4226  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v101|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4229 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4230 
=== Usages ===
=== Predecessor ===
v4231 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5894 
=== Usages ===
=== Predecessor ===
v4229 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5894  <|@  <|@
f <@~|@floating>@ <|@
tid i5895 <|@
result int[-750355|0xfffffffffff48ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -750355
stableDimension: 0
stamp: i32 [-750355] ⇊00000000fff48ced ⇈00000000fff48ced
stampKind: i32
value: int[-750355|0xfffffffffff48ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5894 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4230 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-750355|0xfffffffffff48ced]] destination: B107 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6310 
=== Usages ===
=== Predecessor ===
v4231 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6310 <|@
result v105|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6311 
=== Usages ===
a2934 v6493 
=== Predecessor ===
v4226 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6311  <|@  <|@
f <@~|@floating>@ <|@
tid v6493 <|@
result [v105|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6310 
=== Succesors ===
=== Usages ===
i6311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6310  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6311 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?275 
guard: - 
address: v6493 
=== Succesors ===
next: v4243 
=== Usages ===
v1052 v2942 
=== Predecessor ===
a6310 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?275 guard: - address: v6493 #next: v4243  <|@  <|@
f <@~|@floating>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6311 
=== Succesors ===
=== Usages ===
v4243 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i273 y: i6311  <|@  <|@
f <@*|@fixed>@ <|@
tid v4243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1052 
=== Succesors ===
trueSuccessor: v4238 
falseSuccessor: v4241 
=== Usages ===
=== Predecessor ===
i6311 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1052 #trueSuccessor: v4238 #falseSuccessor: v4241  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4249 
=== Usages ===
=== Predecessor ===
v4243 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4249  <|@  <|@
f <@~|@floating>@ <|@
tid v2942 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i273 
y: i6311 
=== Succesors ===
=== Usages ===
v4249 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i273 y: i6311  <|@  <|@
f <@*|@fixed>@ <|@
tid v4249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2942 
=== Succesors ===
trueSuccessor: v4244 
falseSuccessor: v4247 
=== Usages ===
=== Predecessor ===
v4238 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2942 #trueSuccessor: v4244 #falseSuccessor: v4247  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4244 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6312 
=== Usages ===
i6312 
=== Predecessor ===
v4249 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6312  <|@  <|@
f <@~|@floating>@ <|@
tid a2934 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6310 
=== Succesors ===
=== Usages ===
v6494 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6310  <|@  <|@
f <@~|@floating>@ <|@
tid v6494 <|@
result [v107|QWORD[.] + v101|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2934 
index: i273 
=== Succesors ===
=== Usages ===
i6312 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2934 index: i273  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6312 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4244 
address: v6494 
=== Succesors ===
next: v4255 
=== Usages ===
v3914 j3579 
=== Predecessor ===
v4244 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4244 address: v6494 #next: v4255  <|@  <|@
f <@~|@floating>@ <|@
tid v3914 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6312 
y: i3912 
=== Succesors ===
=== Usages ===
v4255 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6312 y: i3912  <|@  <|@
f <@*|@fixed>@ <|@
tid v4255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3914 
=== Succesors ===
trueSuccessor: v4250 
falseSuccessor: v4253 
=== Usages ===
=== Predecessor ===
i6312 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3914 #trueSuccessor: v4250 #falseSuccessor: v4253  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSX [v107|QWORD[.] + v101|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6313 
=== Usages ===
i6314 
=== Predecessor ===
v4255 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6313  <|@  <|@
f <@~|@floating>@ <|@
tid v6495 <|@
result [v104|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
i6313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6313 <|@
result v109|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6495 
=== Succesors ===
next: i6314 
=== Usages ===
v1060 
=== Predecessor ===
v4250 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6495 #next: i6314  <|@  <|@
f <@~|@floating>@ <|@
tid j3579 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6312 
=== Succesors ===
=== Usages ===
v6496 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6312  <|@  <|@
f <@~|@floating>@ <|@
tid v6496 <|@
result [v5|QWORD[.] + v110|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1107 
index: j3579 
=== Succesors ===
=== Usages ===
i6314 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1107 index: j3579  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6314 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4250 
address: v6496 
=== Succesors ===
next: v673 
=== Usages ===
v1060 
=== Predecessor ===
i6313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4250 address: v6496 #next: v673  <|@  <|@
f <@~|@floating>@ <|@
tid v1060 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
x: i6313 
y: i6314 
=== Succesors ===
=== Usages ===
v673 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i6313 y: i6314  <|@  <|@
f <@*|@fixed>@ <|@
tid v673 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8923207656059002
=== Inputs ===
condition: v1060 
=== Succesors ===
trueSuccessor: v289 
falseSuccessor: v672 
=== Usages ===
=== Predecessor ===
i6314 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1060 #trueSuccessor: v289 #falseSuccessor: v672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v104|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVZX v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v109|DWORD, y: [v5|QWORD[.] + v110|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580989179136727805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v289 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v182 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v182  <|@  <|@
f <@*|@fixed>@ <|@
tid v182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
v289 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6315 
=== Usages ===
=== Predecessor ===
v673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6315  <|@  <|@
f <@~|@floating>@ <|@
tid v6497 <|@
result [v104|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6306 
=== Succesors ===
=== Usages ===
a6315 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6306  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6315 <|@
result v111|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6497 
=== Succesors ===
next: v6613 
=== Usages ===
a2961 v6613 
=== Predecessor ===
v672 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6497 #next: v6613  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6613 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
object: a6315 
=== Succesors ===
next: i677 
=== Usages ===
=== Predecessor ===
a6315 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?275 object: a6315 #next: i677  <|@  <|@
f <@~|@floating>@ <|@
tid a2961 <|@
result v112|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6315 
=== Succesors ===
=== Usages ===
v2965 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6315  <|@  <|@
f <@~|@floating>@ <|@
tid i675 <|@
result v113|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i273 
y: i61 
=== Succesors ===
=== Usages ===
v2965 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i273 y: i61  <|@  <|@
tid v2965 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@147ad919
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a2961 a2 i675 a4 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2961 a2 i675 a4  <|@  <|@
tid ?683 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: a2649 a2 - a4 i274 
=== Succesors ===
=== Usages ===
?678 ?5646 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: a2649 a2 - a4 i274  <|@  <|@
tid ?5646 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?683 
values: - - - - 
=== Succesors ===
=== Usages ===
i677 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?683 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i677 <|@
result v114|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2965 
stateDuring: ?5646 
=== Succesors ===
next: v4267 
=== Usages ===
v679 
=== Predecessor ===
v6613 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2965 stateDuring: ?5646 #next: v4267  <|@  <|@
f <@~|@floating>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i677 
y: i28 
=== Succesors ===
=== Usages ===
v4267 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i677 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4267 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v679 
=== Succesors ===
trueSuccessor: v4265 
falseSuccessor: v4262 
=== Usages ===
=== Predecessor ===
i677 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v679 #trueSuccessor: v4265 #falseSuccessor: v4262  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = MOV [v104|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v111|DWORD[.] * 8] state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v111|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v113|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v21|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4265 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4266 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4266  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4266 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4263 
=== Usages ===
=== Predecessor ===
v4265 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4263  <|@  <|@
tid ?678 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?683 
values: - - - - i28 
=== Succesors ===
=== Usages ===
v4263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?683 values: - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4263 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2966
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?678 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4266 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?678  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -759315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v21|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B101" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6316 
=== Usages ===
=== Predecessor ===
v4267 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6316  <|@  <|@
f <@~|@floating>@ <|@
tid v6630 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6316 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6316 <|@
result v115|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6630 
=== Succesors ===
next: v295 
=== Usages ===
i273 
=== Predecessor ===
v4262 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6630 #next: v295  <|@  <|@
f <@~|@floating>@ <|@
tid i294 <|@
result v116|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i274 
y: i61 
=== Succesors ===
=== Usages ===
i274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i274 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v295 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v272 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6316 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v272  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|DWORD, v116|DWORD] destination: B116 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4253 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4254 
=== Usages ===
=== Predecessor ===
v4255 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4254  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4254 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5902 
=== Usages ===
=== Predecessor ===
v4253 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5902  <|@  <|@
f <@~|@floating>@ <|@
tid i5903 <|@
result int[-755475|0xfffffffffff478ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -755475
stableDimension: 0
stamp: i32 [-755475] ⇊00000000fff478ed ⇈00000000fff478ed
stampKind: i32
value: int[-755475|0xfffffffffff478ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5902 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4254 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-755475|0xfffffffffff478ed]] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4247 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4248 
=== Usages ===
=== Predecessor ===
v4249 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4248  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5900 
=== Usages ===
=== Predecessor ===
v4247 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5900  <|@  <|@
f <@~|@floating>@ <|@
tid i5901 <|@
result int[-753435|0xfffffffffff480e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -753435
stableDimension: 0
stamp: i32 [-753435] ⇊00000000fff480e5 ⇈00000000fff480e5
stampKind: i32
value: int[-753435|0xfffffffffff480e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5900 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-753435|0xfffffffffff480e5]] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4241 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4242 
=== Usages ===
=== Predecessor ===
v4243 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4242  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4242 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5898 
=== Usages ===
=== Predecessor ===
v4241 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5898  <|@  <|@
f <@~|@floating>@ <|@
tid i5899 <|@
result int[-752659|0xfffffffffff483ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -752659
stableDimension: 0
stamp: i32 [-752659] ⇊00000000fff483ed ⇈00000000fff483ed
stampKind: i32
value: int[-752659|0xfffffffffff483ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4242 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-752659|0xfffffffffff483ed]] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4224 
=== Usages ===
=== Predecessor ===
v4225 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4224  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4224 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5892 
=== Usages ===
=== Predecessor ===
v4223 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5892  <|@  <|@
f <@~|@floating>@ <|@
tid i5893 <|@
result int[-750131|0xfffffffffff48dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -750131
stableDimension: 0
stamp: i32 [-750131] ⇊00000000fff48dcd ⇈00000000fff48dcd
stampKind: i32
value: int[-750131|0xfffffffffff48dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-750131|0xfffffffffff48dcd]] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4212 
=== Usages ===
=== Predecessor ===
v4213 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4212  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5888 
=== Usages ===
=== Predecessor ===
v4211 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5888  <|@  <|@
f <@~|@floating>@ <|@
tid i5889 <|@
result int[-749587|0xfffffffffff48fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -749587
stableDimension: 0
stamp: i32 [-749587] ⇊00000000fff48fed ⇈00000000fff48fed
stampKind: i32
value: int[-749587|0xfffffffffff48fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4212 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-749587|0xfffffffffff48fed]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4205 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: v4206 
=== Usages ===
=== Predecessor ===
v4207 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: v4206  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4206 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5886 
=== Usages ===
=== Predecessor ===
v4205 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5886  <|@  <|@
f <@~|@floating>@ <|@
tid i5887 <|@
result int[-749107|0xfffffffffff491cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -749107
stableDimension: 0
stamp: i32 [-749107] ⇊00000000fff491cd ⇈00000000fff491cd
stampKind: i32
value: int[-749107|0xfffffffffff491cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4206 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-749107|0xfffffffffff491cd]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v272 
=== Succesors ===
next: i6317 
=== Usages ===
=== Predecessor ===
v283 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v272 #next: i6317  <|@  <|@
f <@~|@floating>@ <|@
tid v6627 <|@
result [v17|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6249 
=== Succesors ===
=== Usages ===
i6317 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6249  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6317 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6627 
=== Succesors ===
next: v4272 
=== Usages ===
v298 
=== Predecessor ===
v279 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6627 #next: v4272  <|@  <|@
f <@~|@floating>@ <|@
tid v298 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6317 
y: i28 
=== Succesors ===
=== Usages ===
v4272 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6317 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4272 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v298 
=== Succesors ===
trueSuccessor: v4268 
falseSuccessor: v4271 
=== Usages ===
=== Predecessor ===
i6317 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v298 #trueSuccessor: v4268 #falseSuccessor: v4271  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v17|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4268 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i301 
=== Usages ===
=== Predecessor ===
v4272 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i301  <|@  <|@
tid v2971 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@5214b017
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a2649 a2 i273 i274 a4 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2649 a2 i273 i274 a4  <|@  <|@
tid ?5648 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?304 
values: - - - - - 
=== Succesors ===
=== Usages ===
i301 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?304 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i301 <|@
result v117|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2971 
stateDuring: ?5648 
=== Succesors ===
next: v1469 
=== Usages ===
i165 
=== Predecessor ===
v4268 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2971 stateDuring: ?5648 #next: v1469  <|@  <|@
f <@*|@fixed>@ <|@
tid v1469 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
i301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4271 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5906 
=== Usages ===
=== Predecessor ===
v4272 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5906  <|@  <|@
f <@~|@floating>@ <|@
tid i5907 <|@
result int[-760339|0xfffffffffff465ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -760339
stableDimension: 0
stamp: i32 [-760339] ⇊00000000fff465ed ⇈00000000fff465ed
stampKind: i32
value: int[-760339|0xfffffffffff465ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5880 
=== Predecessor ===
v4271 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-760339|0xfffffffffff465ed]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" "B124" "B107" "B122" "B120" "B118" "B131" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5883 <|@
result v118|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-760339 - -748811] ⇊00000000fff400c5 ⇈00000000fff4fffd
valueDescription: i32
=== Inputs ===
merge: v5880 
values: i5887 i5889 i5893 i5895 i5899 i5901 i5903 i5907 
=== Succesors ===
=== Usages ===
v5885 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5880 values: i5887 i5889 i5893 i5895 i5899 i5901 i5903 i5907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5886 v5888 v5892 v5894 v5898 v5900 v5902 v5906 
=== Succesors ===
next: v5885 
=== Usages ===
i5883 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5886 v5888 v5892 v5894 v5898 v5900 v5902 v5906 #next: v5885  <|@  <|@
f <@*|@fixed>@ <|@
tid v5885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?275 
actionAndReason: i5883 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5880 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?275 actionAndReason: i5883 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 4581640075535279603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2975 
=== Usages ===
=== Predecessor ===
v185 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid v6498 <|@
result [v18|DWORD * 8 + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v6250 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v6250  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2975 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v6498 
=== Succesors ===
next: j2978 
=== Usages ===
v6499 v2979 
=== Predecessor ===
v184 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6498 #next: j2978  <|@  <|@
f <@~|@floating>@ <|@
tid v6499 <|@
result [v119|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v2975 
index: - 
=== Succesors ===
=== Usages ===
j2978 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v2975 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2978 <|@
result v120|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6499 
=== Succesors ===
next: i129 
=== Usages ===
v2979 
=== Predecessor ===
v2975 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6499 #next: i129  <|@  <|@
tid v2979 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@217b56a
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j2978 
metaspaceMethod: v2975 
arguments: a2649 a2 i3 a4 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j2978 metaspaceMethod: v2975 arguments: a2649 a2 i3 a4  <|@  <|@
tid ?5647 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - 
=== Succesors ===
=== Usages ===
i129 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i129 <|@
result v121|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2979 
stateDuring: ?5647 
=== Succesors ===
next: v164 
=== Usages ===
i165 
=== Predecessor ===
j2978 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2979 stateDuring: ?5647 #next: v164  <|@  <|@
f <@*|@fixed>@ <|@
tid v164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v162 
=== Predecessor ===
i129 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v18|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v119|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B85" "B112" "B130" "B81" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i165 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v162 
values: i129 i61 i28 i301 i61 
=== Succesors ===
=== Usages ===
?163 i90 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v162 values: i129 i61 i28 i301 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v162 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v164 v170 v182 v1469 v1731 
=== Succesors ===
next: a6318 
=== Usages ===
i165 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v164 v170 v182 v1469 v1731 #next: a6318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6318 <|@
result v123|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6319 
=== Usages ===
a2981 v6500 
=== Predecessor ===
v162 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6319  <|@  <|@
tid ?163 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?136 
values: a2614 a2 - - i6251 - i165 
=== Succesors ===
=== Usages ===
v5817 i6319 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?136 values: a2614 a2 - - i6251 - i165  <|@  <|@
f <@~|@floating>@ <|@
tid v6500 <|@
result [v123|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6318 
=== Succesors ===
=== Usages ===
i6319 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6318  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6319 <|@
result v124|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?163 
guard: - 
address: v6500 
=== Succesors ===
next: i6320 
=== Usages ===
v2988 
=== Predecessor ===
a6318 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?163 guard: - address: v6500 #next: i6320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6320 <|@
result v125|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6449 
=== Succesors ===
next: v4282 
=== Usages ===
v6501 v2988 
=== Predecessor ===
i6319 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6449 #next: v4282  <|@  <|@
f <@~|@floating>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6320 
y: i6319 
=== Succesors ===
=== Usages ===
v4282 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6320 y: i6319  <|@  <|@
f <@*|@fixed>@ <|@
tid v4282 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v2988 
=== Succesors ===
trueSuccessor: v4278 
falseSuccessor: v4281 
=== Usages ===
=== Predecessor ===
i6320 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2988 #trueSuccessor: v4278 #falseSuccessor: v4281  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v122|DWORD 
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v124|DWORD = MOV [v123|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4278 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2995 
=== Usages ===
v2995 
=== Predecessor ===
v4282 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2995  <|@  <|@
f <@~|@floating>@ <|@
tid a2981 <|@
result v126|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6318 
=== Succesors ===
=== Usages ===
v6501 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6318  <|@  <|@
f <@~|@floating>@ <|@
tid v6501 <|@
result [v126|QWORD[.] + v125|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2981 
index: i6320 
=== Succesors ===
=== Usages ===
v2995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2981 index: i6320  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4278 
address: v6501 
value: i6251 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v95 
=== Usages ===
=== Predecessor ===
v4278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4278 address: v6501 value: i6251 stateAfter: - lastLocationAccess: - #next: v95  <|@  <|@
f <@*|@fixed>@ <|@
tid v95 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v2995 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v123|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[.] + v125|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4281 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5817 
=== Usages ===
=== Predecessor ===
v4282 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5817  <|@  <|@
f <@~|@floating>@ <|@
tid i5819 <|@
result int[-765211|0xfffffffffff452e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -765211
stableDimension: 0
stamp: i32 [-765211] ⇊00000000fff452e5 ⇈00000000fff452e5
stampKind: i32
value: int[-765211|0xfffffffffff452e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5817 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5817 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?163 
actionAndReason: i5819 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4281 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?163 actionAndReason: i5819 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -765211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v122|DWORD 
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3964 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5694 
=== Usages ===
=== Predecessor ===
v3965 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5694  <|@  <|@
f <@~|@floating>@ <|@
tid i5695 <|@
result int[-675867|0xfffffffffff5afe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -675867
stableDimension: 0
stamp: i32 [-675867] ⇊00000000fff5afe5 ⇈00000000fff5afe5
stampKind: i32
value: int[-675867|0xfffffffffff5afe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3964 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-675867|0xfffffffffff5afe5]] destination: B137 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B139" 
    xhandlers
    flags 
    probability 4602975297990065613
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i45 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i45  <|@  <|@
tid v2996 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@29c0569a
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a2614 a2 i3 a4 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a2614 a2 i3 a4  <|@  <|@
tid ?5642 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
i45 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i45 <|@
result v127|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 32
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v2996 
stateDuring: ?5642 
=== Succesors ===
next: v89 
=== Usages ===
i90 
=== Predecessor ===
v100 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v2996 stateDuring: ?5642 #next: v89  <|@  <|@
f <@*|@fixed>@ <|@
tid v89 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
i45 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i90 <|@
result v128|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v87 
values: i45 i165 
=== Succesors ===
=== Usages ===
v47 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i45 i165  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v89 v95 
=== Succesors ===
next: v4287 
=== Usages ===
i90 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v89 v95 #next: v4287  <|@  <|@
f <@~|@floating>@ <|@
tid v47 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i90 
y: i28 
=== Succesors ===
=== Usages ===
v4287 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i90 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v47 
=== Succesors ===
trueSuccessor: v4286 
falseSuccessor: v49 
=== Usages ===
=== Predecessor ===
v87 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v47 #trueSuccessor: v4286 #falseSuccessor: v49  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4284 
=== Usages ===
=== Predecessor ===
v4287 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4284  <|@  <|@
tid ?88 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4604
stackSize: 1
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 i28 
=== Succesors ===
=== Usages ===
v4284 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4284 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 2997
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?88 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4286 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?88  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -767251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:35, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v49 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v1465 
=== Usages ===
=== Predecessor ===
v4287 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v1465  <|@  <|@
f <@*|@fixed>@ <|@
tid v1465 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i61 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v49 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i61 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B143" "B362" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v40 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 40]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6321 
=== Usages ===
=== Predecessor ===
v41 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6321  <|@  <|@
f <@~|@floating>@ <|@
tid v6587 <|@
result [v10|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
v6321 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6321 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6587 
=== Succesors ===
next: v4292 
=== Usages ===
v6192 
=== Predecessor ===
v40 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6587 #next: v4292  <|@  <|@
f <@~|@floating>@ <|@
tid v6192 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6321 
y: v6167 
=== Succesors ===
=== Usages ===
v4292 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6321 y: v6167  <|@  <|@
f <@*|@fixed>@ <|@
tid v4292 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6192 
=== Succesors ===
trueSuccessor: v4288 
falseSuccessor: v4291 
=== Usages ===
=== Predecessor ===
v6321 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6192 #trueSuccessor: v4288 #falseSuccessor: v4291  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B361" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6322 
=== Usages ===
=== Predecessor ===
v4292 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6322 <|@
result v129|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: n# [I
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6448 
=== Succesors ===
next: i6323 
=== Usages ===
a3014 v6503 
=== Predecessor ===
v4288 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6448 #next: i6323  <|@  <|@
f <@~|@floating>@ <|@
tid v6503 <|@
result [v129|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6322 
=== Succesors ===
=== Usages ===
i6323 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6322  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6323 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6503 
=== Succesors ===
next: i6324 
=== Usages ===
v3031 
=== Predecessor ===
a6322 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6503 #next: i6324  <|@  <|@
f <@~|@floating>@ <|@
tid v6502 <|@
result [v10|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
i6324 i6412 i6417 i6430 i6440 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6324 <|@
result v131|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 5]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4307 
=== Usages ===
v3031 v6504 
=== Predecessor ===
i6323 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4307  <|@  <|@
f <@~|@floating>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6324 
y: i6323 
=== Succesors ===
=== Usages ===
v4307 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6324 y: i6323  <|@  <|@
f <@*|@fixed>@ <|@
tid v4307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3031 
=== Succesors ===
trueSuccessor: v4303 
falseSuccessor: v4306 
=== Usages ===
=== Predecessor ===
i6324 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3031 #trueSuccessor: v4303 #falseSuccessor: v4306  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v129|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v130|DWORD = MOV [v129|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B312" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4303 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6325 
=== Usages ===
i6327 v3038 
=== Predecessor ===
v4307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6325  <|@  <|@
f <@~|@floating>@ <|@
tid v6505 <|@
result [v10|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6242 
=== Succesors ===
=== Usages ===
a6325 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6325 <|@
result v132|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6505 
=== Succesors ===
next: v6326 
=== Usages ===
a3041 v6588 v6508 v6530 v6531 v6559 v6622 v6623 
=== Predecessor ===
v4303 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6505 #next: v6326  <|@  <|@
f <@~|@floating>@ <|@
tid v6588 <|@
result [v132|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
v6326 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6326 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?32 
guard: - 
address: v6588 
=== Succesors ===
next: i6327 
=== Usages ===
v6570 v6193 v6194 
=== Predecessor ===
a6325 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?32 guard: - address: v6588 #next: i6327  <|@  <|@
f <@~|@floating>@ <|@
tid a3014 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 1]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6322 
=== Succesors ===
=== Usages ===
v6504 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6322  <|@  <|@
f <@~|@floating>@ <|@
tid v6504 <|@
result [v134|QWORD[.] + v131|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3014 
index: i6324 
=== Succesors ===
=== Usages ===
v3038 i6327 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3014 index: i6324  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6327 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4658) [bci: 8]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4303 
address: v6504 
=== Succesors ===
next: v3038 
=== Usages ===
?109 ?5644 v3543 ?117 ?138 ?209 ?243 v3490 v3417 v3435 ?2086 
=== Predecessor ===
v6326 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4303 address: v6504 #next: v3038  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4303 
address: v6504 
value: i3 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v151 
=== Usages ===
=== Predecessor ===
i6327 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4303 address: v6504 value: i3 stateAfter: - lastLocationAccess: - #next: v151  <|@  <|@
f <@~|@floating>@ <|@
tid v6193 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6326 
y: v6169 
=== Succesors ===
=== Usages ===
v151 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6326 y: v6169  <|@  <|@
f <@~|@floating>@ <|@
tid a3041 <|@
result v136|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 22]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6325 
=== Succesors ===
=== Usages ===
?566 v3527 ?719 ?2093 ?214 ?1805 ?333 ?195 v3521 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6325  <|@  <|@
tid ?119 <|@
d <@d|@=== Debug Properties ===
bci: 50
code: ResolvedJavaMethodBytecode<Pattern$Branch.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4606
stackSize: 0
=== Inputs ===
outerFrameState: ?66 
values: a6237 a2 i3 a4 i31 
=== Succesors ===
=== Usages ===
?109 ?5644 ?117 ?138 ?209 ?243 ?2086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?66 values: a6237 a2 i3 a4 i31  <|@  <|@
f <@*|@fixed>@ <|@
tid v151 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7408435024506907
=== Inputs ===
condition: v6193 
=== Succesors ===
trueSuccessor: v144 
falseSuccessor: v150 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6193 #trueSuccessor: v144 #falseSuccessor: v150  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v133|DWORD = MOV [v132|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v129|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV [v134|QWORD[.] + v131|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + v131|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B310" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v144 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=match target_method_class=Ljava/util/regex/Pattern$CharProperty; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6328 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6328 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 2]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4317 
=== Usages ===
v188 
=== Predecessor ===
v144 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4317  <|@  <|@
f <@~|@floating>@ <|@
tid v188 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6328 
=== Succesors ===
=== Usages ===
v4317 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6328  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 i3 a4 i6327 - 
=== Succesors ===
=== Usages ===
v5713 v6329 i6331 v6334 v6338 v6342 v6346 v6350 v6354 v6358 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 i3 a4 i6327 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v4317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v188 
=== Succesors ===
trueSuccessor: v4313 
falseSuccessor: v4316 
=== Usages ===
=== Predecessor ===
i6328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v188 #trueSuccessor: v4313 #falseSuccessor: v4316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B309" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6329 
=== Usages ===
=== Predecessor ===
v4317 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6329  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6329 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6577 
=== Succesors ===
next: v4327 
=== Usages ===
v6195 
=== Predecessor ===
v4313 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6577 #next: v4327  <|@  <|@
f <@~|@floating>@ <|@
tid v6195 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6329 
y: v6173 
=== Succesors ===
=== Usages ===
v4327 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6329 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4327 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6195 
=== Succesors ===
trueSuccessor: v4323 
falseSuccessor: v4326 
=== Usages ===
=== Predecessor ===
v6329 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6195 #trueSuccessor: v4323 #falseSuccessor: v4326  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4332 
=== Usages ===
=== Predecessor ===
v4327 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4332  <|@  <|@
f <@~|@floating>@ <|@
tid v6236 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i28 
=== Succesors ===
=== Usages ===
v4332 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4332 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v6236 
=== Succesors ===
trueSuccessor: v4331 
falseSuccessor: v4328 
=== Usages ===
=== Predecessor ===
v4323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6236 #trueSuccessor: v4331 #falseSuccessor: v4328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5718 
=== Usages ===
=== Predecessor ===
v4332 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5718  <|@  <|@
f <@~|@floating>@ <|@
tid i5719 <|@
result int[-780307|0xfffffffffff417ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -780307
stableDimension: 0
stamp: i32 [-780307] ⇊00000000fff417ed ⇈00000000fff417ed
stampKind: i32
value: int[-780307|0xfffffffffff417ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4331 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-780307|0xfffffffffff417ed]] destination: B148 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B308" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6330 
=== Usages ===
=== Predecessor ===
v4332 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6330 <|@
result v138|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6331 
=== Usages ===
a3051 v6506 
=== Predecessor ===
v4328 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6331  <|@  <|@
f <@~|@floating>@ <|@
tid v6506 <|@
result [v138|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6330 
=== Succesors ===
=== Usages ===
i6331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6330  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6331 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6506 
=== Succesors ===
next: v4342 
=== Usages ===
v692 v3059 
=== Predecessor ===
a6330 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6506 #next: v4342  <|@  <|@
f <@~|@floating>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6331 
=== Succesors ===
=== Usages ===
v4342 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3 y: i6331  <|@  <|@
f <@*|@fixed>@ <|@
tid v4342 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v692 
=== Succesors ===
trueSuccessor: v4338 
falseSuccessor: v4341 
=== Usages ===
=== Predecessor ===
i6331 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v692 #trueSuccessor: v4338 #falseSuccessor: v4341  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v139|DWORD = MOV [v138|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B307" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4347 
=== Usages ===
=== Predecessor ===
v4342 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4347  <|@  <|@
f <@~|@floating>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3 
y: i6331 
=== Succesors ===
=== Usages ===
v4347 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3 y: i6331  <|@  <|@
f <@*|@fixed>@ <|@
tid v4347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3059 
=== Succesors ===
trueSuccessor: v4343 
falseSuccessor: v4346 
=== Usages ===
=== Predecessor ===
v4338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3059 #trueSuccessor: v4343 #falseSuccessor: v4346  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B306" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4343 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6332 
=== Usages ===
i6332 
=== Predecessor ===
v4347 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid a3051 <|@
result v140|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6330 
=== Succesors ===
=== Usages ===
v6507 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6330  <|@  <|@
f <@~|@floating>@ <|@
tid v6507 <|@
result [v140|QWORD[.] + v2|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3051 
index: i3 
=== Succesors ===
=== Usages ===
i6332 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3051 index: i3  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6332 <|@
result v141|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4343 
address: v6507 
=== Succesors ===
next: v4352 
=== Usages ===
i3067 j3595 v3910 v3916 j6224 j6225 v6226 v6227 
=== Predecessor ===
v4343 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4343 address: v6507 #next: v4352  <|@  <|@
f <@~|@floating>@ <|@
tid v3910 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3909 
=== Succesors ===
=== Usages ===
v4352 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3909  <|@  <|@
f <@*|@fixed>@ <|@
tid v4352 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3910 
=== Succesors ===
trueSuccessor: v4348 
falseSuccessor: v4351 
=== Usages ===
=== Predecessor ===
i6332 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3910 #trueSuccessor: v4348 #falseSuccessor: v4351  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = UNCOMPRESSPOINTER (input: v138|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSX [v140|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B158" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4348 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6333 
=== Usages ===
=== Predecessor ===
v4352 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6333  <|@  <|@
f <@~|@floating>@ <|@
tid v6508 <|@
result [v132|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6333 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6333 <|@
result v142|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6508 
=== Succesors ===
next: v6334 
=== Usages ===
?2110 v6589 v6509 v6510 ?1086 v6621 
=== Predecessor ===
v4348 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6508 #next: v6334  <|@  <|@
f <@~|@floating>@ <|@
tid v6589 <|@
result [v142|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
v6334 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6334 <|@
result v143|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6589 
=== Succesors ===
next: v477 
=== Usages ===
v6197 v6196 
=== Predecessor ===
a6333 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6589 #next: v477  <|@  <|@
f <@~|@floating>@ <|@
tid v6196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6334 
y: v6175 
=== Succesors ===
=== Usages ===
v477 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6334 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6509 <|@
result [v142|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
i6335 a6337 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
tid ?209 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
?543 ?195 ?333 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@~|@floating>@ <|@
tid i3067 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
?1430 ?1288 v3306 ?719 v1457 ?2110 v1453 ?195 ?333 ?5653 v1275 v880 v1417 ?1086 v3208 v944 ?2093 v876 ?1805 ?1523 v1552 v1421 v940 v1145 ?1412 ?1257 v3188 v1199 v3152 v1141 ?1154 v1352 ?2159 v3180 v1195 v1279 v3159 ?1347 v3166 v1356 v3138 v1556 v3145 ?1529 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
tid ?333 <|@
d <@d|@=== Debug Properties ===
bci: 18
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 0
=== Inputs ===
outerFrameState: ?209 
values: a3041 a2 i3 a4 i3067 
=== Succesors ===
=== Usages ===
?2093 ?719 ?1805 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a3041 a2 i3 a4 i3067  <|@  <|@
tid ?543 <|@
d <@d|@=== Debug Properties ===
bci: 37
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3779
stackSize: 0
=== Inputs ===
outerFrameState: ?209 
values: - - - - - 
=== Succesors ===
=== Usages ===
?5660 ?1657 ?539 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: - - - - -  <|@  <|@
f <@~|@floating>@ <|@
tid v6531 <|@
result [v132|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6378 a6397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@~|@floating>@ <|@
tid i6235 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i3 
y: i61 
=== Succesors ===
=== Usages ===
v3385 v3403 ?1657 v3418 v3285 v3376 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6634 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6384 a6403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v477 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6196 
=== Succesors ===
trueSuccessor: v470 
falseSuccessor: v476 
=== Usages ===
=== Predecessor ===
v6334 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6196 #trueSuccessor: v470 #falseSuccessor: v476  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v132|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v143|DWORD = MOV [v142|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4600340445249586512
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v470 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6335 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6335 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6509 
=== Succesors ===
next: v879 
=== Usages ===
v876 
=== Predecessor ===
v470 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6509 #next: v879  <|@  <|@
f <@~|@floating>@ <|@
tid v876 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6335 
=== Succesors ===
=== Usages ===
v879 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6335  <|@  <|@
f <@*|@fixed>@ <|@
tid v879 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v876 
=== Succesors ===
trueSuccessor: v877 
falseSuccessor: v878 
=== Usages ===
=== Predecessor ===
i6335 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v876 #trueSuccessor: v877 #falseSuccessor: v878  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v142|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576318602178265368
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v877 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2094 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2094  <|@  <|@
f <@*|@fixed>@ <|@
tid v2094 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v877 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6336 
=== Usages ===
=== Predecessor ===
v879 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6336  <|@  <|@
f <@~|@floating>@ <|@
tid v6510 <|@
result [v142|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
i6336 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6336 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6510 
=== Succesors ===
next: v4362 
=== Usages ===
v880 
=== Predecessor ===
v878 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6510 #next: v4362  <|@  <|@
f <@~|@floating>@ <|@
tid v880 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6336 
y: i3067 
=== Succesors ===
=== Usages ===
v4362 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6336 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4362 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v880 
=== Succesors ===
trueSuccessor: v4361 
falseSuccessor: v4358 
=== Usages ===
=== Predecessor ===
i6336 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v880 #trueSuccessor: v4361 #falseSuccessor: v4358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v142|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5730 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5730  <|@  <|@
f <@~|@floating>@ <|@
tid i5731 <|@
result int[-787731|0xfffffffffff3faed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -787731
stableDimension: 0
stamp: i32 [-787731] ⇊00000000fff3faed ⇈00000000fff3faed
stampKind: i32
value: int[-787731|0xfffffffffff3faed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5730 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4361 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-787731|0xfffffffffff3faed]] destination: B156 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B272" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1914 
=== Usages ===
=== Predecessor ===
v4362 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1914  <|@  <|@
f <@*|@fixed>@ <|@
tid v1914 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4358 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B157 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B159" "B305" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4367 
=== Usages ===
=== Predecessor ===
v477 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4367  <|@  <|@
f <@~|@floating>@ <|@
tid v6197 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6334 
y: v6169 
=== Succesors ===
=== Usages ===
v4367 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6334 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4367 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6197 
=== Succesors ===
trueSuccessor: v4363 
falseSuccessor: v4366 
=== Usages ===
=== Predecessor ===
v476 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6197 #trueSuccessor: v4363 #falseSuccessor: v4366  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B160" "B165" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4363 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6337 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6337 <|@
result v146|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6509 
=== Succesors ===
next: v6338 
=== Usages ===
?1154 v6590 v6511 v6512 ?1257 v6620 
=== Predecessor ===
v4363 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6509 #next: v6338  <|@  <|@
f <@~|@floating>@ <|@
tid v6590 <|@
result [v146|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
v6338 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6338 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6590 
=== Succesors ===
next: v902 
=== Usages ===
v6199 v6198 
=== Predecessor ===
a6337 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6590 #next: v902  <|@  <|@
f <@~|@floating>@ <|@
tid v6198 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6338 
y: v6175 
=== Succesors ===
=== Usages ===
v902 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6338 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6511 <|@
result [v146|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
i6339 a6341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
tid ?719 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 
=== Succesors ===
=== Usages ===
?2110 ?1086 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v902 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6198 
=== Succesors ===
trueSuccessor: v895 
falseSuccessor: v901 
=== Usages ===
=== Predecessor ===
v6338 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6198 #trueSuccessor: v895 #falseSuccessor: v901  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v142|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v147|DWORD = MOV [v146|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4595836705571515441
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v895 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6339 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6339  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6339 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6511 
=== Succesors ===
next: v1144 
=== Usages ===
v1141 
=== Predecessor ===
v895 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6511 #next: v1144  <|@  <|@
f <@~|@floating>@ <|@
tid v1141 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6339 
=== Succesors ===
=== Usages ===
v1144 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6339  <|@  <|@
f <@*|@fixed>@ <|@
tid v1144 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1141 
=== Succesors ===
trueSuccessor: v1142 
falseSuccessor: v1143 
=== Usages ===
=== Predecessor ===
i6339 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1141 #trueSuccessor: v1142 #falseSuccessor: v1143  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v146|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B220" 
    xhandlers
    flags 
    probability 4571814894082148562
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2111 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2111  <|@  <|@
f <@*|@fixed>@ <|@
tid v2111 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v1142 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1143 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6340 
=== Usages ===
=== Predecessor ===
v1144 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6340  <|@  <|@
f <@~|@floating>@ <|@
tid v6512 <|@
result [v146|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
i6340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6340 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6512 
=== Succesors ===
next: v4377 
=== Usages ===
v1145 
=== Predecessor ===
v1143 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6512 #next: v4377  <|@  <|@
f <@~|@floating>@ <|@
tid v1145 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6340 
y: i3067 
=== Succesors ===
=== Usages ===
v4377 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6340 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4377 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1145 
=== Succesors ===
trueSuccessor: v4376 
falseSuccessor: v4373 
=== Usages ===
=== Predecessor ===
i6340 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1145 #trueSuccessor: v4376 #falseSuccessor: v4373  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v146|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5736 
=== Usages ===
=== Predecessor ===
v4377 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5736  <|@  <|@
f <@~|@floating>@ <|@
tid i5737 <|@
result int[-790291|0xfffffffffff3f0ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -790291
stableDimension: 0
stamp: i32 [-790291] ⇊00000000fff3f0ed ⇈00000000fff3f0ed
stampKind: i32
value: int[-790291|0xfffffffffff3f0ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5736 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-790291|0xfffffffffff3f0ed]] destination: B163 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B272" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v4377 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B164 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B166" "B304" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4382 
=== Usages ===
=== Predecessor ===
v902 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4382  <|@  <|@
f <@~|@floating>@ <|@
tid v6199 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6338 
y: v6169 
=== Succesors ===
=== Usages ===
v4382 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6338 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6199 
=== Succesors ===
trueSuccessor: v4378 
falseSuccessor: v4381 
=== Usages ===
=== Predecessor ===
v901 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6199 #trueSuccessor: v4378 #falseSuccessor: v4381  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B167" "B172" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6341 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6341 <|@
result v148|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6511 
=== Succesors ===
next: v6342 
=== Usages ===
?1288 v6591 v6513 v6514 ?1347 v6619 
=== Predecessor ===
v4378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6511 #next: v6342  <|@  <|@
f <@~|@floating>@ <|@
tid v6591 <|@
result [v148|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
v6342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6342 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6591 
=== Succesors ===
next: v1167 
=== Usages ===
v6201 v6200 
=== Predecessor ===
a6341 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6591 #next: v1167  <|@  <|@
f <@~|@floating>@ <|@
tid v6200 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6342 
y: v6175 
=== Succesors ===
=== Usages ===
v1167 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6342 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6513 <|@
result [v148|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
i6343 a6345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
tid ?1086 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?719 
values: a6333 i3067 
=== Succesors ===
=== Usages ===
?1257 ?5659 ?1154 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?719 values: a6333 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1167 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6200 
=== Succesors ===
trueSuccessor: v1160 
falseSuccessor: v1166 
=== Usages ===
=== Predecessor ===
v6342 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6200 #trueSuccessor: v1160 #falseSuccessor: v1166  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD[.] = MOV [v146|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v149|DWORD = MOV [v148|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v149|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    probability 4591332965896385548
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6343 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6343 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6513 
=== Succesors ===
next: v1278 
=== Usages ===
v1275 
=== Predecessor ===
v1160 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6513 #next: v1278  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6343 
=== Succesors ===
=== Usages ===
v1278 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6343  <|@  <|@
f <@*|@fixed>@ <|@
tid v1278 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v1276 
falseSuccessor: v1277 
=== Usages ===
=== Predecessor ===
i6343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v1276 #falseSuccessor: v1277  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v148|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B210" 
    xhandlers
    flags 
    probability 4567311185988309688
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1276 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2127 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2127  <|@  <|@
f <@*|@fixed>@ <|@
tid v2127 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
v1276 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1277 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6344 
=== Usages ===
=== Predecessor ===
v1278 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6344  <|@  <|@
f <@~|@floating>@ <|@
tid v6514 <|@
result [v148|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
i6344 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6344 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6514 
=== Succesors ===
next: v4392 
=== Usages ===
v1279 
=== Predecessor ===
v1277 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6514 #next: v4392  <|@  <|@
f <@~|@floating>@ <|@
tid v1279 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6344 
y: i3067 
=== Succesors ===
=== Usages ===
v4392 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6344 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4392 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1279 
=== Succesors ===
trueSuccessor: v4391 
falseSuccessor: v4388 
=== Usages ===
=== Predecessor ===
i6344 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1279 #trueSuccessor: v4391 #falseSuccessor: v4388  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v148|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5742 
=== Usages ===
=== Predecessor ===
v4392 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5742  <|@  <|@
f <@~|@floating>@ <|@
tid i5743 <|@
result int[-792851|0xfffffffffff3e6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -792851
stableDimension: 0
stamp: i32 [-792851] ⇊00000000fff3e6ed ⇈00000000fff3e6ed
stampKind: i32
value: int[-792851|0xfffffffffff3e6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4391 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792851|0xfffffffffff3e6ed]] destination: B170 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B272" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2374 
=== Usages ===
=== Predecessor ===
v4392 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2374  <|@  <|@
f <@*|@fixed>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4388 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B171 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B173" "B303" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4397 
=== Usages ===
=== Predecessor ===
v1167 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4397  <|@  <|@
f <@~|@floating>@ <|@
tid v6201 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6342 
y: v6169 
=== Succesors ===
=== Usages ===
v4397 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6342 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4397 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6201 
=== Succesors ===
trueSuccessor: v4393 
falseSuccessor: v4396 
=== Usages ===
=== Predecessor ===
v1166 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6201 #trueSuccessor: v4393 #falseSuccessor: v4396  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v149|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B179" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4393 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6345 
=== Usages ===
=== Predecessor ===
v4397 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6345 <|@
result v150|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6513 
=== Succesors ===
next: v6346 
=== Usages ===
?2159 v6592 v6515 v6516 ?1412 v6618 
=== Predecessor ===
v4393 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6513 #next: v6346  <|@  <|@
f <@~|@floating>@ <|@
tid v6592 <|@
result [v150|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
v6346 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6346 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6592 
=== Succesors ===
next: v1301 
=== Usages ===
v6203 v6202 
=== Predecessor ===
a6345 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6592 #next: v1301  <|@  <|@
f <@~|@floating>@ <|@
tid v6202 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6346 
y: v6175 
=== Succesors ===
=== Usages ===
v1301 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6346 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6515 <|@
result [v150|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
i6347 a6349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
tid ?1257 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1086 
values: a6337 i3067 
=== Succesors ===
=== Usages ===
?1347 ?5657 ?1288 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: a6337 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6202 
=== Succesors ===
trueSuccessor: v1294 
falseSuccessor: v1300 
=== Usages ===
=== Predecessor ===
v6346 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6202 #trueSuccessor: v1294 #falseSuccessor: v1300  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v148|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v151|DWORD = MOV [v150|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v151|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4586829226224196771
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1294 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6347 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6347  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6347 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6515 
=== Succesors ===
next: v1355 
=== Usages ===
v1352 
=== Predecessor ===
v1294 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6515 #next: v1355  <|@  <|@
f <@~|@floating>@ <|@
tid v1352 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6347 
=== Succesors ===
=== Usages ===
v1355 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6347  <|@  <|@
f <@*|@fixed>@ <|@
tid v1355 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1352 
=== Succesors ===
trueSuccessor: v1353 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i6347 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1352 #trueSuccessor: v1353 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v150|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B208" 
    xhandlers
    flags 
    probability 4562807477896748697
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1353 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2143 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2143  <|@  <|@
f <@*|@fixed>@ <|@
tid v2143 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
v1353 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B175 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6348 
=== Usages ===
=== Predecessor ===
v1355 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6348  <|@  <|@
f <@~|@floating>@ <|@
tid v6516 <|@
result [v150|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
i6348 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6348 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6516 
=== Succesors ===
next: v4407 
=== Usages ===
v1356 
=== Predecessor ===
v1354 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6516 #next: v4407  <|@  <|@
f <@~|@floating>@ <|@
tid v1356 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6348 
y: i3067 
=== Succesors ===
=== Usages ===
v4407 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6348 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4407 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1356 
=== Succesors ===
trueSuccessor: v4406 
falseSuccessor: v4403 
=== Usages ===
=== Predecessor ===
i6348 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1356 #trueSuccessor: v4406 #falseSuccessor: v4403  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v150|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4406 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5748 
=== Usages ===
=== Predecessor ===
v4407 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5748  <|@  <|@
f <@~|@floating>@ <|@
tid i5749 <|@
result int[-795411|0xfffffffffff3dced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -795411
stableDimension: 0
stamp: i32 [-795411] ⇊00000000fff3dced ⇈00000000fff3dced
stampKind: i32
value: int[-795411|0xfffffffffff3dced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-795411|0xfffffffffff3dced]] destination: B177 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B272" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2409 
=== Usages ===
=== Predecessor ===
v4407 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2409  <|@  <|@
f <@*|@fixed>@ <|@
tid v2409 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B178 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B180" "B302" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4412 
=== Usages ===
=== Predecessor ===
v1301 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4412  <|@  <|@
f <@~|@floating>@ <|@
tid v6203 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6346 
y: v6169 
=== Succesors ===
=== Usages ===
v4412 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6346 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4412 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6203 
=== Succesors ===
trueSuccessor: v4408 
falseSuccessor: v4411 
=== Usages ===
=== Predecessor ===
v1300 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6203 #trueSuccessor: v4408 #falseSuccessor: v4411  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v151|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" "B186" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4408 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6349 
=== Usages ===
=== Predecessor ===
v4412 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6349 <|@
result v152|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6515 
=== Succesors ===
next: v6350 
=== Usages ===
?1430 v6593 v6517 v6518 ?1523 v6617 
=== Predecessor ===
v4408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6515 #next: v6350  <|@  <|@
f <@~|@floating>@ <|@
tid v6593 <|@
result [v152|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
v6350 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6350 <|@
result v153|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6593 
=== Succesors ===
next: v1378 
=== Usages ===
v6205 v6204 
=== Predecessor ===
a6349 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6593 #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid v6204 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6350 
y: v6175 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6350 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6517 <|@
result [v152|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
i6351 a6353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
tid ?1347 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1257 
values: a6341 i3067 
=== Succesors ===
=== Usages ===
?1412 ?5656 ?2159 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: a6341 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6204 
=== Succesors ===
trueSuccessor: v1371 
falseSuccessor: v1377 
=== Usages ===
=== Predecessor ===
v6350 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6204 #trueSuccessor: v1371 #falseSuccessor: v1377  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOV [v150|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v153|DWORD = MOV [v152|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v153|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4582325486554949048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6351 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6351  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6351 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6517 
=== Succesors ===
next: v1420 
=== Usages ===
v1417 
=== Predecessor ===
v1371 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6517 #next: v1420  <|@  <|@
f <@~|@floating>@ <|@
tid v1417 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6351 
=== Succesors ===
=== Usages ===
v1420 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6351  <|@  <|@
f <@*|@fixed>@ <|@
tid v1420 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1417 
=== Succesors ===
trueSuccessor: v1418 
falseSuccessor: v1419 
=== Usages ===
=== Predecessor ===
i6351 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1417 #trueSuccessor: v1418 #falseSuccessor: v1419  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v152|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B206" 
    xhandlers
    flags 
    probability 4558303769807465541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2160 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2160  <|@  <|@
f <@*|@fixed>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v1418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1419 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6352 
=== Usages ===
=== Predecessor ===
v1420 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6352  <|@  <|@
f <@~|@floating>@ <|@
tid v6518 <|@
result [v152|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
i6352 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6352 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6518 
=== Succesors ===
next: v4422 
=== Usages ===
v1421 
=== Predecessor ===
v1419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6518 #next: v4422  <|@  <|@
f <@~|@floating>@ <|@
tid v1421 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6352 
y: i3067 
=== Succesors ===
=== Usages ===
v4422 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6352 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4422 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1421 
=== Succesors ===
trueSuccessor: v4421 
falseSuccessor: v4418 
=== Usages ===
=== Predecessor ===
i6352 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1421 #trueSuccessor: v4421 #falseSuccessor: v4418  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v152|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4421 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5754 
=== Usages ===
=== Predecessor ===
v4422 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5754  <|@  <|@
f <@~|@floating>@ <|@
tid i5755 <|@
result int[-797971|0xfffffffffff3d2ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -797971
stableDimension: 0
stamp: i32 [-797971] ⇊00000000fff3d2ed ⇈00000000fff3d2ed
stampKind: i32
value: int[-797971|0xfffffffffff3d2ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5754 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4421 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-797971|0xfffffffffff3d2ed]] destination: B184 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B272" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4418 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2427 
=== Usages ===
=== Predecessor ===
v4422 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2427  <|@  <|@
f <@*|@fixed>@ <|@
tid v2427 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4418 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B185 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B187" "B301" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4427 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4427  <|@  <|@
f <@~|@floating>@ <|@
tid v6205 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6350 
y: v6169 
=== Succesors ===
=== Usages ===
v4427 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6350 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4427 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6205 
=== Succesors ===
trueSuccessor: v4423 
falseSuccessor: v4426 
=== Usages ===
=== Predecessor ===
v1377 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6205 #trueSuccessor: v4423 #falseSuccessor: v4426  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v153|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B193" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4423 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6353 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6353 <|@
result v154|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6517 
=== Succesors ===
next: v6354 
=== Usages ===
?1529 v6594 v6519 v6520 ?5653 v6616 
=== Predecessor ===
v4423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6517 #next: v6354  <|@  <|@
f <@~|@floating>@ <|@
tid v6594 <|@
result [v154|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
v6354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6354 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6594 
=== Succesors ===
next: v1443 
=== Usages ===
v6207 v6206 
=== Predecessor ===
a6353 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6594 #next: v1443  <|@  <|@
f <@~|@floating>@ <|@
tid v6206 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6354 
y: v6175 
=== Succesors ===
=== Usages ===
v1443 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6354 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6519 <|@
result [v154|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
i6355 a6357 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
tid ?1412 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1347 
values: a6345 i3067 
=== Succesors ===
=== Usages ===
?1523 ?5655 ?1430 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: a6345 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6206 
=== Succesors ===
trueSuccessor: v1436 
falseSuccessor: v1442 
=== Usages ===
=== Predecessor ===
v6354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6206 #trueSuccessor: v1436 #falseSuccessor: v1442  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = MOV [v152|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v155|DWORD = MOV [v154|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4577821746888642316
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6355 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6355  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6355 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6519 
=== Succesors ===
next: v1456 
=== Usages ===
v1453 
=== Predecessor ===
v1436 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6519 #next: v1456  <|@  <|@
f <@~|@floating>@ <|@
tid v1453 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6355 
=== Succesors ===
=== Usages ===
v1456 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6355  <|@  <|@
f <@*|@fixed>@ <|@
tid v1456 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1453 
=== Succesors ===
trueSuccessor: v1454 
falseSuccessor: v1455 
=== Usages ===
=== Predecessor ===
i6355 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1453 #trueSuccessor: v1454 #falseSuccessor: v1455  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v154|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B204" 
    xhandlers
    flags 
    probability 4553800061720460172
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1454 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2208 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2208 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
v1454 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B189 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1455 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6356 
=== Usages ===
=== Predecessor ===
v1456 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6356  <|@  <|@
f <@~|@floating>@ <|@
tid v6520 <|@
result [v154|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
i6356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6356 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6520 
=== Succesors ===
next: v4437 
=== Usages ===
v1457 
=== Predecessor ===
v1455 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6520 #next: v4437  <|@  <|@
f <@~|@floating>@ <|@
tid v1457 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6356 
y: i3067 
=== Succesors ===
=== Usages ===
v4437 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6356 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4437 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1457 
=== Succesors ===
trueSuccessor: v4436 
falseSuccessor: v4433 
=== Usages ===
=== Predecessor ===
i6356 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1457 #trueSuccessor: v4436 #falseSuccessor: v4433  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v154|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4436 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5760 
=== Usages ===
=== Predecessor ===
v4437 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5760  <|@  <|@
f <@~|@floating>@ <|@
tid i5761 <|@
result int[-800531|0xfffffffffff3c8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -800531
stableDimension: 0
stamp: i32 [-800531] ⇊00000000fff3c8ed ⇈00000000fff3c8ed
stampKind: i32
value: int[-800531|0xfffffffffff3c8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4436 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-800531|0xfffffffffff3c8ed]] destination: B191 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B272" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4433 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2463 
=== Usages ===
=== Predecessor ===
v4437 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2463  <|@  <|@
f <@*|@fixed>@ <|@
tid v2463 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4433 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B192 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B194" "B300" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4442 
=== Usages ===
=== Predecessor ===
v1443 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4442  <|@  <|@
f <@~|@floating>@ <|@
tid v6207 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6354 
y: v6169 
=== Succesors ===
=== Usages ===
v4442 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6354 y: v6169  <|@  <|@
f <@*|@fixed>@ <|@
tid v4442 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6207 
=== Succesors ===
trueSuccessor: v4438 
falseSuccessor: v4441 
=== Usages ===
=== Predecessor ===
v1442 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6207 #trueSuccessor: v4438 #falseSuccessor: v4441  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B200" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4438 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6357 
=== Usages ===
=== Predecessor ===
v4442 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6357 <|@
result v156|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$lhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6519 
=== Succesors ===
next: v6358 
=== Usages ===
a3131 v6595 v6521 v6522 
=== Predecessor ===
v4438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6519 #next: v6358  <|@  <|@
f <@~|@floating>@ <|@
tid v6595 <|@
result [v156|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
v6358 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6358 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?109 
guard: - 
address: v6595 
=== Succesors ===
next: v1542 
=== Usages ===
v6208 
=== Predecessor ===
a6357 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?109 guard: - address: v6595 #next: v1542  <|@  <|@
f <@~|@floating>@ <|@
tid v6208 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6358 
y: v6175 
=== Succesors ===
=== Usages ===
v1542 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6358 y: v6175  <|@  <|@
tid ?1523 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1412 
values: a6349 i3067 
=== Succesors ===
=== Usages ===
?5654 ?5653 ?1529 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: a6349 i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1542 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5000105004025154
=== Inputs ===
condition: v6208 
=== Succesors ===
trueSuccessor: v1535 
falseSuccessor: v1541 
=== Usages ===
=== Predecessor ===
v6358 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6208 #trueSuccessor: v1535 #falseSuccessor: v1541  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD[.] = MOV [v154|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v157|DWORD = MOV [v156|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v157|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4573318007225276515
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1535 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6359 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6359  <|@  <|@
f <@~|@floating>@ <|@
tid v6521 <|@
result [v156|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
i6359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6359 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6521 
=== Succesors ===
next: v1555 
=== Usages ===
v1552 
=== Predecessor ===
v1535 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6521 #next: v1555  <|@  <|@
f <@~|@floating>@ <|@
tid v1552 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6359 
=== Succesors ===
=== Usages ===
v1555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1555 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1552 
=== Succesors ===
trueSuccessor: v1553 
falseSuccessor: v1554 
=== Usages ===
=== Predecessor ===
i6359 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1552 #trueSuccessor: v1553 #falseSuccessor: v1554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v156|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B202" 
    xhandlers
    flags 
    probability 4549296353635732543
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1553 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2224 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2224  <|@  <|@
f <@*|@fixed>@ <|@
tid v2224 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
v1553 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1554 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6360 
=== Usages ===
=== Predecessor ===
v1555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6360  <|@  <|@
f <@~|@floating>@ <|@
tid v6522 <|@
result [v156|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6357 
=== Succesors ===
=== Usages ===
i6360 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6357  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6360 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6522 
=== Succesors ===
next: v4452 
=== Usages ===
v1556 
=== Predecessor ===
v1554 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6522 #next: v4452  <|@  <|@
f <@~|@floating>@ <|@
tid v1556 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6360 
y: i3067 
=== Succesors ===
=== Usages ===
v4452 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6360 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4452 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1556 
=== Succesors ===
trueSuccessor: v4451 
falseSuccessor: v4448 
=== Usages ===
=== Predecessor ===
i6360 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1556 #trueSuccessor: v4451 #falseSuccessor: v4448  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v156|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4451 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5766 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5766  <|@  <|@
f <@~|@floating>@ <|@
tid i5767 <|@
result int[-803091|0xfffffffffff3beed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -803091
stableDimension: 0
stamp: i32 [-803091] ⇊00000000fff3beed ⇈00000000fff3beed
stampKind: i32
value: int[-803091|0xfffffffffff3beed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4451 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-803091|0xfffffffffff3beed]] destination: B198 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4448 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2391 
=== Usages ===
=== Predecessor ===
v4452 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2391  <|@  <|@
f <@*|@fixed>@ <|@
tid v2391 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v4448 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B199 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B201" "B239" 
    xhandlers
    flags 
    probability 4573317727165049133
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1541 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1511 
=== Usages ===
=== Predecessor ===
v1542 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1511  <|@  <|@
f <@~|@floating>@ <|@
tid a3131 <|@
result v158|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6357 
=== Succesors ===
=== Usages ===
v3138 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6357  <|@  <|@
tid v3138 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6b30e0aa
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3131 i3067 
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3131 i3067  <|@  <|@
tid ?5653 <|@
d <@d|@=== Debug Properties ===
bci: 5
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1523 
values: a6353 i3067 
=== Succesors ===
=== Usages ===
i1511 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: a6353 i3067  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1511 <|@
result v159|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 5
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3138 
stateDuring: ?5653 
=== Succesors ===
next: v1516 
=== Usages ===
v1513 
=== Predecessor ===
v1541 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3138 stateDuring: ?5653 #next: v1516  <|@  <|@
f <@~|@floating>@ <|@
tid v1513 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1511 
y: i28 
=== Succesors ===
=== Usages ===
v1516 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1511 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1513 
=== Succesors ===
trueSuccessor: v1514 
falseSuccessor: v1515 
=== Usages ===
=== Predecessor ===
i1511 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1513 #trueSuccessor: v1514 #falseSuccessor: v1515  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = UNCOMPRESSPOINTER (input: v156|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v158|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v154|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v159|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B202" 
    xhandlers
    flags 
    probability 4544854622813912742
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1514 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2223 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2223  <|@  <|@
f <@*|@fixed>@ <|@
tid v2223 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2222 
=== Predecessor ===
v1514 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B196" 
    successors "B203" "B238" 
    xhandlers
    flags 
    probability 4551909452847958930
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2223 v2224 
=== Succesors ===
next: a6361 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2223 v2224 #next: a6361  <|@  <|@
f <@~|@floating>@ <|@
tid v6616 <|@
result [v154|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6353 
=== Succesors ===
=== Usages ===
a6361 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6353  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6361 <|@
result v160|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6616 
=== Succesors ===
next: v6609 
=== Usages ===
a3141 v6609 
=== Predecessor ===
v2222 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6616 #next: v6609  <|@  <|@
tid ?1529 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1523 
values: a6353 i3067 i28 
=== Succesors ===
=== Usages ===
v6609 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: a6353 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1529 
object: a6361 
=== Succesors ===
next: i1519 
=== Usages ===
=== Predecessor ===
a6361 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1529 object: a6361 #next: i1519  <|@  <|@
f <@~|@floating>@ <|@
tid a3141 <|@
result v161|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6361 
=== Succesors ===
=== Usages ===
v3145 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6361  <|@  <|@
tid v3145 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@1c5361d3
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3141 i3067 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3141 i3067  <|@  <|@
tid ?5654 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1523 
values: - - 
=== Succesors ===
=== Usages ===
i1519 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1523 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1519 <|@
result v162|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3145 
stateDuring: ?5654 
=== Succesors ===
next: v1405 
=== Usages ===
v1402 
=== Predecessor ===
v6609 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3145 stateDuring: ?5654 #next: v1405  <|@  <|@
f <@~|@floating>@ <|@
tid v1402 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1519 
y: i28 
=== Succesors ===
=== Usages ===
v1405 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1519 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1405 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1402 
=== Succesors ===
trueSuccessor: v1403 
falseSuccessor: v1404 
=== Usages ===
=== Predecessor ===
i1519 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1402 #trueSuccessor: v1403 #falseSuccessor: v1404  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD[.] = MOV [v154|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v154|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v160|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = UNCOMPRESSPOINTER (input: v160|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4523206434734423763
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1403 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2207 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2207  <|@  <|@
f <@*|@fixed>@ <|@
tid v2207 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2206 
=== Predecessor ===
v1403 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B189" 
    successors "B205" "B237" 
    xhandlers
    flags 
    probability 4553847686786724362
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2206 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2207 v2208 
=== Succesors ===
next: a6362 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2207 v2208 #next: a6362  <|@  <|@
f <@~|@floating>@ <|@
tid v6617 <|@
result [v152|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6349 
=== Succesors ===
=== Usages ===
a6362 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6349  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6362 <|@
result v163|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6617 
=== Succesors ===
next: v6610 
=== Usages ===
a3148 v6610 
=== Predecessor ===
v2206 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6617 #next: v6610  <|@  <|@
tid ?1430 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1412 
values: a6349 i3067 i28 
=== Succesors ===
=== Usages ===
v6610 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: a6349 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6610 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1430 
object: a6362 
=== Succesors ===
next: i1408 
=== Usages ===
=== Predecessor ===
a6362 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1430 object: a6362 #next: i1408  <|@  <|@
f <@~|@floating>@ <|@
tid a3148 <|@
result v164|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6362 
=== Succesors ===
=== Usages ===
v3152 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6362  <|@  <|@
tid v3152 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@23d03bd6
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3148 i3067 
=== Succesors ===
=== Usages ===
i1408 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3148 i3067  <|@  <|@
tid ?5655 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1412 
values: - - 
=== Succesors ===
=== Usages ===
i1408 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1412 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1408 <|@
result v165|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3152 
stateDuring: ?5655 
=== Succesors ===
next: v1340 
=== Usages ===
v1337 
=== Predecessor ===
v6610 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3152 stateDuring: ?5655 #next: v1340  <|@  <|@
f <@~|@floating>@ <|@
tid v1337 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1408 
y: i28 
=== Succesors ===
=== Usages ===
v1340 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1408 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1337 
=== Succesors ===
trueSuccessor: v1338 
falseSuccessor: v1339 
=== Usages ===
=== Predecessor ===
i1408 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1337 #trueSuccessor: v1338 #falseSuccessor: v1339  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[.] = MOV [v152|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v163|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = UNCOMPRESSPOINTER (input: v163|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v165|DWORD, y: v165|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" 
    xhandlers
    flags 
    probability 4525280936536781846
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2158 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2158  <|@  <|@
f <@*|@fixed>@ <|@
tid v2158 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2157 
=== Predecessor ===
v1338 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" "B182" 
    successors "B207" "B236" 
    xhandlers
    flags 
    probability 4558335685863263097
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2157 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2158 v2160 
=== Succesors ===
next: a6363 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2158 v2160 #next: a6363  <|@  <|@
f <@~|@floating>@ <|@
tid v6618 <|@
result [v150|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6345 
=== Succesors ===
=== Usages ===
a6363 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6345  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6363 <|@
result v166|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6618 
=== Succesors ===
next: v6611 
=== Usages ===
a3155 v6611 
=== Predecessor ===
v2157 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6618 #next: v6611  <|@  <|@
tid ?2159 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1347 
values: a6345 i3067 i28 
=== Succesors ===
=== Usages ===
v6611 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: a6345 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2159 
object: a6363 
=== Succesors ===
next: i1343 
=== Usages ===
=== Predecessor ===
a6363 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2159 object: a6363 #next: i1343  <|@  <|@
f <@~|@floating>@ <|@
tid a3155 <|@
result v167|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6363 
=== Succesors ===
=== Usages ===
v3159 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6363  <|@  <|@
tid v3159 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@80fcdb0
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3155 i3067 
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3155 i3067  <|@  <|@
tid ?5656 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1347 
values: - - 
=== Succesors ===
=== Usages ===
i1343 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1347 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1343 <|@
result v168|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3159 
stateDuring: ?5656 
=== Succesors ===
next: v1250 
=== Usages ===
v1247 
=== Predecessor ===
v6611 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3159 stateDuring: ?5656 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid v1247 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1343 
y: i28 
=== Succesors ===
=== Usages ===
v1250 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1343 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1247 
=== Succesors ===
trueSuccessor: v1248 
falseSuccessor: v1249 
=== Usages ===
=== Predecessor ===
i1343 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1247 #trueSuccessor: v1248 #falseSuccessor: v1249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = MOV [v150|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v166|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v166|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v167|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v168|DWORD, y: v168|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" 
    xhandlers
    flags 
    probability 4529760080500910324
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1248 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2142 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2142  <|@  <|@
f <@*|@fixed>@ <|@
tid v2142 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2141 
=== Predecessor ===
v1248 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B175" 
    successors "B209" "B235" 
    xhandlers
    flags 
    probability 4562839298422611714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2141 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2142 v2143 
=== Succesors ===
next: a6364 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2142 v2143 #next: a6364  <|@  <|@
f <@~|@floating>@ <|@
tid v6619 <|@
result [v148|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6341 
=== Succesors ===
=== Usages ===
a6364 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6364 <|@
result v169|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6619 
=== Succesors ===
next: v6612 
=== Usages ===
a3162 v6612 
=== Predecessor ===
v2141 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6619 #next: v6612  <|@  <|@
tid ?1288 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1257 
values: a6341 i3067 i28 
=== Succesors ===
=== Usages ===
v6612 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: a6341 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6612 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1288 
object: a6364 
=== Succesors ===
next: i1253 
=== Usages ===
=== Predecessor ===
a6364 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?1288 object: a6364 #next: i1253  <|@  <|@
f <@~|@floating>@ <|@
tid a3162 <|@
result v170|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6364 
=== Succesors ===
=== Usages ===
v3166 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6364  <|@  <|@
tid v3166 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@645659ab
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3162 i3067 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3162 i3067  <|@  <|@
tid ?5657 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1257 
values: - - 
=== Succesors ===
=== Usages ===
i1253 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1257 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1253 <|@
result v171|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3166 
stateDuring: ?5657 
=== Succesors ===
next: v1079 
=== Usages ===
v1076 
=== Predecessor ===
v6612 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3166 stateDuring: ?5657 #next: v1079  <|@  <|@
f <@~|@floating>@ <|@
tid v1076 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1253 
y: i28 
=== Succesors ===
=== Usages ===
v1079 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1253 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v1076 
=== Succesors ===
trueSuccessor: v1077 
falseSuccessor: v1078 
=== Usages ===
=== Predecessor ===
i1253 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1076 #trueSuccessor: v1077 #falseSuccessor: v1078  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v148|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v169|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = UNCOMPRESSPOINTER (input: v169|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v171|DWORD, y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B210" 
    xhandlers
    flags 
    probability 4534263700400648468
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2126  <|@  <|@
f <@*|@fixed>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2125 
=== Predecessor ===
v1077 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" "B168" 
    successors "B211" "B217" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2125 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2126 v2127 
=== Succesors ===
next: a6365 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2126 v2127 #next: a6365  <|@  <|@
f <@~|@floating>@ <|@
tid v6620 <|@
result [v146|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6337 
=== Succesors ===
=== Usages ===
a6365 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6337  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6365 <|@
result v172|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6620 
=== Succesors ===
next: v6366 
=== Usages ===
a3169 v6596 v6523 
=== Predecessor ===
v2125 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6620 #next: v6366  <|@  <|@
tid ?1154 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?1086 
values: a6337 i3067 i28 
=== Succesors ===
=== Usages ===
v5935 v6366 i6368 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: a6337 i3067 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6596 <|@
result [v172|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6365 
=== Succesors ===
=== Usages ===
v6366 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6366 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1154 
guard: - 
address: v6596 
=== Succesors ===
next: v1193 
=== Usages ===
v6209 
=== Predecessor ===
a6365 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1154 guard: - address: v6596 #next: v1193  <|@  <|@
f <@~|@floating>@ <|@
tid v6209 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6366 
y: v6181 
=== Succesors ===
=== Usages ===
v1193 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6366 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v1193 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6209 
=== Succesors ===
trueSuccessor: v1186 
falseSuccessor: v1192 
=== Usages ===
=== Predecessor ===
v6366 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6209 #trueSuccessor: v1186 #falseSuccessor: v1192  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v146|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v172|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B212" "B215" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4482 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4482  <|@  <|@
f <@~|@floating>@ <|@
tid v6227 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4482 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4482 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6227 
=== Succesors ===
trueSuccessor: v4478 
falseSuccessor: v4481 
=== Usages ===
=== Predecessor ===
v1186 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6227 #trueSuccessor: v4478 #falseSuccessor: v4481  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6367 
=== Usages ===
=== Predecessor ===
v4482 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6367  <|@  <|@
f <@~|@floating>@ <|@
tid v6523 <|@
result [v172|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6365 
=== Succesors ===
=== Usages ===
a6367 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6365  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6367 <|@
result v173|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6523 
=== Succesors ===
next: i6368 
=== Usages ===
v6525 v6524 
=== Predecessor ===
v4478 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6523 #next: i6368  <|@  <|@
f <@~|@floating>@ <|@
tid v6524 <|@
result [v173|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6367 
=== Succesors ===
=== Usages ===
i6368 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6368 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1154 
guard: - 
address: v6524 
=== Succesors ===
next: v4492 
=== Usages ===
v3180 
=== Predecessor ===
a6367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1154 guard: - address: v6524 #next: v4492  <|@  <|@
f <@~|@floating>@ <|@
tid v3180 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6368 
=== Succesors ===
=== Usages ===
v4492 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6368  <|@  <|@
f <@*|@fixed>@ <|@
tid v4492 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3180 
=== Succesors ===
trueSuccessor: v4488 
falseSuccessor: v4491 
=== Usages ===
=== Predecessor ===
i6368 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3180 #trueSuccessor: v4488 #falseSuccessor: v4491  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD[.] = MOV [v172|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v173|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4488 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6369 
=== Usages ===
i6369 
=== Predecessor ===
v4492 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6369  <|@  <|@
f <@~|@floating>@ <|@
tid j3595 <|@
result v174|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6525 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6525 <|@
result [v174|QWORD + v173|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j3595 
index: a6367 
=== Succesors ===
=== Usages ===
i6369 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3595 index: a6367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6369 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4488 
address: v6525 
=== Succesors ===
next: v1484 
=== Usages ===
i3596 
=== Predecessor ===
v4488 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4488 address: v6525 #next: v1484  <|@  <|@
f <@~|@floating>@ <|@
tid i3596 <|@
result v175|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6369 
=== Succesors ===
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6369  <|@  <|@
f <@*|@fixed>@ <|@
tid v1484 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
i6369 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVZXB [v174|QWORD + v173|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD] destination: B213 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4491 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5940 
=== Usages ===
=== Predecessor ===
v4492 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5940  <|@  <|@
f <@~|@floating>@ <|@
tid i5941 <|@
result int[-814363|0xfffffffffff392e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -814363
stableDimension: 0
stamp: i32 [-814363] ⇊00000000fff392e5 ⇈00000000fff392e5
stampKind: i32
value: int[-814363|0xfffffffffff392e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5940 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5930 
=== Predecessor ===
v4491 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-814363|0xfffffffffff392e5]] destination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4481 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5936 
=== Usages ===
=== Predecessor ===
v4482 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5936  <|@  <|@
f <@~|@floating>@ <|@
tid i5937 <|@
result int[-811795|0xfffffffffff39ced] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -811795
stableDimension: 0
stamp: i32 [-811795] ⇊00000000fff39ced ⇈00000000fff39ced
stampKind: i32
value: int[-811795|0xfffffffffff39ced]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5930 
=== Predecessor ===
v4481 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-811795|0xfffffffffff39ced]] destination: B215 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5933 <|@
result v176|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-814363 - -811531] ⇊00000000fff390e5 ⇈00000000fff39ffd
valueDescription: i32
=== Inputs ===
merge: v5930 
values: i5937 i5941 
=== Succesors ===
=== Usages ===
v5935 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5930 values: i5937 i5941  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5936 v5940 
=== Succesors ===
next: v5935 
=== Usages ===
i5933 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5936 v5940 #next: v5935  <|@  <|@
f <@*|@fixed>@ <|@
tid v5935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1154 
actionAndReason: i5933 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5930 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1154 actionAndReason: i5933 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1192 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i1082 
=== Usages ===
=== Predecessor ===
v1193 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i1082  <|@  <|@
f <@~|@floating>@ <|@
tid a3169 <|@
result v177|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
value: a6365 
=== Succesors ===
=== Usages ===
v3188 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6365  <|@  <|@
tid v3188 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@638ce10b
stamp: void
targetMethod: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>
=== Inputs ===
arguments: a3169 i3067 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3169 i3067  <|@  <|@
tid ?5659 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 0
=== Inputs ===
outerFrameState: ?1086 
values: - - 
=== Succesors ===
=== Usages ===
i1082 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?1086 values: - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1082 <|@
result v178|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 16
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$CharProperty.isSatisfiedBy
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3188 
stateDuring: ?5659 
=== Succesors ===
next: v908 
=== Usages ===
i891 
=== Predecessor ===
v1192 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3188 stateDuring: ?5659 #next: v908  <|@  <|@
f <@*|@fixed>@ <|@
tid v908 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v888 
=== Predecessor ===
i1082 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = UNCOMPRESSPOINTER (input: v172|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B213" 
    successors "B219" "B234" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i891 <|@
result v179|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v888 
values: i1082 i3596 
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v888 values: i1082 i3596  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v888 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v908 v1484 
=== Succesors ===
next: v712 
=== Usages ===
i891 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v908 v1484 #next: v712  <|@  <|@
f <@~|@floating>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i891 
y: i28 
=== Succesors ===
=== Usages ===
v712 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i891 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v709 
=== Succesors ===
trueSuccessor: v710 
falseSuccessor: v711 
=== Usages ===
=== Predecessor ===
v888 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v709 #trueSuccessor: v710 #falseSuccessor: v711  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v179|DWORD, y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B220" 
    xhandlers
    flags 
    probability 4538767470182288717
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v710 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2109  <|@  <|@
f <@*|@fixed>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2108 
=== Predecessor ===
v710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B219 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" "B161" 
    successors "B221" "B226" 
    xhandlers
    flags 
    probability 4571846715351865631
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2108 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2109 v2111 
=== Succesors ===
next: a6370 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2109 v2111 #next: a6370  <|@  <|@
f <@~|@floating>@ <|@
tid v6621 <|@
result [v142|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6333 
=== Succesors ===
=== Usages ===
a6370 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6333  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6370 <|@
result v180|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6621 
=== Succesors ===
next: v6371 
=== Usages ===
v6597 v6527 v6526 
=== Predecessor ===
v2108 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6621 #next: v6371  <|@  <|@
tid ?2110 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?719 
values: a6333 i3067 i28 
=== Succesors ===
=== Usages ===
v6051 v6371 i6375 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?719 values: a6333 i3067 i28  <|@  <|@
f <@~|@floating>@ <|@
tid v6597 <|@
result [v180|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
v6371 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6371 <|@
result v181|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2110 
guard: - 
address: v6597 
=== Succesors ===
next: v928 
=== Usages ===
v6211 v6210 
=== Predecessor ===
a6370 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2110 guard: - address: v6597 #next: v928  <|@  <|@
f <@~|@floating>@ <|@
tid v6210 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6371 
y: v6175 
=== Succesors ===
=== Usages ===
v928 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6371 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6526 <|@
result [v180|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
i6372 a6374 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@*|@fixed>@ <|@
tid v928 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6210 
=== Succesors ===
trueSuccessor: v921 
falseSuccessor: v927 
=== Usages ===
=== Predecessor ===
v6371 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6210 #trueSuccessor: v921 #falseSuccessor: v927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD[.] = MOV [v142|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v181|DWORD = MOV [v180|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v181|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v921 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6372 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6372  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6526 
=== Succesors ===
next: v1198 
=== Usages ===
v1195 
=== Predecessor ===
v921 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6526 #next: v1198  <|@  <|@
f <@~|@floating>@ <|@
tid v1195 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6372 
=== Succesors ===
=== Usages ===
v1198 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6372  <|@  <|@
f <@*|@fixed>@ <|@
tid v1198 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.02420300868371932
=== Inputs ===
condition: v1195 
=== Succesors ===
trueSuccessor: v1196 
falseSuccessor: v1197 
=== Usages ===
=== Predecessor ===
i6372 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1195 #trueSuccessor: v1196 #falseSuccessor: v1197  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v180|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B242" 
    xhandlers
    flags 
    probability 4543174463840632876
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1196 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 14]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2287 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2287  <|@  <|@
f <@*|@fixed>@ <|@
tid v2287 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v1196 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B222 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1197 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 5]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6373 
=== Usages ===
=== Predecessor ===
v1198 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6373  <|@  <|@
f <@~|@floating>@ <|@
tid v6527 <|@
result [v180|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6370 
=== Succesors ===
=== Usages ===
i6373 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6370  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6373 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6527 
=== Succesors ===
next: v4502 
=== Usages ===
v1199 
=== Predecessor ===
v1197 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6527 #next: v4502  <|@  <|@
f <@~|@floating>@ <|@
tid v1199 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6373 
y: i3067 
=== Succesors ===
=== Usages ===
v4502 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6373 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4502 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1199 
=== Succesors ===
trueSuccessor: v4501 
falseSuccessor: v4498 
=== Usages ===
=== Predecessor ===
i6373 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1199 #trueSuccessor: v4501 #falseSuccessor: v4498  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v180|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4501 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6052 
=== Usages ===
=== Predecessor ===
v4502 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6052  <|@  <|@
f <@~|@floating>@ <|@
tid i6053 <|@
result int[-818451|0xfffffffffff382ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818451
stableDimension: 0
stamp: i32 [-818451] ⇊00000000fff382ed ⇈00000000fff382ed
stampKind: i32
value: int[-818451|0xfffffffffff382ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6052 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4501 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818451|0xfffffffffff382ed]] destination: B224 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4498 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2270 
=== Usages ===
=== Predecessor ===
v4502 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2270  <|@  <|@
f <@*|@fixed>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v4498 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B225 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B227" "B232" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v927 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4507 
=== Usages ===
=== Predecessor ===
v928 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4507  <|@  <|@
f <@~|@floating>@ <|@
tid v6211 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6371 
y: v6181 
=== Succesors ===
=== Usages ===
v4507 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6371 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v4507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6211 
=== Succesors ===
trueSuccessor: v4503 
falseSuccessor: v4506 
=== Usages ===
=== Predecessor ===
v927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6211 #trueSuccessor: v4503 #falseSuccessor: v4506  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v181|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4512 
=== Usages ===
=== Predecessor ===
v4507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4512  <|@  <|@
f <@~|@floating>@ <|@
tid v6226 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4512 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4512 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6226 
=== Succesors ===
trueSuccessor: v4508 
falseSuccessor: v4511 
=== Usages ===
=== Predecessor ===
v4503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6226 #trueSuccessor: v4508 #falseSuccessor: v4511  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6374 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6374 <|@
result v182|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6526 
=== Succesors ===
next: i6375 
=== Usages ===
v6529 v6528 
=== Predecessor ===
v4508 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6526 #next: i6375  <|@  <|@
f <@~|@floating>@ <|@
tid v6528 <|@
result [v182|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6374 
=== Succesors ===
=== Usages ===
i6375 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6375 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2110 
guard: - 
address: v6528 
=== Succesors ===
next: v4522 
=== Usages ===
v3208 
=== Predecessor ===
a6374 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2110 guard: - address: v6528 #next: v4522  <|@  <|@
f <@~|@floating>@ <|@
tid v3208 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6375 
=== Succesors ===
=== Usages ===
v4522 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6375  <|@  <|@
f <@*|@fixed>@ <|@
tid v4522 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3208 
=== Succesors ===
trueSuccessor: v4518 
falseSuccessor: v4521 
=== Usages ===
=== Predecessor ===
i6375 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3208 #trueSuccessor: v4518 #falseSuccessor: v4521  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD[.] = MOV [v180|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v182|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B240" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4518 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6376 
=== Usages ===
i6376 
=== Predecessor ===
v4522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6376  <|@  <|@
f <@~|@floating>@ <|@
tid j6224 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6529 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6529 <|@
result [v183|QWORD + v182|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j6224 
index: a6374 
=== Succesors ===
=== Usages ===
i6376 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6224 index: a6374  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6376 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4518 
address: v6529 
=== Succesors ===
next: v1478 
=== Usages ===
i3598 
=== Predecessor ===
v4518 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4518 address: v6529 #next: v1478  <|@  <|@
f <@~|@floating>@ <|@
tid i3598 <|@
result v184|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6376 
=== Succesors ===
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6376  <|@  <|@
f <@*|@fixed>@ <|@
tid v1478 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
i6376 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = MOVZXB [v183|QWORD + v182|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD] destination: B229 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6060 
=== Usages ===
=== Predecessor ===
v4522 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6060  <|@  <|@
f <@~|@floating>@ <|@
tid i6061 <|@
result int[-821531|0xfffffffffff376e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -821531
stableDimension: 0
stamp: i32 [-821531] ⇊00000000fff376e5 ⇈00000000fff376e5
stampKind: i32
value: int[-821531|0xfffffffffff376e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6060 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-821531|0xfffffffffff376e5]] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4511 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6056 
=== Usages ===
=== Predecessor ===
v4512 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6056  <|@  <|@
f <@~|@floating>@ <|@
tid i6057 <|@
result int[-818963|0xfffffffffff380ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818963
stableDimension: 0
stamp: i32 [-818963] ⇊00000000fff380ed ⇈00000000fff380ed
stampKind: i32
value: int[-818963|0xfffffffffff380ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6056 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4511 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818963|0xfffffffffff380ed]] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6054 
=== Usages ===
=== Predecessor ===
v4507 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6054  <|@  <|@
f <@~|@floating>@ <|@
tid i6055 <|@
result int[-818739|0xfffffffffff381cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -818739
stableDimension: 0
stamp: i32 [-818739] ⇊00000000fff381cd ⇈00000000fff381cd
stampKind: i32
value: int[-818739|0xfffffffffff381cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6054 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6046 
=== Predecessor ===
v4506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818739|0xfffffffffff381cd]] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B224" "B232" "B231" "B230" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i6049 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-821531 - -817163] ⇊00000000fff300c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v6046 
values: i6053 i6055 i6057 i6061 
=== Succesors ===
=== Usages ===
v6051 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6046 values: i6053 i6055 i6057 i6061  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6046 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6052 v6054 v6056 v6060 
=== Succesors ===
next: v6051 
=== Usages ===
i6049 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6052 v6054 v6056 v6060 #next: v6051  <|@  <|@
f <@*|@fixed>@ <|@
tid v6051 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2110 
actionAndReason: i6049 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6046 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2110 actionAndReason: i6049 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567279364053927502
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1806 
=== Usages ===
=== Predecessor ===
v712 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1806  <|@  <|@
f <@*|@fixed>@ <|@
tid v1806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v711 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B234 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B272" 
    xhandlers
    flags 
    probability 4562775657212507808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2481 
=== Usages ===
=== Predecessor ===
v1079 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2481  <|@  <|@
f <@*|@fixed>@ <|@
tid v2481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1078 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B235 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B272" 
    xhandlers
    flags 
    probability 4558272044811537063
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2499 
=== Usages ===
=== Predecessor ===
v1250 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2499  <|@  <|@
f <@*|@fixed>@ <|@
tid v2499 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1249 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B236 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B272" 
    xhandlers
    flags 
    probability 4553783854675129250
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2445 
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2445  <|@  <|@
f <@*|@fixed>@ <|@
tid v2445 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1339 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B237 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B272" 
    xhandlers
    flags 
    probability 4551814202715430551
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1404 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2517 
=== Usages ===
=== Predecessor ===
v1405 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v1404 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B238 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573236067814667058
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1515 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v1516 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2356  <|@  <|@
f <@*|@fixed>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v463 
=== Predecessor ===
v1515 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B239 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B229" "B239" "B199" 
    successors "B241" "B271" 
    xhandlers
    flags 
    probability 4578999117796592610
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i466 <|@
result v186|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v463 
values: i3598 i61 i61 
=== Succesors ===
=== Usages ===
i1808 v323 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v463 values: i3598 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v463 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1478 v2356 v2391 
=== Succesors ===
next: v326 
=== Usages ===
i466 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1478 v2356 v2391 #next: v326  <|@  <|@
f <@~|@floating>@ <|@
tid v323 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i466 
y: i28 
=== Succesors ===
=== Usages ===
v326 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i466 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.012246995066949262
=== Inputs ===
condition: v323 
=== Succesors ===
trueSuccessor: v324 
falseSuccessor: v325 
=== Usages ===
=== Predecessor ===
v463 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v323 #trueSuccessor: v324 #falseSuccessor: v325  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4550281384080835476
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 11]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2092 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2092  <|@  <|@
f <@*|@fixed>@ <|@
tid v2092 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2091 
=== Predecessor ===
v324 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B154" "B222" 
    successors "B243" "B269" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2091 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2092 v2094 v2287 
=== Succesors ===
next: a6377 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2092 v2094 v2287 #next: a6377  <|@  <|@
f <@~|@floating>@ <|@
tid v6530 <|@
result [v132|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6377 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6377 <|@
result v187|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$5.val$rhs
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 12]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$CharProperty;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6530 
=== Succesors ===
next: v6614 
=== Usages ===
v6599 v6614 v6540 v6541 
=== Predecessor ===
v2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6530 #next: v6614  <|@  <|@
tid ?2093 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 i28 
=== Succesors ===
=== Usages ===
v6015 v6614 v6379 i6381 i6385 v6615 i6392 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6614 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
object: a6377 
=== Succesors ===
next: a6378 
=== Usages ===
=== Predecessor ===
a6377 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2093 object: a6377 #next: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6378 <|@
result v188|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6531 
=== Succesors ===
next: v6379 
=== Usages ===
a3220 v6598 v6532 v6535 v6539 
=== Predecessor ===
v6614 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6531 #next: v6379  <|@  <|@
f <@~|@floating>@ <|@
tid v6598 <|@
result [v188|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
v6379 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6379 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6598 
=== Succesors ===
next: v4537 
=== Usages ===
v6212 
=== Predecessor ===
a6378 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6598 #next: v4537  <|@  <|@
f <@~|@floating>@ <|@
tid v6212 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6379 
y: v6183 
=== Succesors ===
=== Usages ===
v4537 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6379 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4537 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6212 
=== Succesors ===
trueSuccessor: v4533 
falseSuccessor: v4536 
=== Usages ===
=== Predecessor ===
v6379 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6212 #trueSuccessor: v4533 #falseSuccessor: v4536  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[.] = MOV [v132|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v187|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[.] = MOV [v132|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v188|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B268" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4533 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6380 
=== Usages ===
=== Predecessor ===
v4537 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6380 <|@
result v189|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6381 
=== Usages ===
a3224 v6533 
=== Predecessor ===
v4533 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6381  <|@  <|@
f <@~|@floating>@ <|@
tid v6533 <|@
result [v189|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6380 
=== Succesors ===
=== Usages ===
i6381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6380  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6381 <|@
result v190|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6533 
=== Succesors ===
next: i6382 
=== Usages ===
v3232 
=== Predecessor ===
a6380 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6533 #next: i6382  <|@  <|@
f <@~|@floating>@ <|@
tid v6532 <|@
result [v188|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
i6382 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6382 <|@
result v191|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6532 
=== Succesors ===
next: v4547 
=== Usages ===
v6534 v3232 
=== Predecessor ===
i6381 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6532 #next: v4547  <|@  <|@
f <@~|@floating>@ <|@
tid v3232 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6382 
y: i6381 
=== Succesors ===
=== Usages ===
v4547 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6382 y: i6381  <|@  <|@
f <@*|@fixed>@ <|@
tid v4547 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3232 
=== Succesors ===
trueSuccessor: v4543 
falseSuccessor: v4546 
=== Usages ===
=== Predecessor ===
i6382 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3232 #trueSuccessor: v4543 #falseSuccessor: v4546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v190|DWORD = MOV [v189|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = MOV [v188|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v190|DWORD, y: v191|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4543 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6383 
=== Usages ===
i6383 
=== Predecessor ===
v4547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6383  <|@  <|@
f <@~|@floating>@ <|@
tid a3224 <|@
result v192|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6380 
=== Succesors ===
=== Usages ===
v6534 a2532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6380  <|@  <|@
f <@~|@floating>@ <|@
tid v6534 <|@
result [v192|QWORD[.] + v191|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3224 
index: i6382 
=== Succesors ===
=== Usages ===
i6383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3224 index: i6382  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6383 <|@
result v193|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4543 
address: v6534 
=== Succesors ===
next: v4552 
=== Usages ===
v518 v3276 i5665 
=== Predecessor ===
v4543 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4543 address: v6534 #next: v4552  <|@  <|@
f <@~|@floating>@ <|@
tid v518 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6383 
y: i28 
=== Succesors ===
=== Usages ===
v4552 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6383 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4552 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v518 
=== Succesors ===
trueSuccessor: v4551 
falseSuccessor: v4548 
=== Usages ===
=== Predecessor ===
i6383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v518 #trueSuccessor: v4551 #falseSuccessor: v4548  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = UNCOMPRESSPOINTER (input: v189|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v192|QWORD[.] + v191|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v193|DWORD, y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4551 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6024 
=== Usages ===
=== Predecessor ===
v4552 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6024  <|@  <|@
f <@~|@floating>@ <|@
tid i6025 <|@
result int[-829459|0xfffffffffff357ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -829459
stableDimension: 0
stamp: i32 [-829459] ⇊00000000fff357ed ⇈00000000fff357ed
stampKind: i32
value: int[-829459|0xfffffffffff357ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4551 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-829459|0xfffffffffff357ed]] destination: B245 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B267" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4548 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6384 
=== Usages ===
=== Predecessor ===
v4552 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6384 <|@
result v194|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6634 
=== Succesors ===
next: i6385 
=== Usages ===
a3243 v6536 
=== Predecessor ===
v4548 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6634 #next: i6385  <|@  <|@
f <@~|@floating>@ <|@
tid v6536 <|@
result [v194|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6384 
=== Succesors ===
=== Usages ===
i6385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6385 <|@
result v195|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6536 
=== Succesors ===
next: i6386 
=== Usages ===
v3278 v3269 
=== Predecessor ===
a6384 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6536 #next: i6386  <|@  <|@
f <@~|@floating>@ <|@
tid v6535 <|@
result [v188|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
i6386 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6386 <|@
result v196|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6535 
=== Succesors ===
next: v4562 
=== Usages ===
v3269 i533 v6537 
=== Predecessor ===
i6385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6535 #next: v4562  <|@  <|@
f <@~|@floating>@ <|@
tid v3269 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6386 
y: i6385 
=== Succesors ===
=== Usages ===
v4562 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6386 y: i6385  <|@  <|@
f <@*|@fixed>@ <|@
tid v4562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3269 
=== Succesors ===
trueSuccessor: v4558 
falseSuccessor: v4561 
=== Usages ===
=== Predecessor ===
i6386 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3269 #trueSuccessor: v4558 #falseSuccessor: v4561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v195|DWORD = MOV [v194|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = MOV [v188|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v196|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B248" "B266" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4558 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4567 
=== Usages ===
i6395 v3276 
=== Predecessor ===
v4562 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4567  <|@  <|@
f <@~|@floating>@ <|@
tid i533 <|@
result v197|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6386 
y: i61 
=== Succesors ===
=== Usages ===
v6538 v3278 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6386 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v3278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i533 
y: i6385 
=== Succesors ===
=== Usages ===
v4567 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i533 y: i6385  <|@  <|@
f <@*|@fixed>@ <|@
tid v4567 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3278 
=== Succesors ===
trueSuccessor: v4563 
falseSuccessor: v4566 
=== Usages ===
=== Predecessor ===
v4558 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3278 #trueSuccessor: v4563 #falseSuccessor: v4566  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = INC v196|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v197|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B249" "B254" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6387 
=== Usages ===
i6394 v3285 
=== Predecessor ===
v4567 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6387  <|@  <|@
f <@~|@floating>@ <|@
tid v6539 <|@
result [v188|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6378 
=== Succesors ===
=== Usages ===
a6387 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6387 <|@
result v198|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6539 
=== Succesors ===
next: v6615 
=== Usages ===
a3288 v6615 v6600 
=== Predecessor ===
v4563 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6539 #next: v6615  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
object: a6387 
=== Succesors ===
next: v6388 
=== Usages ===
=== Predecessor ===
a6387 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?2093 object: a6387 #next: v6388  <|@  <|@
f <@~|@floating>@ <|@
tid v6599 <|@
result [v187|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
v6388 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6388 <|@
result v199|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6599 
=== Succesors ===
next: v503 
=== Usages ===
v6214 v6213 
=== Predecessor ===
v6615 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6599 #next: v503  <|@  <|@
f <@~|@floating>@ <|@
tid v6213 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6388 
y: v6175 
=== Succesors ===
=== Usages ===
v503 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6388 y: v6175  <|@  <|@
f <@~|@floating>@ <|@
tid v6540 <|@
result [v187|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
i6389 a6391 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@*|@fixed>@ <|@
tid v503 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v6213 
=== Succesors ===
trueSuccessor: v496 
falseSuccessor: v502 
=== Usages ===
=== Predecessor ===
v6388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6213 #trueSuccessor: v496 #falseSuccessor: v502  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD[.] = MOV [v188|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v198|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = MOV [v187|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$1; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$1; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6389 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6389 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$lower
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 1]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6540 
=== Succesors ===
next: v4577 
=== Usages ===
v940 
=== Predecessor ===
v496 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6540 #next: v4577  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6389 
=== Succesors ===
=== Usages ===
v4577 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3067 y: i6389  <|@  <|@
f <@*|@fixed>@ <|@
tid v4577 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v940 
=== Succesors ===
trueSuccessor: v4576 
falseSuccessor: v4573 
=== Usages ===
=== Predecessor ===
i6389 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v940 #trueSuccessor: v4576 #falseSuccessor: v4573  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v187|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4576 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6034 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6034  <|@  <|@
f <@~|@floating>@ <|@
tid i6035 <|@
result int[-843283|0xfffffffffff321ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843283
stableDimension: 0
stamp: i32 [-843283] ⇊00000000fff321ed ⇈00000000fff321ed
stampKind: i32
value: int[-843283|0xfffffffffff321ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6034 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843283|0xfffffffffff321ed]] destination: B250 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 2]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6390 
=== Usages ===
=== Predecessor ===
v4577 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6390  <|@  <|@
f <@~|@floating>@ <|@
tid v6541 <|@
result [v187|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6377 
=== Succesors ===
=== Usages ===
i6390 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6377  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6390 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$1.val$upper
nodeSourcePosition: at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 6]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6541 
=== Succesors ===
next: v4582 
=== Usages ===
v944 
=== Predecessor ===
v4573 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6541 #next: v4582  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6390 
y: i3067 
=== Succesors ===
=== Usages ===
v4582 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6390 y: i3067  <|@  <|@
f <@*|@fixed>@ <|@
tid v4582 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v944 
=== Succesors ===
trueSuccessor: v4581 
falseSuccessor: v4578 
=== Usages ===
=== Predecessor ===
i6390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v944 #trueSuccessor: v4581 #falseSuccessor: v4578  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v187|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4581 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6036 
=== Usages ===
=== Predecessor ===
v4582 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6036  <|@  <|@
f <@~|@floating>@ <|@
tid i6037 <|@
result int[-843539|0xfffffffffff320ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843539
stableDimension: 0
stamp: i32 [-843539] ⇊00000000fff320ed ⇈00000000fff320ed
stampKind: i32
value: int[-843539|0xfffffffffff320ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4581 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843539|0xfffffffffff320ed]] destination: B252 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4578 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern.inRange(Pattern.java:4103) [bci: 7]
at java.util.regex.Pattern.access$200(Pattern.java:769) [bci: 3]
at java.util.regex.Pattern$1.isSatisfiedBy(Pattern.java:4113) [bci: 9]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v335 
=== Usages ===
=== Predecessor ===
v4582 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v335  <|@  <|@
f <@*|@fixed>@ <|@
tid v335 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6605 
=== Predecessor ===
v4578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B253 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B265" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4587 
=== Usages ===
=== Predecessor ===
v503 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4587  <|@  <|@
f <@~|@floating>@ <|@
tid v6214 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6388 
y: v6181 
=== Succesors ===
=== Usages ===
v4587 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6388 y: v6181  <|@  <|@
f <@*|@fixed>@ <|@
tid v4587 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6214 
=== Succesors ===
trueSuccessor: v4583 
falseSuccessor: v4586 
=== Usages ===
=== Predecessor ===
v502 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6214 #trueSuccessor: v4583 #falseSuccessor: v4586  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B256" "B264" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4583 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6391 
=== Usages ===
=== Predecessor ===
v4587 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6391 <|@
result v200|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$BitClass.bits
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 8]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [Z
=== Inputs ===
stateBefore: - 
guard: - 
address: v6540 
=== Succesors ===
next: i6392 
=== Usages ===
v6543 v6542 
=== Predecessor ===
v4583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6540 #next: i6392  <|@  <|@
f <@~|@floating>@ <|@
tid v6542 <|@
result [v200|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6391 
=== Succesors ===
=== Usages ===
i6392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6392 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2093 
guard: - 
address: v6542 
=== Succesors ===
next: v4597 
=== Usages ===
v3306 
=== Predecessor ===
a6391 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2093 guard: - address: v6542 #next: v4597  <|@  <|@
f <@~|@floating>@ <|@
tid v3306 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3067 
y: i6392 
=== Succesors ===
=== Usages ===
v4597 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3067 y: i6392  <|@  <|@
f <@*|@fixed>@ <|@
tid v4597 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3306 
=== Succesors ===
trueSuccessor: v4593 
falseSuccessor: v4596 
=== Usages ===
=== Predecessor ===
i6392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3306 #trueSuccessor: v4593 #falseSuccessor: v4596  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[.] = MOV [v187|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v200|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B263" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4593 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4602 
=== Usages ===
i6393 
=== Predecessor ===
v4597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4602  <|@  <|@
f <@~|@floating>@ <|@
tid v3916 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6332 
y: i3915 
=== Succesors ===
=== Usages ===
v4602 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6332 y: i3915  <|@  <|@
f <@*|@fixed>@ <|@
tid v4602 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3916 
=== Succesors ===
trueSuccessor: v4598 
falseSuccessor: v4601 
=== Usages ===
=== Predecessor ===
v4593 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3916 #trueSuccessor: v4598 #falseSuccessor: v4601  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B258" "B259" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4598 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6393 
=== Usages ===
=== Predecessor ===
v4602 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6393  <|@  <|@
f <@~|@floating>@ <|@
tid j6225 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6332 
=== Succesors ===
=== Usages ===
v6543 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6332  <|@  <|@
f <@~|@floating>@ <|@
tid v6543 <|@
result [v201|QWORD + v200|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: j6225 
index: a6391 
=== Succesors ===
=== Usages ===
i6393 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j6225 index: a6391  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6393 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: byte
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i8 [0 - 1] ⇈0000000000000001
=== Inputs ===
stateBefore: - 
guard: v4593 
address: v6543 
=== Succesors ===
next: v4607 
=== Usages ===
i3607 
=== Predecessor ===
v4598 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4593 address: v6543 #next: v4607  <|@  <|@
f <@~|@floating>@ <|@
tid i3607 <|@
result v202|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 8
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 32
stamp: i32 [0 - 1] ⇈0000000000000001
=== Inputs ===
value: i6393 
=== Succesors ===
=== Usages ===
v196 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6393  <|@  <|@
f <@~|@floating>@ <|@
tid v196 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3607 
y: i28 
=== Succesors ===
=== Usages ===
v4607 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i3607 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v196 
=== Succesors ===
trueSuccessor: v4606 
falseSuccessor: v4603 
=== Usages ===
=== Predecessor ===
i6393 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v196 #trueSuccessor: v4606 #falseSuccessor: v4603  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = MOVZXB [v201|QWORD + v200|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v202|DWORD, y: v202|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4604 
=== Usages ===
=== Predecessor ===
v4607 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4604  <|@  <|@
tid ?195 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<Pattern$CharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3778
stackSize: 1
=== Inputs ===
outerFrameState: ?209 
values: a3041 a2 i3 a4 i3067 i28 
=== Succesors ===
=== Usages ===
v4604 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?209 values: a3041 a2 i3 a4 i3067 i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4604 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 3217
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?195 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4606 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?195  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -823571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4603 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6606 
=== Usages ===
=== Predecessor ===
v4607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6606  <|@  <|@
f <@*|@fixed>@ <|@
tid v6606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6605 
=== Predecessor ===
v4603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B253" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v6605 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6606 v335 
=== Succesors ===
next: i6394 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6606 v335 #next: i6394  <|@  <|@
f <@~|@floating>@ <|@
tid a3243 <|@
result v203|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6384 
=== Succesors ===
=== Usages ===
v6537 a1668 v6538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6384  <|@  <|@
f <@~|@floating>@ <|@
tid v6538 <|@
result [v203|QWORD[.] + v197|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3243 
index: i533 
=== Succesors ===
=== Usages ===
v3285 i6394 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3243 index: i533  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6394 <|@
result v204|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4563 
address: v6538 
=== Succesors ===
next: i6395 
=== Usages ===
i1674 i1672 
=== Predecessor ===
v6605 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4563 address: v6538 #next: i6395  <|@  <|@
f <@~|@floating>@ <|@
tid v6537 <|@
result [v203|QWORD[.] + v196|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3243 
index: i6386 
=== Succesors ===
=== Usages ===
v3276 i6395 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3243 index: i6386  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6395 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4558 
address: v6537 
=== Succesors ===
next: v3276 
=== Usages ===
i1671 i1669 
=== Predecessor ===
i6394 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4558 address: v6537 #next: v3276  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3276 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4558 
address: v6537 
value: i6383 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3285 
=== Usages ===
=== Predecessor ===
i6395 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4558 address: v6537 value: i6383 stateAfter: - lastLocationAccess: - #next: v3285  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3285 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4563 
address: v6538 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v6396 
=== Usages ===
=== Predecessor ===
v3276 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4563 address: v6538 value: i6235 stateAfter: - lastLocationAccess: - #next: v6396  <|@  <|@
f <@~|@floating>@ <|@
tid v6600 <|@
result [v198|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6387 
=== Succesors ===
=== Usages ===
v6396 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6387  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6396 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v6600 
=== Succesors ===
next: v752 
=== Usages ===
v6215 
=== Predecessor ===
v3285 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6600 #next: v752  <|@  <|@
f <@~|@floating>@ <|@
tid v6215 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6396 
y: v6185 
=== Succesors ===
=== Usages ===
v752 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6396 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a3220 <|@
result v206|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6378 
=== Succesors ===
=== Usages ===
a1663 a1664 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6378  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6215 
=== Succesors ===
trueSuccessor: v745 
falseSuccessor: v751 
=== Usages ===
=== Predecessor ===
v6396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6215 #trueSuccessor: v745 #falseSuccessor: v751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = UNCOMPRESSPOINTER (input: v194|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = MOV [v203|QWORD[.] + v197|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOV [v203|QWORD[.] + v196|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v203|QWORD[.] + v196|DWORD * 4 + 16], y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v203|QWORD[.] + v197|DWORD * 4 + 16], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = UNCOMPRESSPOINTER (input: v188|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v198|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B280" 
    xhandlers
    flags 
    probability 4575391099144321446
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1656 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1656  <|@  <|@
f <@*|@fixed>@ <|@
tid v1656 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.], v193|DWORD, v203|QWORD[.], v205|DWORD, v204|DWORD, v192|QWORD[.]] destination: B261 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B289" 
    xhandlers
    flags 
    probability 4565018579343288473
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1660 
=== Usages ===
=== Predecessor ===
v752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1660  <|@  <|@
f <@~|@floating>@ <|@
tid a3288 <|@
result v207|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6387 
=== Succesors ===
=== Usages ===
a1675 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6387  <|@  <|@
f <@*|@fixed>@ <|@
tid v1660 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
v751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = UNCOMPRESSPOINTER (input: v198|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.], v207|QWORD[.], v205|DWORD, v204|DWORD] destination: B262 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4601 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 4]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6044 
=== Usages ===
=== Predecessor ===
v4602 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6044  <|@  <|@
f <@~|@floating>@ <|@
tid i6045 <|@
result int[-844051|0xfffffffffff31eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -844051
stableDimension: 0
stamp: i32 [-844051] ⇊00000000fff31eed ⇈00000000fff31eed
stampKind: i32
value: int[-844051|0xfffffffffff31eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6044 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-844051|0xfffffffffff31eed]] destination: B263 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4596 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BitClass.isSatisfiedBy(Pattern.java:3336) [bci: 12]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6042 
=== Usages ===
=== Predecessor ===
v4597 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6042  <|@  <|@
f <@~|@floating>@ <|@
tid i6043 <|@
result int[-846619|0xfffffffffff314e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -846619
stableDimension: 0
stamp: i32 [-846619] ⇊00000000fff314e5 ⇈00000000fff314e5
stampKind: i32
value: int[-846619|0xfffffffffff314e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6042 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-846619|0xfffffffffff314e5]] destination: B264 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4586 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$BitClass; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$BitClass; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6038 
=== Usages ===
=== Predecessor ===
v4587 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6038  <|@  <|@
f <@~|@floating>@ <|@
tid i6039 <|@
result int[-843827|0xfffffffffff31fcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -843827
stableDimension: 0
stamp: i32 [-843827] ⇊00000000fff31fcd ⇈00000000fff31fcd
stampKind: i32
value: int[-843827|0xfffffffffff31fcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6038 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843827|0xfffffffffff31fcd]] destination: B265 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4566 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6030 
=== Usages ===
=== Predecessor ===
v4567 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6030  <|@  <|@
f <@~|@floating>@ <|@
tid i6031 <|@
result int[-839451|0xfffffffffff330e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -839451
stableDimension: 0
stamp: i32 [-839451] ⇊00000000fff330e5 ⇈00000000fff330e5
stampKind: i32
value: int[-839451|0xfffffffffff330e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4566 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-839451|0xfffffffffff330e5]] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6028 
=== Usages ===
=== Predecessor ===
v4562 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6028  <|@  <|@
f <@~|@floating>@ <|@
tid i6029 <|@
result int[-837147|0xfffffffffff339e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -837147
stableDimension: 0
stamp: i32 [-837147] ⇊00000000fff339e5 ⇈00000000fff339e5
stampKind: i32
value: int[-837147|0xfffffffffff339e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6028 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4561 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-837147|0xfffffffffff339e5]] destination: B267 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4546 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6022 
=== Usages ===
=== Predecessor ===
v4547 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6022  <|@  <|@
f <@~|@floating>@ <|@
tid i6023 <|@
result int[-827675|0xfffffffffff35ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -827675
stableDimension: 0
stamp: i32 [-827675] ⇊00000000fff35ee5 ⇈00000000fff35ee5
stampKind: i32
value: int[-827675|0xfffffffffff35ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6022 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-827675|0xfffffffffff35ee5]] destination: B268 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4536 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v6018 
=== Usages ===
=== Predecessor ===
v4537 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v6018  <|@  <|@
f <@~|@floating>@ <|@
tid i6019 <|@
result int[-824883|0xfffffffffff369cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -824883
stableDimension: 0
stamp: i32 [-824883] ⇊00000000fff369cd ⇈00000000fff369cd
stampKind: i32
value: int[-824883|0xfffffffffff369cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v6018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v6010 
=== Predecessor ===
v4536 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-824883|0xfffffffffff369cd]] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B268" "B245" "B267" "B266" "B250" "B252" "B265" "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i6013 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-846619 - -823307] ⇊00000000fff300c5 ⇈00000000fff37ffd
valueDescription: i32
=== Inputs ===
merge: v6010 
values: i6019 i6023 i6025 i6029 i6031 i6035 i6037 i6039 i6043 i6045 
=== Succesors ===
=== Usages ===
v6015 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v6010 values: i6019 i6023 i6025 i6029 i6031 i6035 i6037 i6039 i6043 i6045  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6010 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v6018 v6022 v6024 v6028 v6030 v6034 v6036 v6038 v6042 v6044 
=== Succesors ===
next: v6015 
=== Usages ===
i6013 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v6018 v6022 v6024 v6028 v6030 v6034 v6036 v6038 v6042 v6044 #next: v6015  <|@  <|@
f <@*|@fixed>@ <|@
tid v6015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2093 
actionAndReason: i6013 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v6010 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2093 actionAndReason: i6013 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B272" 
    xhandlers
    flags 
    probability 4578903034045592532
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v325 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 22]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
v326 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1804  <|@  <|@
f <@*|@fixed>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
v325 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v186|DWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B234" "B157" "B164" "B225" "B171" "B178" "B185" "B237" "B192" "B235" "B236" "B238" 
    successors "B273" "B298" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1808 <|@
result v209|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v1803 
values: i466 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 
=== Succesors ===
=== Usages ===
?1805 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1803 values: i466 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61 i61  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1804 v1806 v1914 v1931 v2270 v2374 v2409 v2427 v2445 v2463 v2481 v2499 v2517 
=== Succesors ===
next: a6397 
=== Usages ===
i1808 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1804 v1806 v1914 v1931 v2270 v2374 v2409 v2427 v2445 v2463 v2481 v2499 v2517 #next: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6397 <|@
result v210|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6531 
=== Succesors ===
next: v6398 
=== Usages ===
a3312 v6601 v6544 v6547 v6551 
=== Predecessor ===
v1803 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6531 #next: v6398  <|@  <|@
tid ?1805 <|@
d <@d|@=== Debug Properties ===
bci: 8
code: ResolvedJavaMethodBytecode<Pattern$5.isSatisfiedBy(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 5253
stackSize: 1
=== Inputs ===
outerFrameState: ?333 
values: a3041 i3067 i1808 
=== Succesors ===
=== Usages ===
v5971 v6398 i6400 i6404 v6407 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?333 values: a3041 i3067 i1808  <|@  <|@
f <@~|@floating>@ <|@
tid v6601 <|@
result [v210|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
v6398 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6398 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6601 
=== Succesors ===
next: v4617 
=== Usages ===
v6216 
=== Predecessor ===
a6397 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6601 #next: v4617  <|@  <|@
f <@~|@floating>@ <|@
tid v6216 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6398 
y: v6183 
=== Succesors ===
=== Usages ===
v4617 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6398 y: v6183  <|@  <|@
f <@*|@fixed>@ <|@
tid v4617 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6216 
=== Succesors ===
trueSuccessor: v4613 
falseSuccessor: v4616 
=== Usages ===
=== Predecessor ===
v6398 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6216 #trueSuccessor: v4613 #falseSuccessor: v4616  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD[.] = MOV [v132|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v210|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B274" "B297" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6399 
=== Usages ===
=== Predecessor ===
v4617 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6399 <|@
result v211|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6400 
=== Usages ===
a3316 v6545 
=== Predecessor ===
v4613 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6400  <|@  <|@
f <@~|@floating>@ <|@
tid v6545 <|@
result [v211|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6399 
=== Succesors ===
=== Usages ===
i6400 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6400 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6545 
=== Succesors ===
next: i6401 
=== Usages ===
v3324 
=== Predecessor ===
a6399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6545 #next: i6401  <|@  <|@
f <@~|@floating>@ <|@
tid v6544 <|@
result [v210|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
i6401 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6401 <|@
result v213|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6544 
=== Succesors ===
next: v4627 
=== Usages ===
v6546 v3324 
=== Predecessor ===
i6400 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6544 #next: v4627  <|@  <|@
f <@~|@floating>@ <|@
tid v3324 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6401 
y: i6400 
=== Succesors ===
=== Usages ===
v4627 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6401 y: i6400  <|@  <|@
f <@*|@fixed>@ <|@
tid v4627 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3324 
=== Succesors ===
trueSuccessor: v4623 
falseSuccessor: v4626 
=== Usages ===
=== Predecessor ===
i6401 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3324 #trueSuccessor: v4623 #falseSuccessor: v4626  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v212|DWORD = MOV [v211|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOV [v210|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v212|DWORD, y: v213|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B275" "B276" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4623 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6402 
=== Usages ===
i6402 
=== Predecessor ===
v4627 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6402  <|@  <|@
f <@~|@floating>@ <|@
tid a3316 <|@
result v214|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 1]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6399 
=== Succesors ===
=== Usages ===
v6546 a2532 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6399  <|@  <|@
f <@~|@floating>@ <|@
tid v6546 <|@
result [v214|QWORD[.] + v213|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3316 
index: i6401 
=== Succesors ===
=== Usages ===
i6402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3316 index: i6401  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6402 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4623 
address: v6546 
=== Succesors ===
next: v4632 
=== Usages ===
v1688 v3367 i5665 
=== Predecessor ===
v4623 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4623 address: v6546 #next: v4632  <|@  <|@
f <@~|@floating>@ <|@
tid v1688 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6402 
y: i28 
=== Succesors ===
=== Usages ===
v4632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i6402 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1688 
=== Succesors ===
trueSuccessor: v4631 
falseSuccessor: v4628 
=== Usages ===
=== Predecessor ===
i6402 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1688 #trueSuccessor: v4631 #falseSuccessor: v4628  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = UNCOMPRESSPOINTER (input: v211|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOV [v214|QWORD[.] + v213|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v215|DWORD, y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5978 
=== Usages ===
=== Predecessor ===
v4632 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5978  <|@  <|@
f <@~|@floating>@ <|@
tid i5979 <|@
result int[-853011|0xfffffffffff2fbed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -853011
stableDimension: 0
stamp: i32 [-853011] ⇊00000000fff2fbed ⇈00000000fff2fbed
stampKind: i32
value: int[-853011|0xfffffffffff2fbed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-853011|0xfffffffffff2fbed]] destination: B275 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B277" "B296" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4628 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4711) [bci: 13]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6403 
=== Usages ===
=== Predecessor ===
v4632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6403 <|@
result v216|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6634 
=== Succesors ===
next: i6404 
=== Usages ===
a3334 v6548 
=== Predecessor ===
v4628 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6634 #next: i6404  <|@  <|@
f <@~|@floating>@ <|@
tid v6548 <|@
result [v216|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6403 
=== Succesors ===
=== Usages ===
i6404 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6403  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6404 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6548 
=== Succesors ===
next: i6405 
=== Usages ===
v3369 v3360 
=== Predecessor ===
a6403 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6548 #next: i6405  <|@  <|@
f <@~|@floating>@ <|@
tid v6547 <|@
result [v210|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
i6405 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6405 <|@
result v218|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupTail.groupIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 21]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6547 
=== Succesors ===
next: v4642 
=== Usages ===
v3360 v6549 i1696 
=== Predecessor ===
i6404 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6547 #next: v4642  <|@  <|@
f <@~|@floating>@ <|@
tid v3360 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6405 
y: i6404 
=== Succesors ===
=== Usages ===
v4642 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6405 y: i6404  <|@  <|@
f <@*|@fixed>@ <|@
tid v4642 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3360 
=== Succesors ===
trueSuccessor: v4638 
falseSuccessor: v4641 
=== Usages ===
=== Predecessor ===
i6405 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3360 #trueSuccessor: v4638 #falseSuccessor: v4641  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v216|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v217|DWORD = MOV [v216|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOV [v210|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|DWORD, y: v218|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B278" "B295" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4647 
=== Usages ===
i6409 v3367 
=== Predecessor ===
v4642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4647  <|@  <|@
f <@~|@floating>@ <|@
tid i1696 <|@
result v219|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 60]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i6405 
y: i61 
=== Succesors ===
=== Usages ===
v3369 v6550 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i6405 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v3369 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1696 
y: i6404 
=== Succesors ===
=== Usages ===
v4647 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i1696 y: i6404  <|@  <|@
f <@*|@fixed>@ <|@
tid v4647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3369 
=== Succesors ===
trueSuccessor: v4643 
falseSuccessor: v4646 
=== Usages ===
=== Predecessor ===
v4638 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3369 #trueSuccessor: v4643 #falseSuccessor: v4646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = INC v218|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|DWORD, y: v219|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B279" "B288" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6406 
=== Usages ===
i6408 v3376 
=== Predecessor ===
v4647 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6406  <|@  <|@
f <@~|@floating>@ <|@
tid v6551 <|@
result [v210|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6397 
=== Succesors ===
=== Usages ===
a6406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6397  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6406 <|@
result v220|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6551 
=== Succesors ===
next: v6407 
=== Usages ===
a3379 v6602 
=== Predecessor ===
v4643 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6551 #next: v6407  <|@  <|@
f <@~|@floating>@ <|@
tid v6602 <|@
result [v220|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6406 
=== Succesors ===
=== Usages ===
v6407 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6407 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?1805 
guard: - 
address: v6602 
=== Succesors ===
next: i6408 
=== Usages ===
v6217 
=== Predecessor ===
a6406 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?1805 guard: - address: v6602 #next: i6408  <|@  <|@
f <@~|@floating>@ <|@
tid a3334 <|@
result v222|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 17]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6403 
=== Succesors ===
=== Usages ===
v6549 a1668 v6550 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6403  <|@  <|@
f <@~|@floating>@ <|@
tid v6550 <|@
result [v222|QWORD[.] + v219|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3334 
index: i1696 
=== Succesors ===
=== Usages ===
v3376 i6408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3334 index: i1696  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6408 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4715) [bci: 37]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4643 
address: v6550 
=== Succesors ===
next: i6409 
=== Usages ===
i1672 i1674 
=== Predecessor ===
v6407 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4643 address: v6550 #next: i6409  <|@  <|@
f <@~|@floating>@ <|@
tid v6549 <|@
result [v222|QWORD[.] + v218|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3334 
index: i6405 
=== Succesors ===
=== Usages ===
v3367 i6409 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3334 index: i6405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6409 <|@
result v224|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4714) [bci: 24]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4638 
address: v6549 
=== Succesors ===
next: v3367 
=== Usages ===
i1669 i1671 
=== Predecessor ===
i6408 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4638 address: v6549 #next: v3367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3367 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4638 
address: v6549 
value: i6402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3376 
=== Usages ===
=== Predecessor ===
i6409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4638 address: v6549 value: i6402 stateAfter: - lastLocationAccess: - #next: v3376  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3376 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4643 
address: v6550 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1706 
=== Usages ===
=== Predecessor ===
v3367 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4643 address: v6550 value: i6235 stateAfter: - lastLocationAccess: - #next: v1706  <|@  <|@
f <@~|@floating>@ <|@
tid v6217 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6407 
y: v6185 
=== Succesors ===
=== Usages ===
v1706 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6407 y: v6185  <|@  <|@
f <@~|@floating>@ <|@
tid a3312 <|@
result v225|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 25]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6397 
=== Succesors ===
=== Usages ===
a1663 a1664 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6397  <|@  <|@
f <@*|@fixed>@ <|@
tid v1706 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8257972313536578
=== Inputs ===
condition: v6217 
=== Succesors ===
trueSuccessor: v1700 
falseSuccessor: v1705 
=== Usages ===
=== Predecessor ===
v3376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6217 #trueSuccessor: v1700 #falseSuccessor: v1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|DWORD[.] = MOV [v210|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v221|DWORD = MOV [v220|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = UNCOMPRESSPOINTER (input: v216|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|QWORD[.] + v219|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOV [v222|QWORD[.] + v218|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|QWORD[.] + v218|DWORD * 4 + 16], y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|QWORD[.] + v219|DWORD * 4 + 16], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = UNCOMPRESSPOINTER (input: v210|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v221|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B279 falseDestination: B278 -> B288 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" 
    xhandlers
    flags 
    probability 4603613911725518006
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1700 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$LastNode; target_method=match target_method_class=Ljava/util/regex/Pattern$LastNode; position=at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1658 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1658  <|@  <|@
f <@*|@fixed>@ <|@
tid v1658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1655 
=== Predecessor ===
v1700 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.], v215|DWORD, v222|QWORD[.], v224|DWORD, v223|DWORD, v214|QWORD[.]] destination: B279 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B261" "B279" 
    successors "B281" "B282" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1664 <|@
result v226|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3220 a3312 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3220 a3312  <|@  <|@
f <@~|@floating>@ <|@
tid i5665 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6383 i6402 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6383 i6402  <|@  <|@
f <@~|@floating>@ <|@
tid a1668 <|@
result v228|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3243 a3334 
=== Succesors ===
=== Usages ===
v6554 v6553 v6552 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3243 a3334  <|@  <|@
f <@~|@floating>@ <|@
tid i1671 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6395 i6409 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6395 i6409  <|@  <|@
f <@~|@floating>@ <|@
tid i1674 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1655 
values: i6394 i6408 
=== Succesors ===
=== Usages ===
?1657 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: i6394 i6408  <|@  <|@
f <@~|@floating>@ <|@
tid a2532 <|@
result v231|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [I
valueDescription: a -
=== Inputs ===
merge: v1655 
values: a3224 a3316 
=== Succesors ===
=== Usages ===
v6556 v6555 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1655 values: a3224 a3316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1655 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1656 v1658 
=== Succesors ===
next: i6410 
=== Usages ===
a1664 i5665 a1668 i1671 i1674 a2532 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1656 v1658 #next: i6410  <|@  <|@
f <@~|@floating>@ <|@
tid v6633 <|@
result [v1|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6410 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6410 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.acceptMode
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 1]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6633 
=== Succesors ===
next: v4657 
=== Usages ===
v953 
=== Predecessor ===
v1655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6633 #next: v4657  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6410 
y: i61 
=== Succesors ===
=== Usages ===
v4657 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6410 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v4657 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v953 
=== Succesors ===
trueSuccessor: v4656 
falseSuccessor: v4653 
=== Usages ===
=== Predecessor ===
i6410 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v953 #trueSuccessor: v4656 #falseSuccessor: v4653  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|QWORD[.], v227|DWORD, v228|QWORD[.], v229|DWORD, v230|DWORD, v231|QWORD[.]] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5953 
=== Usages ===
=== Predecessor ===
v4657 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5953  <|@  <|@
f <@~|@floating>@ <|@
tid i5954 <|@
result int[-866067|0xfffffffffff2c8ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -866067
stableDimension: 0
stamp: i32 [-866067] ⇊00000000fff2c8ed ⇈00000000fff2c8ed
stampKind: i32
value: int[-866067|0xfffffffffff2c8ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5953 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4656 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-866067|0xfffffffffff2c8ed]] destination: B281 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B283" "B286" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3433) [bci: 5]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6411 
=== Usages ===
=== Predecessor ===
v4657 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6411  <|@  <|@
f <@~|@floating>@ <|@
tid v6555 <|@
result [v231|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a2532 
index: - 
=== Succesors ===
=== Usages ===
i6411 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2532 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6411 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6555 
=== Succesors ===
next: i6412 
=== Usages ===
v3410 
=== Predecessor ===
v4653 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6555 #next: i6412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6412 <|@
result v233|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4672 
=== Usages ===
v6556 v3410 
=== Predecessor ===
i6411 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4672  <|@  <|@
f <@~|@floating>@ <|@
tid v3410 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6412 
y: i6411 
=== Succesors ===
=== Usages ===
v4672 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6412 y: i6411  <|@  <|@
f <@*|@fixed>@ <|@
tid v4672 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3410 
=== Succesors ===
trueSuccessor: v4668 
falseSuccessor: v4671 
=== Usages ===
=== Predecessor ===
i6412 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3410 #trueSuccessor: v4668 #falseSuccessor: v4671  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD = MOV [v231|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|DWORD, y: v233|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" "B285" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4668 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6413 
=== Usages ===
v3417 
=== Predecessor ===
v4672 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6413  <|@  <|@
f <@~|@floating>@ <|@
tid v6552 <|@
result [v228|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
i6413 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6413 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v6552 
=== Succesors ===
next: v4677 
=== Usages ===
v3902 
=== Predecessor ===
v4668 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6552 #next: v4677  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6413 
y: i2599 
=== Succesors ===
=== Usages ===
v4677 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6413 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4677 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3902 
=== Succesors ===
trueSuccessor: v4676 
falseSuccessor: v4673 
=== Usages ===
=== Predecessor ===
i6413 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3902 #trueSuccessor: v4676 #falseSuccessor: v4673  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v228|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4676 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5964 
=== Usages ===
=== Predecessor ===
v4677 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5964  <|@  <|@
f <@~|@floating>@ <|@
tid i5965 <|@
result int[-925467|0xfffffffffff1e0e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -925467
stableDimension: 0
stamp: i32 [-925467] ⇊00000000fff1e0e5 ⇈00000000fff1e0e5
stampKind: i32
value: int[-925467|0xfffffffffff1e0e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5964 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4676 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-925467|0xfffffffffff1e0e5]] destination: B284 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B358" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4673 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3385 
=== Usages ===
v3397 v3403 
=== Predecessor ===
v4677 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3385  <|@  <|@
f <@~|@floating>@ <|@
tid v6631 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3385 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3385 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3435) [bci: 20]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6631 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6414 
=== Usages ===
=== Predecessor ===
v4673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6631 value: i6235 stateAfter: - lastLocationAccess: - #next: i6414  <|@  <|@
f <@~|@floating>@ <|@
tid v6628 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6414 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6414 <|@
result v234|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 29]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6628 
=== Succesors ===
next: v3397 
=== Usages ===
v3397 
=== Predecessor ===
v3385 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6628 #next: v3397  <|@  <|@
f <@~|@floating>@ <|@
tid v6553 <|@
result [v228|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
v3397 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3397 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3436) [bci: 32]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4673 
address: v6553 
value: i6414 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3403 
=== Usages ===
=== Predecessor ===
i6414 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4673 address: v6553 value: i6414 stateAfter: - lastLocationAccess: - #next: v3403  <|@  <|@
f <@~|@floating>@ <|@
tid v6554 <|@
result [v228|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1668 
index: - 
=== Succesors ===
=== Usages ===
v3403 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1668 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3403 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$LastNode.match(Pattern.java:3437) [bci: 42]
at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4673 
address: v6554 
value: i6235 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3417 
=== Usages ===
=== Predecessor ===
v3397 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4673 address: v6554 value: i6235 stateAfter: - lastLocationAccess: - #next: v3417  <|@  <|@
f <@~|@floating>@ <|@
tid v6556 <|@
result [v231|QWORD[.] + v233|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a2532 
index: i6412 
=== Succesors ===
=== Usages ===
v3417 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2532 index: i6412  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3417 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4668 
address: v6556 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2338 
=== Usages ===
=== Predecessor ===
v3403 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4668 address: v6556 value: i6327 stateAfter: - lastLocationAccess: - #next: v2338  <|@  <|@
f <@*|@fixed>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v3417 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v228|QWORD[.] + 16], y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v228|QWORD[.] + 20], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v231|QWORD[.] + v233|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B285 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4671 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5962 
=== Usages ===
=== Predecessor ===
v4672 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5962  <|@  <|@
f <@~|@floating>@ <|@
tid i5963 <|@
result int[-873243|0xfffffffffff2ace5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -873243
stableDimension: 0
stamp: i32 [-873243] ⇊00000000fff2ace5 ⇈00000000fff2ace5
stampKind: i32
value: int[-873243|0xfffffffffff2ace5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5952 
=== Predecessor ===
v4671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-873243|0xfffffffffff2ace5]] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B281" "B286" "B284" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5955 <|@
result v235|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-925467 - -866067] ⇊00000000fff080e5 ⇈00000000fff3eced
valueDescription: i32
=== Inputs ===
merge: v5952 
values: i5954 i5963 i5965 
=== Succesors ===
=== Usages ===
v5957 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5952 values: i5954 i5963 i5965  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5953 v5962 v5964 
=== Succesors ===
next: v5957 
=== Usages ===
i5955 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5953 v5962 v5964 #next: v5957  <|@  <|@
tid ?1657 <|@
d <@d|@=== Debug Properties ===
bci: 63
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?543 
values: a1664 a2 i6235 a4 i5665 i1671 i1674 
=== Succesors ===
=== Usages ===
v5957 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1664 a2 i6235 a4 i5665 i1671 i1674  <|@  <|@
f <@*|@fixed>@ <|@
tid v5957 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1657 
actionAndReason: i5955 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5952 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1657 actionAndReason: i5955 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v235|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v226|QWORD[.] v1|QWORD[.] v145|DWORD v3|QWORD[.] v227|DWORD v229|DWORD v230|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B289" 
    xhandlers
    flags 
    probability 4593757210952074687
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1662 
=== Usages ===
=== Predecessor ===
v1706 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1662  <|@  <|@
f <@~|@floating>@ <|@
tid a3379 <|@
result v236|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 64]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6406 
=== Succesors ===
=== Usages ===
a1675 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6406  <|@  <|@
f <@*|@fixed>@ <|@
tid v1662 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1659 
=== Predecessor ===
v1705 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = UNCOMPRESSPOINTER (input: v220|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.], v236|QWORD[.], v224|DWORD, v223|DWORD] destination: B288 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B262" "B288" 
    successors "B290" "B291" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a1663 <|@
result v237|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/util/regex/Pattern$GroupTail;
valueDescription: a -
=== Inputs ===
merge: v1659 
values: a3220 a3312 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: a3220 a3312  <|@  <|@
f <@~|@floating>@ <|@
tid a1675 <|@
result v238|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a! Ljava/util/regex/Pattern$Node;
valueDescription: a -
=== Inputs ===
merge: v1659 
values: a3288 a3379 
=== Succesors ===
=== Usages ===
v3418 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: a3288 a3379  <|@  <|@
f <@~|@floating>@ <|@
tid i1669 <|@
result v239|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1659 
values: i6395 i6409 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: i6395 i6409  <|@  <|@
f <@~|@floating>@ <|@
tid i1672 <|@
result v240|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1659 
values: i6394 i6408 
=== Succesors ===
=== Usages ===
?539 ?5660 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1659 values: i6394 i6408  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1660 v1662 
=== Succesors ===
next: i538 
=== Usages ===
a1663 a1675 i1669 i1672 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1660 v1662 #next: i538  <|@  <|@
tid v3418 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@41206827
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a1675 a2 i6235 a4 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1675 a2 i6235 a4  <|@  <|@
tid ?5660 <|@
d <@d|@=== Debug Properties ===
bci: 70
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 7
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 0
=== Inputs ===
outerFrameState: ?543 
values: a1663 a2 - - - i1669 i1672 
=== Succesors ===
=== Usages ===
i538 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1663 a2 - - - i1669 i1672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i538 <|@
result v241|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 70
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3418 
stateDuring: ?5660 
=== Succesors ===
next: v4682 
=== Usages ===
v540 ?539 
=== Predecessor ===
v1659 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3418 stateDuring: ?5660 #next: v4682  <|@  <|@
tid ?539 <|@
d <@d|@=== Debug Properties ===
bci: 73
code: ResolvedJavaMethodBytecode<Pattern$GroupTail.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 7
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4719
stackSize: 1
=== Inputs ===
outerFrameState: ?543 
values: a1663 a2 - - - i1669 i1672 i538 
=== Succesors ===
=== Usages ===
v5913 i6416 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?543 values: a1663 a2 - - - i1669 i1672 i538  <|@  <|@
f <@~|@floating>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i538 
y: i28 
=== Succesors ===
=== Usages ===
v4682 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i538 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4682 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v540 
=== Succesors ===
trueSuccessor: v4681 
falseSuccessor: v4678 
=== Usages ===
=== Predecessor ===
i538 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v540 #trueSuccessor: v4681 #falseSuccessor: v4678  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v237|QWORD[.], v238|QWORD[.], v239|DWORD, v240|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v238|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v145|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v241|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4681 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5909 
=== Usages ===
=== Predecessor ===
v4682 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5909  <|@  <|@
f <@~|@floating>@ <|@
tid i5910 <|@
result int[-875283|0xfffffffffff2a4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -875283
stableDimension: 0
stamp: i32 [-875283] ⇊00000000fff2a4ed ⇈00000000fff2a4ed
stampKind: i32
value: int[-875283|0xfffffffffff2a4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5908 
=== Predecessor ===
v4681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-875283|0xfffffffffff2a4ed]] destination: B290 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B292" "B293" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4678 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6415 
=== Usages ===
=== Predecessor ===
v4682 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6415 <|@
result v242|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6416 
=== Usages ===
a3421 v6557 
=== Predecessor ===
v4678 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6416  <|@  <|@
f <@~|@floating>@ <|@
tid v6557 <|@
result [v242|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6415 
=== Succesors ===
=== Usages ===
i6416 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6416 <|@
result v243|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?539 
guard: - 
address: v6557 
=== Succesors ===
next: i6417 
=== Usages ===
v3428 
=== Predecessor ===
a6415 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?539 guard: - address: v6557 #next: i6417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6417 <|@
result v244|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4692 
=== Usages ===
v6558 v3428 
=== Predecessor ===
i6416 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4692  <|@  <|@
f <@~|@floating>@ <|@
tid v3428 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6417 
y: i6416 
=== Succesors ===
=== Usages ===
v4692 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6417 y: i6416  <|@  <|@
f <@*|@fixed>@ <|@
tid v4692 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3428 
=== Succesors ===
trueSuccessor: v4688 
falseSuccessor: v4691 
=== Usages ===
=== Predecessor ===
i6417 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3428 #trueSuccessor: v4688 #falseSuccessor: v4691  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: v241|DWORD 
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v243|DWORD = MOV [v242|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v244|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B358" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4688 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3435 
=== Usages ===
v3435 
=== Predecessor ===
v4692 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3435  <|@  <|@
f <@~|@floating>@ <|@
tid a3421 <|@
result v245|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6415 
=== Succesors ===
=== Usages ===
v6558 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6415  <|@  <|@
f <@~|@floating>@ <|@
tid v6558 <|@
result [v245|QWORD[.] + v244|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3421 
index: i6417 
=== Succesors ===
=== Usages ===
v3435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3421 index: i6417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4688 
address: v6558 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1741 
=== Usages ===
=== Predecessor ===
v4688 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4688 address: v6558 value: i6327 stateAfter: - lastLocationAccess: - #next: v1741  <|@  <|@
f <@*|@fixed>@ <|@
tid v1741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v3435 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[.] = UNCOMPRESSPOINTER (input: v242|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD[.] + v244|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B292 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4691 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5916 
=== Usages ===
=== Predecessor ===
v4692 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5916  <|@  <|@
f <@~|@floating>@ <|@
tid i5917 <|@
result int[-877851|0xfffffffffff29ae5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -877851
stableDimension: 0
stamp: i32 [-877851] ⇊00000000fff29ae5 ⇈00000000fff29ae5
stampKind: i32
value: int[-877851|0xfffffffffff29ae5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5916 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5908 
=== Predecessor ===
v4691 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-877851|0xfffffffffff29ae5]] destination: B293 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B290" "B293" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5911 <|@
result v246|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-877851 - -875283] ⇊00000000fff280e5 ⇈00000000fff2bffd
valueDescription: i32
=== Inputs ===
merge: v5908 
values: i5910 i5917 
=== Succesors ===
=== Usages ===
v5913 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5908 values: i5910 i5917  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5908 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5909 v5916 
=== Succesors ===
next: v5913 
=== Usages ===
i5911 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5909 v5916 #next: v5913  <|@  <|@
f <@*|@fixed>@ <|@
tid v5913 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?539 
actionAndReason: i5911 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5908 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?539 actionAndReason: i5911 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v246|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: v241|DWORD 
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4646 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4718) [bci: 62]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5984 
=== Usages ===
=== Predecessor ===
v4647 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5984  <|@  <|@
f <@~|@floating>@ <|@
tid i5985 <|@
result int[-862747|0xfffffffffff2d5e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -862747
stableDimension: 0
stamp: i32 [-862747] ⇊00000000fff2d5e5 ⇈00000000fff2d5e5
stampKind: i32
value: int[-862747|0xfffffffffff2d5e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4646 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-862747|0xfffffffffff2d5e5]] destination: B295 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4641 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4717) [bci: 50]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5982 
=== Usages ===
=== Predecessor ===
v4642 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5982  <|@  <|@
f <@~|@floating>@ <|@
tid i5983 <|@
result int[-860443|0xfffffffffff2dee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -860443
stableDimension: 0
stamp: i32 [-860443] ⇊00000000fff2dee5 ⇈00000000fff2dee5
stampKind: i32
value: int[-860443|0xfffffffffff2dee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-860443|0xfffffffffff2dee5]] destination: B296 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupTail.match(Pattern.java:4710) [bci: 8]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5976 
=== Usages ===
=== Predecessor ===
v4627 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5976  <|@  <|@
f <@~|@floating>@ <|@
tid i5977 <|@
result int[-851227|0xfffffffffff302e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -851227
stableDimension: 0
stamp: i32 [-851227] ⇊00000000fff302e5 ⇈00000000fff302e5
stampKind: i32
value: int[-851227|0xfffffffffff302e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-851227|0xfffffffffff302e5]] destination: B297 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupTail; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupTail; position=at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5972 
=== Usages ===
=== Predecessor ===
v4617 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5972  <|@  <|@
f <@~|@floating>@ <|@
tid i5973 <|@
result int[-848435|0xfffffffffff30dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -848435
stableDimension: 0
stamp: i32 [-848435] ⇊00000000fff30dcd ⇈00000000fff30dcd
stampKind: i32
value: int[-848435|0xfffffffffff30dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5966 
=== Predecessor ===
v4616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-848435|0xfffffffffff30dcd]] destination: B298 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" "B297" "B275" "B296" "B295" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5969 <|@
result v247|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-865291 - -848139] ⇊00000000fff200c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v5966 
values: i5973 i5977 i5979 i5983 i5985 
=== Succesors ===
=== Usages ===
v5971 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5966 values: i5973 i5977 i5979 i5983 i5985  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5972 v5976 v5978 v5982 v5984 
=== Succesors ===
next: v5971 
=== Usages ===
i5969 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5972 v5976 v5978 v5982 v5984 #next: v5971  <|@  <|@
f <@*|@fixed>@ <|@
tid v5971 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?1805 
actionAndReason: i5969 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5966 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?1805 actionAndReason: i5969 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v247|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4441 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5762 
=== Usages ===
=== Predecessor ===
v4442 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5762  <|@  <|@
f <@~|@floating>@ <|@
tid i5763 <|@
result int[-800819|0xfffffffffff3c7cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -800819
stableDimension: 0
stamp: i32 [-800819] ⇊00000000fff3c7cd ⇈00000000fff3c7cd
stampKind: i32
value: int[-800819|0xfffffffffff3c7cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4441 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-800819|0xfffffffffff3c7cd]] destination: B300 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4426 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5756 
=== Usages ===
=== Predecessor ===
v4427 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5756  <|@  <|@
f <@~|@floating>@ <|@
tid i5757 <|@
result int[-798259|0xfffffffffff3d1cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -798259
stableDimension: 0
stamp: i32 [-798259] ⇊00000000fff3d1cd ⇈00000000fff3d1cd
stampKind: i32
value: int[-798259|0xfffffffffff3d1cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4426 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-798259|0xfffffffffff3d1cd]] destination: B301 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4411 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5750 
=== Usages ===
=== Predecessor ===
v4412 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5750  <|@  <|@
f <@~|@floating>@ <|@
tid i5751 <|@
result int[-795699|0xfffffffffff3dbcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -795699
stableDimension: 0
stamp: i32 [-795699] ⇊00000000fff3dbcd ⇈00000000fff3dbcd
stampKind: i32
value: int[-795699|0xfffffffffff3dbcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4411 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-795699|0xfffffffffff3dbcd]] destination: B302 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5744 
=== Usages ===
=== Predecessor ===
v4397 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5744  <|@  <|@
f <@~|@floating>@ <|@
tid i5745 <|@
result int[-793139|0xfffffffffff3e5cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -793139
stableDimension: 0
stamp: i32 [-793139] ⇊00000000fff3e5cd ⇈00000000fff3e5cd
stampKind: i32
value: int[-793139|0xfffffffffff3e5cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4396 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-793139|0xfffffffffff3e5cd]] destination: B303 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4381 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5738 
=== Usages ===
=== Predecessor ===
v4382 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5738  <|@  <|@
f <@~|@floating>@ <|@
tid i5739 <|@
result int[-790579|0xfffffffffff3efcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -790579
stableDimension: 0
stamp: i32 [-790579] ⇊00000000fff3efcd ⇈00000000fff3efcd
stampKind: i32
value: int[-790579|0xfffffffffff3efcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-790579|0xfffffffffff3efcd]] destination: B304 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$5; target_method=isSatisfiedBy target_method_class=Ljava/util/regex/Pattern$5; position=at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5732 
=== Usages ===
=== Predecessor ===
v4367 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5732  <|@  <|@
f <@~|@floating>@ <|@
tid i5733 <|@
result int[-788019|0xfffffffffff3f9cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -788019
stableDimension: 0
stamp: i32 [-788019] ⇊00000000fff3f9cd ⇈00000000fff3f9cd
stampKind: i32
value: int[-788019|0xfffffffffff3f9cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4366 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-788019|0xfffffffffff3f9cd]] destination: B305 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Character.isHighSurrogate(Character.java:4729) [bci: 3]
at java.lang.Character.codePointAt(Character.java:4867) [bci: 9]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5726 
=== Usages ===
=== Predecessor ===
v4352 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5726  <|@  <|@
f <@~|@floating>@ <|@
tid i5727 <|@
result int[-785427|0xfffffffffff403ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -785427
stableDimension: 0
stamp: i32 [-785427] ⇊00000000fff403ed ⇈00000000fff403ed
stampKind: i32
value: int[-785427|0xfffffffffff403ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4351 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-785427|0xfffffffffff403ed]] destination: B306 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5724 
=== Usages ===
=== Predecessor ===
v4347 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5724  <|@  <|@
f <@~|@floating>@ <|@
tid i5725 <|@
result int[-783387|0xfffffffffff40be5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -783387
stableDimension: 0
stamp: i32 [-783387] ⇊00000000fff40be5 ⇈00000000fff40be5
stampKind: i32
value: int[-783387|0xfffffffffff40be5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4346 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-783387|0xfffffffffff40be5]] destination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5722 
=== Usages ===
=== Predecessor ===
v4342 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5722  <|@  <|@
f <@~|@floating>@ <|@
tid i5723 <|@
result int[-782611|0xfffffffffff40eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -782611
stableDimension: 0
stamp: i32 [-782611] ⇊00000000fff40eed ⇈00000000fff40eed
stampKind: i32
value: int[-782611|0xfffffffffff40eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4341 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-782611|0xfffffffffff40eed]] destination: B308 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.lang.Character.codePointAt(Character.java:4866) [bci: 2]
at java.util.regex.Pattern$CharProperty.match(Pattern.java:3777) [bci: 10]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5716 
=== Usages ===
=== Predecessor ===
v4327 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5716  <|@  <|@
f <@~|@floating>@ <|@
tid i5717 <|@
result int[-780083|0xfffffffffff418cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -780083
stableDimension: 0
stamp: i32 [-780083] ⇊00000000fff418cd ⇈00000000fff418cd
stampKind: i32
value: int[-780083|0xfffffffffff418cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4326 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-780083|0xfffffffffff418cd]] destination: B309 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$CharProperty.match(Pattern.java:3776) [bci: 5]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5709 
=== Usages ===
=== Predecessor ===
v4317 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5709  <|@  <|@
f <@~|@floating>@ <|@
tid i5710 <|@
result int[-779539|0xfffffffffff41aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -779539
stableDimension: 0
stamp: i32 [-779539] ⇊00000000fff41aed ⇈00000000fff41aed
stampKind: i32
value: int[-779539|0xfffffffffff41aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5708 
=== Predecessor ===
v4316 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-779539|0xfffffffffff41aed]] destination: B310 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" "B309" "B148" "B308" "B307" "B306" "B156" "B305" "B163" "B304" "B170" "B303" "B177" "B302" "B184" "B301" "B191" "B300" "B198" 
    successors 
    xhandlers
    flags 
    probability 2374241428554383360
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5711 <|@
result v248|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-803091 - -779539] ⇊00000000fff000c5 ⇈00000000fff7fffd
valueDescription: i32
=== Inputs ===
merge: v5708 
values: i5710 i5717 i5719 i5723 i5725 i5727 i5731 i5733 i5737 i5739 i5743 i5745 i5749 i5751 i5755 i5757 i5761 i5763 i5767 
=== Succesors ===
=== Usages ===
v5713 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5708 values: i5710 i5717 i5719 i5723 i5725 i5727 i5731 i5733 i5737 i5739 i5743 i5745 i5749 i5751 i5755 i5757 i5761 i5763 i5767  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5709 v5716 v5718 v5722 v5724 v5726 v5730 v5732 v5736 v5738 v5742 v5744 v5748 v5750 v5754 v5756 v5760 v5762 v5766 
=== Succesors ===
next: v5713 
=== Usages ===
i5711 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5709 v5716 v5718 v5722 v5724 v5726 v5730 v5732 v5736 v5738 v5742 v5744 v5748 v5750 v5754 v5756 v5760 v5762 v5766 #next: v5713  <|@  <|@
f <@*|@fixed>@ <|@
tid v5713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
actionAndReason: i5711 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5708 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?109 actionAndReason: i5711 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B313" "B353" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598337202097469275
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v150 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v160 
=== Usages ===
=== Predecessor ===
v151 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v160  <|@  <|@
f <@~|@floating>@ <|@
tid v6194 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6326 
y: v6171 
=== Succesors ===
=== Usages ===
v160 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6326 y: v6171  <|@  <|@
f <@*|@fixed>@ <|@
tid v160 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.59970699517179
=== Inputs ===
condition: v6194 
=== Succesors ===
trueSuccessor: v156 
falseSuccessor: v159 
=== Usages ===
=== Predecessor ===
v150 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6194 #trueSuccessor: v156 #falseSuccessor: v159  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B314" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594763984829801405
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v156 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Curly; target_method=match target_method_class=Ljava/util/regex/Pattern$Curly; position=at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v210 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v210  <|@  <|@
tid ?243 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
?214 ?5645 ?566 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@~|@floating>@ <|@
tid v6622 <|@
result [v132|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
i6418 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@*|@fixed>@ <|@
tid v210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v211 
=== Predecessor ===
v156 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B313 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" "B336" "B332" 
    successors "B315" "B349" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4595909231606444902
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i212 <|@
result v249|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i3 i6436 i558 
=== Succesors ===
=== Usages ===
?214 v3521 i558 v545 v971 v6561 v967 v3458 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i3 i6436 i558  <|@  <|@
f <@~|@floating>@ <|@
tid i213 <|@
result v250|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v211 
values: i28 i233 i233 
=== Succesors ===
=== Usages ===
?214 v216 v3521 ?566 i233 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v211 values: i28 i233 i233  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v211 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 1.2046558316457305
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 2
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v210 
=== Succesors ===
next: i6418 
=== Usages ===
i212 i213 v218 v228 v234 v1755 v4784 v4778 v4744 v4738 v4702 v4708 v4750 v4720 v4726 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v210 #next: i6418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6418 <|@
result v251|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.cmin
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 6]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6622 
=== Succesors ===
next: v222 
=== Usages ===
v216 
=== Predecessor ===
v211 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6622 #next: v222  <|@  <|@
f <@~|@floating>@ <|@
tid v216 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i213 
y: i6418 
=== Succesors ===
=== Usages ===
v222 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i213 y: i6418  <|@  <|@
tid ?214 <|@
d <@d|@=== Debug Properties ===
bci: 3
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4228
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a3041 a2 i212 a4 i213 
=== Succesors ===
=== Usages ===
v5825 v6420 v6422 i6424 i6429 v6432 i6434 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a3041 a2 i212 a4 i213  <|@  <|@
f <@*|@fixed>@ <|@
tid v222 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 9]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.5533923900859385
=== Inputs ===
condition: v216 
=== Succesors ===
trueSuccessor: v217 
falseSuccessor: v218 
=== Usages ===
=== Predecessor ===
i6418 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v216 #trueSuccessor: v217 #falseSuccessor: v218  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|DWORD, v250|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOV [v132|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v251|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B316" "B347" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 12]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6419 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6419  <|@  <|@
f <@~|@floating>@ <|@
tid v6559 <|@
result [v132|DWORD[.] * 8 + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
a6419 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6419 <|@
result v252|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.atom
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 13]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6559 
=== Succesors ===
next: v6420 
=== Usages ===
v6603 v6566 v6562 
=== Predecessor ===
v217 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6559 #next: v6420  <|@  <|@
f <@~|@floating>@ <|@
tid v6603 <|@
result [v252|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
v6420 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6420 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6603 
=== Succesors ===
next: v4704 
=== Usages ===
v6218 
=== Predecessor ===
a6419 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6603 #next: v4704  <|@  <|@
f <@~|@floating>@ <|@
tid v6218 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6420 
y: v6189 
=== Succesors ===
=== Usages ===
v4704 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6420 y: v6189  <|@  <|@
f <@*|@fixed>@ <|@
tid v4704 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6218 
=== Succesors ===
trueSuccessor: v4699 
falseSuccessor: v4702 
=== Usages ===
=== Predecessor ===
v6420 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6218 #trueSuccessor: v4699 #falseSuccessor: v4702  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v132|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v252|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B317" "B345" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4699 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6421 
=== Usages ===
=== Predecessor ===
v4704 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6421  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6421 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.to
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 2]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6453 
=== Succesors ===
next: v4710 
=== Usages ===
v545 
=== Predecessor ===
v4699 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6453 #next: v4710  <|@  <|@
f <@~|@floating>@ <|@
tid v545 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6421 
=== Succesors ===
=== Usages ===
v4710 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i6421  <|@  <|@
f <@*|@fixed>@ <|@
tid v4710 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v545 
=== Succesors ===
trueSuccessor: v4705 
falseSuccessor: v4708 
=== Usages ===
=== Predecessor ===
i6421 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v545 #trueSuccessor: v4705 #falseSuccessor: v4708  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" "B343" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4705 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v6422 
=== Usages ===
=== Predecessor ===
v4710 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v6422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6422 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6577 
=== Succesors ===
next: v4722 
=== Usages ===
v6219 
=== Predecessor ===
v4705 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6577 #next: v4722  <|@  <|@
f <@~|@floating>@ <|@
tid v6219 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6422 
y: v6173 
=== Succesors ===
=== Usages ===
v4722 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6422 y: v6173  <|@  <|@
f <@*|@fixed>@ <|@
tid v4722 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v6219 
=== Succesors ===
trueSuccessor: v4717 
falseSuccessor: v4720 
=== Usages ===
=== Predecessor ===
v6422 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6219 #trueSuccessor: v4717 #falseSuccessor: v4720  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B319" "B321" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4717 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4728 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4728  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i28 
=== Succesors ===
=== Usages ===
v4728 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4728 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v967 
=== Succesors ===
trueSuccessor: v4726 
falseSuccessor: v4723 
=== Usages ===
=== Predecessor ===
v4717 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v967 #trueSuccessor: v4726 #falseSuccessor: v4723  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v249|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B320" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4726 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4727 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4727  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B319 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B319" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4727 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5834 
=== Usages ===
=== Predecessor ===
v4726 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5834  <|@  <|@
f <@~|@floating>@ <|@
tid i5835 <|@
result int[-882451|0xfffffffffff288ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -882451
stableDimension: 0
stamp: i32 [-882451] ⇊00000000fff288ed ⇈00000000fff288ed
stampKind: i32
value: int[-882451|0xfffffffffff288ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4727 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-882451|0xfffffffffff288ed]] destination: B320 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B322" "B341" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4723 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 1]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6423 
=== Usages ===
=== Predecessor ===
v4728 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6423 <|@
result v253|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v6454 
=== Succesors ===
next: i6424 
=== Usages ===
a3450 v6560 
=== Predecessor ===
v4723 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6454 #next: i6424  <|@  <|@
f <@~|@floating>@ <|@
tid v6560 <|@
result [v253|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6423 
=== Succesors ===
=== Usages ===
i6424 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6423  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6424 <|@
result v254|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6560 
=== Succesors ===
next: v4740 
=== Usages ===
v971 v3458 
=== Predecessor ===
a6423 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6560 #next: v4740  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6424 
=== Succesors ===
=== Usages ===
v4740 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i212 y: i6424  <|@  <|@
f <@*|@fixed>@ <|@
tid v4740 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v971 
=== Succesors ===
trueSuccessor: v4735 
falseSuccessor: v4738 
=== Usages ===
=== Predecessor ===
i6424 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v971 #trueSuccessor: v4735 #falseSuccessor: v4738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v254|DWORD = MOV [v253|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B323" "B339" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4735 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v4746 
=== Usages ===
=== Predecessor ===
v4740 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v4746  <|@  <|@
f <@~|@floating>@ <|@
tid v3458 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i212 
y: i6424 
=== Succesors ===
=== Usages ===
v4746 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i212 y: i6424  <|@  <|@
f <@*|@fixed>@ <|@
tid v4746 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3458 
=== Succesors ===
trueSuccessor: v4741 
falseSuccessor: v4744 
=== Usages ===
=== Predecessor ===
v4735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3458 #trueSuccessor: v4741 #falseSuccessor: v4744  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B324" "B337" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4741 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6425 
=== Usages ===
i6425 
=== Predecessor ===
v4746 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6425  <|@  <|@
f <@~|@floating>@ <|@
tid a3450 <|@
result v255|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a6423 
=== Succesors ===
=== Usages ===
v6561 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6423  <|@  <|@
f <@~|@floating>@ <|@
tid v6561 <|@
result [v255|QWORD[.] + v249|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a3450 
index: i212 
=== Succesors ===
=== Usages ===
i6425 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3450 index: i212  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6425 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v4741 
address: v6561 
=== Succesors ===
next: v4752 
=== Usages ===
v3913 j3621 
=== Predecessor ===
v4741 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4741 address: v6561 #next: v4752  <|@  <|@
f <@~|@floating>@ <|@
tid v3913 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6425 
y: i3912 
=== Succesors ===
=== Usages ===
v4752 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6425 y: i3912  <|@  <|@
f <@*|@fixed>@ <|@
tid v4752 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3913 
=== Succesors ===
trueSuccessor: v4747 
falseSuccessor: v4750 
=== Usages ===
=== Predecessor ===
i6425 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3913 #trueSuccessor: v4747 #falseSuccessor: v4750  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v253|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = MOVSX [v255|QWORD[.] + v249|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v256|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B325" "B328" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6426 
=== Usages ===
i6427 
=== Predecessor ===
v4752 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6426  <|@  <|@
f <@~|@floating>@ <|@
tid v6562 <|@
result [v252|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
i6426 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6426 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Ctype.ctype
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 9]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6562 
=== Succesors ===
next: i6427 
=== Usages ===
v979 
=== Predecessor ===
v4747 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6562 #next: i6427  <|@  <|@
f <@~|@floating>@ <|@
tid j3621 <|@
result v258|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: false
inputBits: 16
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
resultBits: 64
stamp: i64 [0 - 65535] ⇈000000000000ffff
=== Inputs ===
value: i6425 
=== Succesors ===
=== Usages ===
v6563 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i6425  <|@  <|@
f <@~|@floating>@ <|@
tid v6563 <|@
result [v5|QWORD[.] + v258|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a1107 
index: j3621 
=== Succesors ===
=== Usages ===
i6427 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1107 index: j3621  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6427 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: int
nodeSourcePosition: at java.util.regex.ASCII.getType(ASCII.java:199) [bci: 11]
at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 1]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: v4747 
address: v6563 
=== Succesors ===
next: v556 
=== Usages ===
v979 
=== Predecessor ===
i6426 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v4747 address: v6563 #next: v556  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.ASCII.isType(ASCII.java:203) [bci: 6]
at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 12]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
x: i6426 
y: i6427 
=== Succesors ===
=== Usages ===
v556 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i6426 y: i6427  <|@  <|@
f <@*|@fixed>@ <|@
tid v556 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 19]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.8923207656059002
=== Inputs ===
condition: v979 
=== Succesors ===
trueSuccessor: v228 
falseSuccessor: v555 
=== Usages ===
=== Predecessor ===
i6427 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v979 #trueSuccessor: v228 #falseSuccessor: v555  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v252|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = MOVZX v256|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v257|DWORD, y: [v5|QWORD[.] + v258|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B326" "B327" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 41]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: a6428 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: a6428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6428 <|@
result v259|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6429 
=== Usages ===
a3476 v6564 
=== Predecessor ===
v228 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6429  <|@  <|@
f <@~|@floating>@ <|@
tid v6564 <|@
result [v259|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6428 
=== Succesors ===
=== Usages ===
i6429 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6429 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6564 
=== Succesors ===
next: i6430 
=== Usages ===
v3483 
=== Predecessor ===
a6428 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6564 #next: i6430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6430 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4762 
=== Usages ===
v6565 v3483 
=== Predecessor ===
i6429 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4762  <|@  <|@
f <@~|@floating>@ <|@
tid v3483 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6430 
y: i6429 
=== Succesors ===
=== Usages ===
v4762 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6430 y: i6429  <|@  <|@
f <@*|@fixed>@ <|@
tid v4762 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3483 
=== Succesors ===
trueSuccessor: v4758 
falseSuccessor: v4761 
=== Usages ===
=== Predecessor ===
i6430 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3483 #trueSuccessor: v4758 #falseSuccessor: v4761  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v260|DWORD = MOV [v259|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v260|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4758 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3490 
=== Usages ===
v3490 
=== Predecessor ===
v4762 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3490  <|@  <|@
f <@~|@floating>@ <|@
tid a3476 <|@
result v262|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6428 
=== Succesors ===
=== Usages ===
v6565 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6428  <|@  <|@
f <@~|@floating>@ <|@
tid v6565 <|@
result [v262|QWORD[.] + v261|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3476 
index: i6430 
=== Succesors ===
=== Usages ===
v3490 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3476 index: i6430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3490 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4758 
address: v6565 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3906 
=== Usages ===
=== Predecessor ===
v4758 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4758 address: v6565 value: i6327 stateAfter: - lastLocationAccess: - #next: v3906  <|@  <|@
tid ?2086 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 i28 
=== Succesors ===
=== Usages ===
v3906 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3906 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2086 
=== Succesors ===
next: v2088 
=== Usages ===
=== Predecessor ===
v3490 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?2086 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid i6234 <|@
result v263|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i31 
y: i61 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i31 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3906 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = UNCOMPRESSPOINTER (input: v259|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v262|QWORD[.] + v261|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|DWORD] destination: B326 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4761 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5846 
=== Usages ===
=== Predecessor ===
v4762 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5846  <|@  <|@
f <@~|@floating>@ <|@
tid i5847 <|@
result int[-891931|0xfffffffffff263e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -891931
stableDimension: 0
stamp: i32 [-891931] ⇊00000000fff263e5 ⇈00000000fff263e5
stampKind: i32
value: int[-891931|0xfffffffffff263e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4761 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-891931|0xfffffffffff263e5]] destination: B327 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B329" "B333" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4577580840296619801
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v555 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 22]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6431 
=== Usages ===
=== Predecessor ===
v556 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6431  <|@  <|@
f <@~|@floating>@ <|@
tid v6566 <|@
result [v252|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6419 
=== Succesors ===
=== Usages ===
a6431 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6419  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6431 <|@
result v264|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Node.next
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n Ljava/util/regex/Pattern$Node;
=== Inputs ===
stateBefore: - 
guard: - 
address: v6566 
=== Succesors ===
next: v6432 
=== Usages ===
a3493 v6604 
=== Predecessor ===
v555 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6566 #next: v6432  <|@  <|@
f <@~|@floating>@ <|@
tid v6604 <|@
result [v264|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6431 
=== Succesors ===
=== Usages ===
v6432 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6431  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v6432 <|@
result v265|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadHubIntrinsic(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:142) [bci: 39]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6604 
=== Succesors ===
next: v793 
=== Usages ===
v6221 
=== Predecessor ===
a6431 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6604 #next: v793  <|@  <|@
f <@~|@floating>@ <|@
tid v6220 <|@
result meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rawvalue: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v6221 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v6221 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.InstanceOfSnippets.instanceofExact(InstanceOfSnippets.java:143) [bci: 50]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v6432 
y: v6220 
=== Succesors ===
=== Usages ===
v793 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v6432 y: v6220  <|@  <|@
f <@~|@floating>@ <|@
tid i233 <|@
result v266|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 35]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i213 
y: i61 
=== Succesors ===
=== Usages ===
i213 i213 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i213 y: i61  <|@  <|@
tid ?566 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4229
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: a3041 a2 - a4 i213 
=== Succesors ===
=== Usages ===
?994 ?561 ?5643 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: a3041 a2 - a4 i213  <|@  <|@
f <@~|@floating>@ <|@
tid i558 <|@
result v267|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 29]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i212 
y: i61 
=== Succesors ===
=== Usages ===
v3515 ?992 v3495 i212 v3514 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i212 y: i61  <|@  <|@
f <@~|@floating>@ <|@
tid v6632 <|@
result [v1|QWORD[.] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
v3495 i6436 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v793 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Node; target_method=match target_method_class=Ljava/util/regex/Pattern$Node; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7022928681952456
=== Inputs ===
condition: v6221 
=== Succesors ===
trueSuccessor: v786 
falseSuccessor: v792 
=== Usages ===
=== Predecessor ===
v6432 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v6221 #trueSuccessor: v786 #falseSuccessor: v792  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD[.] = MOV [v252|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v265|DWORD = MOV [v264|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = INC v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = INC v249|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v265|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" "B332" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Node; target_method=match target_method_class=Ljava/util/regex/Pattern$Node; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: a6433 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a6433  <|@  <|@
f <@~|@floating>@ <|@
tid v6635 <|@
result [v1|QWORD[.] + 52] <|@
d <@d|@=== Debug Properties ===
displacement: 52
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
a6433 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6433 <|@
result v268|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.groups
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 6]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6635 
=== Succesors ===
next: i6434 
=== Usages ===
v6569 v6568 v6567 
=== Predecessor ===
v786 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6635 #next: i6434  <|@  <|@
f <@~|@floating>@ <|@
tid v6567 <|@
result [v268|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
i6434 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6434 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?214 
guard: - 
address: v6567 
=== Succesors ===
next: v4780 
=== Usages ===
v3904 
=== Predecessor ===
a6433 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?214 guard: - address: v6567 #next: v4780  <|@  <|@
f <@~|@floating>@ <|@
tid v3904 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6434 
y: i2599 
=== Succesors ===
=== Usages ===
v4780 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6434 y: i2599  <|@  <|@
f <@*|@fixed>@ <|@
tid v4780 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v3904 
=== Succesors ===
trueSuccessor: v4778 
falseSuccessor: v4775 
=== Usages ===
=== Predecessor ===
i6434 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3904 #trueSuccessor: v4778 #falseSuccessor: v4775  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v268|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B331" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4778 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4779 
=== Usages ===
=== Predecessor ===
v4780 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4779  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B330 -> B331 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4779 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5852 
=== Usages ===
=== Predecessor ===
v4778 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5852  <|@  <|@
f <@~|@floating>@ <|@
tid i5853 <|@
result int[-927771|0xfffffffffff1d7e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -927771
stableDimension: 0
stamp: i32 [-927771] ⇊00000000fff1d7e5 ⇈00000000fff1d7e5
stampKind: i32
value: int[-927771|0xfffffffffff1d7e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-927771|0xfffffffffff1d7e5]] destination: B331 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4775 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3495 
=== Usages ===
v3508 v3514 
=== Predecessor ===
v4780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3495  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3495 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3409) [bci: 2]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v6632 
value: i558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i6435 
=== Usages ===
=== Predecessor ===
v4775 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v6632 value: i558 stateAfter: - lastLocationAccess: - #next: i6435  <|@  <|@
f <@~|@floating>@ <|@
tid v6629 <|@
result [v1|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a2 
index: - 
=== Succesors ===
=== Usages ===
i6435 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6435 <|@
result v269|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.first
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 11]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6629 
=== Succesors ===
next: v3508 
=== Usages ===
v3508 
=== Predecessor ===
v3495 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6629 #next: v3508  <|@  <|@
f <@~|@floating>@ <|@
tid v6568 <|@
result [v268|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
v3508 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3508 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3410) [bci: 14]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4775 
address: v6568 
value: i6435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3514 
=== Usages ===
=== Predecessor ===
i6435 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4775 address: v6568 value: i6435 stateAfter: - lastLocationAccess: - #next: v3514  <|@  <|@
f <@~|@floating>@ <|@
tid v6569 <|@
result [v268|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6433 
=== Succesors ===
=== Usages ===
v3514 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6433  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3514 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4775 
address: v6569 
value: i558 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3907 
=== Usages ===
=== Predecessor ===
v3508 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4775 address: v6569 value: i558 stateAfter: - lastLocationAccess: - #next: v3907  <|@  <|@
tid ?994 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?566 
values: - - - - 
=== Succesors ===
=== Usages ===
?992 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - -  <|@  <|@
tid ?992 <|@
d <@d|@=== Debug Properties ===
bci: 25
code: ResolvedJavaMethodBytecode<Pattern$Node.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$Node.match(Pattern.java:3411) [bci: 24]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3412
stackSize: 0
=== Inputs ===
outerFrameState: ?994 
values: - a2 i558 - 
=== Succesors ===
=== Usages ===
v3907 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?994 values: - a2 i558 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3907 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?992 
=== Succesors ===
next: v1755 
=== Usages ===
=== Predecessor ===
v3514 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?992 #next: v1755  <|@  <|@
f <@*|@fixed>@ <|@
tid v1755 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 1
stamp: void
=== Inputs ===
loopBegin: v211 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3907 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v267|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v268|DWORD[.] * 8 + 16], y: v269|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v268|DWORD[.] * 8 + 20], y: v267|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25]
locals: - v1|QWORD[.] v267|DWORD - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|DWORD, v266|DWORD] destination: B332 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B334" "B336" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v792 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i560 
=== Usages ===
=== Predecessor ===
v793 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i560  <|@  <|@
f <@~|@floating>@ <|@
tid a3493 <|@
result v270|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 23]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a Ljava/util/regex/Pattern$Node;
=== Inputs ===
value: a6431 
=== Succesors ===
=== Usages ===
v3515 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6431  <|@  <|@
tid v3515 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@37b45ffe
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
arguments: a3493 a2 i558 a4 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3493 a2 i558 a4  <|@  <|@
tid ?5643 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 4
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 0
=== Inputs ===
outerFrameState: ?566 
values: - - - - 
=== Succesors ===
=== Usages ===
i560 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i560 <|@
result v271|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 31
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3515 
stateDuring: ?5643 
=== Succesors ===
next: v4786 
=== Usages ===
v562 
=== Predecessor ===
v792 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3515 stateDuring: ?5643 #next: v4786  <|@  <|@
f <@~|@floating>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i560 
y: i28 
=== Succesors ===
=== Usages ===
v4786 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i560 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4786 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v562 
=== Succesors ===
trueSuccessor: v4784 
falseSuccessor: v4781 
=== Usages ===
=== Predecessor ===
i560 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v562 #trueSuccessor: v4784 #falseSuccessor: v4781  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = UNCOMPRESSPOINTER (input: v264|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v270|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v267|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v271|DWORD, y: v271|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B335" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4784 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4785 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4785  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B334 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B334" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4785 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v4782 
=== Usages ===
=== Predecessor ===
v4784 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v4782  <|@  <|@
tid ?561 <|@
d <@d|@=== Debug Properties ===
bci: 34
code: ResolvedJavaMethodBytecode<Pattern$BmpCharProperty.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 3800
stackSize: 1
=== Inputs ===
outerFrameState: ?566 
values: - - - - i28 
=== Succesors ===
=== Usages ===
v4782 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?566 values: - - - - i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4782 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 3516
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?561 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4785 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?561  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -900115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4781 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i6436 
=== Usages ===
=== Predecessor ===
v4786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i6436  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6436 <|@
result v272|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.last
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4230) [bci: 26]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6632 
=== Succesors ===
next: v234 
=== Usages ===
i212 
=== Predecessor ===
v4781 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6632 #next: v234  <|@  <|@
f <@*|@fixed>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v211 
=== Succesors ===
=== Usages ===
=== Predecessor ===
i6436 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v211  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v272|DWORD, v266|DWORD] destination: B336 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B338" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4750 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4751 
=== Usages ===
=== Predecessor ===
v4752 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4751  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B337 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B337" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4751 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Ctype.isSatisfiedBy(Pattern.java:3914) [bci: 4]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 16]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5842 
=== Usages ===
=== Predecessor ===
v4750 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5842  <|@  <|@
f <@~|@floating>@ <|@
tid i5843 <|@
result int[-887571|0xfffffffffff274ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -887571
stableDimension: 0
stamp: i32 [-887571] ⇊00000000fff274ed ⇈00000000fff274ed
stampKind: i32
value: int[-887571|0xfffffffffff274ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4751 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-887571|0xfffffffffff274ed]] destination: B338 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B340" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4744 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4745 
=== Usages ===
=== Predecessor ===
v4746 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4745  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B339 -> B340 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4745 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:660) [bci: 27]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5840 
=== Usages ===
=== Predecessor ===
v4744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5840  <|@  <|@
f <@~|@floating>@ <|@
tid i5841 <|@
result int[-885531|0xfffffffffff27ce5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -885531
stableDimension: 0
stamp: i32 [-885531] ⇊00000000fff27ce5 ⇈00000000fff27ce5
stampKind: i32
value: int[-885531|0xfffffffffff27ce5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4745 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-885531|0xfffffffffff27ce5]] destination: B340 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4738 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4739 
=== Usages ===
=== Predecessor ===
v4740 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4739  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B341" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4739 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.charAt(String.java:657) [bci: 10]
at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5838 
=== Usages ===
=== Predecessor ===
v4738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5838  <|@  <|@
f <@~|@floating>@ <|@
tid i5839 <|@
result int[-884755|0xfffffffffff27fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -884755
stableDimension: 0
stamp: i32 [-884755] ⇊00000000fff27fed ⇈00000000fff27fed
stampKind: i32
value: int[-884755|0xfffffffffff27fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5838 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4739 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-884755|0xfffffffffff27fed]] destination: B342 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B344" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4720 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4721 
=== Usages ===
=== Predecessor ===
v4722 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B343 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B343" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4721 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/lang/String; target_method=charAt target_method_class=Ljava/lang/String; position=at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3799) [bci: 11]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5832 
=== Usages ===
=== Predecessor ===
v4720 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5832  <|@  <|@
f <@~|@floating>@ <|@
tid i5833 <|@
result int[-882227|0xfffffffffff289cd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -882227
stableDimension: 0
stamp: i32 [-882227] ⇊00000000fff289cd ⇈00000000fff289cd
stampKind: i32
value: int[-882227|0xfffffffffff289cd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5832 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4721 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-882227|0xfffffffffff289cd]] destination: B344 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B346" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4708 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4709 
=== Usages ===
=== Predecessor ===
v4710 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B345 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B345" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4709 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3798) [bci: 5]
at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5828 
=== Usages ===
=== Predecessor ===
v4708 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5828  <|@  <|@
f <@~|@floating>@ <|@
tid i5829 <|@
result int[-881683|0xfffffffffff28bed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -881683
stableDimension: 0
stamp: i32 [-881683] ⇊00000000fff28bed ⇈00000000fff28bed
stampKind: i32
value: int[-881683|0xfffffffffff28bed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4709 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-881683|0xfffffffffff28bed]] destination: B346 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B348" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4702 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: v4703 
=== Usages ===
=== Predecessor ===
v4704 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: v4703  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B347 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B347" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4703 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Ctype; target_method=match target_method_class=Ljava/util/regex/Pattern$BmpCharProperty; position=at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5826 
=== Usages ===
=== Predecessor ===
v4702 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5826  <|@  <|@
f <@~|@floating>@ <|@
tid i5827 <|@
result int[-881203|0xfffffffffff28dcd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -881203
stableDimension: 0
stamp: i32 [-881203] ⇊00000000fff28dcd ⇈00000000fff28dcd
stampKind: i32
value: int[-881203|0xfffffffffff28dcd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4703 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-881203|0xfffffffffff28dcd]] destination: B348 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B350" "B351" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 41]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v211 
=== Succesors ===
next: i6437 
=== Usages ===
=== Predecessor ===
v222 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v211 #next: i6437  <|@  <|@
f <@~|@floating>@ <|@
tid v6623 <|@
result [v132|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6325 
=== Succesors ===
=== Usages ===
i6437 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6325  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6437 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$Curly.type
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 42]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6623 
=== Succesors ===
next: v4791 
=== Usages ===
v237 
=== Predecessor ===
v218 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6623 #next: v4791  <|@  <|@
f <@~|@floating>@ <|@
tid v237 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6437 
y: i28 
=== Succesors ===
=== Usages ===
v4791 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i6437 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v4791 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v237 
=== Succesors ===
trueSuccessor: v4787 
falseSuccessor: v4790 
=== Usages ===
=== Predecessor ===
i6437 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v237 #trueSuccessor: v4787 #falseSuccessor: v4790  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v132|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4787 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: i240 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i240  <|@  <|@
tid v3521 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@6179c3a2
stamp: void
targetMethod: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>
=== Inputs ===
arguments: a3041 a2 i212 i213 a4 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3041 a2 i212 i213 a4  <|@  <|@
tid ?5645 <|@
d <@d|@=== Debug Properties ===
bci: 54
code: ResolvedJavaMethodBytecode<Pattern$Curly.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4236
stackSize: 0
=== Inputs ===
outerFrameState: ?243 
values: - - - - - 
=== Succesors ===
=== Usages ===
i240 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?243 values: - - - - -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i240 <|@
result v273|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 54
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: false
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Direct#Pattern$Curly.match0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3521 
stateDuring: ?5645 
=== Succesors ===
next: v1468 
=== Usages ===
i140 
=== Predecessor ===
v4787 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3521 stateDuring: ?5645 #next: v1468  <|@  <|@
f <@*|@fixed>@ <|@
tid v1468 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
i240 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v249|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v250|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|DWORD] destination: B350 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4790 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Curly.match(Pattern.java:4235) [bci: 45]
at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5854 
=== Usages ===
=== Predecessor ===
v4791 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5854  <|@  <|@
f <@~|@floating>@ <|@
tid i5855 <|@
result int[-901139|0xfffffffffff23fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -901139
stableDimension: 0
stamp: i32 [-901139] ⇊00000000fff23fed ⇈00000000fff23fed
stampKind: i32
value: int[-901139|0xfffffffffff23fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5854 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5820 
=== Predecessor ===
v4790 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-901139|0xfffffffffff23fed]] destination: B351 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B348" "B346" "B344" "B320" "B342" "B340" "B338" "B327" "B331" "B351" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5823 <|@
result v274|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-927771 - -880907] ⇊00000000fff000c5 ⇈00000000fff3fffd
valueDescription: i32
=== Inputs ===
merge: v5820 
values: i5827 i5829 i5833 i5835 i5839 i5841 i5843 i5847 i5853 i5855 
=== Succesors ===
=== Usages ===
v5825 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5820 values: i5827 i5829 i5833 i5835 i5839 i5841 i5843 i5847 i5853 i5855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5826 v5828 v5832 v5834 v5838 v5840 v5842 v5846 v5852 v5854 
=== Succesors ===
next: v5825 
=== Usages ===
i5823 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5826 v5828 v5832 v5834 v5838 v5840 v5842 v5846 v5852 v5854 #next: v5825  <|@  <|@
f <@*|@fixed>@ <|@
tid v5825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?214 
actionAndReason: i5823 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5820 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?214 actionAndReason: i5823 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v274|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v274|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592134820302886386
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v159 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3524 
=== Usages ===
=== Predecessor ===
v160 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3524  <|@  <|@
f <@~|@floating>@ <|@
tid v6570 <|@
result [v133|DWORD * 8 + 480] <|@
d <@d|@=== Debug Properties ===
displacement: 480
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v6326 
=== Succesors ===
=== Usages ===
v3524 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v6326  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3524 <|@
result v275|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v6570 
=== Succesors ===
next: j3526 
=== Usages ===
v6571 v3527 
=== Predecessor ===
v159 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6570 #next: j3526  <|@  <|@
f <@~|@floating>@ <|@
tid v6571 <|@
result [v275|QWORD + 64] <|@
d <@d|@=== Debug Properties ===
displacement: 64
scale: Times1
stamp: void*
=== Inputs ===
base: v3524 
index: - 
=== Succesors ===
=== Usages ===
j3526 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: v3524 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j3526 <|@
result v276|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v6571 
=== Succesors ===
next: i112 
=== Usages ===
v3527 
=== Predecessor ===
v3524 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6571 #next: i112  <|@  <|@
tid v3527 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
returnStamp: i32 [0 - 1] ⇈0000000000000001
signature: [Ljdk.vm.ci.meta.JavaType;@65f9f23f
stamp: void
targetMethod: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>
=== Inputs ===
computedAddress: j3526 
metaspaceMethod: v3524 
arguments: a3041 a2 i3 a4 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotIndirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotIndirectCallTargetNode>@ computedAddress: j3526 metaspaceMethod: v3524 arguments: a3041 a2 i3 a4  <|@  <|@
tid ?5644 <|@
d <@d|@=== Debug Properties ===
bci: 28
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: true
localsSize: 6
locksSize: 0
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - 
=== Succesors ===
=== Usages ===
i112 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i112 <|@
result v277|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 28
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
polymorphic: true
stamp: i32 [0 - 1] ⇈0000000000000001
targetMethod: Indirect#Pattern$Node.match
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v3527 
stateDuring: ?5644 
=== Succesors ===
next: v139 
=== Usages ===
i140 
=== Predecessor ===
j3526 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v3527 stateDuring: ?5644 #next: v139  <|@  <|@
f <@*|@fixed>@ <|@
tid v139 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v137 
=== Predecessor ===
i112 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = MOV [v133|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = MOV [v275|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v275|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v276|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v277|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v277|DWORD] destination: B353 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B353" "B350" 
    successors "B355" "B360" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i140 <|@
result v278|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32 [0 - 1] ⇈0000000000000001
valueDescription: i32
=== Inputs ===
merge: v137 
values: i112 i240 
=== Succesors ===
=== Usages ===
?138 v56 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v137 values: i112 i240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v137 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v139 v1468 
=== Succesors ===
next: a6438 
=== Usages ===
i140 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v139 v1468 #next: a6438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a6438 <|@
result v279|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Matcher.locals
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: n# [I
=== Inputs ===
stateBefore: - 
guard: - 
address: v6448 
=== Succesors ===
next: i6439 
=== Usages ===
a3529 v6572 
=== Predecessor ===
v137 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6448 #next: i6439  <|@  <|@
tid ?138 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4660
stackSize: 1
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 - i140 
=== Succesors ===
=== Usages ===
v5809 i6439 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 - i140  <|@  <|@
f <@~|@floating>@ <|@
tid v6572 <|@
result [v279|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a6438 
=== Succesors ===
=== Usages ===
i6439 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a6438  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6439 <|@
result v280|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?138 
guard: - 
address: v6572 
=== Succesors ===
next: i6440 
=== Usages ===
v3536 
=== Predecessor ===
a6438 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?138 guard: - address: v6572 #next: i6440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i6440 <|@
result v281|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Pattern$GroupHead.localIndex
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 38]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v6502 
=== Succesors ===
next: v4801 
=== Usages ===
v6573 v3536 
=== Predecessor ===
i6439 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v6502 #next: v4801  <|@  <|@
f <@~|@floating>@ <|@
tid v3536 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i6440 
y: i6439 
=== Succesors ===
=== Usages ===
v4801 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i6440 y: i6439  <|@  <|@
f <@*|@fixed>@ <|@
tid v4801 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v3536 
=== Succesors ===
trueSuccessor: v4797 
falseSuccessor: v4800 
=== Usages ===
=== Predecessor ===
i6440 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3536 #trueSuccessor: v4797 #falseSuccessor: v4800  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v278|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v278|DWORD 
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v280|DWORD = MOV [v279|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v281|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|DWORD, y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors "B356" "B357" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4797 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3543 
=== Usages ===
v3543 
=== Predecessor ===
v4801 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3543  <|@  <|@
f <@~|@floating>@ <|@
tid a3529 <|@
result v282|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 34]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
op: Uncompress
stamp: a# [I
=== Inputs ===
value: a6438 
=== Succesors ===
=== Usages ===
v6573 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a6438  <|@  <|@
f <@~|@floating>@ <|@
tid v6573 <|@
result [v282|QWORD[.] + v281|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a3529 
index: i6440 
=== Succesors ===
=== Usages ===
v3543 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3529 index: i6440  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3543 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: int
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v4797 
address: v6573 
value: i6327 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v60 
=== Usages ===
=== Predecessor ===
v4797 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v4797 address: v6573 value: i6327 stateAfter: - lastLocationAccess: - #next: v60  <|@  <|@
f <@~|@floating>@ <|@
tid v56 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i140 
y: i28 
=== Succesors ===
=== Usages ===
v60 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i140 y: i28  <|@  <|@
f <@*|@fixed>@ <|@
tid v60 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 53]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
trueSuccessorProbability: 0.7328374790421298
=== Inputs ===
condition: v56 
=== Succesors ===
trueSuccessor: v57 
falseSuccessor: v1737 
=== Usages ===
=== Predecessor ===
v3543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v56 #trueSuccessor: v57 #falseSuccessor: v1737  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|QWORD[.] = UNCOMPRESSPOINTER (input: v279|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v282|QWORD[.] + v281|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594111651120888596
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v57 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v3905 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3905  <|@  <|@
tid ?117 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<Pattern$GroupHead.match(Matcher, int, CharSequence)>
duringCall: false
localsSize: 6
locksSize: 0
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
rethrowException: false
sourceFile: Pattern.java
sourceLine: 4662
stackSize: 0
=== Inputs ===
outerFrameState: ?119 
values: a6242 a2 - - i6327 i28 
=== Succesors ===
=== Usages ===
v3905 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?119 values: a6242 a2 - - i6327 i28  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?117 
=== Succesors ===
next: v63 
=== Usages ===
=== Predecessor ===
v57 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?117 #next: v63  <|@  <|@
f <@~|@floating>@ <|@
tid i62 <|@
result v283|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 58]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: i32
=== Inputs ===
x: i31 
y: i61 
=== Succesors ===
=== Usages ===
i31 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i31 y: i61  <|@  <|@
f <@*|@fixed>@ <|@
tid v63 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
loopBegin: v30 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3905 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v30  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v283|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|DWORD] destination: B356 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B358" 
    xhandlers
    flags 
    probability 4587369802088720489
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1739 
=== Usages ===
=== Predecessor ===
v60 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1739  <|@  <|@
f <@*|@fixed>@ <|@
tid v1739 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1738 
=== Predecessor ===
v1737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B357 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B357" "B292" "B285" 
    successors "B359" 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1739 v1741 v2338 
=== Succesors ===
next: v58 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1739 v1741 v2338 #next: v58  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B358 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B358" 
    successors 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4607) [bci: 56]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v1466 
=== Usages ===
=== Predecessor ===
v1738 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v1466  <|@  <|@
f <@*|@fixed>@ <|@
tid v1466 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: i61 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v58 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: i61 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4800 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4661) [bci: 43]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5809 
=== Usages ===
=== Predecessor ===
v4801 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5809  <|@  <|@
f <@~|@floating>@ <|@
tid i5811 <|@
result int[-905499|0xfffffffffff22ee5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -905499
stableDimension: 0
stamp: i32 [-905499] ⇊00000000fff22ee5 ⇈00000000fff22ee5
stampKind: i32
value: int[-905499|0xfffffffffff22ee5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5809 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?138 
actionAndReason: i5811 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v4800 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?138 actionAndReason: i5811 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -905499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v278|DWORD 
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$GroupHead.match(Pattern.java:4659) [bci: 20]
at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5704 
=== Usages ===
=== Predecessor ===
v4307 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5704  <|@  <|@
f <@~|@floating>@ <|@
tid i5705 <|@
result int[-776219|0xfffffffffff427e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -776219
stableDimension: 0
stamp: i32 [-776219] ⇊00000000fff427e5 ⇈00000000fff427e5
stampKind: i32
value: int[-776219|0xfffffffffff427e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v4306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-776219|0xfffffffffff427e5]] destination: B361 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v4291 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$GroupHead; target_method=match target_method_class=Ljava/util/regex/Pattern$GroupHead; position=at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5698 
=== Usages ===
=== Predecessor ===
v4292 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5698  <|@  <|@
f <@~|@floating>@ <|@
tid i5699 <|@
result int[-770355|0xfffffffffff43ecd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -770355
stableDimension: 0
stamp: i32 [-770355] ⇊00000000fff43ecd ⇈00000000fff43ecd
stampKind: i32
value: int[-770355|0xfffffffffff43ecd]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v4291 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-770355|0xfffffffffff43ecd]] destination: B362 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B363"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3939 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4603) [bci: 18]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5684 
=== Usages ===
=== Predecessor ===
v3940 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5684  <|@  <|@
f <@~|@floating>@ <|@
tid i5685 <|@
result int[-664603|0xfffffffffff5dbe5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -664603
stableDimension: 0
stamp: i32 [-664603] ⇊00000000fff5dbe5 ⇈00000000fff5dbe5
stampKind: i32
value: int[-664603|0xfffffffffff5dbe5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3939 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-664603|0xfffffffffff5dbe5]] destination: B363 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B364"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3929 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 9]
at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v30 
=== Succesors ===
next: v5677 
=== Usages ===
=== Predecessor ===
v3930 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v30 #next: v5677  <|@  <|@
f <@~|@floating>@ <|@
tid i5678 <|@
result int[-661779|0xfffffffffff5e6ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -661779
stableDimension: 0
stamp: i32 [-661779] ⇊00000000fff5e6ed ⇈00000000fff5e6ed
stampKind: i32
value: int[-661779|0xfffffffffff5e6ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5677 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v5676 
=== Predecessor ===
v3929 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-661779|0xfffffffffff5e6ed]] destination: B364 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B365"
    from_bci -1
    to_bci -1
    predecessors "B364" "B363" "B137" "B362" "B361" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i5679 <|@
result v284|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-778763 - -661779] ⇊00000000fff400c5 ⇈00000000fff5fffd
valueDescription: i32
=== Inputs ===
merge: v5676 
values: i5678 i5685 i5695 i5699 i5705 
=== Succesors ===
=== Usages ===
v5681 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v5676 values: i5678 i5685 i5695 i5699 i5705  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v5676 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v5677 v5684 v5694 v5698 v5704 
=== Succesors ===
next: v5681 
=== Usages ===
i5679 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v5677 v5684 v5694 v5698 v5704 #next: v5681  <|@  <|@
f <@*|@fixed>@ <|@
tid v5681 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?32 
actionAndReason: i5679 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v5676 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?32 actionAndReason: i5679 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v284|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B366"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3924 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: dispatchedType=Ljava/util/regex/Pattern$Branch; target_method=match target_method_class=Ljava/util/regex/Pattern$Branch; position=at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
stamp: void
=== Inputs ===
=== Succesors ===
next: v5673 
=== Usages ===
=== Predecessor ===
v3925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v5673  <|@  <|@
f <@~|@floating>@ <|@
tid i5675 <|@
result int[-660787|0xfffffffffff5eacd] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -660787
stableDimension: 0
stamp: i32 [-660787] ⇊00000000fff5eacd ⇈00000000fff5eacd
stampKind: i32
value: int[-660787|0xfffffffffff5eacd]
=== Inputs ===
=== Succesors ===
=== Usages ===
v5673 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v5673 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?5 
actionAndReason: i5675 
speculation: a5670 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v3924 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?5 actionAndReason: i5675 speculation: a5670  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -660787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B366" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v3|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction CMP [v4|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B356" "B326" 
    successors "B3" "B364" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   -1  <|@ instruction [v6|DWORD] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v4|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B363" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD[.] = MOV [v4|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v6|DWORD, y: [v8|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v9|QWORD[.] = UNCOMPRESSPOINTER (input: v8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v10|DWORD[.] = MOV [v9|QWORD[.] + v6|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v10|DWORD[.], y: v10|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B143" "B362" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B361" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v129|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v130|DWORD = MOV [v129|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v131|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v130|DWORD, y: v131|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B312" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v132|DWORD[.] = MOV [v10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v133|DWORD = MOV [v132|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v134|QWORD[.] = UNCOMPRESSPOINTER (input: v129|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV [v134|QWORD[.] + v131|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + v131|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|QWORD[.] = UNCOMPRESSPOINTER (input: v132|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B313" "B353" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598337202097469275
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v133|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B314" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594763984829801405
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B313 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" "B336" "B332" 
    successors "B315" "B349" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4595909231606444902
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|DWORD, v250|DWORD] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v251|DWORD = MOV [v132|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v251|DWORD, y: v250|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B316" "B347" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v252|DWORD[.] = MOV [v132|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v252|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B317" "B345" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" "B343" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B319" "B321" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v249|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B322" "B341" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v254|DWORD = MOV [v253|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B323" "B339" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v254|DWORD, y: v249|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B324" "B337" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v255|QWORD[.] = UNCOMPRESSPOINTER (input: v253|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v256|DWORD = MOVSX [v255|QWORD[.] + v249|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v256|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B325" "B328" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = MOV [v252|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v258|QWORD = MOVZX v256|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v257|DWORD, y: [v285|QWORD[.] + v258|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B329" "B333" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4577580840296619801
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v264|DWORD[.] = MOV [v252|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v265|DWORD = MOV [v264|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v266|DWORD = INC v250|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v267|DWORD = INC v249|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v265|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" "B332" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v268|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v267|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v268|DWORD[.] * 8 + 16], y: v269|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v268|DWORD[.] * 8 + 20], y: v267|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25]
locals: - v1|QWORD[.] v267|DWORD - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v267|DWORD, v266|DWORD] destination: B332 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B334" "B336" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v270|QWORD[.] = UNCOMPRESSPOINTER (input: v264|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v270|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v267|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v271|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v271|DWORD, y: v271|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v272|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v272|DWORD, v266|DWORD] destination: B336 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592134820302886386
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v275|QWORD = MOV [v133|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v276|QWORD = MOV [v275|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v275|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v276|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v277|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v277|DWORD] destination: B353 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B353" "B350" 
    successors "B355" "B360" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr   -1  <|@ instruction [v278|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v279|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v278|DWORD 
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v280|DWORD = MOV [v279|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v281|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v280|DWORD, y: v281|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors "B356" "B357" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|QWORD[.] = UNCOMPRESSPOINTER (input: v279|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v282|QWORD[.] + v281|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v278|DWORD, y: v278|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594111651120888596
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v283|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|DWORD] destination: B356 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B326" "B327" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v259|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v260|DWORD = MOV [v259|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v260|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v262|QWORD[.] = UNCOMPRESSPOINTER (input: v259|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v262|QWORD[.] + v261|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v263|DWORD] destination: B326 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B350" "B351" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v132|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v136|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v249|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v250|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v273|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|DWORD] destination: B350 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B310" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v137|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B309" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B308" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v138|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v139|DWORD = MOV [v138|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B307" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v139|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B306" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD[.] = UNCOMPRESSPOINTER (input: v138|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v141|DWORD = MOVSX [v140|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B158" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v142|DWORD[.] = MOV [v132|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v143|DWORD = MOV [v142|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4600340445249586512
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v142|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v142|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B272" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B157 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B234" "B157" "B164" "B225" "B171" "B178" "B185" "B237" "B192" "B235" "B236" "B238" 
    successors "B273" "B298" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [v209|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v210|DWORD[.] = MOV [v132|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v210|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B274" "B297" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v212|DWORD = MOV [v211|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOV [v210|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v212|DWORD, y: v213|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B275" "B276" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v214|QWORD[.] = UNCOMPRESSPOINTER (input: v211|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = MOV [v214|QWORD[.] + v213|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v215|DWORD, y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B277" "B296" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v216|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v217|DWORD = MOV [v216|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOV [v210|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|DWORD, y: v218|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B278" "B295" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = INC v218|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v217|DWORD, y: v219|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B279" "B288" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v220|DWORD[.] = MOV [v210|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v221|DWORD = MOV [v220|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v222|QWORD[.] = UNCOMPRESSPOINTER (input: v216|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = MOV [v222|QWORD[.] + v219|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOV [v222|QWORD[.] + v218|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|QWORD[.] + v218|DWORD * 4 + 16], y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v222|QWORD[.] + v219|DWORD * 4 + 16], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v225|QWORD[.] = UNCOMPRESSPOINTER (input: v210|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v221|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B279 falseDestination: B278 -> B288 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" 
    xhandlers
    flags 
    probability 4603613911725518006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.], v215|DWORD, v222|QWORD[.], v224|DWORD, v223|DWORD, v214|QWORD[.]] destination: B279 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B261" "B279" 
    successors "B281" "B282" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|QWORD[.], v227|DWORD, v228|QWORD[.], v229|DWORD, v230|DWORD, v231|QWORD[.]] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B283" "B286" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v232|DWORD = MOV [v231|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v233|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v232|DWORD, y: v233|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" "B285" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v228|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B358" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v234|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v228|QWORD[.] + 16], y: v234|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v228|QWORD[.] + 20], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v231|QWORD[.] + v233|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B285 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B357" "B292" "B285" 
    successors "B359" 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B358 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B358" 
    successors 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B138" 
    xhandlers
    flags 
    probability 4604777561679676257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v11|DWORD[.] = MOV [v4|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v12|DWORD[.] = MOV [v11|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = UNCOMPRESSPOINTER (input: v12|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v12|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B139" 
    xhandlers
    flags 
    probability 4602975297990065613
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v13|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7] <|@ <|@
      nr   -1  <|@ instruction v127|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v127|DWORD] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v128|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v128|DWORD, y: v128|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B159" "B305" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v143|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B160" "B165" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v146|DWORD[.] = MOV [v142|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v147|DWORD = MOV [v146|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4595836705571515441
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v146|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v146|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B272" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B164 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B137" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v14|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v15|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B99" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v17|DWORD[.] = MOV [v12|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v18|DWORD = MOV [v17|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = MOV [v19|QWORD[.] + v16|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v19|QWORD[.] + v16|DWORD * 4 + 16], y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v17|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B97" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v22|DWORD = MOV [v1|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v22|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B96" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v2|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B95" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v23|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v24|DWORD = MOV [v23|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B94" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v24|DWORD, y: v2|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B93" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v23|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|DWORD = MOVSX [v25|QWORD[.] + v2|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: -10240 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = MOV [v17|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v28|DWORD = MOV [v27|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v29|DWORD = MOVZX v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = INC v2|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590005314200476746
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v27|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v27|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B20 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" "B67" "B27" "B20" "B34" 
    successors "B69" "B89" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v70|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B88" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v71|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v72|DWORD = MOV [v71|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = MOV [v70|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v72|DWORD, y: v73|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v74|QWORD[.] = UNCOMPRESSPOINTER (input: v71|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v75|DWORD = MOV [v74|QWORD[.] + v73|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v75|DWORD, y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B87" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v77|DWORD = MOV [v76|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v78|DWORD = MOV [v70|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v78|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v79|DWORD = INC v78|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v77|DWORD, y: v79|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B82" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|DWORD[.] = MOV [v70|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v81|DWORD = MOV [v80|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = UNCOMPRESSPOINTER (input: v76|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v83|DWORD = MOV [v82|QWORD[.] + v79|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v84|DWORD = MOV [v82|QWORD[.] + v78|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v78|DWORD * 4 + 16], y: v75|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v79|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = UNCOMPRESSPOINTER (input: v70|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v81|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4593377818679571269
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v75|DWORD, v82|QWORD[.], v84|DWORD, v83|DWORD] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B58" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr   -1  <|@ instruction [v86|QWORD[.], v87|DWORD, v88|QWORD[.], v89|DWORD, v90|DWORD] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v1|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v88|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v1|QWORD[.] + 32], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v92|DWORD = MOV [v1|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 16], y: v92|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v88|QWORD[.] + 20], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B81 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B85" "B112" "B130" "B81" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr   -1  <|@ instruction [v122|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v122|DWORD 
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v124|DWORD = MOV [v123|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v125|DWORD = MOV [v12|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v124|DWORD, y: v125|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[.] = UNCOMPRESSPOINTER (input: v123|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v126|QWORD[.] + v125|DWORD * 4 + 16], y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v122|DWORD] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B166" "B304" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v147|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B167" "B172" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v148|DWORD[.] = MOV [v146|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v149|DWORD = MOV [v148|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v149|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    probability 4591332965896385548
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v148|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v148|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B272" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B171 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B289" 
    xhandlers
    flags 
    probability 4593757210952074687
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v236|QWORD[.] = UNCOMPRESSPOINTER (input: v220|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|QWORD[.], v236|QWORD[.], v224|DWORD, v223|DWORD] destination: B288 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B262" "B288" 
    successors "B290" "B291" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr   -1  <|@ instruction [v237|QWORD[.], v238|QWORD[.], v239|DWORD, v240|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v238|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v145|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v241|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v241|DWORD, y: v241|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B292" "B293" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v242|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: v241|DWORD 
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v243|DWORD = MOV [v242|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v244|DWORD = MOV [v10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v243|DWORD, y: v244|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B358" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v245|QWORD[.] = UNCOMPRESSPOINTER (input: v242|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v245|QWORD[.] + v244|DWORD * 4 + 16], y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B292 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B173" "B303" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v149|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B179" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v150|DWORD[.] = MOV [v148|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v151|DWORD = MOV [v150|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v151|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4586829226224196771
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v150|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v150|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B272" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B178 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B92" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v28|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v31|DWORD[.] = MOV [v27|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v32|DWORD = MOV [v31|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4585501602410042383
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v31|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v31|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B68" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B27 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4587633914563151070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4584620554336281545
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v2|DWORD, int[0|0x0]] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v104|DWORD[.] = MOV [v17|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v104|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v101|DWORD, y: [v1|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v3|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v101|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v105|DWORD[.] = MOV [v3|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v106|DWORD = MOV [v105|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v106|DWORD, y: v101|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v107|QWORD[.] = UNCOMPRESSPOINTER (input: v105|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v108|DWORD = MOVSX [v107|QWORD[.] + v101|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v108|DWORD y: 128 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr   -1  <|@ instruction v109|DWORD = MOV [v104|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = MOVZX v108|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v109|DWORD, y: [v286|QWORD[.] + v110|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v111|DWORD[.] = MOV [v104|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v111|DWORD[.] * 8] state [bci:3, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v112|QWORD[.] = UNCOMPRESSPOINTER (input: v111|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v113|DWORD = INC v101|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v112|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v113|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v21|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v114|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v114|DWORD, y: v114|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B101" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v115|DWORD = MOV [v1|QWORD[.] + 32] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v116|DWORD = INC v102|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|DWORD, v116|DWORD] destination: B116 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B116" 
    successors "B102" "B129" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4585559686677057366
    begin_IR
      LIR
      nr   -1  <|@ instruction [v101|DWORD, v102|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|DWORD = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|DWORD, y: v102|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B358" 
    xhandlers
    flags 
    probability 4587369802088720489
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B357 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B180" "B302" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v151|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" "B186" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v152|DWORD[.] = MOV [v150|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v153|DWORD = MOV [v152|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v153|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4582325486554949048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v152|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v152|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B272" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B185 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B91" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v32|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|DWORD[.] = MOV [v31|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v34|DWORD = MOV [v33|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580997890621963534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v33|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v29|DWORD, y: [v33|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B34 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4583009622221332317
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[.] = UNCOMPRESSPOINTER (input: v80|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v85|QWORD[.], v93|QWORD[.], v84|DWORD, v83|DWORD] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B59" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr   -1  <|@ instruction [v94|QWORD[.], v95|QWORD[.], v96|DWORD, v97|DWORD] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v95|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v30|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v98|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v98|DWORD, y: v98|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B85 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B187" "B301" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v153|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B193" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v154|DWORD[.] = MOV [v152|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v155|DWORD = MOV [v154|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4577821746888642316
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v154|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v154|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B272" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B192 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 4581640075535279603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = MOV [v18|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v120|QWORD = MOV [v119|QWORD + 64] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v2|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rbx|QWORD = MOVE v119|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD = MOVE v120|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v121|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v121|DWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B67" 
    xhandlers
    flags 
    probability 4580997666309968492
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD[.] = UNCOMPRESSPOINTER (input: v33|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v35|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v31|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v36|DWORD, y: v36|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580932261907603961
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580989179136727805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[0|0x0]] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v17|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD[.] = MOVE v1|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE v101|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r8|DWORD = MOVE v102|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction r9|QWORD[.] = MOVE v3|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v117|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|DWORD] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B194" "B300" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v155|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B200" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v156|DWORD[.] = MOV [v154|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v157|DWORD = MOV [v156|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v157|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4573318007225276515
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v156|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v156|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B199 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B229" "B239" "B199" 
    successors "B241" "B271" 
    xhandlers
    flags 
    probability 4578999117796592610
    begin_IR
      LIR
      nr   -1  <|@ instruction [v186|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v186|DWORD, y: v186|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B272" 
    xhandlers
    flags 
    probability 4578903034045592532
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v186|DWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576318602178265368
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B154 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B154" "B222" 
    successors "B243" "B269" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|DWORD[.] = MOV [v132|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v187|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v188|DWORD[.] = MOV [v132|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v188|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B268" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v189|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v190|DWORD = MOV [v189|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v191|DWORD = MOV [v188|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v190|DWORD, y: v191|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v192|QWORD[.] = UNCOMPRESSPOINTER (input: v189|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v193|DWORD = MOV [v192|QWORD[.] + v191|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v193|DWORD, y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B267" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v194|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v195|DWORD = MOV [v194|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v196|DWORD = MOV [v188|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v196|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B248" "B266" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v197|DWORD = INC v196|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|DWORD, y: v197|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B249" "B254" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v198|DWORD[.] = MOV [v188|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v198|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v199|DWORD = MOV [v187|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B265" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v199|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B256" "B264" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v200|DWORD[.] = MOV [v187|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v200|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B263" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B258" "B259" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v201|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v202|DWORD = MOVZXB [v201|QWORD + v200|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v202|DWORD, y: v202|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B253" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|QWORD[.] = UNCOMPRESSPOINTER (input: v194|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v204|DWORD = MOV [v203|QWORD[.] + v197|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOV [v203|QWORD[.] + v196|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v203|QWORD[.] + v196|DWORD * 4 + 16], y: v193|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v203|QWORD[.] + v197|DWORD * 4 + 16], y: v145|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v206|QWORD[.] = UNCOMPRESSPOINTER (input: v188|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP [v198|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B280" 
    xhandlers
    flags 
    probability 4575391099144321446
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.], v193|DWORD, v203|QWORD[.], v205|DWORD, v204|DWORD, v192|QWORD[.]] destination: B261 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B201" "B239" 
    xhandlers
    flags 
    probability 4573317727165049133
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v158|QWORD[.] = UNCOMPRESSPOINTER (input: v156|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v158|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v154|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v159|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v159|DWORD, y: v159|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573236067814667058
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B239 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v187|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v187|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B253 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B220" 
    xhandlers
    flags 
    probability 4571814894082148562
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B161 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" "B161" 
    successors "B221" "B226" 
    xhandlers
    flags 
    probability 4571846715351865631
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|DWORD[.] = MOV [v142|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v181|DWORD = MOV [v180|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction CMP v181|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B227" "B232" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v181|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v182|DWORD[.] = MOV [v180|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v182|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B240" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v183|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v184|DWORD = MOVZXB [v183|QWORD + v182|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v184|DWORD] destination: B229 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v180|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v144|DWORD, y: [v180|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B225 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B210" 
    xhandlers
    flags 
    probability 4567311185988309688
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B168 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" "B168" 
    successors "B211" "B217" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|DWORD[.] = MOV [v146|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v172|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|QWORD[.] = UNCOMPRESSPOINTER (input: v172|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v177|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v178|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|DWORD] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B213" 
    successors "B219" "B234" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v179|DWORD, y: v179|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567279364053927502
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B234 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4565915827229334165
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|DWORD[.] = MOV [v17|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v43|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[.] = UNCOMPRESSPOINTER (input: v43|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v49|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v49|DWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v50|DWORD, y: v50|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|DWORD[.] = MOV [v17|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [v51|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B62" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|DWORD[.] = MOV [v1|QWORD[.] + 60] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v53|DWORD = MOV [v52|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v54|DWORD = MOV [v51|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|DWORD, y: v54|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v52|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v56|DWORD = MOV [v55|QWORD[.] + v54|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v56|DWORD, y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B61" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v57|DWORD[.] = MOV [v1|QWORD[.] + 52] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v58|DWORD = MOV [v57|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v59|DWORD = MOV [v51|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v59|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B60" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v60|DWORD = INC v59|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v58|DWORD, y: v60|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v61|DWORD[.] = MOV [v51|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction v62|DWORD = MOV [v61|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[.] = UNCOMPRESSPOINTER (input: v57|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v64|DWORD = MOV [v63|QWORD[.] + v60|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v65|DWORD = MOV [v63|QWORD[.] + v59|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v59|DWORD * 4 + 16], y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v63|QWORD[.] + v60|DWORD * 4 + 16], y: v30|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD[.] = UNCOMPRESSPOINTER (input: v51|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v62|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B76" 
    xhandlers
    flags 
    probability 4564516866529163683
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v56|DWORD, v63|QWORD[.], v65|DWORD, v64|DWORD] destination: B58 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B289" 
    xhandlers
    flags 
    probability 4565018579343288473
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD[.] = UNCOMPRESSPOINTER (input: v198|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v206|QWORD[.], v207|QWORD[.], v205|DWORD, v204|DWORD] destination: B262 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B212" "B215" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v141|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|DWORD[.] = MOV [v172|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v144|DWORD, y: [v173|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = MOVZX v141|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v175|DWORD = MOVZXB [v174|QWORD + v173|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|DWORD] destination: B213 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B208" 
    xhandlers
    flags 
    probability 4562807477896748697
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B175 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B175" 
    successors "B209" "B235" 
    xhandlers
    flags 
    probability 4562839298422611714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|DWORD[.] = MOV [v148|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v169|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v170|QWORD[.] = UNCOMPRESSPOINTER (input: v169|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v170|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v171|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v171|DWORD, y: v171|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B272" 
    xhandlers
    flags 
    probability 4562775657212507808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B235 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|DWORD[.] = MOV [v43|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: v29|DWORD, y: [v44|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v26|DWORD y: 256 size: WORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v45|QWORD = MOVZX v26|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v46|DWORD = MOVZXB [v45|QWORD + v44|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v46|DWORD] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561412053862212708
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B65" 
    xhandlers
    flags 
    probability 4561488343692636445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v40|DWORD[.] = MOV [v27|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v40|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = UNCOMPRESSPOINTER (input: v40|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v41|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v42|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v42|DWORD, y: v42|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B68" 
    xhandlers
    flags 
    probability 4561386092056026297
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|DWORD] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B206" 
    xhandlers
    flags 
    probability 4558303769807465541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B182 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" "B182" 
    successors "B207" "B236" 
    xhandlers
    flags 
    probability 4558335685863263097
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v166|DWORD[.] = MOV [v150|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v166|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v167|QWORD[.] = UNCOMPRESSPOINTER (input: v166|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v167|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v168|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v168|DWORD, y: v168|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B272" 
    xhandlers
    flags 
    probability 4558272044811537063
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B236 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4556908280498739924
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B66" 
    xhandlers
    flags 
    probability 4559368492574505914
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v37|DWORD[.] = MOV [v31|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v31|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v37|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v38|QWORD[.] = UNCOMPRESSPOINTER (input: v37|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v38|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v29|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v27|DWORD[.] v29|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr   -1  <|@ instruction v39|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v39|DWORD, y: v39|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B68" 
    xhandlers
    flags 
    probability 4559292202744082177
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B83" 
    xhandlers
    flags 
    probability 4554435969718103183
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v67|QWORD[.] = UNCOMPRESSPOINTER (input: v61|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v66|QWORD[.], v67|QWORD[.], v65|DWORD, v64|DWORD] destination: B59 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B204" 
    xhandlers
    flags 
    probability 4553800061720460172
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B189 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B189" 
    successors "B205" "B237" 
    xhandlers
    flags 
    probability 4553847686786724362
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v163|DWORD[.] = MOV [v152|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v163|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v164|QWORD[.] = UNCOMPRESSPOINTER (input: v163|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v164|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v165|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v165|DWORD, y: v165|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B272" 
    xhandlers
    flags 
    probability 4553783854675129250
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B237 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4552503787519490370
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4550281384080835476
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B202" 
    xhandlers
    flags 
    probability 4549296353635732543
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B196" 
    successors "B203" "B238" 
    xhandlers
    flags 
    probability 4551909452847958930
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v160|DWORD[.] = MOV [v154|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v154|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v160|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = UNCOMPRESSPOINTER (input: v160|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v161|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v144|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v152|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v150|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v148|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr   -1  <|@ instruction v162|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v162|DWORD, y: v162|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B272" 
    xhandlers
    flags 
    probability 4551814202715430551
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1]] destination: B238 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B202" 
    xhandlers
    flags 
    probability 4544854622813912742
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B242" 
    xhandlers
    flags 
    probability 4543174463840632876
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B222 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B220" 
    xhandlers
    flags 
    probability 4538767470182288717
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B219 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B210" 
    xhandlers
    flags 
    probability 4534263700400648468
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4532661730250397969
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4531000174654467634
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" 
    xhandlers
    flags 
    probability 4529760080500910324
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" 
    xhandlers
    flags 
    probability 4525280936536781846
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4523206434734423763
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-877851|0xfffffffffff29ae5]] destination: B293 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B290" "B293" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v246|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v246|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: v241|DWORD 
locals: v237|QWORD[.] v1|QWORD[.] - - - v239|DWORD v240|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-760339|0xfffffffffff465ed]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" "B124" "B107" "B122" "B120" "B118" "B131" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v118|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v21|QWORD[.] v1|QWORD[.] v101|DWORD v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-814363|0xfffffffffff392e5]] destination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v176|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v176|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v146|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-724763|0xfffffffffff4f0e5]] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" "B71" "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v99|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v99|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v69|DWORD 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-721971|0xfffffffffff4fbcd]] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818451|0xfffffffffff382ed]] destination: B224 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B224" "B232" "B231" "B230" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr   -1  <|@ instruction [v185|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v185|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v142|DWORD[.] v144|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818739|0xfffffffffff381cd]] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B363"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-664603|0xfffffffffff5dbe5]] destination: B363 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B365"
    from_bci -1
    to_bci -1
    predecessors "B364" "B363" "B137" "B362" "B361" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v284|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843283|0xfffffffffff321ed]] destination: B250 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B268" "B245" "B267" "B266" "B250" "B252" "B265" "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v208|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -823571 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-844051|0xfffffffffff31eed]] destination: B263 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-846619|0xfffffffffff314e5]] destination: B264 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843827|0xfffffffffff31fcd]] destination: B265 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-811795|0xfffffffffff39ced]] destination: B215 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-839451|0xfffffffffff330e5]] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-837147|0xfffffffffff339e5]] destination: B267 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-829459|0xfffffffffff357ed]] destination: B245 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-875283|0xfffffffffff2a4ed]] destination: B290 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-824883|0xfffffffffff369cd]] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-803091|0xfffffffffff3beed]] destination: B198 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" "B309" "B148" "B308" "B307" "B306" "B156" "B305" "B163" "B304" "B170" "B303" "B177" "B302" "B184" "B301" "B191" "B300" "B198" 
    successors 
    xhandlers
    flags 
    probability 2374241428554383360
    begin_IR
      LIR
      nr   -1  <|@ instruction [v248|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v248|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v10|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679731|0xfffffffffff5a0cd]] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" "B11" "B95" "B94" "B93" "B19" "B92" "B26" "B91" "B33" 
    successors 
    xhandlers
    flags 
    probability 2370582253857144832
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v100|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: v13|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-716563|0xfffffffffff510ed]] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v47|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v47|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: v21|QWORD[.] v29|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-800819|0xfffffffffff3c7cd]] destination: B300 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-798259|0xfffffffffff3d1cd]] destination: B301 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-780083|0xfffffffffff418cd]] destination: B309 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -747283 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: v94|QWORD[.] v1|QWORD[.] - - - v96|DWORD v97|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-690227|0xfffffffffff577cd]] destination: B91 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-770355|0xfffffffffff43ecd]] destination: B362 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-779539|0xfffffffffff41aed]] destination: B310 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-787731|0xfffffffffff3faed]] destination: B156 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-790291|0xfffffffffff3f0ed]] destination: B163 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-753435|0xfffffffffff480e5]] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-752659|0xfffffffffff483ed]] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-750355|0xfffffffffff48ced]] destination: B107 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-750131|0xfffffffffff48dcd]] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-749587|0xfffffffffff48fed]] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-749107|0xfffffffffff491cd]] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-713755|0xfffffffffff51be5]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B50" "B63" "B62" "B54" "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr   -1  <|@ instruction [v68|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v68|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: v50|DWORD 
locals: v21|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v29|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-866067|0xfffffffffff2c8ed]] destination: B281 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B281" "B286" "B284" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v235|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v235|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v226|QWORD[.] v1|QWORD[.] v145|DWORD v3|QWORD[.] v227|DWORD v229|DWORD v230|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-689939|0xfffffffffff578ed]] destination: B26 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B335" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B334 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B334" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -900115 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v136|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-687667|0xfffffffffff581cd]] destination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-795411|0xfffffffffff3dced]] destination: B177 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-860443|0xfffffffffff2dee5]] destination: B296 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" "B297" "B275" "B296" "B295" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v247|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: v209|DWORD 
locals: v136|QWORD[.] v144|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: v136|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v144|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-792851|0xfffffffffff3e6ed]] destination: B170 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-793139|0xfffffffffff3e5cd]] destination: B303 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-851227|0xfffffffffff302e5]] destination: B297 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-790579|0xfffffffffff3efcd]] destination: B304 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-853011|0xfffffffffff2fbed]] destination: B275 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-739603|0xfffffffffff4b6ed]] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v91|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: v86|QWORD[.] v1|QWORD[.] v30|DWORD v3|QWORD[.] v87|DWORD v89|DWORD v90|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-698931|0xfffffffffff555cd]] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-701723|0xfffffffffff54ae5]] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B320" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B319 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B319" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-882451|0xfffffffffff288ed]] destination: B320 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B348" "B346" "B344" "B320" "B342" "B340" "B338" "B327" "B331" "B351" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr   -1  <|@ instruction [v274|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v274|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: v136|QWORD[.] v1|QWORD[.] v249|DWORD v3|QWORD[.] v250|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-726547|0xfffffffffff4e9ed]] destination: B71 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-736283|0xfffffffffff4c3e5]] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-776219|0xfffffffffff427e5]] destination: B361 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-821531|0xfffffffffff376e5]] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-797971|0xfffffffffff3d2ed]] destination: B184 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-783387|0xfffffffffff40be5]] destination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-685075|0xfffffffffff58bed]] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B340" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B339 -> B340 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-885531|0xfffffffffff27ce5]] destination: B340 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-682259|0xfffffffffff596ed]] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-827675|0xfffffffffff35ee5]] destination: B268 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-780307|0xfffffffffff417ed]] destination: B148 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B341" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-884755|0xfffffffffff27fed]] destination: B342 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679187|0xfffffffffff5a2ed]] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-692499|0xfffffffffff56eed]] destination: B33 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B346" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B345 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B345" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-881683|0xfffffffffff28bed]] destination: B346 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-795699|0xfffffffffff3dbcd]] destination: B302 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-788019|0xfffffffffff3f9cd]] destination: B305 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B331" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B330 -> B331 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-927771|0xfffffffffff1d7e5]] destination: B331 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-873243|0xfffffffffff2ace5]] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-687379|0xfffffffffff582ed]] destination: B19 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B364"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-661779|0xfffffffffff5e6ed]] destination: B364 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-862747|0xfffffffffff2d5e5]] destination: B295 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-901139|0xfffffffffff23fed]] destination: B351 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B338" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B337 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B337" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-887571|0xfffffffffff274ed]] destination: B338 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-914459|0xfffffffffff20be5]] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-703507|0xfffffffffff543ed]] destination: B54 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-711451|0xfffffffffff524e5]] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-697619|0xfffffffffff55aed]] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-818963|0xfffffffffff380ed]] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B344" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B343 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B343" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-882227|0xfffffffffff289cd]] destination: B344 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-719131|0xfffffffffff506e5]] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-891931|0xfffffffffff263e5]] destination: B327 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-679955|0xfffffffffff59fed]] destination: B11 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-675867|0xfffffffffff5afe5]] destination: B137 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-755475|0xfffffffffff478ed]] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -905499 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v278|DWORD 
locals: v10|DWORD[.] v1|QWORD[.] - - v135|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-800531|0xfffffffffff3c8ed]] destination: B191 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-848435|0xfffffffffff30dcd]] destination: B298 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B366"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -660787 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-733979|0xfffffffffff4cce5]] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-843539|0xfffffffffff320ed]] destination: B252 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-785427|0xfffffffffff403ed]] destination: B306 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -765211 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: v122|DWORD 
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -767251 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:35, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-925467|0xfffffffffff1e0e5]] destination: B284 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -759315 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: v21|QWORD[.] v1|QWORD[.] - v3|QWORD[.] v102|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: v13|QWORD[.] v1|QWORD[.] - - v20|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: v4|DWORD[.] v1|QWORD[.] v2|DWORD v3|QWORD[.] v6|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-683035|0xfffffffffff593e5]] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-782611|0xfffffffffff40eed]] destination: B308 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B348" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B347 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B347" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-881203|0xfffffffffff28dcd]] destination: B348 -> B352 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
     4: aload_1       
     5: iload_2       
     6: aload_3       
     7: invokevirtual #2          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B366" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B356" "B326" 
    successors "B3" "B364" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   28  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B363" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7] <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B143" "B362" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr 1452  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B361" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1460  <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B312" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction stack:80|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1470  <|@ instruction rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1472  <|@ instruction stack:60|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1474  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, stack:64, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1478  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:92|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1484  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1486  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B313" "B353" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598337202097469275
    begin_IR
      LIR
      nr 3098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3100  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr 3102  <|@ instruction BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B314" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594763984829801405
    begin_IR
      LIR
      nr 3104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3106  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3108  <|@ instruction JUMP ~[] destination: B313 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" "B336" "B332" 
    successors "B315" "B349" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4595909231606444902
    begin_IR
      LIR
      nr 3110  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr 3112  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 3114  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3116  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B316" "B347" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3120  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 3122  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr 3124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B317" "B345" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3128  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 3130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" "B343" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3134  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr 3136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B319" "B321" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3140  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3142  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B322" "B341" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3164  <|@ instruction r14|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 3166  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r14:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3168  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B323" "B339" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3174  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B324" "B337" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3180  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3182  <|@ instruction r11|DWORD = MOVSX [r14|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 3184  <|@ instruction CMP r11|DWORD y: 128 size: WORD <|@ <|@
      nr 3186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B325" "B328" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3190  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr 3192  <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3194  <|@ instruction r11|QWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr 3196  <|@ instruction TEST (x: r9|DWORD, y: [r14|QWORD[.] + r11|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr 3198  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B329" "B333" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4577580840296619801
    begin_IR
      LIR
      nr 3246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3248  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 3250  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3252  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 3254  <|@ instruction r14|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 3256  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed} <|@ <|@
      nr 3258  <|@ instruction BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" "B332" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr 3260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3262  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 3264  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3266  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr 3286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3288  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3290  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 3292  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3294  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3296  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25]
locals: - rdx|QWORD[.] r14|DWORD - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7] <|@ <|@
      nr 3298  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3300  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3302  <|@ instruction JUMP ~[] destination: B332 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B334" "B336" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr 3304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3306  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3308  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3310  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3312  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3314  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3316  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3318  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3320  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3322  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7] <|@ <|@
      nr 3324  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 3326  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr 3348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3350  <|@ instruction r9|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 3352  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3354  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 3356  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3358  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3360  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3362  <|@ instruction JUMP ~[] destination: B336 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592134820302886386
    begin_IR
      LIR
      nr 3522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3524  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 3526  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 3528  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3530  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3532  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3534  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3536  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3538  <|@ st <@st|@reference-map: [stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7] <|@ <|@
      nr 3540  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3542  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3544  <|@ instruction JUMP ~[] destination: B353 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B353" "B350" 
    successors "B355" "B360" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr 3546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3548  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 3550  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r9|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7] <|@ <|@
      nr 3552  <|@ instruction r8|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3554  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 3556  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors "B356" "B357" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr 3558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3560  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3562  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3564  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 3566  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 3568  <|@ instruction BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B357 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594111651120888596
    begin_IR
      LIR
      nr 3570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3572  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r9|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr 3574  <|@ instruction r11|DWORD = INC stack:56|DWORD size: DWORD <|@ <|@
      nr 3576  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3578  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3580  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3582  <|@ instruction JUMP ~[] destination: B356 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B326" "B327" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr 3200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3202  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3204  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3206  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 3208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3210  <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3212  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr 3216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3218  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3220  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3222  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 3224  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r9|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr 3226  <|@ instruction r11|DWORD = INC stack:56|DWORD size: DWORD <|@ <|@
      nr 3228  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3230  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3232  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3234  <|@ instruction JUMP ~[] destination: B326 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B350" "B351" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr 3472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3474  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3476  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3478  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3480  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr 3482  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr 3484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3486  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3488  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3490  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3492  <|@ instruction r8|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 3494  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3496  <|@ st <@st|@reference-map: [stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7] <|@ <|@
      nr 3498  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3500  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3502  <|@ instruction JUMP ~[] destination: B350 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B310" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMP (x: rsi|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr 1498  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B309" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7] <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1510  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1512  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B308" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1528  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1532  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B307" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B306" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1548  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr 1550  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B158" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1554  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1558  <|@ instruction rax|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr 1560  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1564  <|@ instruction stack:104|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1566  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1568  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B154" "B155" 
    xhandlers
    flags 
    probability 4600340445249586512
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1574  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B154 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1584  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B272" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B157 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B234" "B157" "B164" "B225" "B171" "B178" "B185" "B237" "B192" "B235" "B236" "B238" 
    successors "B273" "B298" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2666  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2668  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2670  <|@ st <@st|@reference-map: [rdx:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2672  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B274" "B297" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2676  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2678  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2680  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2682  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2684  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B275" "B276" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2690  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2692  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2694  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2696  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B277" "B296" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2710  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 2712  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2714  <|@ instruction rbx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2716  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2718  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B278" "B295" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2722  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 2724  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B279" "B288" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2730  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2732  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2734  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2736  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2738  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2740  <|@ instruction rbp|DWORD = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2742  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|DWORD * 4 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2744  <|@ instruction MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2746  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2748  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 2750  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B279 falseDestination: B278 -> B288 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" 
    xhandlers
    flags 
    probability 4603613911725518006
    begin_IR
      LIR
      nr 2752  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2754  <|@ instruction JUMP ~[] destination: B279 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B261" "B279" 
    successors "B281" "B282" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2756  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2758  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 2760  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B283" "B286" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2774  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2776  <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2778  <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2780  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" "B285" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2786  <|@ instruction CMP [r11|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 2788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B358" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2800  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2802  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2804  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2806  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2808  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2810  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 2812  <|@ instruction JUMP ~[] destination: B285 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B358"
    from_bci -1
    to_bci -1
    predecessors "B357" "B292" "B285" 
    successors "B359" 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      LIR
      nr 3588  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3590  <|@ instruction JUMP ~[] destination: B358 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B358" 
    successors 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      LIR
      nr 3592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 3596  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B138" 
    xhandlers
    flags 
    probability 4604777561679676257
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7] <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B139" 
    xhandlers
    flags 
    probability 4602975297990065613
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1408  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1410  <|@ instruction rdx|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1414  <|@ instruction rcx|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1418  <|@ instruction r8|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ st <@st|@reference-map: [stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7] <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1446  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B159" "B305" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B160" "B165" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction stack:100|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1614  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1616  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4595836705571515441
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1624  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1634  <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1636  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B272" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1652  <|@ instruction JUMP ~[] destination: B164 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B137" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, r9:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   72  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B99" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B97" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B96" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B95" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  148  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B94" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B93" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction rbx|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rbp|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rbp:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r14|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590005314200476746
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B20 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" "B67" "B27" "B20" "B34" 
    successors "B69" "B89" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B88" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  724  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B87" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  742  <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  744  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B75" "B82" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  764  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B75 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B76" 
    xhandlers
    flags 
    probability 4593377818679571269
    begin_IR
      LIR
      nr  780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  782  <|@ instruction JUMP ~[] destination: B75 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B58" "B75" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  832  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B81 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B85" "B112" "B130" "B81" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1368  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7] <|@ <|@
      nr 1370  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1382  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B166" "B304" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1660  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1662  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1664  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B167" "B172" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1668  <|@ instruction stack:108|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1672  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, r8:0, r9:0, r11:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1674  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1676  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    probability 4591332965896385548
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1680  <|@ instruction CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1682  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1694  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B272" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr 1706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1708  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1710  <|@ instruction JUMP ~[] destination: B171 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B289" 
    xhandlers
    flags 
    probability 4593757210952074687
    begin_IR
      LIR
      nr 2830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2832  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2834  <|@ instruction stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2836  <|@ instruction stack:100|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2838  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2840  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2842  <|@ instruction JUMP ~[] destination: B288 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B262" "B288" 
    successors "B290" "B291" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2844  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 2846  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2848  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2850  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2852  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - - stack:100|DWORD stack:96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7] <|@ <|@
      nr 2854  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B292" "B293" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2878  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2880  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2882  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2884  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, stack:56, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: rax|DWORD 
locals: stack:88|QWORD[.] r10|QWORD[.] - - - stack:100|DWORD stack:96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7] <|@ <|@
      nr 2886  <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2888  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2890  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B358" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2894  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2896  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2898  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2900  <|@ instruction JUMP ~[] destination: B292 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B173" "B303" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr 1712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1714  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1716  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B179" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1720  <|@ instruction stack:124|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1722  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, r14:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1726  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4586829226224196771
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1734  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B272" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B178 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B92" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction stack:104|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r9:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  236  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4585501602410042383
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B68" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4587633914563151070
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr 1040  <|@ instruction BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4584620554336281545
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1058  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r13|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r13:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7] <|@ <|@
      nr 1104  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1112  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction r13|DWORD = MOVSX [r13|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP r13|DWORD y: 128 size: WORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr 1128  <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1130  <|@ instruction r13|QWORD = MOVZX r13|DWORD size: DWORD <|@ <|@
      nr 1132  <|@ instruction TEST (x: r8|DWORD, y: [r14|QWORD[.] + r13|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 32, 7] <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1158  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1160  <|@ instruction rdx|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1164  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7] <|@ <|@
      nr 1168  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B101" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1192  <|@ instruction r11|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1194  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B116 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B116" 
    successors "B102" "B129" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4585559686677057366
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B357"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B358" 
    xhandlers
    flags 
    probability 4587369802088720489
    begin_IR
      LIR
      nr 3584  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3586  <|@ instruction JUMP ~[] destination: B357 -> B358 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B180" "B302" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" "B186" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1774  <|@ instruction stack:128|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r9|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1778  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1780  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1782  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4582325486554949048
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1786  <|@ instruction CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1788  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1800  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B272" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1818  <|@ instruction JUMP ~[] destination: B185 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B91" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  288  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580997890621963534
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  334  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B34 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4583009622221332317
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction stack:120|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B59" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  854  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [stack:24, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:120|QWORD[.] stack:32|QWORD[.] - - - stack:104|DWORD stack:100|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7] <|@ <|@
      nr  862  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  886  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B85 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B187" "B301" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1824  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B193" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction stack:132|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction rcx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1832  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r9:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1834  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1836  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4577821746888642316
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1840  <|@ instruction CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1852  <|@ instruction CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1854  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B272" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1870  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1872  <|@ instruction JUMP ~[] destination: B192 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 4581640075535279603
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1344  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1346  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1350  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1352  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1354  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7] <|@ <|@
      nr 1358  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B67" 
    xhandlers
    flags 
    probability 4580997666309968492
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  352  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580932261907603961
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580989179136727805
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1140  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction CMP [r10|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7] <|@ <|@
      nr 1316  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1318  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B194" "B300" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr 1874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1876  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B200" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr 1880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction rdi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1884  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1886  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1888  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4573318007225276515
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1894  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr 1902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1904  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1906  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1924  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B199 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B229" "B239" "B199" 
    successors "B241" "B271" 
    xhandlers
    flags 
    probability 4578999117796592610
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2334  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B272" 
    xhandlers
    flags 
    probability 4578903034045592532
    begin_IR
      LIR
      nr 2660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2662  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2664  <|@ instruction JUMP ~[] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576318602178265368
    begin_IR
      LIR
      nr 1576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1578  <|@ instruction JUMP ~[] destination: B154 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B154" "B222" 
    successors "B243" "B269" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2350  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2352  <|@ instruction r8|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2354  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B268" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2362  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2364  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2366  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2368  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2374  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2376  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B267" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 2396  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2398  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2400  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B248" "B266" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction rbp|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2408  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 2410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B249" "B254" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2416  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2418  <|@ instruction r14|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2420  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 2422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B265" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2468  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr 2470  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B256" "B264" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2474  <|@ instruction r11|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2476  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B263" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2482  <|@ instruction CMP r10|DWORD y: 256 size: WORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B258" "B259" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction r10|QWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr 2490  <|@ instruction r10|DWORD = MOVZXB [r10|QWORD + r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2492  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2510  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2512  <|@ instruction JUMP ~[] destination: B259 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" "B253" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2518  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2520  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2522  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2524  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2526  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2528  <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 2530  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B280" 
    xhandlers
    flags 
    probability 4575391099144321446
    begin_IR
      LIR
      nr 2532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2534  <|@ instruction rbp|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2536  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2540  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2542  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2544  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2546  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2548  <|@ instruction JUMP ~[] destination: B261 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B201" "B239" 
    xhandlers
    flags 
    probability 4573317727165049133
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction stack:136|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1932  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1934  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1936  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:136|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1942  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1944  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573236067814667058
    begin_IR
      LIR
      nr 2320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2322  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2324  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2326  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2328  <|@ instruction JUMP ~[] destination: B239 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2444  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 2446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2462  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2464  <|@ instruction JUMP ~[] destination: B253 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B220" 
    xhandlers
    flags 
    probability 4571814894082148562
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction JUMP ~[] destination: B161 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" "B161" 
    successors "B221" "B226" 
    xhandlers
    flags 
    probability 4571846715351865631
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2160  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr 2162  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B227" "B232" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2210  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr 2212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction CMP stack:96|DWORD y: 256 size: WORD <|@ <|@
      nr 2218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2224  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr 2226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B240" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction rdx|QWORD = MOVZX stack:96|DWORD size: DWORD <|@ <|@
      nr 2232  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2234  <|@ instruction JUMP ~[] destination: B229 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2170  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr 2182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2184  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 2186  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2204  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2206  <|@ instruction JUMP ~[] destination: B225 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B210" 
    xhandlers
    flags 
    probability 4567311185988309688
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1686  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction JUMP ~[] destination: B168 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" "B168" 
    successors "B211" "B217" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2056  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2130  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2132  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2134  <|@ st <@st|@reference-map: [stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2136  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2138  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2140  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B213" 
    successors "B219" "B234" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567279364053927502
    begin_IR
      LIR
      nr 2280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2282  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2284  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2286  <|@ instruction JUMP ~[] destination: B234 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4565915827229334165
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7] <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rdx:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7] <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B62" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  534  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B61" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B60" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  576  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r10|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  588  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B76" 
    xhandlers
    flags 
    probability 4564516866529163683
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B289" 
    xhandlers
    flags 
    probability 4565018579343288473
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2554  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2556  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2558  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2562  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2564  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2566  <|@ instruction JUMP ~[] destination: B262 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B212" "B215" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction CMP stack:96|DWORD y: 256 size: WORD <|@ <|@
      nr 2064  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2068  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2070  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2072  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2074  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2078  <|@ instruction rdx|QWORD = MOVZX stack:96|DWORD size: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2082  <|@ instruction JUMP ~[] destination: B213 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B208" 
    xhandlers
    flags 
    probability 4562807477896748697
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1738  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction JUMP ~[] destination: B175 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B175" 
    successors "B209" "B235" 
    xhandlers
    flags 
    probability 4562839298422611714
    begin_IR
      LIR
      nr 2024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2026  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2030  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ st <@st|@reference-map: [stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2036  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2038  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B272" 
    xhandlers
    flags 
    probability 4562775657212507808
    begin_IR
      LIR
      nr 2288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2290  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2292  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2294  <|@ instruction JUMP ~[] destination: B235 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] r13|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction CMP stack:100|DWORD y: 256 size: WORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOVZX stack:100|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561412053862212708
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B65" 
    xhandlers
    flags 
    probability 4561488343692636445
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rbp:0, rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rbp|DWORD[.] r13|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] r13|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7] <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7] <|@ <|@
      nr  400  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B68" 
    xhandlers
    flags 
    probability 4561386092056026297
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B206" 
    xhandlers
    flags 
    probability 4558303769807465541
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1794  <|@ instruction JUMP ~[] destination: B182 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" "B182" 
    successors "B207" "B236" 
    xhandlers
    flags 
    probability 4558335685863263097
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2002  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2004  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2006  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2010  <|@ st <@st|@reference-map: [stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2012  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B272" 
    xhandlers
    flags 
    probability 4558272044811537063
    begin_IR
      LIR
      nr 2296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2298  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2300  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2302  <|@ instruction JUMP ~[] destination: B236 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4556908280498739924
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B66" 
    xhandlers
    flags 
    probability 4559368492574505914
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  368  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  376  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B68" 
    xhandlers
    flags 
    probability 4559292202744082177
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B83" 
    xhandlers
    flags 
    probability 4554435969718103183
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction stack:100|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction stack:120|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  618  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B59 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B204" 
    xhandlers
    flags 
    probability 4553800061720460172
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~[] destination: B189 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B189" 
    successors "B205" "B237" 
    xhandlers
    flags 
    probability 4553847686786724362
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1978  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1980  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1982  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1984  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1986  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1988  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B272" 
    xhandlers
    flags 
    probability 4553783854675129250
    begin_IR
      LIR
      nr 2304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2306  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2308  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2310  <|@ instruction JUMP ~[] destination: B237 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4552503787519490370
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4550281384080835476
    begin_IR
      LIR
      nr 2336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2338  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2340  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2342  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2344  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B202" 
    xhandlers
    flags 
    probability 4549296353635732543
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction JUMP ~[] destination: B196 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B196" 
    successors "B203" "B238" 
    xhandlers
    flags 
    probability 4551909452847958930
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rsi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1956  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rcx|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1964  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B272" 
    xhandlers
    flags 
    probability 4551814202715430551
    begin_IR
      LIR
      nr 2312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2314  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2316  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2318  <|@ instruction JUMP ~[] destination: B238 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B202" 
    xhandlers
    flags 
    probability 4544854622813912742
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction rcx|DWORD[.] = MOVE stack:136|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1950  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B242" 
    xhandlers
    flags 
    probability 4543174463840632876
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2176  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2178  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction JUMP ~[] destination: B222 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B220" 
    xhandlers
    flags 
    probability 4538767470182288717
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2152  <|@ instruction r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2154  <|@ instruction JUMP ~[] destination: B219 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B210" 
    xhandlers
    flags 
    probability 4534263700400648468
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2042  <|@ instruction r8|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2044  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2046  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4532661730250397969
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4531000174654467634
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rbp|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" 
    xhandlers
    flags 
    probability 4529760080500910324
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction r14|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2022  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" 
    xhandlers
    flags 
    probability 4525280936536781846
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction rsi|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4523206434734423763
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1970  <|@ instruction r9|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2904  <|@ instruction r11|DWORD = MOVE input: int[-877851|0xfffffffffff29ae5] <|@ <|@
      nr 2906  <|@ instruction rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2908  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2910  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2912  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2914  <|@ instruction JUMP ~[] destination: B293 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B290" "B293" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2918  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2922  <|@ st <@st|@reference-map: [rbx:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: rax|DWORD 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r8|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction r11|DWORD = MOVE input: int[-760339|0xfffffffffff465ed] <|@ <|@
      nr 1326  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" "B124" "B107" "B122" "B120" "B118" "B131" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] r10|QWORD[.] rcx|DWORD stack:48|QWORD[.] r8|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2086  <|@ instruction r11|DWORD = MOVE input: int[-814363|0xfffffffffff392e5] <|@ <|@
      nr 2088  <|@ instruction rcx|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2090  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2092  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2094  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2096  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2120  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2122  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2124  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r8:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rbx|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rbx|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r8|DWORD = MOVE input: int[-724763|0xfffffffffff4f0e5] <|@ <|@
      nr  912  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" "B71" "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r8|DWORD = MOVE input: int[-721971|0xfffffffffff4fbcd] <|@ <|@
      nr  920  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2192  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2194  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2196  <|@ instruction r11|DWORD = MOVE input: int[-818451|0xfffffffffff382ed] <|@ <|@
      nr 2198  <|@ instruction JUMP ~[] destination: B224 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B224" "B232" "B231" "B230" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2272  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2276  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2278  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:44, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2262  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2264  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2266  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction r11|DWORD = MOVE input: int[-818739|0xfffffffffff381cd] <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B363"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3628  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3630  <|@ instruction r11|DWORD = MOVE input: int[-664603|0xfffffffffff5dbe5] <|@ <|@
      nr 3632  <|@ instruction JUMP ~[] destination: B363 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B365"
    from_bci -1
    to_bci -1
    predecessors "B364" "B363" "B137" "B362" "B361" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 3642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3644  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3646  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3648  <|@ st <@st|@reference-map: [r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2432  <|@ instruction r11|DWORD = MOVE input: int[-843283|0xfffffffffff321ed] <|@ <|@
      nr 2434  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2436  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2438  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2440  <|@ instruction JUMP ~[] destination: B250 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B268" "B245" "B267" "B266" "B250" "B252" "B265" "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 2652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2654  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2658  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2500  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2502  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2504  <|@ instruction MOV [r15|QWORD + 668] y: -823571 size: DWORD <|@ <|@
      nr 2506  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2508  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2570  <|@ instruction r11|DWORD = MOVE input: int[-844051|0xfffffffffff31eed] <|@ <|@
      nr 2572  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2574  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2576  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2578  <|@ instruction JUMP ~[] destination: B263 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2582  <|@ instruction r11|DWORD = MOVE input: int[-846619|0xfffffffffff314e5] <|@ <|@
      nr 2584  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2586  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2588  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2590  <|@ instruction JUMP ~[] destination: B264 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2594  <|@ instruction r11|DWORD = MOVE input: int[-843827|0xfffffffffff31fcd] <|@ <|@
      nr 2596  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2598  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2600  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2602  <|@ instruction JUMP ~[] destination: B265 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction r11|DWORD = MOVE input: int[-811795|0xfffffffffff39ced] <|@ <|@
      nr 2104  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2106  <|@ instruction rcx|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2108  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2110  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2112  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2114  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2116  <|@ instruction JUMP ~[] destination: B215 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2606  <|@ instruction r11|DWORD = MOVE input: int[-839451|0xfffffffffff330e5] <|@ <|@
      nr 2608  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2610  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2612  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2614  <|@ instruction JUMP ~[] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2618  <|@ instruction r11|DWORD = MOVE input: int[-837147|0xfffffffffff339e5] <|@ <|@
      nr 2620  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2622  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2624  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2626  <|@ instruction JUMP ~[] destination: B267 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2382  <|@ instruction r11|DWORD = MOVE input: int[-829459|0xfffffffffff357ed] <|@ <|@
      nr 2384  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2386  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B245 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2860  <|@ instruction r11|DWORD = MOVE input: int[-875283|0xfffffffffff2a4ed] <|@ <|@
      nr 2862  <|@ instruction rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2864  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2866  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2868  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2870  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2872  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2874  <|@ instruction JUMP ~[] destination: B290 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2642  <|@ instruction r11|DWORD = MOVE input: int[-824883|0xfffffffffff369cd] <|@ <|@
      nr 2644  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2646  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2648  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2650  <|@ instruction JUMP ~[] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1910  <|@ instruction r11|DWORD = MOVE input: int[-803091|0xfffffffffff3beed] <|@ <|@
      nr 1912  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1914  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1916  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B198 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" "B309" "B148" "B308" "B307" "B306" "B156" "B305" "B163" "B304" "B170" "B303" "B177" "B302" "B184" "B301" "B191" "B300" "B198" 
    successors 
    xhandlers
    flags 
    probability 2374241428554383360
    begin_IR
      LIR
      nr 3090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3092  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3094  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3096  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE input: int[-679731|0xfffffffffff5a0cd] <|@ <|@
      nr 1004  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1006  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1008  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" "B11" "B95" "B94" "B93" "B19" "B92" "B26" "B91" "B33" 
    successors 
    xhandlers
    flags 
    probability 2370582253857144832
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1028  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1032  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] r10|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: rbx|DWORD[.] r10|QWORD[.] rcx|DWORD r8|QWORD[.] rdx|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-716563|0xfffffffffff510ed] <|@ <|@
      nr  452  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2976  <|@ instruction r11|DWORD = MOVE input: int[-800819|0xfffffffffff3c7cd] <|@ <|@
      nr 2978  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2980  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2982  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2984  <|@ instruction JUMP ~[] destination: B300 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2988  <|@ instruction r11|DWORD = MOVE input: int[-798259|0xfffffffffff3d1cd] <|@ <|@
      nr 2990  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2992  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2994  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2996  <|@ instruction JUMP ~[] destination: B301 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3072  <|@ instruction r11|DWORD = MOVE input: int[-780083|0xfffffffffff418cd] <|@ <|@
      nr 3074  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3076  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3078  <|@ instruction JUMP ~[] destination: B309 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 668] y: -747283 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: r9|QWORD[.] r10|QWORD[.] - - - r11|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r11|DWORD = MOVE input: int[-690227|0xfffffffffff577cd] <|@ <|@
      nr  936  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  938  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  944  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B91 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3620  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3622  <|@ instruction r11|DWORD = MOVE input: int[-770355|0xfffffffffff43ecd] <|@ <|@
      nr 3624  <|@ instruction JUMP ~[] destination: B362 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3082  <|@ instruction r11|DWORD = MOVE input: int[-779539|0xfffffffffff41aed] <|@ <|@
      nr 3084  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3086  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3088  <|@ instruction JUMP ~[] destination: B310 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r11|DWORD = MOVE input: int[-787731|0xfffffffffff3faed] <|@ <|@
      nr 1590  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B156 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction r11|DWORD = MOVE input: int[-790291|0xfffffffffff3f0ed] <|@ <|@
      nr 1642  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction JUMP ~[] destination: B163 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1226  <|@ instruction r11|DWORD = MOVE input: int[-753435|0xfffffffffff480e5] <|@ <|@
      nr 1228  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = MOVE input: int[-752659|0xfffffffffff483ed] <|@ <|@
      nr 1244  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r11|DWORD = MOVE input: int[-750355|0xfffffffffff48ced] <|@ <|@
      nr 1094  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B107 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction r11|DWORD = MOVE input: int[-750131|0xfffffffffff48dcd] <|@ <|@
      nr 1260  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE input: int[-749587|0xfffffffffff48fed] <|@ <|@
      nr 1276  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction r11|DWORD = MOVE input: int[-749107|0xfffffffffff491cd] <|@ <|@
      nr 1292  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[-713755|0xfffffffffff51be5] <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B50" "B63" "B62" "B54" "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: rax|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2764  <|@ instruction r11|DWORD = MOVE input: int[-866067|0xfffffffffff2c8ed] <|@ <|@
      nr 2766  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2768  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2770  <|@ instruction JUMP ~[] destination: B281 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B281" "B286" "B284" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2822  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2824  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2826  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2828  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:48|QWORD[.] r8|DWORD rbp|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r11|DWORD = MOVE input: int[-689939|0xfffffffffff578ed] <|@ <|@
      nr  262  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  266  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B26 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B335" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3330  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 3332  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3334  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3336  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3338  <|@ instruction JUMP ~[] destination: B334 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B334" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3342  <|@ instruction MOV [r15|QWORD + 668] y: -900115 size: DWORD <|@ <|@
      nr 3344  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3346  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] r10|QWORD[.] - stack:48|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE input: int[-687667|0xfffffffffff581cd] <|@ <|@
      nr  956  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  958  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  960  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1750  <|@ instruction r11|DWORD = MOVE input: int[-795411|0xfffffffffff3dced] <|@ <|@
      nr 1752  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1758  <|@ instruction JUMP ~[] destination: B177 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2936  <|@ instruction r11|DWORD = MOVE input: int[-860443|0xfffffffffff2dee5] <|@ <|@
      nr 2938  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2940  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2942  <|@ instruction JUMP ~[] destination: B296 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" "B297" "B275" "B296" "B295" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2966  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2968  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2970  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2972  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = MOVE input: int[-792851|0xfffffffffff3e6ed] <|@ <|@
      nr 1700  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1702  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ instruction JUMP ~[] destination: B170 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3012  <|@ instruction r11|DWORD = MOVE input: int[-793139|0xfffffffffff3e5cd] <|@ <|@
      nr 3014  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3016  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3018  <|@ instruction JUMP ~[] destination: B303 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2946  <|@ instruction r11|DWORD = MOVE input: int[-851227|0xfffffffffff302e5] <|@ <|@
      nr 2948  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2950  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2952  <|@ instruction JUMP ~[] destination: B297 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction r11|DWORD = MOVE input: int[-790579|0xfffffffffff3efcd] <|@ <|@
      nr 3024  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3026  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3028  <|@ instruction JUMP ~[] destination: B304 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2700  <|@ instruction r11|DWORD = MOVE input: int[-853011|0xfffffffffff2fbed] <|@ <|@
      nr 2702  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2704  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2706  <|@ instruction JUMP ~[] destination: B275 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[-739603|0xfffffffffff4b6ed] <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rsi|QWORD[.] r10|QWORD[.] r14|DWORD stack:48|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[-698931|0xfffffffffff555cd] <|@ <|@
      nr  658  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE input: int[-701723|0xfffffffffff54ae5] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B320" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3146  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3148  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3150  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3152  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3154  <|@ instruction JUMP ~[] destination: B319 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B319" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3158  <|@ instruction r11|DWORD = MOVE input: int[-882451|0xfffffffffff288ed] <|@ <|@
      nr 3160  <|@ instruction JUMP ~[] destination: B320 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B348" "B346" "B344" "B320" "B342" "B340" "B338" "B327" "B331" "B351" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 3514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3516  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3518  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3520  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] r10|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r8|DWORD = MOVE input: int[-726547|0xfffffffffff4e9ed] <|@ <|@
      nr  732  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B71 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: int[-736283|0xfffffffffff4c3e5] <|@ <|@
      nr  896  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3612  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3614  <|@ instruction r11|DWORD = MOVE input: int[-776219|0xfffffffffff427e5] <|@ <|@
      nr 3616  <|@ instruction JUMP ~[] destination: B361 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2238  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2240  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2242  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2244  <|@ instruction r11|DWORD = MOVE input: int[-821531|0xfffffffffff376e5] <|@ <|@
      nr 2246  <|@ instruction JUMP ~[] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1804  <|@ instruction r11|DWORD = MOVE input: int[-797971|0xfffffffffff3d2ed] <|@ <|@
      nr 1806  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1808  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction JUMP ~[] destination: B184 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3052  <|@ instruction r11|DWORD = MOVE input: int[-783387|0xfffffffffff40be5] <|@ <|@
      nr 3054  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3056  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3058  <|@ instruction JUMP ~[] destination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r11|DWORD = MOVE input: int[-685075|0xfffffffffff58bed] <|@ <|@
      nr  968  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  970  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  972  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B340" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3384  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3386  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3388  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3390  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3392  <|@ instruction JUMP ~[] destination: B339 -> B340 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3396  <|@ instruction r11|DWORD = MOVE input: int[-885531|0xfffffffffff27ce5] <|@ <|@
      nr 3398  <|@ instruction JUMP ~[] destination: B340 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-682259|0xfffffffffff596ed] <|@ <|@
      nr  992  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  994  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2630  <|@ instruction r11|DWORD = MOVE input: int[-827675|0xfffffffffff35ee5] <|@ <|@
      nr 2632  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2634  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2636  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2638  <|@ instruction JUMP ~[] destination: B268 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction r11|DWORD = MOVE input: int[-780307|0xfffffffffff417ed] <|@ <|@
      nr 1520  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1522  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction JUMP ~[] destination: B148 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3402  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3404  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3406  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3408  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3410  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B341" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3414  <|@ instruction r11|DWORD = MOVE input: int[-884755|0xfffffffffff27fed] <|@ <|@
      nr 3416  <|@ instruction JUMP ~[] destination: B342 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE input: int[-679187|0xfffffffffff5a2ed] <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1020  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r11|DWORD = MOVE input: int[-692499|0xfffffffffff56eed] <|@ <|@
      nr  314  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  316  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  324  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  326  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B33 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B346" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3438  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3440  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3442  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3444  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3446  <|@ instruction JUMP ~[] destination: B345 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B345" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3450  <|@ instruction r11|DWORD = MOVE input: int[-881683|0xfffffffffff28bed] <|@ <|@
      nr 3452  <|@ instruction JUMP ~[] destination: B346 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3000  <|@ instruction r11|DWORD = MOVE input: int[-795699|0xfffffffffff3dbcd] <|@ <|@
      nr 3002  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3004  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3006  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3008  <|@ instruction JUMP ~[] destination: B302 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3032  <|@ instruction r11|DWORD = MOVE input: int[-788019|0xfffffffffff3f9cd] <|@ <|@
      nr 3034  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3036  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3038  <|@ instruction JUMP ~[] destination: B305 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B331" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3270  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3272  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3274  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3276  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3278  <|@ instruction JUMP ~[] destination: B330 -> B331 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3282  <|@ instruction r11|DWORD = MOVE input: int[-927771|0xfffffffffff1d7e5] <|@ <|@
      nr 3284  <|@ instruction JUMP ~[] destination: B331 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2816  <|@ instruction r11|DWORD = MOVE input: int[-873243|0xfffffffffff2ace5] <|@ <|@
      nr 2818  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2820  <|@ instruction JUMP ~[] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r11|DWORD = MOVE input: int[-687379|0xfffffffffff582ed] <|@ <|@
      nr  208  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  210  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B19 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B364"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3636  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3638  <|@ instruction r11|DWORD = MOVE input: int[-661779|0xfffffffffff5e6ed] <|@ <|@
      nr 3640  <|@ instruction JUMP ~[] destination: B364 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2926  <|@ instruction r11|DWORD = MOVE input: int[-862747|0xfffffffffff2d5e5] <|@ <|@
      nr 2928  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2930  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2932  <|@ instruction JUMP ~[] destination: B295 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3506  <|@ instruction r11|DWORD = MOVE input: int[-901139|0xfffffffffff23fed] <|@ <|@
      nr 3508  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3510  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3512  <|@ instruction JUMP ~[] destination: B351 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B338" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3366  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3368  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3370  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3372  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3374  <|@ instruction JUMP ~[] destination: B337 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B337" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3378  <|@ instruction r11|DWORD = MOVE input: int[-887571|0xfffffffffff274ed] <|@ <|@
      nr 3380  <|@ instruction JUMP ~[] destination: B338 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|DWORD = MOVE input: int[-914459|0xfffffffffff20be5] <|@ <|@
      nr  808  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r11|DWORD = MOVE input: int[-703507|0xfffffffffff543ed] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B54 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r11|DWORD = MOVE input: int[-711451|0xfffffffffff524e5] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-697619|0xfffffffffff55aed] <|@ <|@
      nr  498  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2250  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2252  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2254  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2256  <|@ instruction r11|DWORD = MOVE input: int[-818963|0xfffffffffff380ed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~[] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B344" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3420  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3422  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3424  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3426  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3428  <|@ instruction JUMP ~[] destination: B343 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B343" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3432  <|@ instruction r11|DWORD = MOVE input: int[-882227|0xfffffffffff289cd] <|@ <|@
      nr 3434  <|@ instruction JUMP ~[] destination: B344 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: int[-719131|0xfffffffffff506e5] <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3238  <|@ instruction r11|DWORD = MOVE input: int[-891931|0xfffffffffff263e5] <|@ <|@
      nr 3240  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3242  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3244  <|@ instruction JUMP ~[] destination: B327 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r11|DWORD = MOVE input: int[-679955|0xfffffffffff59fed] <|@ <|@
      nr  134  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  136  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  138  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B11 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r11|DWORD = MOVE input: int[-675867|0xfffffffffff5afe5] <|@ <|@
      nr 1400  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~[] destination: B137 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction r11|DWORD = MOVE input: int[-755475|0xfffffffffff478ed] <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3600  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3602  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3604  <|@ instruction MOV [r15|QWORD + 668] y: -905499 size: DWORD <|@ <|@
      nr 3606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3608  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1858  <|@ instruction r11|DWORD = MOVE input: int[-800531|0xfffffffffff3c8ed] <|@ <|@
      nr 1860  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1862  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1864  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction JUMP ~[] destination: B191 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2956  <|@ instruction r11|DWORD = MOVE input: int[-848435|0xfffffffffff30dcd] <|@ <|@
      nr 2958  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2960  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2962  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2964  <|@ instruction JUMP ~[] destination: B298 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B366"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3652  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3654  <|@ instruction MOV [r15|QWORD + 668] y: -660787 size: DWORD <|@ <|@
      nr 3656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3658  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-733979|0xfffffffffff4cce5] <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction r11|DWORD = MOVE input: int[-843539|0xfffffffffff320ed] <|@ <|@
      nr 2452  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2454  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2456  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2458  <|@ instruction JUMP ~[] destination: B252 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3042  <|@ instruction r11|DWORD = MOVE input: int[-785427|0xfffffffffff403ed] <|@ <|@
      nr 3044  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3046  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3048  <|@ instruction JUMP ~[] destination: B306 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction MOV [r15|QWORD + 668] y: -765211 size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@reference-map: [r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -767251 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:35, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2792  <|@ instruction r11|DWORD = MOVE input: int[-925467|0xfffffffffff1e0e5] <|@ <|@
      nr 2794  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2796  <|@ instruction JUMP ~[] destination: B284 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction MOV [r15|QWORD + 668] y: -759315 size: DWORD <|@ <|@
      nr 1182  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:88|QWORD[.] r10|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r11|DWORD = MOVE input: int[-683035|0xfffffffffff593e5] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  982  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  984  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3062  <|@ instruction r11|DWORD = MOVE input: int[-782611|0xfffffffffff40eed] <|@ <|@
      nr 3064  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3066  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3068  <|@ instruction JUMP ~[] destination: B308 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B348" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3456  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3458  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3460  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3462  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3464  <|@ instruction JUMP ~[] destination: B347 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B347" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3468  <|@ instruction r11|DWORD = MOVE input: int[-881203|0xfffffffffff28dcd] <|@ <|@
      nr 3470  <|@ instruction JUMP ~[] destination: B348 -> B352 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
     4: aload_1       
     5: iload_2       
     6: aload_3       
     7: invokevirtual #2          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B366" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr   10  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr   12  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   14  <|@ instruction stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0] <|@ <|@
      nr   18  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   20  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   22  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   24  <|@ instruction JUMP ~[] destination: B1 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" "B356" "B326" 
    successors "B3" "B364" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 1 align: true label: ? <|@ <|@
      nr   28  <|@ instruction stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   30  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   32  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   34  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B4" "B363" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   36  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   38  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: r11|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7] <|@ <|@
      nr   42  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B142" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4610480728426698238
    begin_IR
      LIR
      nr   44  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   46  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   48  <|@ instruction r9|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   50  <|@ instruction TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr   52  <|@ instruction BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B143" "B362" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1450  <|@ instruction CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} <|@ <|@
      nr 1452  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B144" "B361" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1456  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1458  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1460  <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B145" "B312" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4607176695918979227
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction stack:80|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1470  <|@ instruction rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1472  <|@ instruction stack:60|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1474  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, stack:64, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr 1476  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1478  <|@ instruction rbp|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 1480  <|@ instruction stack:92|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1482  <|@ instruction MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1484  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1486  <|@ instruction stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1488  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1490  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B312"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B313" "B353" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4598337202097469275
    begin_IR
      LIR
      nr 3098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3100  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr 3102  <|@ instruction BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B313"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B314" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4594763984829801405
    begin_IR
      LIR
      nr 3104  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3106  <|@ instruction r10|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 3108  <|@ instruction JUMP ~[] destination: B313 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B314"
    from_bci -1
    to_bci -1
    predecessors "B313" "B336" "B332" 
    successors "B315" "B349" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 2
    probability 4595909231606444902
    begin_IR
      LIR
      nr 3110  <|@ instruction [] = LABEL numbPhis: 2 align: true label: ? <|@ <|@
      nr 3112  <|@ instruction rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 3114  <|@ instruction CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3116  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B315"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B316" "B347" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3118  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3120  <|@ instruction rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 3122  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr 3124  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B316"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B317" "B345" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3128  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 3130  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B317"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B318" "B343" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3134  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7] <|@ <|@
      nr 3136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B318"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B319" "B321" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3140  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3142  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B321"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B322" "B341" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3162  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3164  <|@ instruction r14|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 3166  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r14:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3168  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3170  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B322"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B323" "B339" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3174  <|@ instruction CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3176  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B323"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B324" "B337" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3180  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3182  <|@ instruction r11|DWORD = MOVSX [r14|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 3184  <|@ instruction CMP r11|DWORD y: 128 size: WORD <|@ <|@
      nr 3186  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B324"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B325" "B328" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4592125490747535970
    begin_IR
      LIR
      nr 3188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3190  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr 3192  <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3194  <|@ instruction r11|QWORD = MOVZX r11|DWORD size: DWORD <|@ <|@
      nr 3196  <|@ instruction TEST (x: r9|DWORD, y: [r14|QWORD[.] + r11|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr 3198  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B328"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B329" "B333" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4577580840296619801
    begin_IR
      LIR
      nr 3246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3248  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 3250  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3252  <|@ instruction r9|DWORD = INC r10|DWORD size: DWORD <|@ <|@
      nr 3254  <|@ instruction r14|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 3256  <|@ instruction CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed} <|@ <|@
      nr 3258  <|@ instruction BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B329"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B330" "B332" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr 3260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3262  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 3264  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3266  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B332"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4575667411506868129
    begin_IR
      LIR
      nr 3286  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3288  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3290  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 3292  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 3294  <|@ instruction MOV (x: [rsi|DWORD[.] * 8 + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr 3296  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25]
locals: - rdx|QWORD[.] r14|DWORD - 
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] rdx|QWORD[.] - r8|QWORD[.] r10|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7] <|@ <|@
      nr 3298  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3300  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3302  <|@ instruction JUMP ~[] destination: B332 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B333"
    from_bci -1
    to_bci -1
    predecessors "B328" 
    successors "B334" "B336" 
    xhandlers
    flags 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr 3304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3306  <|@ instruction stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3308  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3310  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3312  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3316  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr 3318  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3322  <|@ st <@st|@reference-map: [stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7] <|@ <|@
      nr 3324  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 3326  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B336"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B314" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 2
    probability 4569800137685319138
    begin_IR
      LIR
      nr 3348  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3350  <|@ instruction r9|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 3352  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3354  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 3356  <|@ instruction r10|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 3358  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3360  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3362  <|@ instruction JUMP ~[] destination: B336 -> B314 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B353"
    from_bci -1
    to_bci -1
    predecessors "B312" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4592134820302886386
    begin_IR
      LIR
      nr 3522  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3524  <|@ instruction rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 3526  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 3528  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3530  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3536  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3538  <|@ st <@st|@reference-map: [stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7] <|@ <|@
      nr 3544  <|@ instruction JUMP ~[] destination: B353 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B354"
    from_bci -1
    to_bci -1
    predecessors "B353" "B350" 
    successors "B355" "B360" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr 3546  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3540  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3542  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3548  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 3550  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r9|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7] <|@ <|@
      nr 3552  <|@ instruction r8|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3554  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 3556  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B355"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors "B356" "B359" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4595913896384120110
    begin_IR
      LIR
      nr 3558  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3560  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3562  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3564  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 3566  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 3568  <|@ instruction BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B356"
    from_bci -1
    to_bci -1
    predecessors "B355" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4594111651120888596
    begin_IR
      LIR
      nr 3570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3572  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r9|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr 3574  <|@ instruction r11|DWORD = INC stack:56|DWORD size: DWORD <|@ <|@
      nr 3576  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3578  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3580  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3582  <|@ instruction JUMP ~[] destination: B356 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B325"
    from_bci -1
    to_bci -1
    predecessors "B324" 
    successors "B326" "B327" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr 3200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3202  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3204  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3206  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 3208  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] rdx|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7] <|@ <|@
      nr 3210  <|@ instruction r10|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 3212  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 3214  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B326"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B2" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4591322088433090175
    begin_IR
      LIR
      nr 3216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3218  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3220  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 3222  <|@ instruction MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 3224  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44]
locals: r9|DWORD[.] rdx|QWORD[.] - - rbp|DWORD int[0|0x0] 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7] <|@ <|@
      nr 3226  <|@ instruction r11|DWORD = INC stack:56|DWORD size: DWORD <|@ <|@
      nr 3228  <|@ instruction r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3230  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3232  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 3234  <|@ instruction JUMP ~[] destination: B326 -> B2 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B349"
    from_bci -1
    to_bci -1
    predecessors "B314" 
    successors "B350" "B351" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr 3472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3474  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3476  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3478  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3480  <|@ instruction CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr 3482  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B350"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B354" 
    xhandlers
    flags 
    loop_index 0
    loop_depth 1
    probability 4590685773210612842
    begin_IR
      LIR
      nr 3484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3486  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3488  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3492  <|@ instruction r8|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 3494  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3496  <|@ st <@st|@reference-map: [stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7] <|@ <|@
      nr 3502  <|@ instruction JUMP ~[] destination: B350 -> B354 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B144" 
    successors "B146" "B310" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1496  <|@ instruction CMP (x: rsi|DWORD, y: stack:36|DWORD) size: DWORD <|@ <|@
      nr 1498  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B147" "B309" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1502  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1504  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7] <|@ <|@
      nr 1506  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B148" "B149" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1508  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1512  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1514  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B150" "B308" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1528  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1530  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1532  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1534  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B151" "B307" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1536  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1538  <|@ instruction CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1540  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" "B306" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1542  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1544  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1546  <|@ instruction r10|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1548  <|@ instruction CMP r10|DWORD y: -10240 size: WORD <|@ <|@
      nr 1550  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B153" "B158" 
    xhandlers
    flags 
    probability 4604843904829197549
    begin_IR
      LIR
      nr 1552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1554  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1556  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1558  <|@ instruction rax|DWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr 1560  <|@ instruction stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1562  <|@ instruction r13|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1564  <|@ instruction stack:104|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1566  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1568  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B242" "B155" 
    xhandlers
    flags 
    probability 4600340445249586512
    begin_IR
      LIR
      nr 1570  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1572  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1574  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B242 falseDestination: B153 -> B155 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr 1580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1582  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1584  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B272" 
    xhandlers
    flags 
    probability 4600179039612173640
    begin_IR
      LIR
      nr 1596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1598  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1600  <|@ instruction JUMP ~[] destination: B157 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B234" "B157" "B164" "B225" "B171" "B178" "B185" "B237" "B192" "B235" "B236" "B238" 
    successors "B273" "B298" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2666  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2668  <|@ instruction rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2670  <|@ st <@st|@reference-map: [rdx:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2672  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B274" "B297" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2676  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2678  <|@ instruction rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2680  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2682  <|@ instruction r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2684  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 2686  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B275" "B276" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2690  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2692  <|@ instruction r8|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2694  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr 2696  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B277" "B296" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2710  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 2712  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2714  <|@ instruction rbx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2716  <|@ instruction CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2718  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B278" "B295" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2722  <|@ instruction rdi|DWORD = INC rbx|DWORD size: DWORD <|@ <|@
      nr 2724  <|@ instruction CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B280" "B288" 
    xhandlers
    flags 
    probability 4604761209390902822
    begin_IR
      LIR
      nr 2728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2730  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2732  <|@ instruction r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2734  <|@ st <@st|@reference-map: [rcx:0, rdx:0, r9:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2736  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2738  <|@ instruction rsi|DWORD = MOV [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2740  <|@ instruction rbp|DWORD = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2742  <|@ instruction MOV (x: [r11|QWORD[.] + rbx|DWORD * 4 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr 2744  <|@ instruction MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2746  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2748  <|@ instruction CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 2750  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B280 falseDestination: B278 -> B288 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B261" "B278" 
    successors "B281" "B282" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2756  <|@ instruction [] = LABEL numbPhis: 6 align: false label: ? <|@ <|@
      nr 2758  <|@ instruction CMP [r10|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr 2760  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B283" "B286" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2774  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2776  <|@ instruction rbx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2778  <|@ instruction rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2780  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2782  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" "B285" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2786  <|@ instruction CMP [r11|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr 2788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B359" 
    xhandlers
    flags 
    probability 4603682201389507369
    begin_IR
      LIR
      nr 2798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2800  <|@ instruction rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2802  <|@ instruction MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2804  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD <|@ <|@
      nr 2806  <|@ instruction MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2808  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2810  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD <|@ <|@
      nr 2812  <|@ instruction JUMP ~[] destination: B285 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B359"
    from_bci -1
    to_bci -1
    predecessors "B355" "B292" "B285" 
    successors 
    xhandlers
    flags 
    probability 4605294466145005428
    begin_IR
      LIR
      nr 3592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3594  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 3596  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B6" "B138" 
    xhandlers
    flags 
    probability 4604777561679676257
    begin_IR
      LIR
      nr   54  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   56  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD <|@ <|@
      nr   58  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r11|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   60  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   62  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: r10|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7] <|@ <|@
      nr   64  <|@ instruction BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B139" 
    xhandlers
    flags 
    probability 4602975297990065613
    begin_IR
      LIR
      nr 1404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1406  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1408  <|@ instruction r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction r9|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1416  <|@ instruction rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1420  <|@ st <@st|@reference-map: [stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7] <|@ <|@
      nr 1422  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B138 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B138" "B135" 
    successors "B140" "B141" 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1430  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 4604814779609708426
    begin_IR
      LIR
      nr 1442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1444  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1446  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B152" 
    successors "B159" "B305" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr 1602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1604  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1606  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B160" "B165" 
    xhandlers
    flags 
    probability 4600340165154067594
    begin_IR
      LIR
      nr 1608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1610  <|@ instruction stack:100|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1612  <|@ instruction r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1614  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1616  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1618  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4595836705571515441
    begin_IR
      LIR
      nr 1620  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1622  <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1624  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B163" "B164" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr 1632  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1634  <|@ instruction CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1636  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B272" 
    xhandlers
    flags 
    probability 4595675303323750891
    begin_IR
      LIR
      nr 1648  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1650  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1652  <|@ instruction JUMP ~[] destination: B164 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B137" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   66  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   68  <|@ st <@st|@reference-map: [rdx:0, r9:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7] <|@ <|@
      nr   70  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r11:0, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7] <|@ <|@
      nr   72  <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B8" "B99" 
    xhandlers
    flags 
    probability 4596377075048977999
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr   84  <|@ instruction stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr   86  <|@ instruction r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   88  <|@ instruction stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   90  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r9:0, r10:0, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7] <|@ <|@
      nr   92  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr   94  <|@ instruction rdi|DWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr   96  <|@ instruction stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  100  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  102  <|@ instruction stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  106  <|@ instruction BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B97" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  110  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD <|@ <|@
      nr  112  <|@ instruction CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  114  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B10" "B96" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  118  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  120  <|@ st <@st|@reference-map: [rdx:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7] <|@ <|@
      nr  122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B11" "B12" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  126  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B13" "B95" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  146  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  148  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  150  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B94" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  152  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  154  <|@ instruction CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  156  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B15" "B93" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  160  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  162  <|@ instruction rbx|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr  164  <|@ instruction CMP rbx|DWORD y: -10240 size: WORD <|@ <|@
      nr  166  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B21" 
    xhandlers
    flags 
    probability 4594508801667138840
    begin_IR
      LIR
      nr  168  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  170  <|@ instruction rbp|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  172  <|@ st <@st|@reference-map: [rdx:0, rbp:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  174  <|@ instruction r13|DWORD = MOVZX rbx|DWORD size: DWORD <|@ <|@
      nr  176  <|@ instruction stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  178  <|@ instruction r14|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr  180  <|@ instruction stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  182  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B17" "B18" 
    xhandlers
    flags 
    probability 4590005314200476746
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  190  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B19" "B20" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B68" 
    xhandlers
    flags 
    probability 4589876048507814368
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  220  <|@ instruction JUMP ~[] destination: B20 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B65" "B66" "B67" "B27" "B20" "B34" 
    successors "B69" "B89" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  698  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  700  <|@ st <@st|@reference-map: [rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  702  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B70" "B88" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  704  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  706  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  708  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  710  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  712  <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  714  <|@ instruction CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  722  <|@ instruction rcx|DWORD = MOV [rcx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  724  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B87" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  738  <|@ instruction r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  740  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  742  <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  744  <|@ instruction CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  746  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B74" "B86" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  750  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  752  <|@ instruction CMP (x: r10|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B76" "B82" 
    xhandlers
    flags 
    probability 4594443769400352142
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  760  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  762  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r10:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  764  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  766  <|@ instruction r11|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  768  <|@ instruction rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  770  <|@ instruction MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  772  <|@ instruction MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  774  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  776  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  778  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B58" "B74" 
    successors "B77" "B78" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  784  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr  786  <|@ instruction CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD <|@ <|@
      nr  788  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B79" "B81" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction CMP [r8|QWORD[.] + 12] y: 2 size: DWORD <|@ <|@
      nr  802  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B134" 
    xhandlers
    flags 
    probability 4593485225611293484
    begin_IR
      LIR
      nr  820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  822  <|@ instruction MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD <|@ <|@
      nr  824  <|@ instruction rsi|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD <|@ <|@
      nr  826  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r8|QWORD[.] + 20], y: r14|DWORD) size: DWORD <|@ <|@
      nr  830  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  832  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B81 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B133" "B85" "B112" "B130" "B81" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr 1364  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1366  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 1368  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r11:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7] <|@ <|@
      nr 1370  <|@ instruction r11|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1372  <|@ instruction CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1374  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B139" 
    xhandlers
    flags 
    probability 4596525946769106678
    begin_IR
      LIR
      nr 1376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1378  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1380  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1382  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1384  <|@ instruction JUMP ~[] destination: B135 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B159" 
    successors "B166" "B304" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1660  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1662  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1664  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B167" "B172" 
    xhandlers
    flags 
    probability 4595836425481878755
    begin_IR
      LIR
      nr 1666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1668  <|@ instruction stack:108|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1670  <|@ instruction r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1672  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rdi:0, r8:0, r9:0, r11:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1674  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1676  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B168" "B169" 
    xhandlers
    flags 
    probability 4591332965896385548
    begin_IR
      LIR
      nr 1678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1680  <|@ instruction CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1682  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B170" "B171" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr 1690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1692  <|@ instruction CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1694  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B272" 
    xhandlers
    flags 
    probability 4591171567038198135
    begin_IR
      LIR
      nr 1706  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1708  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1710  <|@ instruction JUMP ~[] destination: B171 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B289" 
    xhandlers
    flags 
    probability 4593757210952074687
    begin_IR
      LIR
      nr 2830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2832  <|@ instruction r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2834  <|@ instruction stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 2836  <|@ instruction stack:100|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2838  <|@ instruction rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2840  <|@ instruction stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2842  <|@ instruction JUMP ~[] destination: B288 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B262" "B288" 
    successors "B290" "B291" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2844  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr 2846  <|@ instruction rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2848  <|@ instruction rcx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2850  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2852  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - - - stack:100|DWORD stack:96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7] <|@ <|@
      nr 2854  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2856  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B292" "B293" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2878  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2880  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2882  <|@ instruction r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2884  <|@ st <@st|@reference-map: [r9:0, r10:0, r11:0, stack:56, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: rax|DWORD 
locals: stack:88|QWORD[.] r10|QWORD[.] - - - stack:100|DWORD stack:96|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7] <|@ <|@
      nr 2886  <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2888  <|@ instruction CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2890  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B359" 
    xhandlers
    flags 
    probability 4593814834049296144
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2894  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2896  <|@ instruction r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2898  <|@ instruction MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2900  <|@ instruction JUMP ~[] destination: B292 -> B359 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B166" 
    successors "B173" "B303" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr 1712  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1714  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1716  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B174" "B179" 
    xhandlers
    flags 
    probability 4591332685812630970
    begin_IR
      LIR
      nr 1718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1720  <|@ instruction stack:124|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1722  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1724  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, rdi:0, r14:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD rdi|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1726  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1728  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B175" "B176" 
    xhandlers
    flags 
    probability 4586829226224196771
    begin_IR
      LIR
      nr 1730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1732  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1734  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr 1742  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1744  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1746  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B272" 
    xhandlers
    flags 
    probability 4586667830755515311
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1764  <|@ instruction JUMP ~[] destination: B178 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B22" "B92" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr  222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  224  <|@ instruction CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B23" "B28" 
    xhandlers
    flags 
    probability 4590005089879059942
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction stack:104|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD <|@ <|@
      nr  232  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [rdx:0, rbp:0, rsi:0, r8:0, r9:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r14|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  236  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  238  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B24" "B25" 
    xhandlers
    flags 
    probability 4585501602410042383
    begin_IR
      LIR
      nr  240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  242  <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  244  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr  252  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  254  <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  256  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B68" 
    xhandlers
    flags 
    probability 4585372339432063614
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  274  <|@ instruction JUMP ~[] destination: B27 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B100" "B133" 
    xhandlers
    flags 
    probability 4587633914563151070
    begin_IR
      LIR
      nr 1034  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1036  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1038  <|@ instruction CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed} <|@ <|@
      nr 1040  <|@ instruction BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B101" 
    xhandlers
    flags 
    probability 4584620554336281545
    begin_IR
      LIR
      nr 1042  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1044  <|@ instruction r11|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1046  <|@ instruction JUMP ~[] destination: B100 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B103" "B127" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1056  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1058  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD <|@ <|@
      nr 1060  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr 1062  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B104" "B125" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD <|@ <|@
      nr 1068  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B123" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1072  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7] <|@ <|@
      nr 1074  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B106" "B108" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1078  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1080  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B109" "B121" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction r13|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1102  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r13:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7] <|@ <|@
      nr 1104  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1106  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B110" "B119" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1108  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1110  <|@ instruction CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1112  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B111" "B117" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1114  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1116  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1118  <|@ instruction r13|DWORD = MOVSX [r13|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP r13|DWORD y: 128 size: WORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B112" "B113" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4581632603730366633
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}] <|@ <|@
      nr 1128  <|@ instruction r8|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1130  <|@ instruction r13|QWORD = MOVZX r13|DWORD size: DWORD <|@ <|@
      nr 1132  <|@ instruction TEST (x: r8|DWORD, y: [r14|QWORD[.] + r13|QWORD * 4 + 16]) size: DWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" "B116" 
    xhandlers
    flags 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr 1144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1146  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1148  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1150  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 1152  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] rdx|QWORD[.] rcx|DWORD r8|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] rdx|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD r8|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 32, 7] <|@ <|@
      nr 1154  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1156  <|@ instruction rcx|DWORD = INC rcx|DWORD size: DWORD <|@ <|@
      nr 1158  <|@ instruction r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1166  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31]
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:88|QWORD[.] stack:32|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7] <|@ <|@
      nr 1168  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1170  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B101" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4567293819275423070
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1190  <|@ instruction rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD <|@ <|@
      nr 1192  <|@ instruction r11|DWORD = INC stack:92|DWORD size: DWORD <|@ <|@
      nr 1194  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1196  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B116 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B100" "B116" 
    successors "B102" "B129" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4585559686677057366
    begin_IR
      LIR
      nr 1048  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 1050  <|@ instruction rsi|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1052  <|@ instruction CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B180" "B302" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr 1766  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1768  <|@ instruction CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1770  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B181" "B186" 
    xhandlers
    flags 
    probability 4586828946146324177
    begin_IR
      LIR
      nr 1772  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1774  <|@ instruction stack:128|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1776  <|@ instruction r9|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1778  <|@ st <@st|@reference-map: [rdx:0, rbx:0, rsi:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1780  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1782  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B182" "B183" 
    xhandlers
    flags 
    probability 4582325486554949048
    begin_IR
      LIR
      nr 1784  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1786  <|@ instruction CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1788  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B184" "B185" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr 1796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1798  <|@ instruction CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1800  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B272" 
    xhandlers
    flags 
    probability 4582164094475702358
    begin_IR
      LIR
      nr 1814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1816  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1818  <|@ instruction JUMP ~[] destination: B185 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B22" 
    successors "B29" "B91" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr  276  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  278  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr  280  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B30" "B35" 
    xhandlers
    flags 
    probability 4585501378093336509
    begin_IR
      LIR
      nr  282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  284  <|@ instruction r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  286  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rcx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7] <|@ <|@
      nr  288  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr  290  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B31" "B32" 
    xhandlers
    flags 
    probability 4580997890621963534
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr  296  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B33" "B34" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr  304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  306  <|@ instruction CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr  308  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580868630358611363
    begin_IR
      LIR
      nr  330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  332  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  334  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  336  <|@ instruction JUMP ~[] destination: B34 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B83" 
    xhandlers
    flags 
    probability 4583009622221332317
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  840  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  844  <|@ instruction stack:120|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction JUMP ~[] destination: B82 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B59" "B82" 
    successors "B84" "B85" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr  848  <|@ instruction [] = LABEL numbPhis: 4 align: false label: ? <|@ <|@
      nr  850  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  852  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  856  <|@ instruction rcx|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  858  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  860  <|@ st <@st|@reference-map: [stack:24, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70]
locals: stack:120|QWORD[.] stack:32|QWORD[.] - - - stack:104|DWORD stack:100|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7] <|@ <|@
      nr  862  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors "B134" 
    xhandlers
    flags 
    probability 4583100252628737039
    begin_IR
      LIR
      nr  882  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  884  <|@ instruction rax|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  886  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  888  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  890  <|@ instruction JUMP ~[] destination: B85 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B180" 
    successors "B187" "B301" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr 1820  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1822  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1824  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B193" 
    xhandlers
    flags 
    probability 4582325206482958314
    begin_IR
      LIR
      nr 1826  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1828  <|@ instruction stack:132|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction rcx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1832  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, r9:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rbp|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1834  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1836  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4577821746888642316
    begin_IR
      LIR
      nr 1838  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1840  <|@ instruction CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1842  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr 1850  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1852  <|@ instruction CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1854  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B272" 
    xhandlers
    flags 
    probability 4577660358198759216
    begin_IR
      LIR
      nr 1868  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1870  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1872  <|@ instruction JUMP ~[] destination: B192 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B99" 
    successors "B134" 
    xhandlers
    flags 
    probability 4581640075535279603
    begin_IR
      LIR
      nr 1340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1342  <|@ instruction rbx|QWORD = MOV [rbx|DWORD * 8 + 480] size: QWORD <|@ <|@
      nr 1344  <|@ instruction rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD <|@ <|@
      nr 1346  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1348  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1356  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7] <|@ <|@
      nr 1358  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1360  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1362  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B29" 
    successors "B36" "B67" 
    xhandlers
    flags 
    probability 4580997666309968492
    begin_IR
      LIR
      nr  338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  340  <|@ instruction stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD <|@ <|@
      nr  342  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  344  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  346  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  350  <|@ st <@st|@reference-map: [stack:36, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  352  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  354  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B68" 
    xhandlers
    flags 
    probability 4580932261907603961
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  692  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B67 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580989179136727805
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction rax|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1140  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1142  <|@ instruction JUMP ~[] destination: B112 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr 1296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1298  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction CMP [r10|DWORD[.] * 8 + 16] y: 0 size: DWORD <|@ <|@
      nr 1302  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580479570369007107
    begin_IR
      LIR
      nr 1304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1306  <|@ instruction rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1308  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1310  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1312  <|@ instruction r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1314  <|@ st <@st|@reference-map: [stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7] <|@ <|@
      nr 1316  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1318  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1320  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B194" "B300" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr 1874  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1876  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed} <|@ <|@
      nr 1878  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B195" "B200" 
    xhandlers
    flags 
    probability 4577821466822533320
    begin_IR
      LIR
      nr 1880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1882  <|@ instruction rdi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 1884  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rdi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: stack:80|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7] <|@ <|@
      nr 1886  <|@ instruction CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 1888  <|@ instruction BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B196" "B197" 
    xhandlers
    flags 
    probability 4573318007225276515
    begin_IR
      LIR
      nr 1890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1892  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 1894  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B198" "B199" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr 1902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1904  <|@ instruction CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 1906  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573156621924685825
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1924  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1926  <|@ instruction JUMP ~[] destination: B199 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B229" "B239" "B199" 
    successors "B241" "B271" 
    xhandlers
    flags 
    probability 4578999117796592610
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2334  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B272" 
    xhandlers
    flags 
    probability 4578903034045592532
    begin_IR
      LIR
      nr 2660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2662  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2664  <|@ instruction JUMP ~[] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B241" "B153" "B222" 
    successors "B243" "B269" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2350  <|@ st <@st|@reference-map: [rdx:0, rbx:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2352  <|@ instruction r8|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2354  <|@ st <@st|@reference-map: [rdx:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B244" "B268" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD <|@ <|@
      nr 2362  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2364  <|@ instruction rcx|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2366  <|@ instruction CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr 2368  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2372  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2374  <|@ instruction r9|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2376  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 2378  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B267" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2392  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2394  <|@ instruction rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD <|@ <|@
      nr 2396  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2398  <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2400  <|@ instruction CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2402  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B248" "B266" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2406  <|@ instruction rbp|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr 2408  <|@ instruction CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr 2410  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B249" "B254" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2416  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2418  <|@ instruction r14|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr 2420  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 2422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B255" "B265" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2468  <|@ instruction CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr 2470  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B256" "B264" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2474  <|@ instruction r11|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2476  <|@ st <@st|@reference-map: [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] rdx|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] rdx|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7] <|@ <|@
      nr 2478  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B257" "B263" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2480  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2482  <|@ instruction CMP r10|DWORD y: 256 size: WORD <|@ <|@
      nr 2484  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B258" "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction r10|QWORD = MOVZX r10|DWORD size: DWORD <|@ <|@
      nr 2490  <|@ instruction r10|DWORD = MOVZXB [r10|QWORD + r11|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2492  <|@ instruction TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2494  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B257" "B253" 
    successors "B261" "B262" 
    xhandlers
    flags 
    probability 4576446129831916006
    begin_IR
      LIR
      nr 2514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2516  <|@ instruction rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2518  <|@ instruction r10|DWORD = MOV [rcx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2520  <|@ instruction r11|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr 2522  <|@ instruction MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: r9|DWORD) size: DWORD <|@ <|@
      nr 2524  <|@ instruction MOV (x: [rcx|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2526  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2528  <|@ instruction CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr 2530  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B280" 
    xhandlers
    flags 
    probability 4575391099144321446
    begin_IR
      LIR
      nr 2532  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2534  <|@ instruction rbp|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2536  <|@ instruction r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2538  <|@ instruction rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2540  <|@ instruction rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2542  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2544  <|@ instruction r8|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 2546  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2548  <|@ instruction JUMP ~[] destination: B261 -> B280 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B194" 
    successors "B201" "B239" 
    xhandlers
    flags 
    probability 4573317727165049133
    begin_IR
      LIR
      nr 1928  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1930  <|@ instruction stack:136|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1932  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1934  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1936  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1938  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1940  <|@ st <@st|@reference-map: [stack:8, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:136|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1942  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1944  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B240" 
    xhandlers
    flags 
    probability 4573236067814667058
    begin_IR
      LIR
      nr 2320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2322  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2324  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2326  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2328  <|@ instruction JUMP ~[] destination: B239 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" 
    successors "B250" "B251" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2426  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2428  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B252" "B253" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2442  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2444  <|@ instruction CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 2446  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B260" 
    xhandlers
    flags 
    probability 4571942530204545510
    begin_IR
      LIR
      nr 2460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2464  <|@ instruction JUMP ~[] destination: B253 -> B260 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B220" 
    xhandlers
    flags 
    probability 4571814894082148562
    begin_IR
      LIR
      nr 1626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1628  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1630  <|@ instruction JUMP ~[] destination: B161 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B219" "B161" 
    successors "B221" "B226" 
    xhandlers
    flags 
    probability 4571846715351865631
    begin_IR
      LIR
      nr 2156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2158  <|@ instruction rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2160  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr 2162  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed} <|@ <|@
      nr 2164  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B227" "B232" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2210  <|@ instruction CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} <|@ <|@
      nr 2212  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B228" "B231" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2214  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2216  <|@ instruction CMP stack:96|DWORD y: 256 size: WORD <|@ <|@
      nr 2218  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B229" "B230" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2220  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2222  <|@ instruction rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2224  <|@ st <@st|@reference-map: [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7] <|@ <|@
      nr 2226  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B240" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2230  <|@ instruction rdx|QWORD = MOVZX stack:96|DWORD size: DWORD <|@ <|@
      nr 2232  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2234  <|@ instruction JUMP ~[] destination: B229 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" 
    successors "B222" "B223" 
    xhandlers
    flags 
    probability 4567343115724495135
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD <|@ <|@
      nr 2170  <|@ instruction BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr 2182  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2184  <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD <|@ <|@
      nr 2186  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567217340113892895
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2204  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2206  <|@ instruction JUMP ~[] destination: B225 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" 
    successors "B210" 
    xhandlers
    flags 
    probability 4567311185988309688
    begin_IR
      LIR
      nr 1684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1686  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1688  <|@ instruction JUMP ~[] destination: B168 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B209" "B168" 
    successors "B211" "B217" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr 2052  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2054  <|@ instruction r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2056  <|@ st <@st|@reference-map: [r8:0, r10:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: r11|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2058  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2126  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2128  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2130  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2132  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2134  <|@ st <@st|@reference-map: [stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2136  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2138  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2140  <|@ instruction JUMP ~[] destination: B217 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" "B213" 
    successors "B219" "B234" 
    xhandlers
    flags 
    probability 4567343006593361641
    begin_IR
      LIR
      nr 2142  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2144  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2146  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B272" 
    xhandlers
    flags 
    probability 4567279364053927502
    begin_IR
      LIR
      nr 2280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2282  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2284  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2286  <|@ instruction JUMP ~[] destination: B234 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B16" 
    successors "B41" 
    xhandlers
    flags 
    probability 4565915827229334165
    begin_IR
      LIR
      nr  192  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  194  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B17 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B17" 
    successors "B42" "B48" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  416  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  418  <|@ instruction r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  420  <|@ st <@st|@reference-map: [r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  422  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  474  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  476  <|@ instruction rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  478  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  480  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7] <|@ <|@
      nr  482  <|@ instruction rsi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  484  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B44" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr  492  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" "B63" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  506  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  508  <|@ instruction rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  510  <|@ st <@st|@reference-map: [rdx:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7] <|@ <|@
      nr  512  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" "B62" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  516  <|@ instruction r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  518  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 60] size: DWORD <|@ <|@
      nr  520  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  522  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  524  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  526  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  528  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  530  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  532  <|@ instruction rcx|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  534  <|@ instruction TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" "B61" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction r10|DWORD[.] = MOV [r11|QWORD[.] + 52] size: DWORD <|@ <|@
      nr  552  <|@ st <@st|@reference-map: [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  554  <|@ instruction r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  556  <|@ instruction CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  558  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B57" "B60" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  562  <|@ instruction rbx|DWORD = INC r9|DWORD size: DWORD <|@ <|@
      nr  564  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  566  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B58" "B59" 
    xhandlers
    flags 
    probability 4565966953047639239
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  570  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  572  <|@ instruction r8|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, r8:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: stack:88|QWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r11|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r11|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7] <|@ <|@
      nr  576  <|@ instruction r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  578  <|@ instruction rsi|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  580  <|@ instruction rax|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD <|@ <|@
      nr  582  <|@ instruction MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  584  <|@ instruction MOV (x: [r10|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD <|@ <|@
      nr  586  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  588  <|@ instruction CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed} <|@ <|@
      nr  590  <|@ instruction BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B76" 
    xhandlers
    flags 
    probability 4564516866529163683
    begin_IR
      LIR
      nr  592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  594  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  596  <|@ instruction stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  598  <|@ instruction r11|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  600  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  602  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  604  <|@ instruction JUMP ~[] destination: B58 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B260" 
    successors "B289" 
    xhandlers
    flags 
    probability 4565018579343288473
    begin_IR
      LIR
      nr 2550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2552  <|@ instruction rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2554  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2556  <|@ instruction stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2558  <|@ instruction rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2560  <|@ instruction stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2564  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2566  <|@ instruction JUMP ~[] destination: B262 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" 
    successors "B212" "B215" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2062  <|@ instruction CMP stack:96|DWORD y: 256 size: WORD <|@ <|@
      nr 2064  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B213" "B214" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2070  <|@ instruction rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2072  <|@ st <@st|@reference-map: [rsi:0, r8:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2074  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B218" 
    xhandlers
    flags 
    probability 4562839406965991145
    begin_IR
      LIR
      nr 2076  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2078  <|@ instruction rdx|QWORD = MOVZX stack:96|DWORD size: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr 2082  <|@ instruction JUMP ~[] destination: B213 -> B218 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B174" 
    successors "B208" 
    xhandlers
    flags 
    probability 4562807477896748697
    begin_IR
      LIR
      nr 1736  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1738  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1740  <|@ instruction JUMP ~[] destination: B175 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B175" 
    successors "B209" "B235" 
    xhandlers
    flags 
    probability 4562839298422611714
    begin_IR
      LIR
      nr 2024  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2026  <|@ instruction rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2028  <|@ st <@st|@reference-map: [rsi:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r14|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2030  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2032  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2034  <|@ st <@st|@reference-map: [stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2036  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2038  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B272" 
    xhandlers
    flags 
    probability 4562775657212507808
    begin_IR
      LIR
      nr 2288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2290  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2292  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2294  <|@ instruction JUMP ~[] destination: B235 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B43" "B46" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  424  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  426  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  428  <|@ instruction rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  430  <|@ st <@st|@reference-map: [rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] r13|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7] <|@ <|@
      nr  432  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B44" "B45" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  434  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  436  <|@ instruction CMP stack:100|DWORD y: 256 size: WORD <|@ <|@
      nr  438  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B49" 
    xhandlers
    flags 
    probability 4561463353420268743
    begin_IR
      LIR
      nr  440  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  442  <|@ instruction rdx|QWORD = MOVZX stack:100|DWORD size: DWORD <|@ <|@
      nr  444  <|@ instruction rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B44 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B23" 
    successors "B39" 
    xhandlers
    flags 
    probability 4561412053862212708
    begin_IR
      LIR
      nr  246  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  248  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction JUMP ~[] destination: B24 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" "B24" 
    successors "B40" "B65" 
    xhandlers
    flags 
    probability 4561488343692636445
    begin_IR
      LIR
      nr  388  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  390  <|@ instruction rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  392  <|@ st <@st|@reference-map: [rbp:0, rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rbp|DWORD[.] r13|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] r13|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7] <|@ <|@
      nr  394  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  396  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ st <@st|@reference-map: [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7] <|@ <|@
      nr  400  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  402  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B68" 
    xhandlers
    flags 
    probability 4561386092056026297
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction r11|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  676  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  678  <|@ instruction JUMP ~[] destination: B65 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" 
    successors "B206" 
    xhandlers
    flags 
    probability 4558303769807465541
    begin_IR
      LIR
      nr 1790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1792  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1794  <|@ instruction JUMP ~[] destination: B182 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" "B182" 
    successors "B207" "B236" 
    xhandlers
    flags 
    probability 4558335685863263097
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 2002  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2004  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 2006  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2008  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2010  <|@ st <@st|@reference-map: [stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 2012  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2014  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B272" 
    xhandlers
    flags 
    probability 4558272044811537063
    begin_IR
      LIR
      nr 2296  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2298  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2300  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2302  <|@ instruction JUMP ~[] destination: B236 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B37" 
    xhandlers
    flags 
    probability 4556908280498739924
    begin_IR
      LIR
      nr  298  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  300  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  302  <|@ instruction JUMP ~[] destination: B31 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" "B31" 
    successors "B38" "B66" 
    xhandlers
    flags 
    probability 4559368492574505914
    begin_IR
      LIR
      nr  362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  364  <|@ instruction rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr  366  <|@ st <@st|@reference-map: [rdx:0, rsi:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rsi|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  368  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  370  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  372  <|@ instruction rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ st <@st|@reference-map: [stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:104|DWORD[.] stack:92|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] stack:32|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7] <|@ <|@
      nr  376  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  378  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B68" 
    xhandlers
    flags 
    probability 4559292202744082177
    begin_IR
      LIR
      nr  680  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  682  <|@ instruction r11|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  684  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B66 -> B68 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B57" 
    successors "B83" 
    xhandlers
    flags 
    probability 4554435969718103183
    begin_IR
      LIR
      nr  606  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  608  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr  610  <|@ instruction stack:100|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr  612  <|@ instruction stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  614  <|@ instruction r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  616  <|@ instruction stack:120|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  620  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  622  <|@ instruction JUMP ~[] destination: B59 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B204" 
    xhandlers
    flags 
    probability 4553800061720460172
    begin_IR
      LIR
      nr 1844  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1846  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1848  <|@ instruction JUMP ~[] destination: B189 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" "B189" 
    successors "B205" "B237" 
    xhandlers
    flags 
    probability 4553847686786724362
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1978  <|@ st <@st|@reference-map: [rdx:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r9|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1980  <|@ instruction rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1982  <|@ instruction rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1984  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1986  <|@ st <@st|@reference-map: [stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1988  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1990  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B272" 
    xhandlers
    flags 
    probability 4553783854675129250
    begin_IR
      LIR
      nr 2304  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2306  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2308  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2310  <|@ instruction JUMP ~[] destination: B237 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" 
    successors "B37" 
    xhandlers
    flags 
    probability 4552503787519490370
    begin_IR
      LIR
      nr  356  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  358  <|@ instruction rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr  360  <|@ instruction JUMP ~[] destination: B36 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4550281384080835476
    begin_IR
      LIR
      nr 2336  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2338  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2340  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2342  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2344  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B195" 
    successors "B202" 
    xhandlers
    flags 
    probability 4549296353635732543
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1900  <|@ instruction JUMP ~[] destination: B196 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B201" "B196" 
    successors "B203" "B238" 
    xhandlers
    flags 
    probability 4551909452847958930
    begin_IR
      LIR
      nr 1952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1954  <|@ instruction rsi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD <|@ <|@
      nr 1956  <|@ st <@st|@reference-map: [rcx:0, rsi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: rcx|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1958  <|@ instruction rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3 <|@ <|@
      nr 1960  <|@ instruction rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 1962  <|@ st <@st|@reference-map: [stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16]
locals: - - 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:132|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:128|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:124|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:108|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:80|DWORD[.] stack:32|QWORD[.] - - stack:92|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] stack:32|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7] <|@ <|@
      nr 1964  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 1966  <|@ instruction BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B272" 
    xhandlers
    flags 
    probability 4551814202715430551
    begin_IR
      LIR
      nr 2312  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2314  <|@ instruction rsi|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2316  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2318  <|@ instruction JUMP ~[] destination: B238 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B202" 
    xhandlers
    flags 
    probability 4544854622813912742
    begin_IR
      LIR
      nr 1946  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1948  <|@ instruction rcx|DWORD[.] = MOVE stack:136|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1950  <|@ instruction JUMP ~[] destination: B201 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B242" 
    xhandlers
    flags 
    probability 4543174463840632876
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2176  <|@ instruction rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2178  <|@ instruction rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2180  <|@ instruction JUMP ~[] destination: B222 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B220" 
    xhandlers
    flags 
    probability 4538767470182288717
    begin_IR
      LIR
      nr 2148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2150  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2152  <|@ instruction r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2154  <|@ instruction JUMP ~[] destination: B219 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B210" 
    xhandlers
    flags 
    probability 4534263700400648468
    begin_IR
      LIR
      nr 2040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2042  <|@ instruction r8|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2044  <|@ instruction r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr 2046  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2048  <|@ instruction r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 2050  <|@ instruction JUMP ~[] destination: B209 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B41" 
    xhandlers
    flags 
    probability 4532661730250397969
    begin_IR
      LIR
      nr  404  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  406  <|@ instruction r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr  408  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr  410  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" 
    successors "B39" 
    xhandlers
    flags 
    probability 4531000174654467634
    begin_IR
      LIR
      nr  380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  382  <|@ instruction r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rbp|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD <|@ <|@
      nr  386  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B206" 
    successors "B208" 
    xhandlers
    flags 
    probability 4529760080500910324
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction r14|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2020  <|@ instruction rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 2022  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B204" 
    successors "B206" 
    xhandlers
    flags 
    probability 4525280936536781846
    begin_IR
      LIR
      nr 1992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1994  <|@ instruction rsi|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B205 -> B206 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" 
    successors "B204" 
    xhandlers
    flags 
    probability 4523206434734423763
    begin_IR
      LIR
      nr 1968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1970  <|@ instruction r9|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B203 -> B204 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B291" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2904  <|@ instruction r11|DWORD = MOVE input: int[-877851|0xfffffffffff29ae5] <|@ <|@
      nr 2906  <|@ instruction rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2908  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2910  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2912  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2914  <|@ instruction JUMP ~[] destination: B293 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B290" "B293" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2916  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2918  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2920  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2922  <|@ st <@st|@reference-map: [rbx:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: rax|DWORD 
locals: rbx|QWORD[.] r10|QWORD[.] - - - r8|DWORD rcx|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1322  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1324  <|@ instruction r11|DWORD = MOVE input: int[-760339|0xfffffffffff465ed] <|@ <|@
      nr 1326  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1328  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1330  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B128" "B126" "B124" "B107" "B122" "B120" "B118" "B131" 
    successors 
    xhandlers
    flags 
    probability 2368893403996880896
    begin_IR
      LIR
      nr 1332  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1334  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1336  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1338  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:88|QWORD[.] r10|QWORD[.] rcx|DWORD stack:48|QWORD[.] r8|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B212" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2084  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2086  <|@ instruction r11|DWORD = MOVE input: int[-814363|0xfffffffffff392e5] <|@ <|@
      nr 2098  <|@ instruction JUMP ~[] destination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B215" "B214" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2118  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2106  <|@ instruction rcx|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2108  <|@ instruction rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2110  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2112  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2114  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2120  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2122  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2124  <|@ st <@st|@reference-map: [rcx:0, rbx:0, r8:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: r8|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rcx|DWORD[.] rax|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: rbx|QWORD[.] rax|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: rbx|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rax|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  910  <|@ instruction r8|DWORD = MOVE input: int[-724763|0xfffffffffff4f0e5] <|@ <|@
      nr  912  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  914  <|@ instruction JUMP ~[] destination: B88 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B89" "B88" "B71" "B87" "B86" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  926  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  928  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  930  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: r11|DWORD 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B68" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  916  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  918  <|@ instruction r8|DWORD = MOVE input: int[-721971|0xfffffffffff4fbcd] <|@ <|@
      nr  920  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B89 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2192  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2194  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2196  <|@ instruction r11|DWORD = MOVE input: int[-818451|0xfffffffffff382ed] <|@ <|@
      nr 2198  <|@ instruction JUMP ~[] destination: B224 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B224" "B232" "B231" "B230" 
    successors 
    xhandlers
    flags 
    probability 2364389804369510400
    begin_IR
      LIR
      nr 2272  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2274  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2276  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2278  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:44, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:100|DWORD[.] stack:76|DWORD 
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5]
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 5, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2262  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2264  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2266  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction r11|DWORD = MOVE input: int[-818739|0xfffffffffff381cd] <|@ <|@
      nr 2270  <|@ instruction JUMP ~[] destination: B232 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B363"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3626  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3628  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3630  <|@ instruction r11|DWORD = MOVE input: int[-664603|0xfffffffffff5dbe5] <|@ <|@
      nr 3632  <|@ instruction JUMP ~[] destination: B363 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B365"
    from_bci -1
    to_bci -1
    predecessors "B364" "B363" "B137" "B362" "B361" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 3642  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3644  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3646  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3648  <|@ st <@st|@reference-map: [r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B249" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2432  <|@ instruction r11|DWORD = MOVE input: int[-843283|0xfffffffffff321ed] <|@ <|@
      nr 2434  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2436  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2438  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2440  <|@ instruction JUMP ~[] destination: B250 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" "B268" "B245" "B267" "B266" "B250" "B252" "B265" "B264" "B263" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 2652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2654  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2658  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2500  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2502  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2504  <|@ instruction MOV [r15|QWORD + 668] y: -823571 size: DWORD <|@ <|@
      nr 2506  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2508  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: int[0|0x0] 
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B256" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2568  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2570  <|@ instruction r11|DWORD = MOVE input: int[-844051|0xfffffffffff31eed] <|@ <|@
      nr 2572  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2574  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2576  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2578  <|@ instruction JUMP ~[] destination: B263 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B255" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2580  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2582  <|@ instruction r11|DWORD = MOVE input: int[-846619|0xfffffffffff314e5] <|@ <|@
      nr 2584  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2586  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2588  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2590  <|@ instruction JUMP ~[] destination: B264 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2594  <|@ instruction r11|DWORD = MOVE input: int[-843827|0xfffffffffff31fcd] <|@ <|@
      nr 2596  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2598  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2600  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2602  <|@ instruction JUMP ~[] destination: B265 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B216" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2100  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2102  <|@ instruction r11|DWORD = MOVE input: int[-811795|0xfffffffffff39ced] <|@ <|@
      nr 2116  <|@ instruction JUMP ~[] destination: B215 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B247" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2604  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2606  <|@ instruction r11|DWORD = MOVE input: int[-839451|0xfffffffffff330e5] <|@ <|@
      nr 2608  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2610  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2612  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2614  <|@ instruction JUMP ~[] destination: B266 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2618  <|@ instruction r11|DWORD = MOVE input: int[-837147|0xfffffffffff339e5] <|@ <|@
      nr 2620  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2622  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2624  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2626  <|@ instruction JUMP ~[] destination: B267 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2380  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2382  <|@ instruction r11|DWORD = MOVE input: int[-829459|0xfffffffffff357ed] <|@ <|@
      nr 2384  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2386  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2390  <|@ instruction JUMP ~[] destination: B245 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" 
    successors "B294" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2860  <|@ instruction r11|DWORD = MOVE input: int[-875283|0xfffffffffff2a4ed] <|@ <|@
      nr 2862  <|@ instruction rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD <|@ <|@
      nr 2864  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2866  <|@ instruction rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2868  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2870  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2872  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2874  <|@ instruction JUMP ~[] destination: B290 -> B294 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B242" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2642  <|@ instruction r11|DWORD = MOVE input: int[-824883|0xfffffffffff369cd] <|@ <|@
      nr 2644  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2646  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2648  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2650  <|@ instruction JUMP ~[] destination: B269 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B197" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1908  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1910  <|@ instruction r11|DWORD = MOVE input: int[-803091|0xfffffffffff3beed] <|@ <|@
      nr 1912  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1914  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1916  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B198 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B311"
    from_bci -1
    to_bci -1
    predecessors "B310" "B309" "B148" "B308" "B307" "B306" "B156" "B305" "B163" "B304" "B170" "B303" "B177" "B302" "B184" "B301" "B191" "B300" "B198" 
    successors 
    xhandlers
    flags 
    probability 2374241428554383360
    begin_IR
      LIR
      nr 3090  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3092  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3094  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3096  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B9" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1000  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1002  <|@ instruction r11|DWORD = MOVE input: int[-679731|0xfffffffffff5a0cd] <|@ <|@
      nr 1004  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B96 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" "B96" "B11" "B95" "B94" "B93" "B19" "B92" "B26" "B91" "B33" 
    successors 
    xhandlers
    flags 
    probability 2370582253857144832
    begin_IR
      LIR
      nr 1026  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1020  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1022  <|@ instruction rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr 1028  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1030  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1032  <|@ st <@st|@reference-map: [rbx:0, r8:0, r9:0, r10:0]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21]
locals: r9|QWORD[.] r10|QWORD[.] rcx|DWORD r8|QWORD[.] rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: rbx|DWORD[.] r10|QWORD[.] rcx|DWORD r8|QWORD[.] rdx|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B43" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction r11|DWORD = MOVE input: int[-716563|0xfffffffffff510ed] <|@ <|@
      nr  454  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" "B45" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  460  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  468  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  470  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: int[0|0x0] 
locals: stack:88|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:88|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2976  <|@ instruction r11|DWORD = MOVE input: int[-800819|0xfffffffffff3c7cd] <|@ <|@
      nr 2978  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2980  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2982  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2984  <|@ instruction JUMP ~[] destination: B300 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2986  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2988  <|@ instruction r11|DWORD = MOVE input: int[-798259|0xfffffffffff3d1cd] <|@ <|@
      nr 2990  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 2992  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2994  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2996  <|@ instruction JUMP ~[] destination: B301 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B146" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3070  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3072  <|@ instruction r11|DWORD = MOVE input: int[-780083|0xfffffffffff418cd] <|@ <|@
      nr 3074  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3076  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3078  <|@ instruction JUMP ~[] destination: B309 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B83" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction r11|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  872  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr  874  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  876  <|@ instruction MOV [r15|QWORD + 668] y: -747283 size: DWORD <|@ <|@
      nr  878  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  880  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73]
stack: int[0|0x0] 
locals: r9|QWORD[.] r10|QWORD[.] - - - r11|DWORD r8|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:73, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  934  <|@ instruction r11|DWORD = MOVE input: int[-690227|0xfffffffffff577cd] <|@ <|@
      nr  938  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  940  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  942  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  950  <|@ instruction JUMP ~[] destination: B91 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B362"
    from_bci -1
    to_bci -1
    predecessors "B142" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3620  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3622  <|@ instruction r11|DWORD = MOVE input: int[-770355|0xfffffffffff43ecd] <|@ <|@
      nr 3624  <|@ instruction JUMP ~[] destination: B362 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B310"
    from_bci -1
    to_bci -1
    predecessors "B145" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3082  <|@ instruction r11|DWORD = MOVE input: int[-779539|0xfffffffffff41aed] <|@ <|@
      nr 3084  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3086  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3088  <|@ instruction JUMP ~[] destination: B310 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1588  <|@ instruction r11|DWORD = MOVE input: int[-787731|0xfffffffffff3faed] <|@ <|@
      nr 1590  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1592  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1594  <|@ instruction JUMP ~[] destination: B156 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B162" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1640  <|@ instruction r11|DWORD = MOVE input: int[-790291|0xfffffffffff3f0ed] <|@ <|@
      nr 1642  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1644  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1646  <|@ instruction JUMP ~[] destination: B163 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B120" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1218  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1220  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1222  <|@ instruction JUMP ~[] destination: B119 -> B120 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1226  <|@ instruction r11|DWORD = MOVE input: int[-753435|0xfffffffffff480e5] <|@ <|@
      nr 1228  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1230  <|@ instruction JUMP ~[] destination: B120 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B108" 
    successors "B122" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1232  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1234  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1236  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1238  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1240  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1242  <|@ instruction r11|DWORD = MOVE input: int[-752659|0xfffffffffff483ed] <|@ <|@
      nr 1244  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1246  <|@ instruction JUMP ~[] destination: B122 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B105" 
    successors "B107" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1082  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1084  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1086  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B106 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B106" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r11|DWORD = MOVE input: int[-750355|0xfffffffffff48ced] <|@ <|@
      nr 1094  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1096  <|@ instruction JUMP ~[] destination: B107 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B124" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1250  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1252  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1254  <|@ instruction JUMP ~[] destination: B123 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B123" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1256  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1258  <|@ instruction r11|DWORD = MOVE input: int[-750131|0xfffffffffff48dcd] <|@ <|@
      nr 1260  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B124 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B126" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1268  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1270  <|@ instruction JUMP ~[] destination: B125 -> B126 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1272  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1274  <|@ instruction r11|DWORD = MOVE input: int[-749587|0xfffffffffff48fed] <|@ <|@
      nr 1276  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1278  <|@ instruction JUMP ~[] destination: B126 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B102" 
    successors "B128" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1282  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1284  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B127" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1288  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1290  <|@ instruction r11|DWORD = MOVE input: int[-749107|0xfffffffffff491cd] <|@ <|@
      nr 1292  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1294  <|@ instruction JUMP ~[] destination: B128 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  624  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  626  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  630  <|@ instruction r11|DWORD = MOVE input: int[-713755|0xfffffffffff51be5] <|@ <|@
      nr  632  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B50" "B63" "B62" "B54" "B61" "B60" 
    successors 
    xhandlers
    flags 
    probability 2366641604183195648
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  666  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr  668  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  670  <|@ st <@st|@reference-map: [rax:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21]
stack: rsi|DWORD 
locals: rax|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] r13|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:21, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B280" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2764  <|@ instruction r11|DWORD = MOVE input: int[-866067|0xfffffffffff2c8ed] <|@ <|@
      nr 2766  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2768  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2770  <|@ instruction JUMP ~[] destination: B281 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B281" "B286" "B284" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr 2822  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2824  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2826  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2828  <|@ st <@st|@reference-map: [rdx:0, r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rdx|QWORD[.] r10|QWORD[.] r13|DWORD stack:48|QWORD[.] r8|DWORD rbp|DWORD rsi|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  260  <|@ instruction r11|DWORD = MOVE input: int[-689939|0xfffffffffff578ed] <|@ <|@
      nr  262  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  268  <|@ instruction JUMP ~[] destination: B26 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B334"
    from_bci -1
    to_bci -1
    predecessors "B333" 
    successors "B335" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3330  <|@ instruction r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr 3332  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3334  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3336  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3338  <|@ instruction JUMP ~[] destination: B334 -> B335 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B335"
    from_bci -1
    to_bci -1
    predecessors "B334" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3342  <|@ instruction MOV [r15|QWORD + 668] y: -900115 size: DWORD <|@ <|@
      nr 3344  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3346  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:72|QWORD[.] r10|QWORD[.] - stack:48|QWORD[.] r11|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B21" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  952  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  954  <|@ instruction r11|DWORD = MOVE input: int[-687667|0xfffffffffff581cd] <|@ <|@
      nr  956  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  962  <|@ instruction JUMP ~[] destination: B92 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1750  <|@ instruction r11|DWORD = MOVE input: int[-795411|0xfffffffffff3dced] <|@ <|@
      nr 1752  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1754  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1756  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1758  <|@ instruction JUMP ~[] destination: B177 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B276" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2934  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2936  <|@ instruction r11|DWORD = MOVE input: int[-860443|0xfffffffffff2dee5] <|@ <|@
      nr 2938  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2940  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2942  <|@ instruction JUMP ~[] destination: B296 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" "B297" "B275" "B296" "B295" 
    successors 
    xhandlers
    flags 
    probability 2365515704276353024
    begin_IR
      LIR
      nr 2966  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2968  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 2970  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2972  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8]
stack: rsi|DWORD 
locals: stack:72|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18]
locals: stack:72|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:8, 18, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B169" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1698  <|@ instruction r11|DWORD = MOVE input: int[-792851|0xfffffffffff3e6ed] <|@ <|@
      nr 1700  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1702  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1704  <|@ instruction JUMP ~[] destination: B170 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B172" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3012  <|@ instruction r11|DWORD = MOVE input: int[-793139|0xfffffffffff3e5cd] <|@ <|@
      nr 3014  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3016  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3018  <|@ instruction JUMP ~[] destination: B303 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B273" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2946  <|@ instruction r11|DWORD = MOVE input: int[-851227|0xfffffffffff302e5] <|@ <|@
      nr 2948  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2950  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2952  <|@ instruction JUMP ~[] destination: B297 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B165" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction r11|DWORD = MOVE input: int[-790579|0xfffffffffff3efcd] <|@ <|@
      nr 3024  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3026  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3028  <|@ instruction JUMP ~[] destination: B304 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2700  <|@ instruction r11|DWORD = MOVE input: int[-853011|0xfffffffffff2fbed] <|@ <|@
      nr 2702  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2704  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2706  <|@ instruction JUMP ~[] destination: B275 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r8|DWORD = MOVE input: int[-739603|0xfffffffffff4b6ed] <|@ <|@
      nr  796  <|@ instruction JUMP ~[] destination: B77 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B77" "B79" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  812  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  794  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  814  <|@ instruction MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD <|@ <|@
      nr  816  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  818  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63]
locals: rsi|QWORD[.] r10|QWORD[.] r14|DWORD stack:48|QWORD[.] rcx|DWORD rax|DWORD r11|DWORD 
java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37]
locals: - - - - - 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:63, 37, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  656  <|@ instruction r11|DWORD = MOVE input: int[-698931|0xfffffffffff555cd] <|@ <|@
      nr  658  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  660  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  648  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction r11|DWORD = MOVE input: int[-701723|0xfffffffffff54ae5] <|@ <|@
      nr  652  <|@ instruction JUMP ~[] destination: B62 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B319"
    from_bci -1
    to_bci -1
    predecessors "B318" 
    successors "B320" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3146  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3148  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3150  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3152  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3154  <|@ instruction JUMP ~[] destination: B319 -> B320 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B320"
    from_bci -1
    to_bci -1
    predecessors "B319" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3156  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3158  <|@ instruction r11|DWORD = MOVE input: int[-882451|0xfffffffffff288ed] <|@ <|@
      nr 3160  <|@ instruction JUMP ~[] destination: B320 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B352"
    from_bci -1
    to_bci -1
    predecessors "B348" "B346" "B344" "B320" "B342" "B340" "B338" "B327" "B331" "B351" 
    successors 
    xhandlers
    flags 
    probability 2370019303903723520
    begin_IR
      LIR
      nr 3514  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3516  <|@ instruction MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD <|@ <|@
      nr 3518  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3520  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3]
locals: stack:72|QWORD[.] r10|QWORD[.] rcx|DWORD stack:48|QWORD[.] stack:76|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:3, 28, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction r8|DWORD = MOVE input: int[-726547|0xfffffffffff4e9ed] <|@ <|@
      nr  732  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  734  <|@ instruction JUMP ~[] destination: B71 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction r8|DWORD = MOVE input: int[-736283|0xfffffffffff4c3e5] <|@ <|@
      nr  896  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction JUMP ~[] destination: B86 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B361"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3612  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3614  <|@ instruction r11|DWORD = MOVE input: int[-776219|0xfffffffffff427e5] <|@ <|@
      nr 3616  <|@ instruction JUMP ~[] destination: B361 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B228" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2238  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2240  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2242  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2244  <|@ instruction r11|DWORD = MOVE input: int[-821531|0xfffffffffff376e5] <|@ <|@
      nr 2246  <|@ instruction JUMP ~[] destination: B230 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B183" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1804  <|@ instruction r11|DWORD = MOVE input: int[-797971|0xfffffffffff3d2ed] <|@ <|@
      nr 1806  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1808  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1810  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1812  <|@ instruction JUMP ~[] destination: B184 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3050  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3052  <|@ instruction r11|DWORD = MOVE input: int[-783387|0xfffffffffff40be5] <|@ <|@
      nr 3054  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3056  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3058  <|@ instruction JUMP ~[] destination: B307 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  966  <|@ instruction r11|DWORD = MOVE input: int[-685075|0xfffffffffff58bed] <|@ <|@
      nr  968  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  974  <|@ instruction JUMP ~[] destination: B93 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B339"
    from_bci -1
    to_bci -1
    predecessors "B322" 
    successors "B340" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3384  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3386  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3388  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3390  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3392  <|@ instruction JUMP ~[] destination: B339 -> B340 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B340"
    from_bci -1
    to_bci -1
    predecessors "B339" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3396  <|@ instruction r11|DWORD = MOVE input: int[-885531|0xfffffffffff27ce5] <|@ <|@
      nr 3398  <|@ instruction JUMP ~[] destination: B340 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  990  <|@ instruction r11|DWORD = MOVE input: int[-682259|0xfffffffffff596ed] <|@ <|@
      nr  992  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  998  <|@ instruction JUMP ~[] destination: B95 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2628  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2630  <|@ instruction r11|DWORD = MOVE input: int[-827675|0xfffffffffff35ee5] <|@ <|@
      nr 2632  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2634  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2636  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2638  <|@ instruction JUMP ~[] destination: B268 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1516  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1518  <|@ instruction r11|DWORD = MOVE input: int[-780307|0xfffffffffff417ed] <|@ <|@
      nr 1520  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1522  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1524  <|@ instruction JUMP ~[] destination: B148 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B341"
    from_bci -1
    to_bci -1
    predecessors "B321" 
    successors "B342" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3402  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3404  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3406  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3408  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3410  <|@ instruction JUMP ~[] destination: B341 -> B342 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B342"
    from_bci -1
    to_bci -1
    predecessors "B341" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3412  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3414  <|@ instruction r11|DWORD = MOVE input: int[-884755|0xfffffffffff27fed] <|@ <|@
      nr 3416  <|@ instruction JUMP ~[] destination: B342 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction r11|DWORD = MOVE input: int[-679187|0xfffffffffff5a2ed] <|@ <|@
      nr 1016  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1018  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1024  <|@ instruction JUMP ~[] destination: B97 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B32" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  310  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  312  <|@ instruction r11|DWORD = MOVE input: int[-692499|0xfffffffffff56eed] <|@ <|@
      nr  316  <|@ instruction r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  318  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  320  <|@ instruction r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  322  <|@ instruction rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  328  <|@ instruction JUMP ~[] destination: B33 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B345"
    from_bci -1
    to_bci -1
    predecessors "B316" 
    successors "B346" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3436  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3438  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3440  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3442  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3444  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3446  <|@ instruction JUMP ~[] destination: B345 -> B346 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B346"
    from_bci -1
    to_bci -1
    predecessors "B345" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3450  <|@ instruction r11|DWORD = MOVE input: int[-881683|0xfffffffffff28bed] <|@ <|@
      nr 3452  <|@ instruction JUMP ~[] destination: B346 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3000  <|@ instruction r11|DWORD = MOVE input: int[-795699|0xfffffffffff3dbcd] <|@ <|@
      nr 3002  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3004  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3006  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3008  <|@ instruction JUMP ~[] destination: B302 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B158" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3030  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3032  <|@ instruction r11|DWORD = MOVE input: int[-788019|0xfffffffffff3f9cd] <|@ <|@
      nr 3034  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3036  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3038  <|@ instruction JUMP ~[] destination: B305 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B330"
    from_bci -1
    to_bci -1
    predecessors "B329" 
    successors "B331" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3268  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3270  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3272  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3274  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3276  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3278  <|@ instruction JUMP ~[] destination: B330 -> B331 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B331"
    from_bci -1
    to_bci -1
    predecessors "B330" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3282  <|@ instruction r11|DWORD = MOVE input: int[-927771|0xfffffffffff1d7e5] <|@ <|@
      nr 3284  <|@ instruction JUMP ~[] destination: B331 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2814  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2816  <|@ instruction r11|DWORD = MOVE input: int[-873243|0xfffffffffff2ace5] <|@ <|@
      nr 2818  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2820  <|@ instruction JUMP ~[] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r11|DWORD = MOVE input: int[-687379|0xfffffffffff582ed] <|@ <|@
      nr  208  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B19 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B364"
    from_bci -1
    to_bci -1
    predecessors "B2" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3636  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3638  <|@ instruction r11|DWORD = MOVE input: int[-661779|0xfffffffffff5e6ed] <|@ <|@
      nr 3640  <|@ instruction JUMP ~[] destination: B364 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B277" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2926  <|@ instruction r11|DWORD = MOVE input: int[-862747|0xfffffffffff2d5e5] <|@ <|@
      nr 2928  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2930  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2932  <|@ instruction JUMP ~[] destination: B295 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B351"
    from_bci -1
    to_bci -1
    predecessors "B349" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3504  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3506  <|@ instruction r11|DWORD = MOVE input: int[-901139|0xfffffffffff23fed] <|@ <|@
      nr 3508  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3510  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3512  <|@ instruction JUMP ~[] destination: B351 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B337"
    from_bci -1
    to_bci -1
    predecessors "B323" 
    successors "B338" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3366  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3368  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3370  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3372  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3374  <|@ instruction JUMP ~[] destination: B337 -> B338 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B338"
    from_bci -1
    to_bci -1
    predecessors "B337" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3376  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3378  <|@ instruction r11|DWORD = MOVE input: int[-887571|0xfffffffffff274ed] <|@ <|@
      nr 3380  <|@ instruction JUMP ~[] destination: B338 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B80" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  804  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  806  <|@ instruction r8|DWORD = MOVE input: int[-914459|0xfffffffffff20be5] <|@ <|@
      nr  810  <|@ instruction JUMP ~[] destination: B79 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  542  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r11|DWORD = MOVE input: int[-703507|0xfffffffffff543ed] <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B54 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  634  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  636  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  638  <|@ instruction r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  640  <|@ instruction r11|DWORD = MOVE input: int[-711451|0xfffffffffff524e5] <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B64" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  494  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  496  <|@ instruction r11|DWORD = MOVE input: int[-697619|0xfffffffffff55aed] <|@ <|@
      nr  498  <|@ instruction rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  502  <|@ instruction JUMP ~[] destination: B50 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B227" 
    successors "B233" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2250  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2252  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2254  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2256  <|@ instruction r11|DWORD = MOVE input: int[-818963|0xfffffffffff380ed] <|@ <|@
      nr 2258  <|@ instruction JUMP ~[] destination: B231 -> B233 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B343"
    from_bci -1
    to_bci -1
    predecessors "B317" 
    successors "B344" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3418  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3420  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3422  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3424  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3426  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3428  <|@ instruction JUMP ~[] destination: B343 -> B344 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B344"
    from_bci -1
    to_bci -1
    predecessors "B343" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3432  <|@ instruction r11|DWORD = MOVE input: int[-882227|0xfffffffffff289cd] <|@ <|@
      nr 3434  <|@ instruction JUMP ~[] destination: B344 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" 
    successors "B47" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  456  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  458  <|@ instruction r11|DWORD = MOVE input: int[-719131|0xfffffffffff506e5] <|@ <|@
      nr  462  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B327"
    from_bci -1
    to_bci -1
    predecessors "B325" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3238  <|@ instruction r11|DWORD = MOVE input: int[-891931|0xfffffffffff263e5] <|@ <|@
      nr 3240  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3242  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3244  <|@ instruction JUMP ~[] destination: B327 -> B352 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction r11|DWORD = MOVE input: int[-679955|0xfffffffffff59fed] <|@ <|@
      nr  134  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  140  <|@ instruction JUMP ~[] destination: B11 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B365" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1396  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1398  <|@ instruction r11|DWORD = MOVE input: int[-675867|0xfffffffffff5afe5] <|@ <|@
      nr 1400  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1402  <|@ instruction JUMP ~[] destination: B137 -> B365 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B110" 
    successors "B118" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1204  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1206  <|@ instruction JUMP ~[] destination: B117 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B117" 
    successors "B132" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1208  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1210  <|@ instruction r11|DWORD = MOVE input: int[-755475|0xfffffffffff478ed] <|@ <|@
      nr 1212  <|@ instruction r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ instruction JUMP ~[] destination: B118 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B360"
    from_bci -1
    to_bci -1
    predecessors "B354" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3600  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3602  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3604  <|@ instruction MOV [r15|QWORD + 668] y: -905499 size: DWORD <|@ <|@
      nr 3606  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3608  <|@ st <@st|@reference-map: [r9:0, r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: r9|DWORD[.] r10|QWORD[.] - - rdi|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 50, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1858  <|@ instruction r11|DWORD = MOVE input: int[-800531|0xfffffffffff3c8ed] <|@ <|@
      nr 1860  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 1862  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1864  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1866  <|@ instruction JUMP ~[] destination: B191 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B299" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2954  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2956  <|@ instruction r11|DWORD = MOVE input: int[-848435|0xfffffffffff30dcd] <|@ <|@
      nr 2958  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2960  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2962  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2964  <|@ instruction JUMP ~[] destination: B298 -> B299 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B366"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3650  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3652  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3654  <|@ instruction MOV [r15|QWORD + 668] y: -660787 size: DWORD <|@ <|@
      nr 3656  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3658  <|@ st <@st|@reference-map: [rsi:0, r10:0, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0]
locals: rsi|QWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B90" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction r8|DWORD = MOVE input: int[-733979|0xfffffffffff4cce5] <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  906  <|@ instruction JUMP ~[] destination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B251" 
    successors "B270" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2450  <|@ instruction r11|DWORD = MOVE input: int[-843539|0xfffffffffff320ed] <|@ <|@
      nr 2452  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2454  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2456  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2458  <|@ instruction JUMP ~[] destination: B252 -> B270 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B151" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3042  <|@ instruction r11|DWORD = MOVE input: int[-785427|0xfffffffffff403ed] <|@ <|@
      nr 3044  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3046  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3048  <|@ instruction JUMP ~[] destination: B306 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1386  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1388  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1390  <|@ instruction MOV [r15|QWORD + 668] y: -765211 size: DWORD <|@ <|@
      nr 1392  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1394  <|@ st <@st|@reference-map: [r10:0, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31]
stack: rax|DWORD 
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:31, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1432  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1434  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction MOV [r15|QWORD + 668] y: -767251 size: DWORD <|@ <|@
      nr 1438  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1440  <|@ st <@st|@reference-map: [r10:0, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35]
stack: int[0|0x0] 
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:35, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B283" 
    successors "B287" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2790  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2792  <|@ instruction r11|DWORD = MOVE input: int[-925467|0xfffffffffff1e0e5] <|@ <|@
      nr 2794  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 2796  <|@ instruction JUMP ~[] destination: B284 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" 
    successors "B115" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1174  <|@ instruction r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1176  <|@ instruction JUMP ~[] destination: B114 -> B115 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1180  <|@ instruction MOV [r15|QWORD + 668] y: -759315 size: DWORD <|@ <|@
      nr 1182  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1184  <|@ st <@st|@reference-map: [r10:0, stack:56, stack:72, stack:92, stack:96]
live-base-pointers: []
java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34]
stack: int[0|0x0] 
locals: - - - - 
java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19]
locals: stack:88|QWORD[.] r10|QWORD[.] - stack:48|QWORD[.] stack:92|DWORD 
java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28]
locals: stack:72|QWORD[.] r10|QWORD[.] - - stack:80|DWORD - 
java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32]
locals: stack:52|DWORD[.] r10|QWORD[.] stack:36|DWORD stack:48|QWORD[.] stack:56|DWORD 
java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7]
locals: - - - - 
>@ <|@ instruction DEOPT info [bci:34, 19, 28, 32, 7] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B98" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  976  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  978  <|@ instruction r11|DWORD = MOVE input: int[-683035|0xfffffffffff593e5] <|@ <|@
      nr  980  <|@ instruction rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD <|@ <|@
      nr  986  <|@ instruction JUMP ~[] destination: B94 -> B98 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B149" 
    successors "B311" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3060  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3062  <|@ instruction r11|DWORD = MOVE input: int[-782611|0xfffffffffff40eed] <|@ <|@
      nr 3064  <|@ instruction rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr 3066  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3068  <|@ instruction JUMP ~[] destination: B308 -> B311 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B347"
    from_bci -1
    to_bci -1
    predecessors "B315" 
    successors "B348" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3456  <|@ instruction stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 3458  <|@ instruction rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD <|@ <|@
      nr 3460  <|@ instruction r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD <|@ <|@
      nr 3462  <|@ instruction r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3464  <|@ instruction JUMP ~[] destination: B347 -> B348 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B348"
    from_bci -1
    to_bci -1
    predecessors "B347" 
    successors "B352" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3468  <|@ instruction r11|DWORD = MOVE input: int[-881203|0xfffffffffff28dcd] <|@ <|@
      nr 3470  <|@ instruction JUMP ~[] destination: B348 -> B352 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: getfield      #1          // java.util.regex.Pattern$Node.next:java.util.regex.Pattern$Node
     4: aload_1       
     5: iload_2       
     6: aload_3       
     7: invokevirtual #2          // java.util.regex.Pattern$Node.match:(java.util.regex.Matcher, int, java.lang.CharSequence)boolean
    10: ireturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD  <||@
  Comment 54 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 63 10 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 68 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 72 14 stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 77 16 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0]  <||@
  Comment 77 [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 {meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}}  <||@
  Comment 89 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366  <||@
  Comment 95 block B1 null  <||@
  Comment 95 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 22 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 101 24 JUMP ~[] destination: B1 -> B2  <||@
  Comment 101 block B2 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 101 26 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 28 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 117 30 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 125 32 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364  <||@
  Comment 134 block B3 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 134 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 38 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 142 40 CMP (x: r11|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7]  <||@
  Comment 142 [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 142 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 42 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363  <||@
  Comment 156 block B4 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 156 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 46 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 160 48 r9|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 165 50 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 168 52 BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142  <||@
  Comment 174 block B142 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 174 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 1450 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 186 1452 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362  <||@
  Comment 192 block B143 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 192 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 1456 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7]  <||@
  Comment 192 [rdx:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 195 1458 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 195 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 195 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 1460 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 210 1462 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 212 1464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361  <||@
  Comment 218 block B144 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 218 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 1468 stack:80|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 223 1470 rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 231 1472 stack:60|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 235 1474 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7]  <||@
  Comment 235 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, stack:64, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 242 1476 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 246 1478 rbp|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 250 1480 stack:92|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 254 1482 MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 258 1484 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 264 1486 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 269 1488 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 269 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 275 1490 BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312  <||@
  Comment 281 block B312 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 281 3098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 3100 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 281 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 287 3102 BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353  <||@
  Comment 293 block B313 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 293 3104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 3106 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 299 3108 JUMP ~[] destination: B313 -> B314  <||@
  Comment 299 block B314 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 299 3110 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 3112 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 311 3114 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 314 3116 BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349  <||@
  Comment 320 block B315 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 320 3118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 3120 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 327 3122 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7]  <||@
  Comment 327 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 338 3124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347  <||@
  Comment 344 block B316 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 344 3126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 3128 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 347 3130 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345  <||@
  Comment 353 block B317 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 353 3132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 3134 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7]  <||@
  Comment 353 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 353 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 361 3136 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343  <||@
  Comment 367 block B318 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 367 3138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 3140 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 369 3142 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321  <||@
  Comment 375 block B321 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 375 3162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 3164 r14|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 379 3166 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 379 [rdx:0, rbx:0, rsi:0, r8:0, r14:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 3168 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 390 3170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341  <||@
  Comment 396 block B322 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 396 3172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 3174 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 399 3176 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339  <||@
  Comment 405 block B323 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 405 3178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 3180 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 409 3182 r11|DWORD = MOVSX [r14|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 415 3184 CMP r11|DWORD y: 128 size: WORD  <||@
  Comment 421 3186 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337  <||@
  Comment 427 block B324 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 427 3188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 3190 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 427 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 437 3192 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 445 3194 r11|QWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 449 3196 TEST (x: r9|DWORD, y: [r14|QWORD[.] + r11|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 454 3198 BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328  <||@
  Comment 460 block B328 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 460 3246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 3248 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 467 3250 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 467 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 467 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 475 3252 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 481 3254 r14|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 487 3256 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}  <||@
  Comment 487 {meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}}  <||@
  Comment 494 3258 BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333  <||@
  Comment 500 block B329 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 500 3260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 3262 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 503 3264 CMP [rsi|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 503 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 503 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 511 3266 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332  <||@
  Comment 517 block B332 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 517 3286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 3288 MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 521 3290 rcx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 524 3292 MOV (x: [rsi|DWORD[.] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 531 3294 MOV (x: [rsi|DWORD[.] * 8 + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 539 3296 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7]  <||@
  Comment 539 [rdx:0, rbx:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |r14|DWORD  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 539 {infopoint: SAFEPOINT}  <||@
  Comment 539 11  <||@
  Comment 545 3298 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 548 3300 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 551 3302 JUMP ~[] destination: B332 -> B314  <||@
  Comment 556 block B333 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 556 3304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 3306 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 561 3308 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 566 3310 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 570 3312 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 573 3316 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 576 3318 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 579 3322 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7]  <||@
  Comment 579 7  <||@
  Comment 591 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 596 [stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 597 3324 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 599 3326 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336  <||@
  Comment 605 block B336 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 605 3348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 3350 r9|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 610 3352 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 615 3354 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 618 3356 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 621 3358 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 625 3360 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 630 3362 JUMP ~[] destination: B336 -> B314  <||@
  Comment 635 block B353 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 635 3522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 3524 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 643 3526 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 647 3528 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 652 3530 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 655 3536 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 660 3538 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7]  <||@
  Comment 660 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 660 10  <||@
  Comment 662 [stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 663 3544 JUMP ~[] destination: B353 -> B354  <||@
  Comment 663 block B354 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 663 3546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 663 3540 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 668 3542 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 673 3548 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 676 3550 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7]  <||@
  Comment 676 [rdx:0, rsi:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 676 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 683 3552 r8|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 691 3554 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 694 3556 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360  <||@
  Comment 700 block B355 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 700 3558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 3560 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 704 3562 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 708 3564 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 713 3566 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 715 3568 BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B359  <||@
  Comment 721 block B356 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 721 3570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 3572 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7]  <||@
  Comment 721 [rdx:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5          
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 721 {infopoint: SAFEPOINT}  <||@
  Comment 721 11  <||@
  Comment 727 3574 r11|DWORD = INC stack:56|DWORD size: DWORD  <||@
  Comment 735 3576 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 740 3578 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 745 3580 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 749 3582 JUMP ~[] destination: B356 -> B2  <||@
  Comment 754 block B325 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 754 3200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 3202 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 759 3204 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 764 3206 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 767 3208 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 767 [rdx:0, rsi:0, r9:0, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 775 3210 r10|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 783 3212 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 786 3214 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327  <||@
  Comment 792 block B326 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 792 3216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 3218 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 796 3220 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 800 3222 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 805 3224 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7]  <||@
  Comment 805 [rdx:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5          
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 805 {infopoint: SAFEPOINT}  <||@
  Comment 805 11  <||@
  Comment 811 3226 r11|DWORD = INC stack:56|DWORD size: DWORD  <||@
  Comment 819 3228 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 824 3230 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 829 3232 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 833 3234 JUMP ~[] destination: B326 -> B2  <||@
  Comment 838 block B349 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 838 3472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 3474 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 843 3476 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 847 3478 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 852 3480 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 860 3482 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351  <||@
  Comment 866 block B350 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 866 3484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 3486 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 871 3488 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 874 3492 r8|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 879 3494 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 884 3496 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7]  <||@
  Comment 884 9  <||@
  Comment 887 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 892 [stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 893 3502 JUMP ~[] destination: B350 -> B354  <||@
  Comment 898 block B145 null  <||@
  Comment 898 1492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 1494 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 901 1496 CMP (x: rsi|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 905 1498 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310  <||@
  Comment 911 block B146 null  <||@
  Comment 911 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 1502 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 916 1504 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7]  <||@
  Comment 916 [rdx:0, rbx:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2               |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 916 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 916 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 924 1506 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309  <||@
  Comment 930 block B147 null  <||@
  Comment 930 1508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 930 1512 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 932 1514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 938 block B149 null  <||@
  Comment 938 1526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 1528 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 942 1530 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 942 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 942 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 950 1532 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 953 1534 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308  <||@
  Comment 959 block B150 null  <||@
  Comment 959 1536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 959 1538 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 962 1540 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307  <||@
  Comment 968 block B151 null  <||@
  Comment 968 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 1544 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 972 1546 r10|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 978 1548 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 984 1550 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306  <||@
  Comment 990 block B152 null  <||@
  Comment 990 1552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 1554 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 998 1556 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 998 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 998 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1006 1558 rax|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 1010 1560 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1014 1562 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1020 1564 stack:104|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1025 1566 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1025 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1031 1568 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158  <||@
  Comment 1037 block B153 null  <||@
  Comment 1037 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 1572 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1045 1574 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B242 falseDestination: B153 -> B155  <||@
  Comment 1051 block B155 null  <||@
  Comment 1051 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 1582 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1059 1584 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157  <||@
  Comment 1065 block B157 null  <||@
  Comment 1065 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 1598 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1070 1600 JUMP ~[] destination: B157 -> B272  <||@
  Comment 1070 block B272 null  <||@
  Comment 1070 2666 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1070 2668 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1077 2670 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1077 [rdx:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1077 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1088 2672 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298  <||@
  Comment 1094 block B273 null  <||@
  Comment 1094 2674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1094 2676 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1099 2678 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1103 2680 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1103 [rcx:0, rdx:0, r10:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1111 2682 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1119 2684 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1122 2686 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297  <||@
  Comment 1128 block B274 null  <||@
  Comment 1128 2688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1128 2690 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1132 2692 r8|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1137 2694 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1140 2696 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276  <||@
  Comment 1146 block B276 null  <||@
  Comment 1146 2708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 2710 r11|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1150 2712 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1150 [rcx:0, rdx:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1158 2714 rbx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1165 2716 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1168 2718 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296  <||@
  Comment 1174 block B277 null  <||@
  Comment 1174 2720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 2722 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1178 2724 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1181 2726 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295  <||@
  Comment 1187 block B278 null  <||@
  Comment 1187 2728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 2730 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1192 2732 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1200 2734 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1200 [rcx:0, rdx:0, r9:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1200 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1208 2736 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1212 2738 rsi|DWORD = MOV [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1217 2740 rbp|DWORD = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1222 2742 MOV (x: [r11|QWORD[.] + rbx|DWORD * 4 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 1227 2744 MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1232 2746 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1236 2748 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1236 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1242 2750 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B280 falseDestination: B278 -> B288  <||@
  Comment 1248 block B280 null  <||@
  Comment 1248 2756 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1248 2758 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 1253 2760 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282  <||@
  Comment 1259 block B282 null  <||@
  Comment 1259 2772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 2774 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1264 2776 rbx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1267 2778 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1275 2780 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1277 2782 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286  <||@
  Comment 1283 block B283 null  <||@
  Comment 1283 2784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1283 2786 CMP [r11|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 1288 2788 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285  <||@
  Comment 1294 block B285 null  <||@
  Comment 1294 2798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 2800 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1298 2802 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 1302 2804 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 1306 2806 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 1310 2808 MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 1314 2810 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1318 2812 JUMP ~[] destination: B285 -> B359  <||@
  Comment 1318 block B359 null  <||@
  Comment 1318 3592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1318 3594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1323 3596 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1338 12  <||@
  Comment 1348 block B5 null  <||@
  Comment 1348 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1348 56 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1356 58 r11|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 1356 [rdx:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1364 60 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1371 62 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7]  <||@
  Comment 1371 [rdx:0, r8:0, r9:0, r10:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1371 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1371 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 1383 64 BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138  <||@
  Comment 1389 block B138 null  <||@
  Comment 1389 1404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 1406 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 1408 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 1412 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1398 1416 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 1420 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7]  <||@
  Comment 1401 7  <||@
  Comment 1415 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1420 [stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1421 1422 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1426 1424 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1426 block B139 null  <||@
  Comment 1426 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1426 1428 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1428 1430 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1434 block B141 null  <||@
  Comment 1434 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1434 1444 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1439 1446 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1454 12  <||@
  Comment 1464 block B158 null  <||@
  Comment 1464 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 1604 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1464 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1470 1606 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305  <||@
  Comment 1476 block B159 null  <||@
  Comment 1476 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 1610 stack:100|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1481 1612 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1489 1614 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 1489 [rbx:0, r8:0, r9:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1                  |2               |3                  |4          |5 
     locals:  |r9|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1489 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1497 1616 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1497 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1503 1618 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165  <||@
  Comment 1509 block B160 null  <||@
  Comment 1509 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 1622 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1517 1624 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 1523 block B162 null  <||@
  Comment 1523 1632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 1634 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1531 1636 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 1537 block B164 null  <||@
  Comment 1537 1648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 1650 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1542 1652 JUMP ~[] destination: B164 -> B272  <||@
  Comment 1547 block B6 null  <||@
  Comment 1547 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 68 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7]  <||@
  Comment 1547 [rdx:0, r9:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1547 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1550 70 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 1550 [rdx:0, rsi:0, r9:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1550 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1557 72 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1565 74 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1568 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137  <||@
  Comment 1574 block B7 null  <||@
  Comment 1574 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 80 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1578 82 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1583 84 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 86 r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1596 88 stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1601 90 rbx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7]  <||@
  Comment 1601 [rdx:0, rsi:0, r9:0, r10:0, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1609 92 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1613 94 rdi|DWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1618 96 stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1622 98 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1627 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1634 102 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 104 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1639 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1645 106 BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99  <||@
  Comment 1651 block B8 null  <||@
  Comment 1651 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1651 110 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1654 112 CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1656 114 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97  <||@
  Comment 1662 block B9 null  <||@
  Comment 1662 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1662 118 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 120 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7]  <||@
  Comment 1667 [rdx:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1667 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1675 122 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96  <||@
  Comment 1681 block B10 null  <||@
  Comment 1681 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 126 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1683 128 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 1689 block B12 null  <||@
  Comment 1689 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 144 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 1693 146 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 1693 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1693 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1700 148 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1702 150 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95  <||@
  Comment 1708 block B13 null  <||@
  Comment 1708 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1708 154 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1710 156 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94  <||@
  Comment 1716 block B14 null  <||@
  Comment 1716 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 160 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1720 162 rbx|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1725 164 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 1730 166 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93  <||@
  Comment 1736 block B15 null  <||@
  Comment 1736 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1736 170 rbp|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1744 172 rsi|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 1744 [rdx:0, rbp:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1744 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1751 174 r13|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 1755 176 stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1760 178 r14|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1766 180 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1771 182 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1771 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1777 184 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 1783 block B16 null  <||@
  Comment 1783 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 188 CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1791 190 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1797 block B18 null  <||@
  Comment 1797 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 200 CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1805 202 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1811 block B20 null  <||@
  Comment 1811 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 218 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1817 220 JUMP ~[] destination: B20 -> B68  <||@
  Comment 1817 block B68 null  <||@
  Comment 1817 696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1817 698 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1825 700 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1825 [rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1825 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1825 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1836 702 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89  <||@
  Comment 1842 block B69 null  <||@
  Comment 1842 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 706 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 708 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1850 710 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1850 [rcx:0, rdx:0, rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1850 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1858 712 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1866 714 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1869 716 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88  <||@
  Comment 1875 block B70 null  <||@
  Comment 1875 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 720 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1879 722 rcx|DWORD = MOV [rcx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1884 724 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1886 726 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1892 block B72 null  <||@
  Comment 1892 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 738 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1896 740 r10|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1896 [rdx:0, rsi:0, r8:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1896 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1904 742 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1912 744 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1915 746 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87  <||@
  Comment 1921 block B73 null  <||@
  Comment 1921 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1921 750 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1926 752 CMP (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1929 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86  <||@
  Comment 1935 block B74 null  <||@
  Comment 1935 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 758 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1940 760 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1948 762 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1948 [rdx:0, rsi:0, r8:0, r10:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1948 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1956 764 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1960 766 r11|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1965 768 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1970 770 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1975 772 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 1980 774 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1984 776 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1984 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1990 778 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B82  <||@
  Comment 1996 block B76 null  <||@
  Comment 1996 784 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1996 786 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 2000 788 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2006 block B78 null  <||@
  Comment 2006 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 800 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 2011 802 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 2017 block B81 null  <||@
  Comment 2017 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 822 MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 2021 824 rsi|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 2024 826 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2028 828 MOV (x: [r8|QWORD[.] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 2032 830 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2037 832 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2042 834 JUMP ~[] destination: B81 -> B134  <||@
  Comment 2042 block B134 null  <||@
  Comment 2042 1364 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2042 1366 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 2045 1368 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7]  <||@
  Comment 2045 [rdx:0, rsi:0, r11:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2053 1370 r11|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2061 1372 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2064 1374 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 2070 block B135 null  <||@
  Comment 2070 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2070 1378 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2074 1380 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2078 1382 MOV (x: [rsi|QWORD[.] + r11|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2083 1384 JUMP ~[] destination: B135 -> B139  <||@
  Comment 2088 block B165 null  <||@
  Comment 2088 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 1656 rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 1660 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1662 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2098 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2104 1664 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304  <||@
  Comment 2110 block B166 null  <||@
  Comment 2110 1666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2110 1668 stack:108|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 2115 1670 r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2123 1672 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2123 [rdx:0, rbx:0, rdi:0, r8:0, r9:0, r11:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2131 1674 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2131 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2137 1676 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172  <||@
  Comment 2143 block B167 null  <||@
  Comment 2143 1678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2143 1680 CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2151 1682 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169  <||@
  Comment 2157 block B169 null  <||@
  Comment 2157 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2157 1692 CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2165 1694 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 2171 block B171 null  <||@
  Comment 2171 1706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 1708 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2176 1710 JUMP ~[] destination: B171 -> B272  <||@
  Comment 2181 block B288 null  <||@
  Comment 2181 2830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2181 2832 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2185 2834 stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2189 2836 stack:100|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2193 2838 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2196 2840 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2201 2842 JUMP ~[] destination: B288 -> B289  <||@
  Comment 2201 block B289 null  <||@
  Comment 2201 2844 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2201 2846 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 2848 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2207 2850 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 2852 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7]  <||@
  Comment 2212 7  <||@
  Comment 2223 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2228 [stack:56, stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5                |6              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:100|DWORD  |stack:96|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2229 2854 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2231 2856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291  <||@
  Comment 2237 block B291 null  <||@
  Comment 2237 2876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 2878 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 2242 2880 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 2882 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 2251 2884 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7]  <||@
  Comment 2251 [r9:0, r10:0, r11:0, stack:56, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5                |6              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |stack:100|DWORD  |stack:96|DWORD 
     stack:   |rax|DWORD          |              |   |   |   |                 |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2251 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2259 2886 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2267 2888 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2270 2890 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293  <||@
  Comment 2276 block B292 null  <||@
  Comment 2276 2892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2276 2894 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2280 2896 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2284 2898 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2289 2900 JUMP ~[] destination: B292 -> B359  <||@
  Comment 2294 block B172 null  <||@
  Comment 2294 1712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2294 1714 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2294 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2300 1716 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303  <||@
  Comment 2306 block B173 null  <||@
  Comment 2306 1718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2306 1720 stack:124|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 2311 1722 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2319 1724 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2319 [rdx:0, rbx:0, rsi:0, rdi:0, r14:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2327 1726 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2327 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2334 1728 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179  <||@
  Comment 2340 block B174 null  <||@
  Comment 2340 1730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2340 1732 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2347 1734 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2353 block B176 null  <||@
  Comment 2353 1742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1744 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2360 1746 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178  <||@
  Comment 2366 block B178 null  <||@
  Comment 2366 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1762 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2371 1764 JUMP ~[] destination: B178 -> B272  <||@
  Comment 2376 block B21 null  <||@
  Comment 2376 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2376 224 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2376 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2382 226 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92  <||@
  Comment 2388 block B22 null  <||@
  Comment 2388 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2388 230 stack:104|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 2392 232 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2399 234 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 2399 [rdx:0, rbp:0, rsi:0, r8:0, r9:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2399 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2407 236 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2407 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2414 238 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 2420 block B23 null  <||@
  Comment 2420 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 242 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2428 244 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 2434 block B25 null  <||@
  Comment 2434 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2434 254 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2442 256 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 2448 block B27 null  <||@
  Comment 2448 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2448 272 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2454 274 JUMP ~[] destination: B27 -> B68  <||@
  Comment 2459 block B99 null  <||@
  Comment 2459 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 1036 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2464 1038 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 2464 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 2470 1040 BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133  <||@
  Comment 2476 block B100 null  <||@
  Comment 2476 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1044 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2482 1046 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2487 block B102 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2487 1056 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2496 1058 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 2504 1060 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7]  <||@
  Comment 2504 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2504 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2504 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 2515 1062 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127  <||@
  Comment 2521 block B103 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2521 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2521 1066 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2524 1068 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125  <||@
  Comment 2530 block B104 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2530 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2530 1072 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7]  <||@
  Comment 2530 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2530 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2530 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2538 1074 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123  <||@
  Comment 2544 block B105 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2544 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2544 1078 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2546 1080 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108  <||@
  Comment 2552 block B108 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2552 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 1100 r13|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2556 1102 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7]  <||@
  Comment 2556 [rdx:0, rsi:0, r8:0, r13:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2556 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2564 1104 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2567 1106 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121  <||@
  Comment 2573 block B109 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2573 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 1110 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2576 1112 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119  <||@
  Comment 2582 block B110 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2582 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2582 1116 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2586 1118 r13|DWORD = MOVSX [r13|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2592 1120 CMP r13|DWORD y: 128 size: WORD  <||@
  Comment 2598 1122 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117  <||@
  Comment 2604 block B111 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2604 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1126 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 2604 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 2614 1128 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2622 1130 r13|QWORD = MOVZX r13|DWORD size: DWORD  <||@
  Comment 2626 1132 TEST (x: r8|DWORD, y: [r14|QWORD[.] + r13|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 2631 1134 BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2637 block B113 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2637 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2637 1146 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2642 1148 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2647 1150 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2654 1152 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 32, 7]  <||@
  Comment 2654 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2658 1154 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2662 1156 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2664 1158 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 1162 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2670 1166 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7]  <||@
  Comment 2670 7  <||@
  Comment 2687 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2692 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2693 1168 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2695 1170 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116  <||@
  Comment 2701 block B116 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2701 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2701 1188 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2706 1190 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 2709 1192 r11|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 2717 1194 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2722 1196 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 1198 JUMP ~[] destination: B116 -> B101  <||@
  Comment 2727 block B101 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2727 1048 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2727 1050 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 2735 1052 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2738 1054 BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129  <||@
  Comment 2749 block B179 null  <||@
  Comment 2749 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2749 1768 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2749 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2756 1770 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302  <||@
  Comment 2762 block B180 null  <||@
  Comment 2762 1772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2762 1774 stack:128|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 2766 1776 r9|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2774 1778 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2774 [rdx:0, rbx:0, rsi:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2782 1780 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2782 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2788 1782 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186  <||@
  Comment 2794 block B181 null  <||@
  Comment 2794 1784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2794 1786 CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2802 1788 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183  <||@
  Comment 2808 block B183 null  <||@
  Comment 2808 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2808 1798 CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2816 1800 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185  <||@
  Comment 2822 block B185 null  <||@
  Comment 2822 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2822 1816 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2827 1818 JUMP ~[] destination: B185 -> B272  <||@
  Comment 2832 block B28 null  <||@
  Comment 2832 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2832 278 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2832 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2839 280 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91  <||@
  Comment 2845 block B29 null  <||@
  Comment 2845 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2845 284 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2853 286 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 2853 [rdx:0, rsi:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2853 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2861 288 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2861 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2867 290 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 2873 block B30 null  <||@
  Comment 2873 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2873 294 CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2881 296 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 2887 block B32 null  <||@
  Comment 2887 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 306 CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2895 308 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 2901 block B34 null  <||@
  Comment 2901 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2901 332 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2907 334 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2912 336 JUMP ~[] destination: B34 -> B68  <||@
  Comment 2917 block B82 null  <||@
  Comment 2917 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2917 838 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2921 840 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2926 842 stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2930 844 stack:120|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2935 846 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2935 block B83 null  <||@
  Comment 2935 848 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2935 850 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 852 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2941 856 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2944 858 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2949 860 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7]  <||@
  Comment 2949 7  <||@
  Comment 2959 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2964 [stack:24, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5                |6               
     locals:  |stack:120|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:104|DWORD  |stack:100|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2965 862 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2967 864 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 2973 block B85 null  <||@
  Comment 2973 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2973 884 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2978 886 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2983 888 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2988 890 JUMP ~[] destination: B85 -> B134  <||@
  Comment 2993 block B186 null  <||@
  Comment 2993 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 1822 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2993 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2999 1824 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301  <||@
  Comment 3005 block B187 null  <||@
  Comment 3005 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3005 1828 stack:132|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 3010 1830 rcx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3018 1832 rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 3018 [rcx:0, rdx:0, rbx:0, r9:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3018 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3025 1834 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3025 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3031 1836 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193  <||@
  Comment 3037 block B188 null  <||@
  Comment 3037 1838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 1840 CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3044 1842 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190  <||@
  Comment 3050 block B190 null  <||@
  Comment 3050 1850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3050 1852 CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3057 1854 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3063 block B192 null  <||@
  Comment 3063 1868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3063 1870 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3068 1872 JUMP ~[] destination: B192 -> B272  <||@
  Comment 3073 block B133 null  <||@
  Comment 3073 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3073 1342 rbx|QWORD = MOV [rbx|DWORD * 8 + 480] size: QWORD  <||@
  Comment 3081 1344 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 3085 1346 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3090 1348 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3093 1356 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7]  <||@
  Comment 3093 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 3093 10  <||@
  Comment 3095 [stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3096 1358 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3101 1360 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3106 1362 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3111 block B35 null  <||@
  Comment 3111 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3111 340 stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 3115 342 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3119 344 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3123 346 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3126 348 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3129 350 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7]  <||@
  Comment 3129 7  <||@
  Comment 3143 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3148 [stack:36, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3149 352 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3151 354 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67  <||@
  Comment 3157 block B67 null  <||@
  Comment 3157 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3157 690 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3163 692 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 3168 694 JUMP ~[] destination: B67 -> B68  <||@
  Comment 3173 block B112 null  <||@
  Comment 3173 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3173 1138 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3178 1140 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3183 1142 JUMP ~[] destination: B112 -> B134  <||@
  Comment 3188 block B129 null  <||@
  Comment 3188 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3188 1298 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3193 1300 CMP [r10|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 3202 1302 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3208 block B130 null  <||@
  Comment 3208 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3208 1306 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3213 1308 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3218 1310 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3223 1312 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3228 1314 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7]  <||@
  Comment 3228 9  <||@
  Comment 3231 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 3236 [stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3237 1316 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3242 1318 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3247 1320 JUMP ~[] destination: B130 -> B134  <||@
  Comment 3252 block B193 null  <||@
  Comment 3252 1874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3252 1876 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 3252 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 3258 1878 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300  <||@
  Comment 3264 block B194 null  <||@
  Comment 3264 1880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3264 1882 rdi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3271 1884 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 3271 [rcx:0, rdx:0, rdi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3271 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3278 1886 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3278 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3284 1888 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200  <||@
  Comment 3290 block B195 null  <||@
  Comment 3290 1890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3290 1892 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3297 1894 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 3303 block B197 null  <||@
  Comment 3303 1902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3303 1904 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3310 1906 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 3316 block B199 null  <||@
  Comment 3316 1920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3316 1922 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3321 1924 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3326 1926 JUMP ~[] destination: B199 -> B240  <||@
  Comment 3326 block B240 null  <||@
  Comment 3326 2330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3326 2332 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3328 2334 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271  <||@
  Comment 3334 block B271 null  <||@
  Comment 3334 2660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3334 2662 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3338 2664 JUMP ~[] destination: B271 -> B272  <||@
  Comment 3343 block B242 null  <||@
  Comment 3343 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3343 2348 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3351 2350 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3351 [rdx:0, rbx:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3351 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3355 2352 r8|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3363 2354 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3363 [rdx:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3363 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 3375 2356 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269  <||@
  Comment 3381 block B243 null  <||@
  Comment 3381 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3381 2360 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 3384 2362 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3384 [rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3392 2364 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3400 2366 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3403 2368 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268  <||@
  Comment 3409 block B244 null  <||@
  Comment 3409 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3409 2372 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3413 2374 r9|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3418 2376 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3421 2378 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246  <||@
  Comment 3427 block B246 null  <||@
  Comment 3427 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3427 2394 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 3430 2396 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3430 [rcx:0, rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3430 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3437 2398 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3445 2400 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 3447 2402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267  <||@
  Comment 3453 block B247 null  <||@
  Comment 3453 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3453 2406 rbp|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 3457 2408 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 3459 2410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266  <||@
  Comment 3465 block B248 null  <||@
  Comment 3465 2412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3465 2414 rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3473 2416 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3473 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3473 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3477 2418 r14|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 3485 2420 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3485 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3492 2422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254  <||@
  Comment 3498 block B254 null  <||@
  Comment 3498 2466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3498 2468 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 3498 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3505 2470 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265  <||@
  Comment 3511 block B255 null  <||@
  Comment 3511 2472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3511 2474 r11|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3519 2476 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3519 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3519 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3527 2478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264  <||@
  Comment 3533 block B256 null  <||@
  Comment 3533 2480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3533 2482 CMP r10|DWORD y: 256 size: WORD  <||@
  Comment 3539 2484 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263  <||@
  Comment 3545 block B257 null  <||@
  Comment 3545 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3545 2488 r10|QWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 3549 2490 r10|DWORD = MOVZXB [r10|QWORD + r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3555 2492 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3558 2494 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B260  <||@
  Comment 3564 block B260 null  <||@
  Comment 3564 2514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3564 2516 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3568 2518 r10|DWORD = MOV [rcx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3573 2520 r11|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3578 2522 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 3583 2524 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 3588 2526 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3592 2528 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 3592 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 3603 2530 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262  <||@
  Comment 3609 block B261 null  <||@
  Comment 3609 2532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 2534 rbp|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3612 2536 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3615 2538 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3618 2540 rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3621 2542 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3624 2544 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3627 2546 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3632 2548 JUMP ~[] destination: B261 -> B280  <||@
  Comment 3637 block B200 null  <||@
  Comment 3637 1928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3637 1930 stack:136|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 3641 1932 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3646 1934 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3650 1936 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3653 1938 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3655 1940 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3655 7  <||@
  Comment 3671 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3676 [stack:8, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:136|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3677 1942 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3679 1944 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239  <||@
  Comment 3685 block B239 null  <||@
  Comment 3685 2320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3685 2322 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3690 2324 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 3695 2326 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3699 2328 JUMP ~[] destination: B239 -> B240  <||@
  Comment 3704 block B249 null  <||@
  Comment 3704 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3704 2426 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3712 2428 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 3718 block B251 null  <||@
  Comment 3718 2442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3718 2444 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3726 2446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253  <||@
  Comment 3732 block B253 null  <||@
  Comment 3732 2460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3732 2464 JUMP ~[] destination: B253 -> B260  <||@
  Comment 3737 block B161 null  <||@
  Comment 3737 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3737 1628 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3742 1630 JUMP ~[] destination: B161 -> B220  <||@
  Comment 3742 block B220 null  <||@
  Comment 3742 2156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3742 2158 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3750 2160 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 3750 [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3750 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3757 2162 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3757 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3763 2164 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226  <||@
  Comment 3769 block B226 null  <||@
  Comment 3769 2208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3769 2210 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 3769 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3775 2212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232  <||@
  Comment 3781 block B227 null  <||@
  Comment 3781 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3781 2216 CMP stack:96|DWORD y: 256 size: WORD  <||@
  Comment 3788 2218 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231  <||@
  Comment 3794 block B228 null  <||@
  Comment 3794 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3794 2222 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3801 2224 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 3801 [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3801 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3808 2226 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 3814 block B229 null  <||@
  Comment 3814 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3814 2230 rdx|QWORD = MOVZX stack:96|DWORD size: DWORD  <||@
  Comment 3819 2232 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3824 2234 JUMP ~[] destination: B229 -> B240  <||@
  Comment 3829 block B221 null  <||@
  Comment 3829 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 2168 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3836 2170 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223  <||@
  Comment 3842 block B223 null  <||@
  Comment 3842 2182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3842 2184 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3849 2186 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225  <||@
  Comment 3855 block B225 null  <||@
  Comment 3855 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3855 2202 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3860 2204 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3864 2206 JUMP ~[] destination: B225 -> B272  <||@
  Comment 3869 block B168 null  <||@
  Comment 3869 1684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3869 1686 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3874 1688 JUMP ~[] destination: B168 -> B210  <||@
  Comment 3874 block B210 null  <||@
  Comment 3874 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3874 2054 r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3882 2056 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3882 [r8:0, r10:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3882 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3882 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3894 2058 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217  <||@
  Comment 3900 block B217 null  <||@
  Comment 3900 2126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3900 2128 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3904 2130 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3907 2132 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3909 2134 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3909 7  <||@
  Comment 3919 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3924 [stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3925 2136 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3927 2138 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3931 2140 JUMP ~[] destination: B217 -> B218  <||@
  Comment 3931 block B218 null  <||@
  Comment 3931 2142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3931 2144 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3933 2146 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234  <||@
  Comment 3939 block B234 null  <||@
  Comment 3939 2280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3939 2282 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3944 2284 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3948 2286 JUMP ~[] destination: B234 -> B272  <||@
  Comment 3953 block B17 null  <||@
  Comment 3953 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3953 194 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3957 196 JUMP ~[] destination: B17 -> B41  <||@
  Comment 3957 block B41 null  <||@
  Comment 3957 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3957 418 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3965 420 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7]  <||@
  Comment 3965 [r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4          |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3965 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3977 422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 3983 block B48 null  <||@
  Comment 3983 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3983 474 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3987 476 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3990 478 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3994 480 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7]  <||@
  Comment 3994 7  <||@
  Comment 4007 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4012 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4013 482 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4015 484 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4020 486 JUMP ~[] destination: B48 -> B49  <||@
  Comment 4020 block B49 null  <||@
  Comment 4020 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4020 490 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 4022 492 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 4028 block B51 null  <||@
  Comment 4028 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4028 506 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4033 508 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4041 510 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7]  <||@
  Comment 4041 [rdx:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |                   |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4041 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4041 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 4052 512 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 4058 block B52 null  <||@
  Comment 4058 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4058 516 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4063 518 r10|DWORD[.] = MOV [r11|QWORD[.] + 60] size: DWORD  <||@
  Comment 4067 520 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4067 [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4067 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4075 522 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4083 524 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 4086 526 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62  <||@
  Comment 4092 block B53 null  <||@
  Comment 4092 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4092 530 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4096 532 rcx|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4101 534 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 4103 536 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 4109 block B55 null  <||@
  Comment 4109 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4109 550 r10|DWORD[.] = MOV [r11|QWORD[.] + 52] size: DWORD  <||@
  Comment 4113 552 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4113 [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4121 554 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4129 556 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 4132 558 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61  <||@
  Comment 4138 block B56 null  <||@
  Comment 4138 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4138 562 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 4143 564 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 4146 566 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60  <||@
  Comment 4152 block B57 null  <||@
  Comment 4152 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4152 570 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4157 572 r8|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4165 574 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4165 [rdx:0, r8:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4165 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4173 576 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4177 578 rsi|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4182 580 rax|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4187 582 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 4192 584 MOV (x: [r10|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 4197 586 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4201 588 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 4201 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 4207 590 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 4213 block B58 null  <||@
  Comment 4213 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4213 594 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4216 596 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4221 598 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4224 600 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4227 602 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4232 604 JUMP ~[] destination: B58 -> B76  <||@
  Comment 4237 block B262 null  <||@
  Comment 4237 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4237 2552 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4241 2554 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4246 2556 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4251 2558 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 4254 2560 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4259 2564 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4264 2566 JUMP ~[] destination: B262 -> B289  <||@
  Comment 4269 block B211 null  <||@
  Comment 4269 2060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4269 2062 CMP stack:96|DWORD y: 256 size: WORD  <||@
  Comment 4276 2064 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215  <||@
  Comment 4282 block B212 null  <||@
  Comment 4282 2066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4282 2070 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4290 2072 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4290 [rsi:0, r8:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:100|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4297 2074 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214  <||@
  Comment 4303 block B213 null  <||@
  Comment 4303 2076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4303 2078 rdx|QWORD = MOVZX stack:96|DWORD size: DWORD  <||@
  Comment 4308 2080 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4313 2082 JUMP ~[] destination: B213 -> B218  <||@
  Comment 4318 block B175 null  <||@
  Comment 4318 1736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4318 1738 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4323 1740 JUMP ~[] destination: B175 -> B208  <||@
  Comment 4323 block B208 null  <||@
  Comment 4323 2024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4323 2026 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4331 2028 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4331 [rsi:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r14|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:108|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:100|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4331 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4335 2030 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4339 2032 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4341 2034 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4341 7  <||@
  Comment 4351 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4356 [stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4357 2036 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4359 2038 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235  <||@
  Comment 4365 block B235 null  <||@
  Comment 4365 2288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4365 2290 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4370 2292 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4374 2294 JUMP ~[] destination: B235 -> B272  <||@
  Comment 4379 block B42 null  <||@
  Comment 4379 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4379 426 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4384 428 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4392 430 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 4392 [rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:88|QWORD[.]  |r13|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4392 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4400 432 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 4406 block B43 null  <||@
  Comment 4406 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4406 436 CMP stack:100|DWORD y: 256 size: WORD  <||@
  Comment 4413 438 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 4419 block B44 null  <||@
  Comment 4419 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4419 442 rdx|QWORD = MOVZX stack:100|DWORD size: DWORD  <||@
  Comment 4424 444 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4429 446 JUMP ~[] destination: B44 -> B49  <||@
  Comment 4434 block B24 null  <||@
  Comment 4434 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4434 248 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4438 250 JUMP ~[] destination: B24 -> B39  <||@
  Comment 4438 block B39 null  <||@
  Comment 4438 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4438 390 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4445 392 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7]  <||@
  Comment 4445 [rbp:0, rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rbp|DWORD[.]  |r13|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:88|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4449 394 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4453 396 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4456 398 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7]  <||@
  Comment 4456 7  <||@
  Comment 4471 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4476 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4477 400 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4479 402 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65  <||@
  Comment 4485 block B65 null  <||@
  Comment 4485 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4485 674 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4488 676 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4493 678 JUMP ~[] destination: B65 -> B68  <||@
  Comment 4498 block B182 null  <||@
  Comment 4498 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4498 1792 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4503 1794 JUMP ~[] destination: B182 -> B206  <||@
  Comment 4503 block B206 null  <||@
  Comment 4503 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4503 2000 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4510 2002 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4510 [rdx:0, rsi:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4514 2004 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4518 2006 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4521 2008 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4525 2010 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4525 7  <||@
  Comment 4535 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4540 [stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4541 2012 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4543 2014 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236  <||@
  Comment 4549 block B236 null  <||@
  Comment 4549 2296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4549 2298 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4554 2300 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4558 2302 JUMP ~[] destination: B236 -> B272  <||@
  Comment 4563 block B31 null  <||@
  Comment 4563 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4563 300 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4567 302 JUMP ~[] destination: B31 -> B37  <||@
  Comment 4567 block B37 null  <||@
  Comment 4567 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4567 364 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4574 366 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7]  <||@
  Comment 4574 [rdx:0, rsi:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|DWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4574 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4578 368 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4582 370 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4585 372 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4589 374 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7]  <||@
  Comment 4589 7  <||@
  Comment 4599 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4604 [stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4605 376 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4607 378 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66  <||@
  Comment 4613 block B66 null  <||@
  Comment 4613 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4613 682 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4619 684 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4624 686 JUMP ~[] destination: B66 -> B68  <||@
  Comment 4629 block B59 null  <||@
  Comment 4629 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4629 608 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4633 610 stack:100|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4637 612 stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4641 614 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4644 616 stack:120|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4649 620 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4654 622 JUMP ~[] destination: B59 -> B83  <||@
  Comment 4659 block B189 null  <||@
  Comment 4659 1844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4659 1846 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4664 1848 JUMP ~[] destination: B189 -> B204  <||@
  Comment 4664 block B204 null  <||@
  Comment 4664 1974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4664 1976 rdx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4672 1978 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4672 [rdx:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4672 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4676 1980 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4680 1982 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4683 1984 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4687 1986 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4687 7  <||@
  Comment 4703 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4708 [stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4709 1988 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4711 1990 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237  <||@
  Comment 4717 block B237 null  <||@
  Comment 4717 2304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4717 2306 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4722 2308 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4726 2310 JUMP ~[] destination: B237 -> B272  <||@
  Comment 4731 block B36 null  <||@
  Comment 4731 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4731 358 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 4735 360 JUMP ~[] destination: B36 -> B37  <||@
  Comment 4740 block B241 null  <||@
  Comment 4740 2336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4740 2338 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4745 2340 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4749 2342 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4754 2344 JUMP ~[] destination: B241 -> B242  <||@
  Comment 4759 block B196 null  <||@
  Comment 4759 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4759 1898 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4764 1900 JUMP ~[] destination: B196 -> B202  <||@
  Comment 4764 block B202 null  <||@
  Comment 4764 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4764 1954 rsi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4771 1956 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4771 [rcx:0, rsi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rcx|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4771 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4775 1958 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4779 1960 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4783 1962 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4783 7  <||@
  Comment 4799 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4804 [stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4805 1964 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4807 1966 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238  <||@
  Comment 4813 block B238 null  <||@
  Comment 4813 2312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4813 2314 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4818 2316 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4822 2318 JUMP ~[] destination: B238 -> B272  <||@
  Comment 4827 block B201 null  <||@
  Comment 4827 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4827 1948 rcx|DWORD[.] = MOVE stack:136|DWORD[.] moveKind: DWORD  <||@
  Comment 4831 1950 JUMP ~[] destination: B201 -> B202  <||@
  Comment 4833 block B222 null  <||@
  Comment 4833 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4833 2174 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4838 2176 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4842 2178 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4847 2180 JUMP ~[] destination: B222 -> B242  <||@
  Comment 4852 block B219 null  <||@
  Comment 4852 2148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4852 2150 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 4857 2152 r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 4862 2154 JUMP ~[] destination: B219 -> B220  <||@
  Comment 4867 block B209 null  <||@
  Comment 4867 2040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4867 2042 r8|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 4872 2044 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 4877 2046 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4881 2048 r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 4886 2050 JUMP ~[] destination: B209 -> B210  <||@
  Comment 4891 block B40 null  <||@
  Comment 4891 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4891 406 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4896 408 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4900 410 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4905 412 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4910 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 4915 block B38 null  <||@
  Comment 4915 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4915 382 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4920 384 rbp|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 4924 386 JUMP ~[] destination: B38 -> B39  <||@
  Comment 4929 block B207 null  <||@
  Comment 4929 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4929 2018 r14|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD  <||@
  Comment 4934 2020 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4938 2022 JUMP ~[] destination: B207 -> B208  <||@
  Comment 4943 block B205 null  <||@
  Comment 4943 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4943 1994 rsi|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD  <||@
  Comment 4947 1996 JUMP ~[] destination: B205 -> B206  <||@
  Comment 4952 block B203 null  <||@
  Comment 4952 1968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4952 1970 r9|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 4957 1972 JUMP ~[] destination: B203 -> B204  <||@
  Comment 4962 block B293 null  <||@
  Comment 4962 2902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4962 2904 r11|DWORD = MOVE input: int[-877851|0xfffffffffff29ae5]  <||@
  Comment 4968 2906 rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4972 2908 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4977 2910 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4982 2912 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4986 2914 JUMP ~[] destination: B293 -> B294  <||@
  Comment 4986 block B294 null  <||@
  Comment 4986 2916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4986 2918 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4993 2920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5000 2922 DEOPT info [bci:73, 37, 28, 50, 7]  <||@
  Comment 5000 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5005 [rbx:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5         |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r8|DWORD  |rcx|DWORD 
     stack:   |rax|DWORD     |              |   |   |   |          |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5006 block B131 null  <||@
  Comment 5006 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5006 1324 r11|DWORD = MOVE input: int[-760339|0xfffffffffff465ed]  <||@
  Comment 5012 1326 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5017 1328 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5022 1330 JUMP ~[] destination: B131 -> B132  <||@
  Comment 5022 block B132 null  <||@
  Comment 5022 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5022 1334 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5029 1336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5036 1338 DEOPT info [bci:3, 28, 32, 7]  <||@
  Comment 5036 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5041 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4        
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |r8|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5042 block B214 null  <||@
  Comment 5042 2084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5042 2086 r11|DWORD = MOVE input: int[-814363|0xfffffffffff392e5]  <||@
  Comment 5048 2098 JUMP ~[] destination: B214 -> B216  <||@
  Comment 5048 block B216 null  <||@
  Comment 5048 2118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5048 2106 rcx|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 5052 2108 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5057 2110 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5061 2112 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5066 2114 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5071 2120 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5078 2122 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5085 2124 DEOPT info [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 5085 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5090 [rcx:0, rbx:0, r8:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rbx|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5091 block B88 null  <||@
  Comment 5091 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5091 910 r8|DWORD = MOVE input: int[-724763|0xfffffffffff4f0e5]  <||@
  Comment 5097 912 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5100 914 JUMP ~[] destination: B88 -> B90  <||@
  Comment 5100 block B90 null  <||@
  Comment 5100 924 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5100 926 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 5107 928 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5114 930 DEOPT info [bci:8, 18, 28, 32, 7]  <||@
  Comment 5114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5119 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5120 block B89 null  <||@
  Comment 5120 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5120 918 r8|DWORD = MOVE input: int[-721971|0xfffffffffff4fbcd]  <||@
  Comment 5126 920 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5131 922 JUMP ~[] destination: B89 -> B90  <||@
  Comment 5133 block B224 null  <||@
  Comment 5133 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5133 2190 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5137 2192 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5142 2194 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5147 2196 r11|DWORD = MOVE input: int[-818451|0xfffffffffff382ed]  <||@
  Comment 5153 2198 JUMP ~[] destination: B224 -> B233  <||@
  Comment 5153 block B233 null  <||@
  Comment 5153 2272 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5153 2274 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5160 2276 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5167 2278 DEOPT info [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 5167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5172 [r9:0, r10:0, stack:44, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]          |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5173 block B232 null  <||@
  Comment 5173 2260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5173 2262 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5177 2264 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5182 2266 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5187 2268 r11|DWORD = MOVE input: int[-818739|0xfffffffffff381cd]  <||@
  Comment 5193 2270 JUMP ~[] destination: B232 -> B233  <||@
  Comment 5195 block B363 null  <||@
  Comment 5195 3626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5195 3628 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5198 3630 r11|DWORD = MOVE input: int[-664603|0xfffffffffff5dbe5]  <||@
  Comment 5204 3632 JUMP ~[] destination: B363 -> B365  <||@
  Comment 5204 block B365 null  <||@
  Comment 5204 3642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5204 3644 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5211 3646 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5218 3648 DEOPT info [bci:3, 7]  <||@
  Comment 5218 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5223 [r10:0, stack:92, stack:96]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5224 block B250 null  <||@
  Comment 5224 2430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5224 2432 r11|DWORD = MOVE input: int[-843283|0xfffffffffff321ed]  <||@
  Comment 5230 2434 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5234 2436 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5239 2438 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5244 2440 JUMP ~[] destination: B250 -> B270  <||@
  Comment 5244 block B270 null  <||@
  Comment 5244 2652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5244 2654 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5251 2656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5258 2658 DEOPT info [bci:8, 18, 28, 50, 7]  <||@
  Comment 5258 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5263 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5264 block B258 null  <||@
  Comment 5264 2496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5264 2498 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5268 2500 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5273 2502 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5276 2504 MOV [r15|QWORD + 668] y: -823571 size: DWORD  <||@
  Comment 5287 2506 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5294 2508 DEOPT info [bci:21, 28, 50, 7]  <||@
  Comment 5294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5299 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5300 block B263 null  <||@
  Comment 5300 2568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5300 2570 r11|DWORD = MOVE input: int[-844051|0xfffffffffff31eed]  <||@
  Comment 5306 2572 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5310 2574 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5315 2576 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5318 2578 JUMP ~[] destination: B263 -> B270  <||@
  Comment 5320 block B264 null  <||@
  Comment 5320 2580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5320 2582 r11|DWORD = MOVE input: int[-846619|0xfffffffffff314e5]  <||@
  Comment 5326 2584 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5330 2586 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5335 2588 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5338 2590 JUMP ~[] destination: B264 -> B270  <||@
  Comment 5340 block B265 null  <||@
  Comment 5340 2592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5340 2594 r11|DWORD = MOVE input: int[-843827|0xfffffffffff31fcd]  <||@
  Comment 5346 2596 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5350 2598 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5355 2600 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5358 2602 JUMP ~[] destination: B265 -> B270  <||@
  Comment 5360 block B215 null  <||@
  Comment 5360 2100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5360 2102 r11|DWORD = MOVE input: int[-811795|0xfffffffffff39ced]  <||@
  Comment 5366 2116 JUMP ~[] destination: B215 -> B216  <||@
  Comment 5371 block B266 null  <||@
  Comment 5371 2604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5371 2606 r11|DWORD = MOVE input: int[-839451|0xfffffffffff330e5]  <||@
  Comment 5377 2608 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5381 2610 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5386 2612 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5389 2614 JUMP ~[] destination: B266 -> B270  <||@
  Comment 5394 block B267 null  <||@
  Comment 5394 2616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5394 2618 r11|DWORD = MOVE input: int[-837147|0xfffffffffff339e5]  <||@
  Comment 5400 2620 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5404 2622 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5409 2624 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5412 2626 JUMP ~[] destination: B267 -> B270  <||@
  Comment 5417 block B245 null  <||@
  Comment 5417 2380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5417 2382 r11|DWORD = MOVE input: int[-829459|0xfffffffffff357ed]  <||@
  Comment 5423 2384 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5427 2386 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5432 2388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5435 2390 JUMP ~[] destination: B245 -> B270  <||@
  Comment 5440 block B290 null  <||@
  Comment 5440 2858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5440 2860 r11|DWORD = MOVE input: int[-875283|0xfffffffffff2a4ed]  <||@
  Comment 5446 2862 rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5450 2864 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 5455 2866 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5460 2868 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5464 2870 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5469 2872 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5474 2874 JUMP ~[] destination: B290 -> B294  <||@
  Comment 5479 block B269 null  <||@
  Comment 5479 2640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5479 2642 r11|DWORD = MOVE input: int[-824883|0xfffffffffff369cd]  <||@
  Comment 5485 2644 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5489 2646 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5494 2648 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5497 2650 JUMP ~[] destination: B269 -> B270  <||@
  Comment 5502 block B198 null  <||@
  Comment 5502 1908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5502 1910 r11|DWORD = MOVE input: int[-803091|0xfffffffffff3beed]  <||@
  Comment 5508 1912 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5512 1914 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5517 1916 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5520 1918 JUMP ~[] destination: B198 -> B311  <||@
  Comment 5520 block B311 null  <||@
  Comment 5520 3090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5520 3092 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5527 3094 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5534 3096 DEOPT info [bci:21, 50, 7]  <||@
  Comment 5534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5539 [r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5540 block B96 null  <||@
  Comment 5540 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5540 1002 r11|DWORD = MOVE input: int[-679731|0xfffffffffff5a0cd]  <||@
  Comment 5546 1004 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 5550 1010 JUMP ~[] destination: B96 -> B98  <||@
  Comment 5550 block B98 null  <||@
  Comment 5550 1026 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5550 1020 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5553 1022 rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 5557 1028 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5564 1030 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5571 1032 DEOPT info [bci:21, 32, 7]  <||@
  Comment 5571 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5576 [rbx:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rbx|DWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdx|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5577 block B45 null  <||@
  Comment 5577 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5577 450 r11|DWORD = MOVE input: int[-716563|0xfffffffffff510ed]  <||@
  Comment 5583 454 JUMP ~[] destination: B45 -> B47  <||@
  Comment 5583 block B47 null  <||@
  Comment 5583 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5583 460 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5588 466 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5595 468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5602 470 DEOPT info [bci:8, 18, 28, 32, 7]  <||@
  Comment 5602 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5607 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5608 block B300 null  <||@
  Comment 5608 2974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5608 2976 r11|DWORD = MOVE input: int[-800819|0xfffffffffff3c7cd]  <||@
  Comment 5614 2978 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5616 2980 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5621 2982 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5624 2984 JUMP ~[] destination: B300 -> B311  <||@
  Comment 5626 block B301 null  <||@
  Comment 5626 2986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5626 2988 r11|DWORD = MOVE input: int[-798259|0xfffffffffff3d1cd]  <||@
  Comment 5632 2990 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5634 2992 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5639 2994 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5642 2996 JUMP ~[] destination: B301 -> B311  <||@
  Comment 5644 block B309 null  <||@
  Comment 5644 3070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5644 3072 r11|DWORD = MOVE input: int[-780083|0xfffffffffff418cd]  <||@
  Comment 5650 3074 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5652 3076 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5655 3078 JUMP ~[] destination: B309 -> B311  <||@
  Comment 5660 block B84 null  <||@
  Comment 5660 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5660 868 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 5665 870 r11|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 5670 872 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5675 874 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5680 876 MOV [r15|QWORD + 668] y: -747283 size: DWORD  <||@
  Comment 5691 878 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5698 880 DEOPT info [bci:73, 37, 28, 32, 7]  <||@
  Comment 5698 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5703 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4  |5          |6        
     locals:  |r9|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |r8|DWORD 
     stack:   |int[0|0x0]   |              |   |   |   |           |         
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5704 block B91 null  <||@
  Comment 5704 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5704 934 r11|DWORD = MOVE input: int[-690227|0xfffffffffff577cd]  <||@
  Comment 5710 938 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5715 940 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 5719 942 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 5724 950 JUMP ~[] destination: B91 -> B98  <||@
  Comment 5729 block B362 null  <||@
  Comment 5729 3618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5729 3620 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5732 3622 r11|DWORD = MOVE input: int[-770355|0xfffffffffff43ecd]  <||@
  Comment 5738 3624 JUMP ~[] destination: B362 -> B365  <||@
  Comment 5743 block B310 null  <||@
  Comment 5743 3080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5743 3082 r11|DWORD = MOVE input: int[-779539|0xfffffffffff41aed]  <||@
  Comment 5749 3084 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5751 3086 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5754 3088 JUMP ~[] destination: B310 -> B311  <||@
  Comment 5759 block B156 null  <||@
  Comment 5759 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5759 1588 r11|DWORD = MOVE input: int[-787731|0xfffffffffff3faed]  <||@
  Comment 5765 1590 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5767 1592 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5770 1594 JUMP ~[] destination: B156 -> B311  <||@
  Comment 5775 block B163 null  <||@
  Comment 5775 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5775 1640 r11|DWORD = MOVE input: int[-790291|0xfffffffffff3f0ed]  <||@
  Comment 5781 1642 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5783 1644 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5788 1646 JUMP ~[] destination: B163 -> B311  <||@
  Comment 5793 block B119 null  <||@
  Comment 5793 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5793 1218 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5798 1220 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5801 1222 JUMP ~[] destination: B119 -> B120  <||@
  Comment 5801 block B120 null  <||@
  Comment 5801 1224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5801 1226 r11|DWORD = MOVE input: int[-753435|0xfffffffffff480e5]  <||@
  Comment 5807 1228 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5812 1230 JUMP ~[] destination: B120 -> B132  <||@
  Comment 5817 block B121 null  <||@
  Comment 5817 1232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5817 1234 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5822 1236 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5825 1238 JUMP ~[] destination: B121 -> B122  <||@
  Comment 5825 block B122 null  <||@
  Comment 5825 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5825 1242 r11|DWORD = MOVE input: int[-752659|0xfffffffffff483ed]  <||@
  Comment 5831 1244 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5836 1246 JUMP ~[] destination: B122 -> B132  <||@
  Comment 5841 block B106 null  <||@
  Comment 5841 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5841 1084 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5846 1086 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5849 1088 JUMP ~[] destination: B106 -> B107  <||@
  Comment 5849 block B107 null  <||@
  Comment 5849 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5849 1092 r11|DWORD = MOVE input: int[-750355|0xfffffffffff48ced]  <||@
  Comment 5855 1094 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5860 1096 JUMP ~[] destination: B107 -> B132  <||@
  Comment 5865 block B123 null  <||@
  Comment 5865 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5865 1250 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5870 1252 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5873 1254 JUMP ~[] destination: B123 -> B124  <||@
  Comment 5873 block B124 null  <||@
  Comment 5873 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5873 1258 r11|DWORD = MOVE input: int[-750131|0xfffffffffff48dcd]  <||@
  Comment 5879 1260 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5884 1262 JUMP ~[] destination: B124 -> B132  <||@
  Comment 5889 block B125 null  <||@
  Comment 5889 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5889 1266 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5894 1268 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5897 1270 JUMP ~[] destination: B125 -> B126  <||@
  Comment 5897 block B126 null  <||@
  Comment 5897 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5897 1274 r11|DWORD = MOVE input: int[-749587|0xfffffffffff48fed]  <||@
  Comment 5903 1276 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5908 1278 JUMP ~[] destination: B126 -> B132  <||@
  Comment 5913 block B127 null  <||@
  Comment 5913 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5913 1282 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5918 1284 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5921 1286 JUMP ~[] destination: B127 -> B128  <||@
  Comment 5921 block B128 null  <||@
  Comment 5921 1288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5921 1290 r11|DWORD = MOVE input: int[-749107|0xfffffffffff491cd]  <||@
  Comment 5927 1292 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5932 1294 JUMP ~[] destination: B128 -> B132  <||@
  Comment 5937 block B60 null  <||@
  Comment 5937 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5937 626 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5942 628 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 5945 630 r11|DWORD = MOVE input: int[-713755|0xfffffffffff51be5]  <||@
  Comment 5951 632 JUMP ~[] destination: B60 -> B64  <||@
  Comment 5951 block B64 null  <||@
  Comment 5951 664 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5951 666 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5958 668 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5965 670 DEOPT info [bci:21, 28, 32, 7]  <||@
  Comment 5965 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5970 [rax:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rax|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD     |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5971 block B281 null  <||@
  Comment 5971 2762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5971 2764 r11|DWORD = MOVE input: int[-866067|0xfffffffffff2c8ed]  <||@
  Comment 5977 2766 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5981 2768 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5986 2770 JUMP ~[] destination: B281 -> B287  <||@
  Comment 5986 block B287 null  <||@
  Comment 5986 2822 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5986 2824 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5993 2826 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6000 2828 DEOPT info [bci:63, 37, 28, 50, 7]  <||@
  Comment 6000 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6005 [rdx:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4         |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:48|QWORD[.]  |r8|DWORD  |rbp|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6006 block B26 null  <||@
  Comment 6006 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6006 260 r11|DWORD = MOVE input: int[-689939|0xfffffffffff578ed]  <||@
  Comment 6012 262 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6016 268 JUMP ~[] destination: B26 -> B98  <||@
  Comment 6021 block B334 null  <||@
  Comment 6021 3328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6021 3330 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 6026 3332 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6030 3334 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6035 3336 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6040 3338 JUMP ~[] destination: B334 -> B335  <||@
  Comment 6040 block B335 null  <||@
  Comment 6040 3340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6040 3342 MOV [r15|QWORD + 668] y: -900115 size: DWORD  <||@
  Comment 6051 3344 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6058 3346 DEOPT info [bci:34, 19, 28, 50, 7]  <||@
  Comment 6058 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6063 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4         
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |stack:48|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6064 block B92 null  <||@
  Comment 6064 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6064 954 r11|DWORD = MOVE input: int[-687667|0xfffffffffff581cd]  <||@
  Comment 6070 956 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6074 962 JUMP ~[] destination: B92 -> B98  <||@
  Comment 6079 block B177 null  <||@
  Comment 6079 1748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6079 1750 r11|DWORD = MOVE input: int[-795411|0xfffffffffff3dced]  <||@
  Comment 6085 1752 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6090 1754 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6093 1756 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6095 1758 JUMP ~[] destination: B177 -> B311  <||@
  Comment 6100 block B296 null  <||@
  Comment 6100 2934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6100 2936 r11|DWORD = MOVE input: int[-860443|0xfffffffffff2dee5]  <||@
  Comment 6106 2938 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6110 2940 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6115 2942 JUMP ~[] destination: B296 -> B299  <||@
  Comment 6115 block B299 null  <||@
  Comment 6115 2966 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6115 2968 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 6122 2970 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6129 2972 DEOPT info [bci:8, 18, 28, 50, 7]  <||@
  Comment 6129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6134 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6135 block B170 null  <||@
  Comment 6135 1696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6135 1698 r11|DWORD = MOVE input: int[-792851|0xfffffffffff3e6ed]  <||@
  Comment 6141 1700 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6144 1702 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6146 1704 JUMP ~[] destination: B170 -> B311  <||@
  Comment 6151 block B303 null  <||@
  Comment 6151 3010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6151 3012 r11|DWORD = MOVE input: int[-793139|0xfffffffffff3e5cd]  <||@
  Comment 6157 3014 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6160 3016 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6162 3018 JUMP ~[] destination: B303 -> B311  <||@
  Comment 6167 block B297 null  <||@
  Comment 6167 2944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6167 2946 r11|DWORD = MOVE input: int[-851227|0xfffffffffff302e5]  <||@
  Comment 6173 2948 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6177 2950 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6182 2952 JUMP ~[] destination: B297 -> B299  <||@
  Comment 6184 block B304 null  <||@
  Comment 6184 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6184 3022 r11|DWORD = MOVE input: int[-790579|0xfffffffffff3efcd]  <||@
  Comment 6190 3024 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6193 3026 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6195 3028 JUMP ~[] destination: B304 -> B311  <||@
  Comment 6200 block B275 null  <||@
  Comment 6200 2698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6200 2700 r11|DWORD = MOVE input: int[-853011|0xfffffffffff2fbed]  <||@
  Comment 6206 2702 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6210 2704 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6215 2706 JUMP ~[] destination: B275 -> B299  <||@
  Comment 6217 block B77 null  <||@
  Comment 6217 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6217 792 r8|DWORD = MOVE input: int[-739603|0xfffffffffff4b6ed]  <||@
  Comment 6223 796 JUMP ~[] destination: B77 -> B80  <||@
  Comment 6223 block B80 null  <||@
  Comment 6223 812 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6223 794 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6226 814 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 6233 816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6240 818 DEOPT info [bci:63, 37, 28, 32, 7]  <||@
  Comment 6240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6245 [rsi:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r14|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6246 block B63 null  <||@
  Comment 6246 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6246 656 r11|DWORD = MOVE input: int[-698931|0xfffffffffff555cd]  <||@
  Comment 6252 658 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6257 660 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6262 662 JUMP ~[] destination: B63 -> B64  <||@
  Comment 6267 block B62 null  <||@
  Comment 6267 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6267 646 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6272 648 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6275 650 r11|DWORD = MOVE input: int[-701723|0xfffffffffff54ae5]  <||@
  Comment 6281 652 JUMP ~[] destination: B62 -> B64  <||@
  Comment 6286 block B319 null  <||@
  Comment 6286 3144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6286 3146 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6291 3148 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6295 3150 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6300 3152 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6303 3154 JUMP ~[] destination: B319 -> B320  <||@
  Comment 6303 block B320 null  <||@
  Comment 6303 3156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6303 3158 r11|DWORD = MOVE input: int[-882451|0xfffffffffff288ed]  <||@
  Comment 6309 3160 JUMP ~[] destination: B320 -> B352  <||@
  Comment 6309 block B352 null  <||@
  Comment 6309 3514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6309 3516 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 6316 3518 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6323 3520 DEOPT info [bci:3, 28, 50, 7]  <||@
  Comment 6323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6328 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6329 block B71 null  <||@
  Comment 6329 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6329 730 r8|DWORD = MOVE input: int[-726547|0xfffffffffff4e9ed]  <||@
  Comment 6335 732 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6338 734 JUMP ~[] destination: B71 -> B90  <||@
  Comment 6343 block B86 null  <||@
  Comment 6343 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6343 894 r8|DWORD = MOVE input: int[-736283|0xfffffffffff4c3e5]  <||@
  Comment 6349 896 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6352 898 JUMP ~[] destination: B86 -> B90  <||@
  Comment 6357 block B361 null  <||@
  Comment 6357 3610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6357 3612 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6360 3614 r11|DWORD = MOVE input: int[-776219|0xfffffffffff427e5]  <||@
  Comment 6366 3616 JUMP ~[] destination: B361 -> B365  <||@
  Comment 6371 block B230 null  <||@
  Comment 6371 2236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6371 2238 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6375 2240 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6380 2242 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6385 2244 r11|DWORD = MOVE input: int[-821531|0xfffffffffff376e5]  <||@
  Comment 6391 2246 JUMP ~[] destination: B230 -> B233  <||@
  Comment 6396 block B184 null  <||@
  Comment 6396 1802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6396 1804 r11|DWORD = MOVE input: int[-797971|0xfffffffffff3d2ed]  <||@
  Comment 6402 1806 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6404 1808 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6409 1810 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6412 1812 JUMP ~[] destination: B184 -> B311  <||@
  Comment 6417 block B307 null  <||@
  Comment 6417 3050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6417 3052 r11|DWORD = MOVE input: int[-783387|0xfffffffffff40be5]  <||@
  Comment 6423 3054 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6425 3056 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6428 3058 JUMP ~[] destination: B307 -> B311  <||@
  Comment 6433 block B93 null  <||@
  Comment 6433 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6433 966 r11|DWORD = MOVE input: int[-685075|0xfffffffffff58bed]  <||@
  Comment 6439 968 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6443 974 JUMP ~[] destination: B93 -> B98  <||@
  Comment 6448 block B339 null  <||@
  Comment 6448 3382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6448 3384 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6453 3386 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6457 3388 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6462 3390 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6465 3392 JUMP ~[] destination: B339 -> B340  <||@
  Comment 6465 block B340 null  <||@
  Comment 6465 3394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6465 3396 r11|DWORD = MOVE input: int[-885531|0xfffffffffff27ce5]  <||@
  Comment 6471 3398 JUMP ~[] destination: B340 -> B352  <||@
  Comment 6476 block B95 null  <||@
  Comment 6476 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6476 990 r11|DWORD = MOVE input: int[-682259|0xfffffffffff596ed]  <||@
  Comment 6482 992 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6486 998 JUMP ~[] destination: B95 -> B98  <||@
  Comment 6491 block B268 null  <||@
  Comment 6491 2628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6491 2630 r11|DWORD = MOVE input: int[-827675|0xfffffffffff35ee5]  <||@
  Comment 6497 2632 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6501 2634 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6506 2636 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6509 2638 JUMP ~[] destination: B268 -> B270  <||@
  Comment 6514 block B148 null  <||@
  Comment 6514 1516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6514 1518 r11|DWORD = MOVE input: int[-780307|0xfffffffffff417ed]  <||@
  Comment 6520 1520 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6522 1522 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6525 1524 JUMP ~[] destination: B148 -> B311  <||@
  Comment 6530 block B341 null  <||@
  Comment 6530 3400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6530 3402 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6535 3404 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6539 3406 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6544 3408 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6547 3410 JUMP ~[] destination: B341 -> B342  <||@
  Comment 6547 block B342 null  <||@
  Comment 6547 3412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6547 3414 r11|DWORD = MOVE input: int[-884755|0xfffffffffff27fed]  <||@
  Comment 6553 3416 JUMP ~[] destination: B342 -> B352  <||@
  Comment 6558 block B97 null  <||@
  Comment 6558 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6558 1014 r11|DWORD = MOVE input: int[-679187|0xfffffffffff5a2ed]  <||@
  Comment 6564 1016 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6568 1018 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 6573 1024 JUMP ~[] destination: B97 -> B98  <||@
  Comment 6578 block B33 null  <||@
  Comment 6578 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6578 312 r11|DWORD = MOVE input: int[-692499|0xfffffffffff56eed]  <||@
  Comment 6584 316 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 6589 318 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6593 320 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 6598 322 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 6602 328 JUMP ~[] destination: B33 -> B98  <||@
  Comment 6607 block B345 null  <||@
  Comment 6607 3436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6607 3438 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6612 3440 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6616 3442 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6621 3444 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6624 3446 JUMP ~[] destination: B345 -> B346  <||@
  Comment 6624 block B346 null  <||@
  Comment 6624 3448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6624 3450 r11|DWORD = MOVE input: int[-881683|0xfffffffffff28bed]  <||@
  Comment 6630 3452 JUMP ~[] destination: B346 -> B352  <||@
  Comment 6635 block B302 null  <||@
  Comment 6635 2998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6635 3000 r11|DWORD = MOVE input: int[-795699|0xfffffffffff3dbcd]  <||@
  Comment 6641 3002 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6643 3004 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6648 3006 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6651 3008 JUMP ~[] destination: B302 -> B311  <||@
  Comment 6656 block B305 null  <||@
  Comment 6656 3030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6656 3032 r11|DWORD = MOVE input: int[-788019|0xfffffffffff3f9cd]  <||@
  Comment 6662 3034 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6664 3036 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6669 3038 JUMP ~[] destination: B305 -> B311  <||@
  Comment 6674 block B330 null  <||@
  Comment 6674 3268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6674 3270 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6679 3272 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6683 3274 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6688 3276 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6691 3278 JUMP ~[] destination: B330 -> B331  <||@
  Comment 6691 block B331 null  <||@
  Comment 6691 3280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6691 3282 r11|DWORD = MOVE input: int[-927771|0xfffffffffff1d7e5]  <||@
  Comment 6697 3284 JUMP ~[] destination: B331 -> B352  <||@
  Comment 6702 block B286 null  <||@
  Comment 6702 2814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6702 2816 r11|DWORD = MOVE input: int[-873243|0xfffffffffff2ace5]  <||@
  Comment 6708 2818 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6712 2820 JUMP ~[] destination: B286 -> B287  <||@
  Comment 6717 block B19 null  <||@
  Comment 6717 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6717 206 r11|DWORD = MOVE input: int[-687379|0xfffffffffff582ed]  <||@
  Comment 6723 208 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6727 214 JUMP ~[] destination: B19 -> B98  <||@
  Comment 6732 block B364 null  <||@
  Comment 6732 3634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6732 3636 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6735 3638 r11|DWORD = MOVE input: int[-661779|0xfffffffffff5e6ed]  <||@
  Comment 6741 3640 JUMP ~[] destination: B364 -> B365  <||@
  Comment 6746 block B295 null  <||@
  Comment 6746 2924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6746 2926 r11|DWORD = MOVE input: int[-862747|0xfffffffffff2d5e5]  <||@
  Comment 6752 2928 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6756 2930 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6761 2932 JUMP ~[] destination: B295 -> B299  <||@
  Comment 6766 block B351 null  <||@
  Comment 6766 3504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6766 3506 r11|DWORD = MOVE input: int[-901139|0xfffffffffff23fed]  <||@
  Comment 6772 3508 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6774 3510 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6777 3512 JUMP ~[] destination: B351 -> B352  <||@
  Comment 6782 block B337 null  <||@
  Comment 6782 3364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6782 3366 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6787 3368 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6791 3370 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6796 3372 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6799 3374 JUMP ~[] destination: B337 -> B338  <||@
  Comment 6799 block B338 null  <||@
  Comment 6799 3376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6799 3378 r11|DWORD = MOVE input: int[-887571|0xfffffffffff274ed]  <||@
  Comment 6805 3380 JUMP ~[] destination: B338 -> B352  <||@
  Comment 6810 block B79 null  <||@
  Comment 6810 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6810 806 r8|DWORD = MOVE input: int[-914459|0xfffffffffff20be5]  <||@
  Comment 6816 810 JUMP ~[] destination: B79 -> B80  <||@
  Comment 6821 block B54 null  <||@
  Comment 6821 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6821 540 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6826 542 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6829 544 r11|DWORD = MOVE input: int[-703507|0xfffffffffff543ed]  <||@
  Comment 6835 546 JUMP ~[] destination: B54 -> B64  <||@
  Comment 6840 block B61 null  <||@
  Comment 6840 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6840 636 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6845 638 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6848 640 r11|DWORD = MOVE input: int[-711451|0xfffffffffff524e5]  <||@
  Comment 6854 642 JUMP ~[] destination: B61 -> B64  <||@
  Comment 6859 block B50 null  <||@
  Comment 6859 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6859 496 r11|DWORD = MOVE input: int[-697619|0xfffffffffff55aed]  <||@
  Comment 6865 498 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6870 500 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6875 502 JUMP ~[] destination: B50 -> B64  <||@
  Comment 6880 block B231 null  <||@
  Comment 6880 2248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6880 2250 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6884 2252 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6889 2254 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6894 2256 r11|DWORD = MOVE input: int[-818963|0xfffffffffff380ed]  <||@
  Comment 6900 2258 JUMP ~[] destination: B231 -> B233  <||@
  Comment 6905 block B343 null  <||@
  Comment 6905 3418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6905 3420 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6910 3422 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6914 3424 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6919 3426 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6922 3428 JUMP ~[] destination: B343 -> B344  <||@
  Comment 6922 block B344 null  <||@
  Comment 6922 3430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6922 3432 r11|DWORD = MOVE input: int[-882227|0xfffffffffff289cd]  <||@
  Comment 6928 3434 JUMP ~[] destination: B344 -> B352  <||@
  Comment 6933 block B46 null  <||@
  Comment 6933 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6933 458 r11|DWORD = MOVE input: int[-719131|0xfffffffffff506e5]  <||@
  Comment 6939 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 6944 block B327 null  <||@
  Comment 6944 3236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6944 3238 r11|DWORD = MOVE input: int[-891931|0xfffffffffff263e5]  <||@
  Comment 6950 3240 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6954 3242 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6957 3244 JUMP ~[] destination: B327 -> B352  <||@
  Comment 6962 block B11 null  <||@
  Comment 6962 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6962 132 r11|DWORD = MOVE input: int[-679955|0xfffffffffff59fed]  <||@
  Comment 6968 134 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6972 140 JUMP ~[] destination: B11 -> B98  <||@
  Comment 6977 block B137 null  <||@
  Comment 6977 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6977 1398 r11|DWORD = MOVE input: int[-675867|0xfffffffffff5afe5]  <||@
  Comment 6983 1400 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6986 1402 JUMP ~[] destination: B137 -> B365  <||@
  Comment 6991 block B117 null  <||@
  Comment 6991 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6991 1202 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 6996 1204 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6999 1206 JUMP ~[] destination: B117 -> B118  <||@
  Comment 6999 block B118 null  <||@
  Comment 6999 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6999 1210 r11|DWORD = MOVE input: int[-755475|0xfffffffffff478ed]  <||@
  Comment 7005 1212 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7010 1214 JUMP ~[] destination: B118 -> B132  <||@
  Comment 7015 block B360 null  <||@
  Comment 7015 3598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7015 3600 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7019 3602 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7022 3604 MOV [r15|QWORD + 668] y: -905499 size: DWORD  <||@
  Comment 7033 3606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7040 3608 DEOPT info [bci:31, 50, 7]  <||@
  Comment 7040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7045 [r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7046 block B191 null  <||@
  Comment 7046 1856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7046 1858 r11|DWORD = MOVE input: int[-800531|0xfffffffffff3c8ed]  <||@
  Comment 7052 1860 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7054 1862 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7059 1864 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7062 1866 JUMP ~[] destination: B191 -> B311  <||@
  Comment 7067 block B298 null  <||@
  Comment 7067 2954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7067 2956 r11|DWORD = MOVE input: int[-848435|0xfffffffffff30dcd]  <||@
  Comment 7073 2958 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7077 2960 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7082 2962 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7087 2964 JUMP ~[] destination: B298 -> B299  <||@
  Comment 7092 block B366 null  <||@
  Comment 7092 3650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7092 3652 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7095 3654 MOV [r15|QWORD + 668] y: -660787 size: DWORD  <||@
  Comment 7106 3656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7113 3658 DEOPT info [bci:0]  <||@
  Comment 7113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7118 [rsi:0, r10:0, stack:96]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2               |3                 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]   <||@
  Comment 7119 block B87 null  <||@
  Comment 7119 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7119 902 r8|DWORD = MOVE input: int[-733979|0xfffffffffff4cce5]  <||@
  Comment 7125 904 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7128 906 JUMP ~[] destination: B87 -> B90  <||@
  Comment 7133 block B252 null  <||@
  Comment 7133 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7133 2450 r11|DWORD = MOVE input: int[-843539|0xfffffffffff320ed]  <||@
  Comment 7139 2452 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7143 2454 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7148 2456 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7153 2458 JUMP ~[] destination: B252 -> B270  <||@
  Comment 7158 block B306 null  <||@
  Comment 7158 3040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7158 3042 r11|DWORD = MOVE input: int[-785427|0xfffffffffff403ed]  <||@
  Comment 7164 3044 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7166 3046 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7169 3048 JUMP ~[] destination: B306 -> B311  <||@
  Comment 7174 block B136 null  <||@
  Comment 7174 1386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7174 1388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7177 1390 MOV [r15|QWORD + 668] y: -765211 size: DWORD  <||@
  Comment 7188 1392 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7195 1394 DEOPT info [bci:31, 32, 7]  <||@
  Comment 7195 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7200 [r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7201 block B140 null  <||@
  Comment 7201 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7201 1434 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7204 1436 MOV [r15|QWORD + 668] y: -767251 size: DWORD  <||@
  Comment 7215 1438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7222 1440 DEOPT info [bci:35, 7]  <||@
  Comment 7222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7227 [r10:0, stack:92, stack:96]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7228 block B284 null  <||@
  Comment 7228 2790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7228 2792 r11|DWORD = MOVE input: int[-925467|0xfffffffffff1e0e5]  <||@
  Comment 7234 2794 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7238 2796 JUMP ~[] destination: B284 -> B287  <||@
  Comment 7243 block B114 null  <||@
  Comment 7243 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7243 1174 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7248 1176 JUMP ~[] destination: B114 -> B115  <||@
  Comment 7248 block B115 null  <||@
  Comment 7248 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7248 1180 MOV [r15|QWORD + 668] y: -759315 size: DWORD  <||@
  Comment 7259 1182 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7266 1184 DEOPT info [bci:34, 19, 28, 32, 7]  <||@
  Comment 7266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7271 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7272 block B94 null  <||@
  Comment 7272 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7272 978 r11|DWORD = MOVE input: int[-683035|0xfffffffffff593e5]  <||@
  Comment 7278 980 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 7282 986 JUMP ~[] destination: B94 -> B98  <||@
  Comment 7287 block B308 null  <||@
  Comment 7287 3060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7287 3062 r11|DWORD = MOVE input: int[-782611|0xfffffffffff40eed]  <||@
  Comment 7293 3064 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7295 3066 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7298 3068 JUMP ~[] destination: B308 -> B311  <||@
  Comment 7303 block B347 null  <||@
  Comment 7303 3454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7303 3456 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 7308 3458 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7312 3460 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7317 3462 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7320 3464 JUMP ~[] destination: B347 -> B348  <||@
  Comment 7320 block B348 null  <||@
  Comment 7320 3466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7320 3468 r11|DWORD = MOVE input: int[-881203|0xfffffffffff28dcd]  <||@
  Comment 7326 3470 JUMP ~[] destination: B348 -> B352  <||@
  Comment 7331 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 7331 4  <||@
  Comment 7337 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 7337 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-4938[java.util.regex.Pattern$BranchConn.match(Matcher, int, CharSequence)]"
  method "HotSpotCompilation-4938[java.util.regex.Pattern$BranchConn.match(Matcher, int, CharSequence)]"
  date 1527005190100
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 106e487e0 448b560849c1e203493bc20f856fd69bff900f1f80000000000f1f800000000089842400c0feff4881ec880000004889ac24800000004889542470894c246c4c89442460448b560c448954245c42813cd508000000f2a600f80f85551b000041bb000000006666660f1f84000000000044895c2458428b34d510000000413bf30f8ec6190000428b34d514000000443b1cf50c0000000f83af13000048c1e603468b4c9e104585c90f849604000042813ccd08000000ed9f00f80f85a11500008b723c8b1cf50c000000428b3ccd100000003bdf0f86fb17000044894c2440428b1ccd0c000000895c24548b04dd0800000048c1e6038b6cbe10896c2434894cbe108bfb48c1e70348897c244881f89d2101f80f846902000081f88e2001f80f855601000041ba000000000f1f4400008b34dd14000000413bf20f8e060200008b34dd1c000000813cf508000000482001f80f852f1b00003b4a100f8d6e18000041817808da0200f80f858a19000085c90f8c17170000458b700c468b1cf50c000000443bd90f8ef6170000443bd90f869b17000049c1e603450fbf5c4e10664181fb80000f83d318000049be38ba1ac006000000448b0cf510000000450fb7db47854c9e100f84260100008b34f50c000000448b1cf508000000458bca41ffc1448bf141ffc64181fb299f00f80f85380000008b7234833cf50c000000020f820d180000448972208b4a1c890cf510000000448934f51400000085050566a4fd458bd1418bcee904ffffff44894c242c448954244448c1e6034c8bd2418bce4d8bf048b8ffffffffffffffff6690e8acd89bff9085c00f8428150000448b4c242c488b5424708b4a20458bd18b5c24544c8b442460e9b5feffff488b1cc5e0010000488b4340488b7424484c8bd24c8b442460ffd090448b4c2440488b5424708b723c8b0cf50c000000468b04cd10000000413bc80f86ab1800008b6c243448c1e60342896c861085c00f855502000085054f65a4fd448b5c245841ffc3448b54245c4c8b4424608b4c246ce97efdffff4489542444448b4c24408b723c448b04f50c000000468b14cd10000000453bc20f86081800008b6c243448c1e60342896c96108505fb64a4fd448b5c245841ffc3448b54245c4c8b4424608b4c246ce92afdffff44895424448b6c2434448b4c2440833cdd10000000000f850c170000488b7424484c8bd2448b4424444c8b4c2460666690e844d59bff90e915ffffff8b72103b74246c0f8ee01200004c8b44246041817808da0200f80f856a12000085c90f8cc8150000418b700c448b14f50c000000443bd10f8eb8180000443bd10f864915000048c1e603440fbf544e10664181fa00d80f8318180000448b1cdd10000000428b3cdd08000000410fb7c289442444448be941ffc544896c242881ff582101f80f85ab010000423b04dd100000000f8cf4080000423b04dd140000000f8f56120000be010000008b14dd0c000000813cd508000000072001f80f85551700004c8b542470418b4a3c448b04cd0c000000448b1cd510000000453bc30f86af13000048c1e103468b4499104585c00f8cbe130000458b5a34468b0cdd0c0000008b1cd514000000443bcb0f863e1300008bfbffc7443bcf0f86b7150000448b6c2428448b0cd50c000000428b04cd0800000049c1e303418b74bb10418b6c9b104589449b1045896cbb1048c1e20381f8ab9f00f80f85a503000041837a18010f8468120000448b4c24408b590c428b3ccd100000003bdf0f862b15000041837b0c020f822e1700008b6c243445896a20418b721c4189731045896b14896cb910b801000000488bac24800000004881c4880000008505e662a4fdc5f877c3428b34d518000000448b1cf50c000000458bcb49c1e10342813cdd08000000ed9f00f80f849e000000498bf14c8bda448bc9498bd848b8ffffffffffffffff0f1f4000e874d59bff90488b54247085c00f8487160000b801000000488bac24800000004881c48800000085057262a4fdc5f877c381ff9d2101f80f853c14000044895c242c468b04dd10000000428b34c50800000081fe582101f80f8543020000423b04c5100000000f8ca6080000423b04c5140000000f8f8e100000be01000000e923feffff8b723c8b0cf50c000000468b04dd10000000413bc80f861b1500008b4c246c44895c24544c894c2448468b14dd0c0000004489542444428b1cd50800000048c1e603428b7c8610897c244042894c8610418bc248c1e003488944243881fb9d2101f80f85280300008b72103bf10f8e201300004c8b44246041817808da0200f80f85130f000085c90f8c99140000418b700c8b1cf50c0000003bd90f8ea01200003bd90f86b415000048c1e6030fbf5c4e106681fb00d80f8359120000428b2cd5100000008b34ed08000000440fb7eb44896c2434448bf141ffc6448974243081fe582101f80f8551020000443b2ced100000000f8c6c080000443b2ced140000000f8f2a13000041bb01000000428b34d50c000000813cf508000000072001f80f85ce0c0000488b5424708b4a3c448b04cd0c000000448b14f510000000453bc20f86900c000048c1e103428b4c911085c90f8c55110000448b4234468b14c50c000000448b0cf514000000453bd10f864e140000418bd9ffc3443bd30f8638110000448b742430448b14f50c000000428b3cd50800000049c1e003458b5c9810438b44881043894c8810458974981048c1e60381ffab9f00f80f8599030000837a18010f84731000004183780c020f82b9120000448972208b721c4189701045897014b801000000448b5c24548b723c448b14f50c000000468b1cdd10000000453bd30f86f01300008b7c244048c1e60342897c9e10e96afdffff488b7c2460488b54247081fe9d2101f80f85ea0f00004489442424468b34c510000000428b34f50800000081fe582101f80f8597000000423b04f5100000000f8cb0060000423b04f5140000000f8f7c0f0000be01000000e9a9fbffff49c1e10389742430896c242c498bf14889542438498bd2418bcd4c8b44246048b8ffffffffffffffff90e84cd29bff9085c00f84830c0000448b4c24404c8b542470458b5a3c468b04dd0c000000428b0ccd10000000443bc10f867e0a00008b7c243449c1e30341897c8b10e930fcffff81fe9d2101f80f85050f00004489742414428b34f510000000448b0cf5080000004181f9582101f80f85990100003b04f5100000000f8cad0700003b04f5140000000f8f810e0000be01000000e9e6faffff81fe9d2101f80f855c0e0000896c24288b34ed10000000448b34f5080000004181fe582101f80f859c010000443b2cf5100000000f8cd0070000443b2cf5140000000f8fe60d000041bb01000000e97efdffff4c8b44246081fb8e2001f80f855502000041bb00000000e9f0000000660f1f840000000000428b34d51c000000813cf508000000482001f80f85400d00003b4a100f8d1f0d000041817808da0200f80f85f90c000085c90f8cd90c0000458b680c468b34ed0c000000443bf10f8eac0c0000443bf10f868b0c000049c1e503450fbf6c4d10664181fd80000f832311000049be38ba1ac006000000448b04f510000000450fb7ed478544ae100f841802000044895c24344c8b4424608b34f50c000000418504f448c1e603ffc14c8bea4d8bf048b8ffffffffffffffff0f1f8000000000e87cd09bff9085c00f84be110000488b5424708b4a20448b5c243441ffc3448b5424444c8b442460428b34d514000000413bf30f8f08ffffffe9b70100004181f99d2101f80f85210f000089742410448b0cf510000000428b0ccd0800000081f9582101f80f85c7000000423b04cd100000000f8c9a060000423b04cd140000000f8ff60d0000be01000000e91ef9ffff4181fe9d2101f80f852b0b0000448b14f510000000428b0cd50800000081f9582101f80f85ee000000463b2cd5100000000f8c8c060000463b2cd5140000000f8f5d0e000041bb01000000448b542444e9b4fbffff49c1e20344895c242c894424284889742418498bf24c8bd2418bce4c8b44246048b8ffffffffffffffffe86ccf9bff9085c00f847f0a0000b801000000448b5c2454488b542470e949fcffff81f99d2101f80f853d0a000044894c240c428b0ccd100000008b3ccd0800000081ff582101f80f85d70000003b04cd100000000f8c490600003b04cd140000000f8f8f0f0000be01000000e92df8ffff488b1cdde0010000488b4340488b7424384c8bd2ffd090448b5c2454488b542470e9d3fbffff89742424895c242c49c1e203498bf2418bd548b8ffffffffffffffff0f1f4000e8b4ce9bff9085c00f842606000041bb01000000448b542444e9b4faffffb800000000448b5c2454e986fbffff44895c243442833cd510000000000f8506070000488b742438488b542470448b4424344c8b4c2460666690e81ccc9bff90448b5c2454488b542470e946fbffff81ff9d2101f80f85280900008b3ccd100000008b2cfd0800000081fd582101f80f855b0100003b04fd100000000f8cb00500003b04fd140000000f8f8a080000be01000000448954243085f60f847e0500008b5c2454e91ff7ffff448b1cdd14000000438504dc448b04dd0c00000042813cc508000000072001f80f85320800008b723c448b0cf50c000000428b0cc510000000443bc90f860a0c000048c1e603448b4c8e104585c90f8cc60700008b4a348b1ccd0c000000428b3cc5140000003bdf0f86950700008befffc53bdd0f8672070000428b1cc50c000000418504dc468b34dd080000004181fe582101f80f84ce0000004181fe122101f80f8525070000468b1cdd10000000423b04dd0c0000000f83fb060000664181fa00010f83db060000450fb7d2470fb654da104585d20f84a406000048c1e103448b54a910448b5cb91044894cb91044896ca91049c1e003813cdd08000000ab9f00f80f8574020000418beb4c8bd9498bd0488bce418bf2458bc14c8b542470e9abf6ffff894c2408448954243048c1e703488bf78bd048b8ffffffffffffffff660f1f440000e8a4cc9bff9085c00f8476040000be01000000448b6c24288b442444e986feffff423b04dd100000000f8ce2050000423b04dd140000000f8f490d0000e953ffffff4489542430428b34dd140000008b14f50800000081fa582101f80f843c00000081fa122101f80f857005000066817c243000010f830e0c00008b34f5100000003b04f50c0000000f83fd0900000fb75424300fb674f210e909feffff3b04f5100000000f8cdf0300003b04f5140000000f8ffe040000be010000008b5c2454e911f5ffff4489542430468b14c51400000042813cd508000000122101f80f847101000049c1e203498bf28bd048b8ffffffffffffffffe8accb9bff908bf08b44244485f60f8491030000be010000008b5c2454e9bdf4ffff895c242c468b04d51400000042813cc508000000122101f80f848c01000049c1e003498bf08b54243448b8ffffffffffffffff666690e854cb9bff908bf0448b6c243485f60f840f0b0000448b542444428b14d50c000000813cd508000000072001f80f858c0800004c8b5c2470458b533c468b04d50c000000448b0cd510000000453bc10f867f08000049c1e203438b4c8a1085c90f8c980a0000458b5334468b04d50c000000448b0cd514000000453bc10f868e0a0000418bd9ffc3443bc30f86f9060000448b742430448b04d50c000000428b3cc50800000049c1e203418b749a10438b448a1043894c8a104589749a1048c1e20381ffab9f00f80f85a00100004d8bc24c895c2470448bde488bf2488b542470e93ff7ffff48c1e303448954243044895c242c488bf34c894424384c8b542470e9ecf7ffff66817c243000010f8336040000428b34d5100000003b04f50c0000000f83e30200000fb75424300fb674f210e97dfeffff4489542430428b34f514000000418504f448c1e6038bd048b8ffffffffffffffffe8fcc99bff9085c00f84f6010000be010000008b5c2454e913f3ffff448b6c2434428b34c510000000443b2cf50c0000000f83df09000066817c242c00010f83860400000fb754242c0fb674f210e962feffff895c242c8b34ed14000000418504f448c1e603418bd548b8ffffffffffffffff0f1f440000e884c99bff9085c00f8496010000448bd8448b542444e987f5ffff44895424308b14f514000000418504d448c1e203488bf28b54244448b8ffffffffffffffffe844c99bff9085c00f847c010000be010000008b5c2454e95bf2ffff895c242c8b14f514000000418504d448c1e203488bf28b54243448b8ffffffffffffffffe804c99bff9085c00f842e01000041bb01000000448b542444e904f5ffff49c1e0038974242c894424284d8bd04889542418488b542470e944f9ffff4489542430428b14cd14000000418504d448c1e203488bf28b54244448b8ffffffffffffffff660f1f440000e89cc89bff9085c00f84e2000000be010000008b5c2454e9b3f1ffff8b742424e953ffffff448b5424308b5c2454488b542470e978faffff44895424308b34cd14000000418504f448c1e6038b54244448b8ffffffffffffffff660f1f440000e83cc89bff9085c00f848b000000be010000008b5c2454e953f1ffff8b4c2408ebbb448b5424308b5c2454488b542470e91bfaffff448b6c2428448b5c242ce99bfbffff448b442424448b6c24288b442444448b5c242ce907fcffff448b7424308b7c2440448b542444448b5c2454e942fcffff448b6c24348b6c2428e915feffff448b7424148b442444e994fdffff8b742410e93ffeffff448b4c240ce9d6feffff41bbe59af2ff8b4c2430448b44242c488b5c24388b7c243445899f9c0200004d89a7a8020000e891da9bff9041bbed65f4ff448b4424344c8b54247045899f9c0200004d89a7a8020000e86dda9bff9041bbe592f3ff8b4c242c488b5c24488b7c2434448b4c24404c8b54247045899f9c0200004d89a7a8020000e83cda9bff9041b8e5f0f4ff4c8bd24589879c0200004d89a7a8020000e81fda9bff9041b8cdfbf4ff4c8b542470ebdf8b7c2434448b4c24404c8b54247041bbed82f3ff45899f9c0200004d89a7a8020000e8ead99bff908b7c2434448b4c24404c8b54247041bbcd81f3ffebd64c8bd241bbe5dbf5ff45899f9c0200004d89a7a8020000e8b7d99bff9041bbed21f3ff8b7c2434448b4c24404c8b54247045899f9c0200004d89a7a8020000e88fd99bff908b7c2434448b4c24404c8bd241c7879c020000ed6ef3ff4d89a7a8020000e86bd99bff9041bbed1ef3ff8b7c2434448b4c24404c8bd2ebb441bbe514f3ff8b7c2434448b4c24404c8bd2eba041bbcd1ff3ff8b7c2434448b4c24404c8bd2eb8c41bbed9cf3ffe9bdfeffff41bbe530f3ff8b7c2434448b4c24404c8bd2e96affffff41bbe539f3ff8b7c2434448b4c24404c8bd2e953ffffff41bbed57f3ff8b7c2434448b4c24404c8bd2e93cffffff41bbeda4f2ff8b4c2430448b44242c488b5c24388b7c2434448b4c24404c8b542470e913feffff41bbcd69f3ff8b7c2434448b4c24404c8bd2e9fefeffff41bbedbef3ff8b7c2434448b4c24404c8bd245899f9c0200004d89a7a8020000e87bd89bff9041bbcda0f5ff8b5c245c4c8bd28b54245845899f9c0200004d89a7a8020000e856d89bff9041bbed10f5ff4c8b54247045899f9c0200004d89a7a8020000e837d89bff9041bbcdc7f3ff8bfd448b4c24404c8bd2eb9641bbcdd1f3ff8bfd448b4c24404c8bd2eb8441bbcd18f4ff8bfd4c8bd2e974ffffff448b44242c448b5c24284c8b4c24184c8b54247041c7879c020000ed98f4ff4d89a7a8020000e8d7d79bff9041bbcd77f5ff4c8b4c24488b5c245c4c8b442460e94dffffff4c8bd241bbcd3ef4ffe9e5fdffff41bbed1af4ff8bfd4c8bd2e911ffffff41bbedfaf3ff8bfd4c8bd2e901ffffff41bbedf0f3ff8bfd4c8b542470e9effeffff44895c24344c8bd241bbe580f4ff448b442434e9e5fcffff44895c24344c8bd241bbed83f4ff448b442434e9cdfcffff44895c24344c8bd241bbed8cf4ff448b442434e9b5fcffff44895c24344c8bd241bbcd8df4ff448b442434e99dfcffff44895c24344c8bd241bbed8ff4ff448b442434e985fcffff44895c24344c8bd241bbcd91f4ff448b442434e96dfcffff488b4424384d8bd341bbe51bf5ff45899f9c0200004d89a7a8020000e8ccd69bff9041bbedc8f2ff8b7c2434448b4c244045899f9c0200004d89a7a8020000e8a9d69bff9041bbed78f5ff8b5c245ce929feffff448b5c24448b7c2434448b4c24404c8b54247041c7879c020000ed43f2ff4d89a7a8020000e86fd69bff9041bbcd81f5ff8b5c245ce9effdffff41bbeddcf3ff448b4c24404c8bd28bfde9bcfdffff41bbe5def2ff8b7c2434448b4c244045899f9c0200004d89a7a8020000e828d69bff9041bbede6f3ff4c8bd28bfde989fdffff41bbcde5f3ff4c8bd28bfde979fdffff41bbe502f3ff8b7c2434448b4c2440ebbb41bbcdeff3ff4c8bd28bfde958fdffff41bbedfbf2ff8b7c2434448b4c2440eb9a41b8edb6f4ff4c8bd24589879c0200004d89a7a8020000e8b9d59bff9041bbcd55f5ff488b4424384c8b542470e9c4feffff488b4424384d8bd341bbe54af5ffe9b1feffff44895424448b7c2434448b4c24404c8bd241bbed88f2ff45899f9c0200004d89a7a8020000e866d59bff9041b8ede9f4ff4c8bd2e925fbffff41b8e5c3f4ff4c8bd2e917fbffff4c8bd241bbe527f4ffe971fbffff8b7c2434448b4c24404c8b54247041bbe576f3ffe925fbffff41bbedd2f3ff8bfd448b4c24404c8bd2e97ffcffff41bbe50bf4ff8bfd4c8bd2e96ffcffff41bbed8bf5ff8b5c245ce97efcffff44895424448b7c2434448b4c24404c8bd241bbe57cf2ffe959ffffff41bbed96f5ff8b5c245ce953fcffff41bbe55ef3ff8b7c2434448b4c24404c8bd2e90afbffff41bbed17f4ff8bfd4c8bd2e90efcffff44895424448b7c2434448b4c24404c8bd241bbed7ff2ffe907ffffff41bbeda2f5ff8b5c245c4c8b442460e9fcfbffff41bbed6ef5ff4c8b4c24488b5c245c4c8b4424608b4c246ce9dffbffff44895424448b7c2434448b4c24404c8bd241bbed8bf2ffe9bafeffff41bbcddbf3ff8bfd448b4c24404c8bd2e990fbffff41bbcdf9f3ff8bfd4c8b542470e97efbffff44895424448b7c2434448b4c24404c8bd241bbe5d7f1ffe977feffff41bbe5acf2ff8b7c2434e925fdffff41bbed82f5ff8b5c245ce962fbffff4c8bd241bbede6f5ffe9faf9ffff41bbe5d5f2ff8b7c2434448b4c2440e975fdffff41bbed3ff2ff8bfd4c8bd2e927feffff44895424448b7c2434448b4c24404c8bd241bbed74f2ffe90bfeffff41b8e50bf2ffe9aafdffff488b4424384d8bd341bbed43f5ffe987fcffff488b4424384d8bd341bbe524f5ffe974fcffff41bbed5af5ff488b4424384c8b542470e95ffcffff8b7c2434448b4c24404c8b54247041bbed80f3ffe928f9ffff44895424448b7c2434448b4c24404c8bd241bbcd89f2ffe990fdffff41bbe506f5ffe9affaffff41bbe563f2ff8b7c24344c8bd2e973fdffff41bbed9ff5ff8b5c245ce96dfaffff41bbe5aff5ff4c8bd2e905f9ffff44895c24344c8bd241bbed78f4ff448b442434e937f8ffff8b7c24344c8bd241c7879c020000e52ef2ff4d89a7a8020000e899d29bff9041bbedc8f3ff8bfd448b4c24404c8bd2e9f5f9ffff41bbcd0df3ff8b7c2434448b4c24404c8b542470e92ffcffff4c8bd241c7879c020000cdeaf5ff4d89a7a8020000e850d29bff9041b8e5ccf4ff4c8bd2e90ff8ffff41bbed20f3ff8b7c2434448b4c24404c8b542470e986f8ffff41bbed03f4ff8bfd4c8bd2e98af9ffff4c8bd241c7879c020000e552f4ff4d89a7a8020000e8fed19bff904c8bd241c7879c020000ed4af4ff4d89a7a8020000e8e3d19bff9041bbe5e0f1ff8b7c2434e917fbffff4c8b54247041c7879c020000ed69f4ff4d89a7a8020000e8b7d19bff9041bbe593f5ff8b5c245ce937f9ffff41bbed0ef4ff8bfd4c8bd2e909f9ffff44895424448b7c2434448b4c24404c8bd241bbcd8df2ffe902fcffffe89801e0ff90e872d09bff90f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f4f448bb0000000000000000e9fbffffff48bb0000000000000000e9fbfffffff4f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 46 block B0 null  <||@
  Comment 46 0 [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 46 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 54 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@275acff7 slotKind: QWORD  <||@
  Comment 54 6 stack:32|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 59 8 stack:36|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 63 10 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 68 12 r10|DWORD[.] = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 72 14 stack:52|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 77 16 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed} state [bci:0]  <||@
  Comment 77 [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2          |3           
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]   <||@
  Comment 77 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 77 {meta{HotSpotType<Ljava/util/regex/Pattern$Branch;, resolved>;compressed}}  <||@
  Comment 89 18 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B366  <||@
  Comment 95 block B1 null  <||@
  Comment 95 20 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 95 22 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 101 24 JUMP ~[] destination: B1 -> B2  <||@
  Comment 101 block B2 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 101 26 [] = LABEL numbPhis: 1 align: true label: ?  <||@
  Comment 112 28 stack:56|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 117 30 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 125 32 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 128 34 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B2 -> B3 falseDestination: B2 -> B364  <||@
  Comment 134 block B3 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 134 36 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 134 38 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 142 40 CMP (x: r11|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:3, 7]  <||@
  Comment 142 [rdx:0, rsi:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 142 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 150 42 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B3 -> B4 falseDestination: B3 -> B363  <||@
  Comment 156 block B4 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 156 44 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 46 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 160 48 r9|DWORD[.] = MOV [rsi|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 165 50 TEST (x: r9|DWORD[.], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 168 52 BRANCH trueDestinationProbability: 0.4231234893543153 condition: = trueDestination: B4 -> B5 falseDestination: B4 -> B142  <||@
  Comment 174 block B142 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 174 1448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 174 1450 CMP [r9|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}  <||@
  Comment 174 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 186 1452 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B142 -> B143 falseDestination: B142 -> B362  <||@
  Comment 192 block B143 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 192 1454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 192 1456 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7]  <||@
  Comment 192 [rdx:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 192 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 195 1458 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 195 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 195 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 202 1460 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 210 1462 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 212 1464 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B143 -> B144 falseDestination: B143 -> B361  <||@
  Comment 218 block B144 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 218 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 218 1468 stack:80|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 223 1470 rbx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 231 1472 stack:60|DWORD[.] = MOVE rbx|DWORD[.] moveKind: DWORD  <||@
  Comment 235 1474 rax|DWORD = MOV [rbx|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7]  <||@
  Comment 235 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, r10:0, stack:64, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 235 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 242 1476 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 246 1478 rbp|DWORD = MOV [rsi|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 250 1480 stack:92|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 254 1482 MOV (x: [rsi|QWORD[.] + rdi|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 258 1484 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 264 1486 stack:72|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 269 1488 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 269 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 275 1490 BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B144 -> B145 falseDestination: B144 -> B312  <||@
  Comment 281 block B312 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 281 3098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 281 3100 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 281 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 287 3102 BRANCH trueDestinationProbability: 0.59970699517179 condition: = trueDestination: B312 -> B313 falseDestination: B312 -> B353  <||@
  Comment 293 block B313 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 293 3104 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 293 3106 r10|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 299 3108 JUMP ~[] destination: B313 -> B314  <||@
  Comment 299 block B314 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 299 3110 [] = LABEL numbPhis: 2 align: true label: ?  <||@
  Comment 304 3112 rsi|DWORD = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 311 3114 CMP (x: rsi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 314 3116 BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B314 -> B315 falseDestination: B314 -> B349  <||@
  Comment 320 block B315 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 320 3118 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 320 3120 rsi|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 327 3122 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 50, 7]  <||@
  Comment 327 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 327 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 327 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 338 3124 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B315 -> B316 falseDestination: B315 -> B347  <||@
  Comment 344 block B316 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 344 3126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 344 3128 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 347 3130 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B316 -> B317 falseDestination: B316 -> B345  <||@
  Comment 353 block B317 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 353 3132 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 353 3134 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 50, 7]  <||@
  Comment 353 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 353 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 353 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 361 3136 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B317 -> B318 falseDestination: B317 -> B343  <||@
  Comment 367 block B318 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 367 3138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 367 3140 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 369 3142 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B318 -> B319 falseDestination: B318 -> B321  <||@
  Comment 375 block B321 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 375 3162 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 375 3164 r14|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 379 3166 r11|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 379 [rdx:0, rbx:0, rsi:0, r8:0, r14:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 379 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 387 3168 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 390 3170 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B321 -> B322 falseDestination: B321 -> B341  <||@
  Comment 396 block B322 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 396 3172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 396 3174 CMP (x: r11|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 399 3176 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B322 -> B323 falseDestination: B322 -> B339  <||@
  Comment 405 block B323 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 405 3178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 405 3180 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 409 3182 r11|DWORD = MOVSX [r14|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 415 3184 CMP r11|DWORD y: 128 size: WORD  <||@
  Comment 421 3186 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B323 -> B324 falseDestination: B323 -> B337  <||@
  Comment 427 block B324 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 427 3188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 427 3190 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 427 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 437 3192 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 445 3194 r11|QWORD = MOVZX r11|DWORD size: DWORD  <||@
  Comment 449 3196 TEST (x: r9|DWORD, y: [r14|QWORD[.] + r11|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 454 3198 BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B324 -> B325 falseDestination: B324 -> B328  <||@
  Comment 460 block B328 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 460 3246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 460 3248 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 467 3250 r11|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 467 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 467 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 475 3252 r9|DWORD = INC r10|DWORD size: DWORD  <||@
  Comment 481 3254 r14|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 487 3256 CMP r11|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}  <||@
  Comment 487 {meta{HotSpotType<Ljava/util/regex/Pattern$Node;, resolved>;compressed}}  <||@
  Comment 494 3258 BRANCH trueDestinationProbability: 0.7022928681952456 condition: = trueDestination: B328 -> B329 falseDestination: B328 -> B333  <||@
  Comment 500 block B329 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 500 3260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 500 3262 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 503 3264 CMP [rsi|DWORD[.] * 8 + 12] y: 2 size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 503 [rdx:0, rbx:0, rsi:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 503 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 511 3266 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B329 -> B330 falseDestination: B329 -> B332  <||@
  Comment 517 block B332 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 517 3286 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 517 3288 MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 521 3290 rcx|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 524 3292 MOV (x: [rsi|DWORD[.] * 8 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 531 3294 MOV (x: [rsi|DWORD[.] * 8 + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 539 3296 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:25, 31, 19, 28, 50, 7]  <||@
  Comment 539 [rdx:0, rbx:0, r8:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Node.match(Pattern.java:3412) [bci: 25, duringCall: false, rethrow: false]
              |0  |1             |2          |3 
     locals:  |-  |rdx|QWORD[.]  |r14|DWORD  |- 
  at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3            |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |r8|QWORD[.]  |r10|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 539 {infopoint: SAFEPOINT}  <||@
  Comment 539 11  <||@
  Comment 545 3298 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 548 3300 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 551 3302 JUMP ~[] destination: B332 -> B314  <||@
  Comment 556 block B333 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 556 3304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 556 3306 stack:100|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 561 3308 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 566 3310 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 570 3312 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 573 3316 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 576 3318 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 579 3322 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 50, 7]  <||@
  Comment 579 7  <||@
  Comment 591 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 596 [stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 597 3324 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 599 3326 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B333 -> B334 falseDestination: B333 -> B336  <||@
  Comment 605 block B336 loop 2 depth 2 outer 0 header:211|LoopBegin  <||@
  Comment 605 3348 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 605 3350 r9|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 610 3352 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 615 3354 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 618 3356 r10|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 621 3358 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 625 3360 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 630 3362 JUMP ~[] destination: B336 -> B314  <||@
  Comment 635 block B353 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 635 3522 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 635 3524 rbx|QWORD = MOV [rax|DWORD * 8 + 480] size: QWORD  <||@
  Comment 643 3526 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 647 3528 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 652 3530 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 655 3536 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 660 3538 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 50, 7]  <||@
  Comment 660 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 660 10  <||@
  Comment 662 [stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 663 3544 JUMP ~[] destination: B353 -> B354  <||@
  Comment 663 block B354 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 663 3546 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 663 3540 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 668 3542 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 673 3548 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 676 3550 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 50, 7]  <||@
  Comment 676 [rdx:0, rsi:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 676 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 683 3552 r8|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 691 3554 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 694 3556 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B354 -> B355 falseDestination: B354 -> B360  <||@
  Comment 700 block B355 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 700 3558 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 700 3560 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 704 3562 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 708 3564 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 713 3566 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 715 3568 BRANCH trueDestinationProbability: 0.7328374790421298 condition: = trueDestination: B355 -> B356 falseDestination: B355 -> B359  <||@
  Comment 721 block B356 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 721 3570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 3572 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7]  <||@
  Comment 721 [rdx:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5          
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 721 {infopoint: SAFEPOINT}  <||@
  Comment 721 11  <||@
  Comment 727 3574 r11|DWORD = INC stack:56|DWORD size: DWORD  <||@
  Comment 735 3576 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 740 3578 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 745 3580 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 749 3582 JUMP ~[] destination: B356 -> B2  <||@
  Comment 754 block B325 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 754 3200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 3202 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 759 3204 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 764 3206 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 767 3208 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 50, 7]  <||@
  Comment 767 [rdx:0, rsi:0, r9:0, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 767 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 775 3210 r10|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 783 3212 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 786 3214 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B325 -> B326 falseDestination: B325 -> B327  <||@
  Comment 792 block B326 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 792 3216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 792 3218 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 796 3220 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 800 3222 MOV (x: [rsi|QWORD[.] + r10|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 805 3224 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:44, 50, 7]  <||@
  Comment 805 [rdx:0, r9:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4662) [bci: 44, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5          
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |-  |-  |rbp|DWORD  |int[0|0x0] 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 805 {infopoint: SAFEPOINT}  <||@
  Comment 805 11  <||@
  Comment 811 3226 r11|DWORD = INC stack:56|DWORD size: DWORD  <||@
  Comment 819 3228 r10|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 824 3230 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 829 3232 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 833 3234 JUMP ~[] destination: B326 -> B2  <||@
  Comment 838 block B349 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 838 3472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 838 3474 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 843 3476 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 847 3478 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 852 3480 CMP [rbx|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 860 3482 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B349 -> B350 falseDestination: B349 -> B351  <||@
  Comment 866 block B350 loop 0 depth 1 header:30|LoopBegin  <||@
  Comment 866 3484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 866 3486 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 871 3488 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 874 3492 r8|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 879 3494 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 884 3496 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 50, 7]  <||@
  Comment 884 9  <||@
  Comment 887 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 892 [stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 893 3502 JUMP ~[] destination: B350 -> B354  <||@
  Comment 898 block B145 null  <||@
  Comment 898 1492 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 898 1494 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 901 1496 CMP (x: rsi|DWORD, y: stack:36|DWORD) size: DWORD  <||@
  Comment 905 1498 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B145 -> B146 falseDestination: B145 -> B310  <||@
  Comment 911 block B146 null  <||@
  Comment 911 1500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 911 1502 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 916 1504 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 50, 7]  <||@
  Comment 916 [rdx:0, rbx:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2               |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 916 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 916 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 924 1506 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B146 -> B147 falseDestination: B146 -> B309  <||@
  Comment 930 block B147 null  <||@
  Comment 930 1508 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 930 1512 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 932 1514 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B147 -> B148 falseDestination: B147 -> B149  <||@
  Comment 938 block B149 null  <||@
  Comment 938 1526 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 938 1528 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 942 1530 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 942 [rdx:0, rbx:0, rsi:0, r8:0, r9:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 942 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 950 1532 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 953 1534 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B149 -> B150 falseDestination: B149 -> B308  <||@
  Comment 959 block B150 null  <||@
  Comment 959 1536 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 959 1538 CMP (x: r10|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 962 1540 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B150 -> B151 falseDestination: B150 -> B307  <||@
  Comment 968 block B151 null  <||@
  Comment 968 1542 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 968 1544 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 972 1546 r10|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 978 1548 CMP r10|DWORD y: -10240 size: WORD  <||@
  Comment 984 1550 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B151 -> B152 falseDestination: B151 -> B306  <||@
  Comment 990 block B152 null  <||@
  Comment 990 1552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 990 1554 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 998 1556 rdi|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 998 [rdx:0, rbx:0, r8:0, r9:0, r11:0, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 998 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1006 1558 rax|DWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 1010 1560 stack:76|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1014 1562 r13|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1020 1564 stack:104|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1025 1566 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1025 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1031 1568 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B152 -> B153 falseDestination: B152 -> B158  <||@
  Comment 1037 block B153 null  <||@
  Comment 1037 1570 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1037 1572 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1045 1574 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B153 -> B242 falseDestination: B153 -> B155  <||@
  Comment 1051 block B155 null  <||@
  Comment 1051 1580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1051 1582 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1059 1584 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B155 -> B156 falseDestination: B155 -> B157  <||@
  Comment 1065 block B157 null  <||@
  Comment 1065 1596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1065 1598 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1070 1600 JUMP ~[] destination: B157 -> B272  <||@
  Comment 1070 block B272 null  <||@
  Comment 1070 2666 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1070 2668 rdx|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1077 2670 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1077 [rdx:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1077 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1077 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1088 2672 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B272 -> B273 falseDestination: B272 -> B298  <||@
  Comment 1094 block B273 null  <||@
  Comment 1094 2674 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1094 2676 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1099 2678 rcx|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 1103 2680 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1103 [rcx:0, rdx:0, r10:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1103 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1111 2682 r11|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1119 2684 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 1122 2686 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B273 -> B274 falseDestination: B273 -> B297  <||@
  Comment 1128 block B274 null  <||@
  Comment 1128 2688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1128 2690 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1132 2692 r8|DWORD = MOV [rcx|QWORD[.] + r11|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1137 2694 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1140 2696 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B274 -> B275 falseDestination: B274 -> B276  <||@
  Comment 1146 block B276 null  <||@
  Comment 1146 2708 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1146 2710 r11|DWORD[.] = MOV [r10|QWORD[.] + 52] size: DWORD  <||@
  Comment 1150 2712 r9|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1150 [rcx:0, rdx:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1150 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1158 2714 rbx|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1165 2716 CMP (x: r9|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1168 2718 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B276 -> B277 falseDestination: B276 -> B296  <||@
  Comment 1174 block B277 null  <||@
  Comment 1174 2720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1174 2722 rdi|DWORD = INC rbx|DWORD size: DWORD  <||@
  Comment 1178 2724 CMP (x: r9|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1181 2726 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B277 -> B278 falseDestination: B277 -> B295  <||@
  Comment 1187 block B278 null  <||@
  Comment 1187 2728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1187 2730 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1192 2732 r9|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1200 2734 rax|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 1200 [rcx:0, rdx:0, r9:0, r10:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1200 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1208 2736 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1212 2738 rsi|DWORD = MOV [r11|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1217 2740 rbp|DWORD = MOV [r11|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1222 2742 MOV (x: [r11|QWORD[.] + rbx|DWORD * 4 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 1227 2744 MOV (x: [r11|QWORD[.] + rdi|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 1232 2746 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1236 2748 CMP rax|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1236 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1242 2750 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B278 -> B280 falseDestination: B278 -> B288  <||@
  Comment 1248 block B280 null  <||@
  Comment 1248 2756 [] = LABEL numbPhis: 6 align: false label: ?  <||@
  Comment 1248 2758 CMP [r10|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 1253 2760 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B280 -> B281 falseDestination: B280 -> B282  <||@
  Comment 1259 block B282 null  <||@
  Comment 1259 2772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1259 2774 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 1264 2776 rbx|DWORD = MOV [rcx|QWORD[.] + 12] size: DWORD  <||@
  Comment 1267 2778 rdi|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1275 2780 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1277 2782 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B282 -> B283 falseDestination: B282 -> B286  <||@
  Comment 1283 block B283 null  <||@
  Comment 1283 2784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1283 2786 CMP [r11|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 1288 2788 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B283 -> B284 falseDestination: B283 -> B285  <||@
  Comment 1294 block B285 null  <||@
  Comment 1294 2798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1294 2800 rbp|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 1298 2802 MOV (x: [r10|QWORD[.] + 32], y: r13|DWORD) size: DWORD  <||@
  Comment 1302 2804 rsi|DWORD = MOV [r10|QWORD[.] + 28] size: DWORD  <||@
  Comment 1306 2806 MOV (x: [r11|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 1310 2808 MOV (x: [r11|QWORD[.] + 20], y: r13|DWORD) size: DWORD  <||@
  Comment 1314 2810 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: rbp|DWORD) size: DWORD  <||@
  Comment 1318 2812 JUMP ~[] destination: B285 -> B359  <||@
  Comment 1318 block B359 null  <||@
  Comment 1318 3592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1318 3594 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1323 3596 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1338 12  <||@
  Comment 1348 block B5 null  <||@
  Comment 1348 54 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1348 56 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 24] size: DWORD  <||@
  Comment 1356 58 r11|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 1356 [rdx:0, r8:0, r10:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1356 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1364 60 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1371 62 CMP [r11|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed} state [bci:3, 7]  <||@
  Comment 1371 [rdx:0, r8:0, r9:0, r10:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0             |1             |2          |3            |4              
     locals:  |r10|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1371 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1371 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupHead;, resolved>;compressed}}  <||@
  Comment 1383 64 BRANCH trueDestinationProbability: 0.2729733862503736 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B138  <||@
  Comment 1389 block B138 null  <||@
  Comment 1389 1404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1389 1406 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1392 1408 r11|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1395 1412 r9|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1398 1416 rbx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 1401 1420 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:32, 7]  <||@
  Comment 1401 7  <||@
  Comment 1415 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 1420 [stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1421 1422 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1426 1424 JUMP ~[] destination: B138 -> B139  <||@
  Comment 1426 block B139 null  <||@
  Comment 1426 1426 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1426 1428 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 1428 1430 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B139 -> B140 falseDestination: B139 -> B141  <||@
  Comment 1434 block B141 null  <||@
  Comment 1434 1442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1434 1444 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1439 1446 RETURN (savedRbp: stack:16|QWORD, value: rax|DWORD) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1454 12  <||@
  Comment 1464 block B158 null  <||@
  Comment 1464 1602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1464 1604 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1464 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1470 1606 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B158 -> B159 falseDestination: B158 -> B305  <||@
  Comment 1476 block B159 null  <||@
  Comment 1476 1608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1476 1610 stack:100|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1481 1612 r8|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1489 1614 rsi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 1489 [rbx:0, r8:0, r9:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1                  |2               |3                  |4          |5 
     locals:  |r9|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1489 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1497 1616 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1497 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1503 1618 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B159 -> B160 falseDestination: B159 -> B165  <||@
  Comment 1509 block B160 null  <||@
  Comment 1509 1620 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1509 1622 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1517 1624 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 1523 block B162 null  <||@
  Comment 1523 1632 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 1634 CMP (x: rax|DWORD, y: [r8|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1531 1636 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B162 -> B163 falseDestination: B162 -> B164  <||@
  Comment 1537 block B164 null  <||@
  Comment 1537 1648 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1537 1650 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1542 1652 JUMP ~[] destination: B164 -> B272  <||@
  Comment 1547 block B6 null  <||@
  Comment 1547 66 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1547 68 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD state [bci:3, 7]  <||@
  Comment 1547 [rdx:0, r9:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1547 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1550 70 rcx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 7]  <||@
  Comment 1550 [rdx:0, rsi:0, r9:0, r11:0, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1550 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1557 72 r8|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1565 74 CMP (x: rcx|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1568 76 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B6 -> B7 falseDestination: B6 -> B137  <||@
  Comment 1574 block B7 null  <||@
  Comment 1574 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1574 80 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 1578 82 stack:60|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 1583 84 stack:72|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1588 86 r10|DWORD[.] = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1596 88 stack:76|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 1601 90 rbx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:3, 7]  <||@
  Comment 1601 [rdx:0, rsi:0, r9:0, r10:0, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1601 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1609 92 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1613 94 rdi|DWORD = MOV [rsi|QWORD[.] + r8|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1618 96 stack:80|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1622 98 MOV (x: [rsi|QWORD[.] + r8|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1627 100 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1634 102 stack:88|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1639 104 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 1639 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 1645 106 BRANCH trueDestinationProbability: 0.7408435024506907 condition: = trueDestination: B7 -> B8 falseDestination: B7 -> B99  <||@
  Comment 1651 block B8 null  <||@
  Comment 1651 108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1651 110 rsi|DWORD = MOV [rdx|QWORD[.] + 16] size: DWORD  <||@
  Comment 1654 112 CMP (x: rsi|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1656 114 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B8 -> B9 falseDestination: B8 -> B97  <||@
  Comment 1662 block B9 null  <||@
  Comment 1662 116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1662 118 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 1667 120 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:21, 32, 7]  <||@
  Comment 1667 [rdx:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1667 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1667 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1675 122 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B9 -> B10 falseDestination: B9 -> B96  <||@
  Comment 1681 block B10 null  <||@
  Comment 1681 124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1681 126 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1683 128 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B12  <||@
  Comment 1689 block B12 null  <||@
  Comment 1689 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1689 144 rsi|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 1693 146 rbx|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 1693 [rdx:0, rsi:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1693 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1700 148 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1702 150 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B12 -> B13 falseDestination: B12 -> B95  <||@
  Comment 1708 block B13 null  <||@
  Comment 1708 152 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1708 154 CMP (x: rbx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1710 156 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B13 -> B14 falseDestination: B13 -> B94  <||@
  Comment 1716 block B14 null  <||@
  Comment 1716 158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1716 160 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1720 162 rbx|DWORD = MOVSX [rsi|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 1725 164 CMP rbx|DWORD y: -10240 size: WORD  <||@
  Comment 1730 166 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B14 -> B15 falseDestination: B14 -> B93  <||@
  Comment 1736 block B15 null  <||@
  Comment 1736 168 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1736 170 rbp|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1744 172 rsi|DWORD = MOV [rbp|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 1744 [rdx:0, rbp:0, r8:0, r9:0, r10:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1744 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1751 174 r13|DWORD = MOVZX rbx|DWORD size: DWORD  <||@
  Comment 1755 176 stack:92|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1760 178 r14|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 1766 180 stack:96|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 1771 182 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 1771 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 1777 184 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B15 -> B16 falseDestination: B15 -> B21  <||@
  Comment 1783 block B16 null  <||@
  Comment 1783 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1783 188 CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 1791 190 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B16 -> B17 falseDestination: B16 -> B18  <||@
  Comment 1797 block B18 null  <||@
  Comment 1797 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1797 200 CMP (x: r13|DWORD, y: [rbp|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 1805 202 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B18 -> B19 falseDestination: B18 -> B20  <||@
  Comment 1811 block B20 null  <||@
  Comment 1811 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1811 218 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1817 220 JUMP ~[] destination: B20 -> B68  <||@
  Comment 1817 block B68 null  <||@
  Comment 1817 696 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1817 698 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1825 700 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1825 [rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1825 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1825 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 1836 702 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B68 -> B69 falseDestination: B68 -> B89  <||@
  Comment 1842 block B69 null  <||@
  Comment 1842 704 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1842 706 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1847 708 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 1850 710 r8|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1850 [rcx:0, rdx:0, rsi:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1850 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1858 712 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 1866 714 CMP (x: r8|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 1869 716 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B69 -> B70 falseDestination: B69 -> B88  <||@
  Comment 1875 block B70 null  <||@
  Comment 1875 718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1875 720 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1879 722 rcx|DWORD = MOV [rcx|QWORD[.] + r10|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1884 724 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 1886 726 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72  <||@
  Comment 1892 block B72 null  <||@
  Comment 1892 736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1892 738 r8|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 1896 740 r10|DWORD = MOV [r8|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1896 [rdx:0, rsi:0, r8:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1896 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1904 742 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 1912 744 CMP (x: r10|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1915 746 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B72 -> B73 falseDestination: B72 -> B87  <||@
  Comment 1921 block B73 null  <||@
  Comment 1921 748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1921 750 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 1926 752 CMP (x: r10|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 1929 754 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B73 -> B74 falseDestination: B73 -> B86  <||@
  Comment 1935 block B74 null  <||@
  Comment 1935 756 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1935 758 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 1940 760 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 1948 762 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 1948 [rdx:0, rsi:0, r8:0, r10:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 1948 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 1956 764 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1960 766 r11|DWORD = MOV [r8|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1965 768 rax|DWORD = MOV [r8|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 1970 770 MOV (x: [r8|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 1975 772 MOV (x: [r8|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 1980 774 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 1984 776 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 1984 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 1990 778 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B74 -> B76 falseDestination: B74 -> B82  <||@
  Comment 1996 block B76 null  <||@
  Comment 1996 784 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 1996 786 CMP [rdx|QWORD[.] + 24] y: 1 size: DWORD  <||@
  Comment 2000 788 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B76 -> B77 falseDestination: B76 -> B78  <||@
  Comment 2006 block B78 null  <||@
  Comment 2006 798 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2006 800 CMP [r8|QWORD[.] + 12] y: 2 size: DWORD  <||@
  Comment 2011 802 BRANCH trueDestinationProbability: 0.0 condition: |<| trueDestination: B78 -> B79 falseDestination: B78 -> B81  <||@
  Comment 2017 block B81 null  <||@
  Comment 2017 820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2017 822 MOV (x: [rdx|QWORD[.] + 32], y: r14|DWORD) size: DWORD  <||@
  Comment 2021 824 rsi|DWORD = MOV [rdx|QWORD[.] + 28] size: DWORD  <||@
  Comment 2024 826 MOV (x: [r8|QWORD[.] + 16], y: rsi|DWORD) size: DWORD  <||@
  Comment 2028 828 MOV (x: [r8|QWORD[.] + 20], y: r14|DWORD) size: DWORD  <||@
  Comment 2032 830 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2037 832 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2042 834 JUMP ~[] destination: B81 -> B134  <||@
  Comment 2042 block B134 null  <||@
  Comment 2042 1364 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2042 1366 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 2045 1368 r10|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:31, 32, 7]  <||@
  Comment 2045 [rdx:0, rsi:0, r11:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2045 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2053 1370 r11|DWORD = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2061 1372 CMP (x: r10|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2064 1374 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B134 -> B135 falseDestination: B134 -> B136  <||@
  Comment 2070 block B135 null  <||@
  Comment 2070 1376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2070 1378 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2074 1380 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2078 1382 MOV (x: [rsi|QWORD[.] + r11|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2083 1384 JUMP ~[] destination: B135 -> B139  <||@
  Comment 2088 block B165 null  <||@
  Comment 2088 1654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2088 1656 rdi|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2093 1660 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1662 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2098 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2104 1664 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B165 -> B166 falseDestination: B165 -> B304  <||@
  Comment 2110 block B166 null  <||@
  Comment 2110 1666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2110 1668 stack:108|DWORD[.] = MOVE r8|DWORD[.] moveKind: DWORD  <||@
  Comment 2115 1670 r14|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2123 1672 rsi|DWORD = MOV [r14|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2123 [rdx:0, rbx:0, rdi:0, r8:0, r9:0, r11:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3             |4          |5 
     locals:  |r9|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2123 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2131 1674 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2131 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2137 1676 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B166 -> B167 falseDestination: B166 -> B172  <||@
  Comment 2143 block B167 null  <||@
  Comment 2143 1678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2143 1680 CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2151 1682 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B167 -> B168 falseDestination: B167 -> B169  <||@
  Comment 2157 block B169 null  <||@
  Comment 2157 1690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2157 1692 CMP (x: rax|DWORD, y: [r14|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2165 1694 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B169 -> B170 falseDestination: B169 -> B171  <||@
  Comment 2171 block B171 null  <||@
  Comment 2171 1706 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2171 1708 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2176 1710 JUMP ~[] destination: B171 -> B272  <||@
  Comment 2181 block B288 null  <||@
  Comment 2181 2830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2181 2832 r9|QWORD[.] = UNCOMPRESSPOINTER (input: r9|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2185 2834 stack:96|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 2189 2836 stack:100|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 2193 2838 rsi|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2196 2840 stack:88|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2201 2842 JUMP ~[] destination: B288 -> B289  <||@
  Comment 2201 block B289 null  <||@
  Comment 2201 2844 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2201 2846 rdx|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2204 2848 rcx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2207 2850 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2212 2852 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 50, 7]  <||@
  Comment 2212 7  <||@
  Comment 2223 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2228 [stack:56, stack:64, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4  |5                |6              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:100|DWORD  |stack:96|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2229 2854 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2231 2856 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B289 -> B290 falseDestination: B289 -> B291  <||@
  Comment 2237 block B291 null  <||@
  Comment 2237 2876 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2237 2878 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 2242 2880 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2247 2882 r11|DWORD[.] = MOV [r10|QWORD[.] + 60] size: DWORD  <||@
  Comment 2251 2884 r8|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD state [bci:73, 37, 28, 50, 7]  <||@
  Comment 2251 [r9:0, r10:0, r11:0, stack:56, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4  |5                |6              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |stack:100|DWORD  |stack:96|DWORD 
     stack:   |rax|DWORD          |              |   |   |   |                 |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4               |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2251 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2259 2886 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2267 2888 CMP (x: r8|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2270 2890 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B291 -> B292 falseDestination: B291 -> B293  <||@
  Comment 2276 block B292 null  <||@
  Comment 2276 2892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2276 2894 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 2280 2896 r11|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2284 2898 MOV (x: [r11|QWORD[.] + rcx|DWORD * 4 + 16], y: rdi|DWORD) size: DWORD  <||@
  Comment 2289 2900 JUMP ~[] destination: B292 -> B359  <||@
  Comment 2294 block B172 null  <||@
  Comment 2294 1712 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2294 1714 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2294 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2300 1716 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B172 -> B173 falseDestination: B172 -> B303  <||@
  Comment 2306 block B173 null  <||@
  Comment 2306 1718 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2306 1720 stack:124|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 2311 1722 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2319 1724 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2319 [rdx:0, rbx:0, rsi:0, rdi:0, r14:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2          |3             |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2          |3             |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |rdi|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2319 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2327 1726 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2327 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2334 1728 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B173 -> B174 falseDestination: B173 -> B179  <||@
  Comment 2340 block B174 null  <||@
  Comment 2340 1730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2340 1732 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2347 1734 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B174 -> B175 falseDestination: B174 -> B176  <||@
  Comment 2353 block B176 null  <||@
  Comment 2353 1742 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2353 1744 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2360 1746 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178  <||@
  Comment 2366 block B178 null  <||@
  Comment 2366 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2366 1762 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2371 1764 JUMP ~[] destination: B178 -> B272  <||@
  Comment 2376 block B21 null  <||@
  Comment 2376 222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2376 224 CMP rsi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2376 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2382 226 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B21 -> B22 falseDestination: B21 -> B92  <||@
  Comment 2388 block B22 null  <||@
  Comment 2388 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2388 230 stack:104|DWORD[.] = MOVE rbp|DWORD[.] moveKind: DWORD  <||@
  Comment 2392 232 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2399 234 r14|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 2399 [rdx:0, rbp:0, rsi:0, r8:0, r9:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2399 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2407 236 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2407 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2414 238 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B22 -> B23 falseDestination: B22 -> B28  <||@
  Comment 2420 block B23 null  <||@
  Comment 2420 240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2420 242 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2428 244 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B23 -> B24 falseDestination: B23 -> B25  <||@
  Comment 2434 block B25 null  <||@
  Comment 2434 252 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2434 254 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2442 256 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 2448 block B27 null  <||@
  Comment 2448 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2448 272 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2454 274 JUMP ~[] destination: B27 -> B68  <||@
  Comment 2459 block B99 null  <||@
  Comment 2459 1034 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2459 1036 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2464 1038 CMP rbx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}  <||@
  Comment 2464 {meta{HotSpotType<Ljava/util/regex/Pattern$Curly;, resolved>;compressed}}  <||@
  Comment 2470 1040 BRANCH trueDestinationProbability: 0.5997069951717903 condition: = trueDestination: B99 -> B100 falseDestination: B99 -> B133  <||@
  Comment 2476 block B100 null  <||@
  Comment 2476 1042 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2476 1044 r11|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 2482 1046 JUMP ~[] destination: B100 -> B101  <||@
  Comment 2487 block B102 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2487 1056 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 2496 1058 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 28] size: DWORD  <||@
  Comment 2504 1060 CMP [rsi|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed} state [bci:3, 28, 32, 7]  <||@
  Comment 2504 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2504 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2504 {meta{HotSpotType<Ljava/util/regex/Pattern$Ctype;, resolved>;compressed}}  <||@
  Comment 2515 1062 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B102 -> B103 falseDestination: B102 -> B127  <||@
  Comment 2521 block B103 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2521 1064 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2521 1066 CMP (x: rcx|DWORD, y: [rdx|QWORD[.] + 16]) size: DWORD  <||@
  Comment 2524 1068 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B103 -> B104 falseDestination: B103 -> B125  <||@
  Comment 2530 block B104 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2530 1070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2530 1072 CMP [r8|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} state [bci:3, 28, 32, 7]  <||@
  Comment 2530 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2530 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2530 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 2538 1074 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B104 -> B105 falseDestination: B104 -> B123  <||@
  Comment 2544 block B105 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2544 1076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2544 1078 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2546 1080 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B105 -> B106 falseDestination: B105 -> B108  <||@
  Comment 2552 block B108 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2552 1098 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2552 1100 r13|DWORD[.] = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2556 1102 r14|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:3, 28, 32, 7]  <||@
  Comment 2556 [rdx:0, rsi:0, r8:0, r13:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4         
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2556 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2564 1104 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2567 1106 BRANCH trueDestinationProbability: 1.0 condition: > trueDestination: B108 -> B109 falseDestination: B108 -> B121  <||@
  Comment 2573 block B109 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2573 1108 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2573 1110 CMP (x: r14|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 2576 1112 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B109 -> B110 falseDestination: B109 -> B119  <||@
  Comment 2582 block B110 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2582 1114 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2582 1116 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2586 1118 r13|DWORD = MOVSX [r13|QWORD[.] + rcx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 2592 1120 CMP r13|DWORD y: 128 size: WORD  <||@
  Comment 2598 1122 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B110 -> B111 falseDestination: B110 -> B117  <||@
  Comment 2604 block B111 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2604 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2604 1126 r14|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]  <||@
  Comment 2604 {Object[int[128]{8192, 8192, 8192, 8192, 8192, ...}]}  <||@
  Comment 2614 1128 r8|DWORD = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2622 1130 r13|QWORD = MOVZX r13|DWORD size: DWORD  <||@
  Comment 2626 1132 TEST (x: r8|DWORD, y: [r14|QWORD[.] + r13|QWORD * 4 + 16]) size: DWORD  <||@
  Comment 2631 1134 BRANCH trueDestinationProbability: 0.8923207656059002 condition: = trueDestination: B111 -> B112 falseDestination: B111 -> B113  <||@
  Comment 2637 block B113 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2637 1144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2637 1146 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2642 1148 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2647 1150 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 2654 1152 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:3, 28, 32, 7]  <||@
  Comment 2654 [rdx:0, rsi:0, r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3            |4              
     locals:  |stack:88|QWORD[.]  |rdx|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3            |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |r8|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2654 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2658 1154 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2662 1156 rcx|DWORD = INC rcx|DWORD size: DWORD  <||@
  Comment 2664 1158 r13|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2667 1162 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2670 1166 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:31, 19, 28, 32, 7]  <||@
  Comment 2670 7  <||@
  Comment 2687 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2692 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2693 1168 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2695 1170 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B113 -> B114 falseDestination: B113 -> B116  <||@
  Comment 2701 block B116 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2701 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2701 1188 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2706 1190 rcx|DWORD = MOV [rdx|QWORD[.] + 32] size: DWORD  <||@
  Comment 2709 1192 r11|DWORD = INC stack:92|DWORD size: DWORD  <||@
  Comment 2717 1194 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2722 1196 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2727 1198 JUMP ~[] destination: B116 -> B101  <||@
  Comment 2727 block B101 loop 1 depth 1 header:272|LoopBegin  <||@
  Comment 2727 1048 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2727 1050 rsi|DWORD = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 2735 1052 CMP (x: rsi|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2738 1054 BRANCH trueDestinationProbability: 0.5533923900859385 condition: > trueDestination: B101 -> B102 falseDestination: B101 -> B129  <||@
  Comment 2749 block B179 null  <||@
  Comment 2749 1766 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2749 1768 CMP r9|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2749 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2756 1770 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B179 -> B180 falseDestination: B179 -> B302  <||@
  Comment 2762 block B180 null  <||@
  Comment 2762 1772 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2762 1774 stack:128|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 2766 1776 r9|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2774 1778 rcx|DWORD = MOV [r9|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 2774 [rdx:0, rbx:0, rsi:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2774 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2782 1780 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2782 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2788 1782 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B180 -> B181 falseDestination: B180 -> B186  <||@
  Comment 2794 block B181 null  <||@
  Comment 2794 1784 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2794 1786 CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2802 1788 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B181 -> B182 falseDestination: B181 -> B183  <||@
  Comment 2808 block B183 null  <||@
  Comment 2808 1796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2808 1798 CMP (x: rax|DWORD, y: [r9|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2816 1800 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B183 -> B184 falseDestination: B183 -> B185  <||@
  Comment 2822 block B185 null  <||@
  Comment 2822 1814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2822 1816 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2827 1818 JUMP ~[] destination: B185 -> B272  <||@
  Comment 2832 block B28 null  <||@
  Comment 2832 276 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2832 278 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2832 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2839 280 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B28 -> B29 falseDestination: B28 -> B91  <||@
  Comment 2845 block B29 null  <||@
  Comment 2845 282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2845 284 r10|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 2853 286 rcx|DWORD = MOV [r10|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 32, 7]  <||@
  Comment 2853 [rdx:0, rsi:0, r10:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2853 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2861 288 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 2861 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 2867 290 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B29 -> B30 falseDestination: B29 -> B35  <||@
  Comment 2873 block B30 null  <||@
  Comment 2873 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2873 294 CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 2881 296 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B32  <||@
  Comment 2887 block B32 null  <||@
  Comment 2887 304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2887 306 CMP (x: r13|DWORD, y: [r10|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 2895 308 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B32 -> B33 falseDestination: B32 -> B34  <||@
  Comment 2901 block B34 null  <||@
  Comment 2901 330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2901 332 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2907 334 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2912 336 JUMP ~[] destination: B34 -> B68  <||@
  Comment 2917 block B82 null  <||@
  Comment 2917 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2917 838 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 2921 840 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2926 842 stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2930 844 stack:120|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2935 846 JUMP ~[] destination: B82 -> B83  <||@
  Comment 2935 block B83 null  <||@
  Comment 2935 848 [] = LABEL numbPhis: 4 align: false label: ?  <||@
  Comment 2935 850 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2938 852 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2941 856 rcx|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 2944 858 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2949 860 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:70, 37, 28, 32, 7]  <||@
  Comment 2949 7  <||@
  Comment 2959 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 2964 [stack:24, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 70, duringCall: true, rethrow: false]
              |0                   |1                  |2  |3  |4  |5                |6               
     locals:  |stack:120|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |-  |stack:104|DWORD  |stack:100|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 2965 862 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2967 864 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B83 -> B84 falseDestination: B83 -> B85  <||@
  Comment 2973 block B85 null  <||@
  Comment 2973 882 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2973 884 rax|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 2978 886 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 2983 888 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2988 890 JUMP ~[] destination: B85 -> B134  <||@
  Comment 2993 block B186 null  <||@
  Comment 2993 1820 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2993 1822 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 2993 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 2999 1824 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B186 -> B187 falseDestination: B186 -> B301  <||@
  Comment 3005 block B187 null  <||@
  Comment 3005 1826 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3005 1828 stack:132|DWORD[.] = MOVE r9|DWORD[.] moveKind: DWORD  <||@
  Comment 3010 1830 rcx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3018 1832 rdi|DWORD = MOV [rcx|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 3018 [rcx:0, rdx:0, rbx:0, r9:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4          |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rbp|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3018 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3025 1834 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3025 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3031 1836 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B193  <||@
  Comment 3037 block B188 null  <||@
  Comment 3037 1838 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3037 1840 CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3044 1842 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190  <||@
  Comment 3050 block B190 null  <||@
  Comment 3050 1850 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3050 1852 CMP (x: rax|DWORD, y: [rcx|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3057 1854 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3063 block B192 null  <||@
  Comment 3063 1868 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3063 1870 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3068 1872 JUMP ~[] destination: B192 -> B272  <||@
  Comment 3073 block B133 null  <||@
  Comment 3073 1340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3073 1342 rbx|QWORD = MOV [rbx|DWORD * 8 + 480] size: QWORD  <||@
  Comment 3081 1344 rax|QWORD = MOV [rbx|QWORD + 64] size: QWORD  <||@
  Comment 3085 1346 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3090 1348 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 3093 1356 rax|DWORD = CALL_INDIRECT (targetAddress: rax|QWORD, metaspaceMethod: rbx|QWORD, parameters: [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|QWORD[.]]) [] callTarget: HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)> config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:28, 32, 7]  <||@
  Comment 3093 {HotSpotMethod<Pattern$Node.match(Matcher, int, CharSequence)>}  <||@
  Comment 3093 10  <||@
  Comment 3095 [stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3096 1358 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3101 1360 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3106 1362 JUMP ~[] destination: B133 -> B134  <||@
  Comment 3111 block B35 null  <||@
  Comment 3111 338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3111 340 stack:108|DWORD[.] = MOVE rsi|DWORD[.] moveKind: DWORD  <||@
  Comment 3115 342 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3119 344 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3123 346 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3126 348 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 3129 350 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 18, 28, 32, 7]  <||@
  Comment 3129 7  <||@
  Comment 3143 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3148 [stack:36, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3149 352 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3151 354 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B35 -> B36 falseDestination: B35 -> B67  <||@
  Comment 3157 block B67 null  <||@
  Comment 3157 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3157 690 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3163 692 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 3168 694 JUMP ~[] destination: B67 -> B68  <||@
  Comment 3173 block B112 null  <||@
  Comment 3173 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3173 1138 rax|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3178 1140 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3183 1142 JUMP ~[] destination: B112 -> B134  <||@
  Comment 3188 block B129 null  <||@
  Comment 3188 1296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3188 1298 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3193 1300 CMP [r10|DWORD[.] * 8 + 16] y: 0 size: DWORD  <||@
  Comment 3202 1302 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3208 block B130 null  <||@
  Comment 3208 1304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3208 1306 rsi|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 3213 1308 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3218 1310 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3223 1312 r9|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 3228 1314 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|QWORD[.], rcx|DWORD, r8|DWORD, r9|QWORD[.]] [] callTarget: HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:54, 28, 32, 7]  <||@
  Comment 3228 9  <||@
  Comment 3231 {HotSpotMethod<Pattern$Curly.match0(Matcher, int, int, CharSequence)>}  <||@
  Comment 3236 [stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$Curly.match(Pattern.java:4236) [bci: 54, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3237 1316 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3242 1318 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3247 1320 JUMP ~[] destination: B130 -> B134  <||@
  Comment 3252 block B193 null  <||@
  Comment 3252 1874 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3252 1876 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}  <||@
  Comment 3252 {meta{HotSpotType<Ljava/util/regex/Pattern$5;, resolved>;compressed}}  <||@
  Comment 3258 1878 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B193 -> B194 falseDestination: B193 -> B300  <||@
  Comment 3264 block B194 null  <||@
  Comment 3264 1880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3264 1882 rdi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3271 1884 rbp|DWORD = MOV [rdi|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 50, 7]  <||@
  Comment 3271 [rcx:0, rdx:0, rdi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3271 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3278 1886 CMP rbp|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3278 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3284 1888 BRANCH trueDestinationProbability: 0.5000105004025154 condition: = trueDestination: B194 -> B195 falseDestination: B194 -> B200  <||@
  Comment 3290 block B195 null  <||@
  Comment 3290 1890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3290 1892 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3297 1894 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B195 -> B196 falseDestination: B195 -> B197  <||@
  Comment 3303 block B197 null  <||@
  Comment 3303 1902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3303 1904 CMP (x: rax|DWORD, y: [rdi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3310 1906 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B197 -> B198 falseDestination: B197 -> B199  <||@
  Comment 3316 block B199 null  <||@
  Comment 3316 1920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3316 1922 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3321 1924 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3326 1926 JUMP ~[] destination: B199 -> B240  <||@
  Comment 3326 block B240 null  <||@
  Comment 3326 2330 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3326 2332 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3328 2334 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B240 -> B241 falseDestination: B240 -> B271  <||@
  Comment 3334 block B271 null  <||@
  Comment 3334 2660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3334 2662 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3338 2664 JUMP ~[] destination: B271 -> B272  <||@
  Comment 3343 block B242 null  <||@
  Comment 3343 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3343 2348 r11|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3351 2350 NULLCHECK [r12|QWORD[*] + r11|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3351 [rdx:0, rbx:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3351 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3355 2352 r8|DWORD[.] = MOV [rbx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3363 2354 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3363 [rdx:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3363 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3363 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 3375 2356 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B242 -> B243 falseDestination: B242 -> B269  <||@
  Comment 3381 block B243 null  <||@
  Comment 3381 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3381 2360 rsi|DWORD[.] = MOV [rdx|QWORD[.] + 60] size: DWORD  <||@
  Comment 3384 2362 r9|DWORD = MOV [rsi|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3384 [rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3384 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3392 2364 rcx|DWORD = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3400 2366 CMP (x: r9|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 3403 2368 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B243 -> B244 falseDestination: B243 -> B268  <||@
  Comment 3409 block B244 null  <||@
  Comment 3409 2370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3409 2372 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3413 2374 r9|DWORD = MOV [rsi|QWORD[.] + rcx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3418 2376 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 3421 2378 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246  <||@
  Comment 3427 block B246 null  <||@
  Comment 3427 2392 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3427 2394 rcx|DWORD[.] = MOV [rdx|QWORD[.] + 52] size: DWORD  <||@
  Comment 3430 2396 rbx|DWORD = MOV [rcx|DWORD[.] * 8 + 12] size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3430 [rcx:0, rdx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3430 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3437 2398 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3445 2400 CMP (x: rbx|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 3447 2402 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B267  <||@
  Comment 3453 block B247 null  <||@
  Comment 3453 2404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3453 2406 rbp|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 3457 2408 CMP (x: rbx|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 3459 2410 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B247 -> B248 falseDestination: B247 -> B266  <||@
  Comment 3465 block B248 null  <||@
  Comment 3465 2412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3465 2414 rbx|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 3473 2416 NULLCHECK [r12|QWORD[*] + rbx|DWORD[.] * 8] state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3473 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3473 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3477 2418 r14|DWORD = MOV [r11|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 3485 2420 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3485 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3492 2422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B248 -> B249 falseDestination: B248 -> B254  <||@
  Comment 3498 block B254 null  <||@
  Comment 3498 2466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3498 2468 CMP r14|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 3498 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3505 2470 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B254 -> B255 falseDestination: B254 -> B265  <||@
  Comment 3511 block B255 null  <||@
  Comment 3511 2472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3511 2474 r11|DWORD[.] = MOV [r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3519 2476 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 50, 7]  <||@
  Comment 3519 [rcx:0, rdx:0, rbx:0, rsi:0, r8:0, r11:0, stack:64, stack:72, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |rdx|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |rdx|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3519 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3527 2478 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B255 -> B256 falseDestination: B255 -> B264  <||@
  Comment 3533 block B256 null  <||@
  Comment 3533 2480 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3533 2482 CMP r10|DWORD y: 256 size: WORD  <||@
  Comment 3539 2484 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B256 -> B257 falseDestination: B256 -> B263  <||@
  Comment 3545 block B257 null  <||@
  Comment 3545 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3545 2488 r10|QWORD = MOVZX r10|DWORD size: DWORD  <||@
  Comment 3549 2490 r10|DWORD = MOVZXB [r10|QWORD + r11|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3555 2492 TEST (x: r10|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 3558 2494 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B257 -> B258 falseDestination: B257 -> B260  <||@
  Comment 3564 block B260 null  <||@
  Comment 3564 2514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3564 2516 rcx|QWORD[.] = UNCOMPRESSPOINTER (input: rcx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3568 2518 r10|DWORD = MOV [rcx|QWORD[.] + rbp|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3573 2520 r11|DWORD = MOV [rcx|QWORD[.] + rdi|DWORD * 4 + 16] size: DWORD  <||@
  Comment 3578 2522 MOV (x: [rcx|QWORD[.] + rdi|DWORD * 4 + 16], y: r9|DWORD) size: DWORD  <||@
  Comment 3583 2524 MOV (x: [rcx|QWORD[.] + rbp|DWORD * 4 + 16], y: r13|DWORD) size: DWORD  <||@
  Comment 3588 2526 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3592 2528 CMP [rbx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 3592 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 3603 2530 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B260 -> B261 falseDestination: B260 -> B262  <||@
  Comment 3609 block B261 null  <||@
  Comment 3609 2532 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3609 2534 rbp|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3612 2536 r11|QWORD[.] = MOVE rcx|QWORD[.] moveKind: QWORD  <||@
  Comment 3615 2538 rdx|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3618 2540 rcx|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3621 2542 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3624 2544 r8|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 3627 2546 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 3632 2548 JUMP ~[] destination: B261 -> B280  <||@
  Comment 3637 block B200 null  <||@
  Comment 3637 1928 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3637 1930 stack:136|DWORD[.] = MOVE rcx|DWORD[.] moveKind: DWORD  <||@
  Comment 3641 1932 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3646 1934 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: rdi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3650 1936 rsi|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 3653 1938 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3655 1940 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:5, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3655 7  <||@
  Comment 3671 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3676 [stack:8, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:136|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3677 1942 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 3679 1944 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B200 -> B201 falseDestination: B200 -> B239  <||@
  Comment 3685 block B239 null  <||@
  Comment 3685 2320 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3685 2322 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3690 2324 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 3695 2326 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3699 2328 JUMP ~[] destination: B239 -> B240  <||@
  Comment 3704 block B249 null  <||@
  Comment 3704 2424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3704 2426 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3712 2428 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B249 -> B250 falseDestination: B249 -> B251  <||@
  Comment 3718 block B251 null  <||@
  Comment 3718 2442 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3718 2444 CMP (x: rax|DWORD, y: [r11|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3726 2446 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B251 -> B252 falseDestination: B251 -> B253  <||@
  Comment 3732 block B253 null  <||@
  Comment 3732 2460 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3732 2464 JUMP ~[] destination: B253 -> B260  <||@
  Comment 3737 block B161 null  <||@
  Comment 3737 1626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3737 1628 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3742 1630 JUMP ~[] destination: B161 -> B220  <||@
  Comment 3742 block B220 null  <||@
  Comment 3742 2156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3742 2158 rsi|DWORD[.] = MOV [r11|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3750 2160 rdx|DWORD = MOV [rsi|DWORD[.] * 8 + 8] size: DWORD state [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 3750 [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3750 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3757 2162 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}  <||@
  Comment 3757 {meta{HotSpotType<Ljava/util/regex/Pattern$1;, resolved>;compressed}}  <||@
  Comment 3763 2164 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B220 -> B221 falseDestination: B220 -> B226  <||@
  Comment 3769 block B226 null  <||@
  Comment 3769 2208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3769 2210 CMP rdx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}  <||@
  Comment 3769 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3775 2212 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B226 -> B227 falseDestination: B226 -> B232  <||@
  Comment 3781 block B227 null  <||@
  Comment 3781 2214 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3781 2216 CMP stack:96|DWORD y: 256 size: WORD  <||@
  Comment 3788 2218 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B227 -> B228 falseDestination: B227 -> B231  <||@
  Comment 3794 block B228 null  <||@
  Comment 3794 2220 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3794 2222 rsi|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3801 2224 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 3801 [rsi:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3801 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3808 2226 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B228 -> B229 falseDestination: B228 -> B230  <||@
  Comment 3814 block B229 null  <||@
  Comment 3814 2228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3814 2230 rdx|QWORD = MOVZX stack:96|DWORD size: DWORD  <||@
  Comment 3819 2232 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 3824 2234 JUMP ~[] destination: B229 -> B240  <||@
  Comment 3829 block B221 null  <||@
  Comment 3829 2166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3829 2168 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 16]) size: DWORD  <||@
  Comment 3836 2170 BRANCH trueDestinationProbability: 0.02420300868371932 condition: < trueDestination: B221 -> B222 falseDestination: B221 -> B223  <||@
  Comment 3842 block B223 null  <||@
  Comment 3842 2182 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3842 2184 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 20]) size: DWORD  <||@
  Comment 3849 2186 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225  <||@
  Comment 3855 block B225 null  <||@
  Comment 3855 2200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3855 2202 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3860 2204 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3864 2206 JUMP ~[] destination: B225 -> B272  <||@
  Comment 3869 block B168 null  <||@
  Comment 3869 1684 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3869 1686 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3874 1688 JUMP ~[] destination: B168 -> B210  <||@
  Comment 3874 block B210 null  <||@
  Comment 3874 2052 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3874 2054 r10|DWORD[.] = MOV [r8|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3882 2056 CMP [r10|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3882 [r8:0, r10:0, r11:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |r11|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3882 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3882 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3894 2058 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B210 -> B211 falseDestination: B210 -> B217  <||@
  Comment 3900 block B217 null  <||@
  Comment 3900 2126 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3900 2128 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3904 2130 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 3907 2132 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3909 2134 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 50, 7]  <||@
  Comment 3909 7  <||@
  Comment 3919 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 3924 [stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3925 2136 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3927 2138 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 3931 2140 JUMP ~[] destination: B217 -> B218  <||@
  Comment 3931 block B218 null  <||@
  Comment 3931 2142 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3931 2144 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 3933 2146 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B218 -> B219 falseDestination: B218 -> B234  <||@
  Comment 3939 block B234 null  <||@
  Comment 3939 2280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3939 2282 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3944 2284 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 3948 2286 JUMP ~[] destination: B234 -> B272  <||@
  Comment 3953 block B17 null  <||@
  Comment 3953 192 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3953 194 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 3957 196 JUMP ~[] destination: B17 -> B41  <||@
  Comment 3957 block B41 null  <||@
  Comment 3957 416 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3957 418 r8|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 3965 420 CMP [r8|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed} state [bci:8, 18, 28, 32, 7]  <||@
  Comment 3965 [r8:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4          |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 3965 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 3965 {meta{HotSpotType<Ljava/util/regex/Pattern$BitClass;, resolved>;compressed}}  <||@
  Comment 3977 422 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B41 -> B42 falseDestination: B41 -> B48  <||@
  Comment 3983 block B48 null  <||@
  Comment 3983 472 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3983 474 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 3987 476 rsi|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 3990 478 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 3994 480 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 18, 28, 32, 7]  <||@
  Comment 3994 7  <||@
  Comment 4007 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4012 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4013 482 rsi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4015 484 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4020 486 JUMP ~[] destination: B48 -> B49  <||@
  Comment 4020 block B49 null  <||@
  Comment 4020 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4020 490 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 4022 492 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B49 -> B50 falseDestination: B49 -> B51  <||@
  Comment 4028 block B51 null  <||@
  Comment 4028 504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4028 506 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4033 508 rdx|DWORD[.] = MOV [r10|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4041 510 CMP [rdx|DWORD[.] * 8 + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed} state [bci:21, 28, 32, 7]  <||@
  Comment 4041 [rdx:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |                   |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4041 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4041 {meta{HotSpotType<Ljava/util/regex/Pattern$GroupTail;, resolved>;compressed}}  <||@
  Comment 4052 512 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B51 -> B52 falseDestination: B51 -> B63  <||@
  Comment 4058 block B52 null  <||@
  Comment 4058 514 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4058 516 r11|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4063 518 r10|DWORD[.] = MOV [r11|QWORD[.] + 60] size: DWORD  <||@
  Comment 4067 520 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4067 [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4067 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4075 522 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4083 524 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 4086 526 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B52 -> B53 falseDestination: B52 -> B62  <||@
  Comment 4092 block B53 null  <||@
  Comment 4092 528 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4092 530 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4096 532 rcx|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4101 534 TEST (x: rcx|DWORD, y: rcx|DWORD) size: DWORD  <||@
  Comment 4103 536 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B53 -> B54 falseDestination: B53 -> B55  <||@
  Comment 4109 block B55 null  <||@
  Comment 4109 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4109 550 r10|DWORD[.] = MOV [r11|QWORD[.] + 52] size: DWORD  <||@
  Comment 4113 552 r8|DWORD = MOV [r10|DWORD[.] * 8 + 12] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4113 [rdx:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4113 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4121 554 r9|DWORD = MOV [rdx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4129 556 CMP (x: r8|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 4132 558 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B55 -> B56 falseDestination: B55 -> B61  <||@
  Comment 4138 block B56 null  <||@
  Comment 4138 560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4138 562 rbx|DWORD = INC r9|DWORD size: DWORD  <||@
  Comment 4143 564 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 4146 566 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B56 -> B57 falseDestination: B56 -> B60  <||@
  Comment 4152 block B57 null  <||@
  Comment 4152 568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4152 570 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4157 572 r8|DWORD[.] = MOV [rdx|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4165 574 rdi|DWORD = MOV [r8|DWORD[.] * 8 + 8] size: DWORD state [bci:21, 28, 32, 7]  <||@
  Comment 4165 [rdx:0, r8:0, r10:0, r11:0, stack:56, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD          |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r11|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r11|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4165 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4173 576 r10|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4177 578 rsi|DWORD = MOV [r10|QWORD[.] + rbx|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4182 580 rax|DWORD = MOV [r10|QWORD[.] + r9|DWORD * 4 + 16] size: DWORD  <||@
  Comment 4187 582 MOV (x: [r10|QWORD[.] + r9|DWORD * 4 + 16], y: rcx|DWORD) size: DWORD  <||@
  Comment 4192 584 MOV (x: [r10|QWORD[.] + rbx|DWORD * 4 + 16], y: r14|DWORD) size: DWORD  <||@
  Comment 4197 586 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4201 588 CMP rdi|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}  <||@
  Comment 4201 {meta{HotSpotType<Ljava/util/regex/Pattern$LastNode;, resolved>;compressed}}  <||@
  Comment 4207 590 BRANCH trueDestinationProbability: 0.8257972313536578 condition: = trueDestination: B57 -> B58 falseDestination: B57 -> B59  <||@
  Comment 4213 block B58 null  <||@
  Comment 4213 592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4213 594 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 4216 596 stack:32|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4221 598 r11|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4224 600 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4227 602 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4232 604 JUMP ~[] destination: B58 -> B76  <||@
  Comment 4237 block B262 null  <||@
  Comment 4237 2550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4237 2552 rbx|QWORD[.] = UNCOMPRESSPOINTER (input: rbx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4241 2554 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4246 2556 stack:100|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4251 2558 rsi|QWORD[.] = MOVE rbx|QWORD[.] moveKind: QWORD  <||@
  Comment 4254 2560 stack:88|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4259 2564 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4264 2566 JUMP ~[] destination: B262 -> B289  <||@
  Comment 4269 block B211 null  <||@
  Comment 4269 2060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4269 2062 CMP stack:96|DWORD y: 256 size: WORD  <||@
  Comment 4276 2064 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B211 -> B212 falseDestination: B211 -> B215  <||@
  Comment 4282 block B212 null  <||@
  Comment 4282 2066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4282 2070 rsi|DWORD[.] = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4290 2072 CMP (x: rax|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4290 [rsi:0, r8:0, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:100|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4290 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4297 2074 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B212 -> B213 falseDestination: B212 -> B214  <||@
  Comment 4303 block B213 null  <||@
  Comment 4303 2076 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4303 2078 rdx|QWORD = MOVZX stack:96|DWORD size: DWORD  <||@
  Comment 4308 2080 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4313 2082 JUMP ~[] destination: B213 -> B218  <||@
  Comment 4318 block B175 null  <||@
  Comment 4318 1736 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4318 1738 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4323 1740 JUMP ~[] destination: B175 -> B208  <||@
  Comment 4323 block B208 null  <||@
  Comment 4323 2024 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4323 2026 rsi|DWORD[.] = MOV [r14|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4331 2028 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4331 [rsi:0, r14:0, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |r14|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:108|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1         
     locals:  |stack:100|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:72|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4331 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4335 2030 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4339 2032 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4341 2034 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4341 7  <||@
  Comment 4351 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4356 [stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4357 2036 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4359 2038 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B208 -> B209 falseDestination: B208 -> B235  <||@
  Comment 4365 block B235 null  <||@
  Comment 4365 2288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4365 2290 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4370 2292 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4374 2294 JUMP ~[] destination: B235 -> B272  <||@
  Comment 4379 block B42 null  <||@
  Comment 4379 424 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4379 426 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4384 428 rsi|DWORD[.] = MOV [r8|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4392 430 CMP (x: r13|DWORD, y: [rsi|DWORD[.] * 8 + 12]) size: DWORD state [bci:8, 18, 28, 32, 7]  <||@
  Comment 4392 [rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1         
     locals:  |stack:88|QWORD[.]  |r13|DWORD 
     stack:   |int[0|0x0]         |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4392 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4400 432 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B42 -> B43 falseDestination: B42 -> B46  <||@
  Comment 4406 block B43 null  <||@
  Comment 4406 434 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4406 436 CMP stack:100|DWORD y: 256 size: WORD  <||@
  Comment 4413 438 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B43 -> B44 falseDestination: B43 -> B45  <||@
  Comment 4419 block B44 null  <||@
  Comment 4419 440 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4419 442 rdx|QWORD = MOVZX stack:100|DWORD size: DWORD  <||@
  Comment 4424 444 rsi|DWORD = MOVZXB [rdx|QWORD + rsi|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 4429 446 JUMP ~[] destination: B44 -> B49  <||@
  Comment 4434 block B24 null  <||@
  Comment 4434 246 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4434 248 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4438 250 JUMP ~[] destination: B24 -> B39  <||@
  Comment 4438 block B39 null  <||@
  Comment 4438 388 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4438 390 rsi|DWORD[.] = MOV [rbp|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4445 392 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 18, 28, 32, 7]  <||@
  Comment 4445 [rbp:0, rsi:0, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1         
     locals:  |rbp|DWORD[.]  |r13|DWORD 
     stack:   |int[0|0x0]    |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1         
     locals:  |stack:88|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4         
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4445 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4449 394 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4453 396 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4456 398 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 18, 28, 32, 7]  <||@
  Comment 4456 7  <||@
  Comment 4471 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4476 [stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4477 400 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4479 402 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B39 -> B40 falseDestination: B39 -> B65  <||@
  Comment 4485 block B65 null  <||@
  Comment 4485 672 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4485 674 r11|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4488 676 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4493 678 JUMP ~[] destination: B65 -> B68  <||@
  Comment 4498 block B182 null  <||@
  Comment 4498 1790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4498 1792 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4503 1794 JUMP ~[] destination: B182 -> B206  <||@
  Comment 4503 block B206 null  <||@
  Comment 4503 1998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4503 2000 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4510 2002 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4510 [rdx:0, rsi:0, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4510 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4514 2004 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4518 2006 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4521 2008 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4525 2010 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4525 7  <||@
  Comment 4535 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4540 [stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4541 2012 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4543 2014 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B206 -> B207 falseDestination: B206 -> B236  <||@
  Comment 4549 block B236 null  <||@
  Comment 4549 2296 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4549 2298 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4554 2300 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4558 2302 JUMP ~[] destination: B236 -> B272  <||@
  Comment 4563 block B31 null  <||@
  Comment 4563 298 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4563 300 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 4567 302 JUMP ~[] destination: B31 -> B37  <||@
  Comment 4567 block B37 null  <||@
  Comment 4567 362 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4567 364 rdx|DWORD[.] = MOV [rsi|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4574 366 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 18, 28, 32, 7]  <||@
  Comment 4574 [rdx:0, rsi:0, stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rsi|DWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4574 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4578 368 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4582 370 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4585 372 rdx|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4589 374 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 18, 28, 32, 7]  <||@
  Comment 4589 7  <||@
  Comment 4599 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4604 [stack:40, stack:56, stack:68, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:104|DWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4605 376 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4607 378 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B37 -> B38 falseDestination: B37 -> B66  <||@
  Comment 4613 block B66 null  <||@
  Comment 4613 680 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4613 682 r11|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4619 684 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4624 686 JUMP ~[] destination: B66 -> B68  <||@
  Comment 4629 block B59 null  <||@
  Comment 4629 606 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4629 608 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4633 610 stack:100|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 4637 612 stack:104|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4641 614 r10|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4644 616 stack:120|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4649 620 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4654 622 JUMP ~[] destination: B59 -> B83  <||@
  Comment 4659 block B189 null  <||@
  Comment 4659 1844 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4659 1846 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4664 1848 JUMP ~[] destination: B189 -> B204  <||@
  Comment 4664 block B204 null  <||@
  Comment 4664 1974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4664 1976 rdx|DWORD[.] = MOV [r9|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4672 1978 NULLCHECK [r12|QWORD[*] + rdx|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4672 [rdx:0, r9:0, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1              
     locals:  |r9|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]   |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4672 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4676 1980 rdx|QWORD[.] = UNCOMPRESSPOINTER (input: rdx|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4680 1982 rsi|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4683 1984 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4687 1986 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4687 7  <||@
  Comment 4703 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4708 [stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4709 1988 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4711 1990 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B204 -> B205 falseDestination: B204 -> B237  <||@
  Comment 4717 block B237 null  <||@
  Comment 4717 2304 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4717 2306 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4722 2308 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4726 2310 JUMP ~[] destination: B237 -> B272  <||@
  Comment 4731 block B36 null  <||@
  Comment 4731 356 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4731 358 rsi|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 4735 360 JUMP ~[] destination: B36 -> B37  <||@
  Comment 4740 block B241 null  <||@
  Comment 4740 2336 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4740 2338 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4745 2340 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4749 2342 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4754 2344 JUMP ~[] destination: B241 -> B242  <||@
  Comment 4759 block B196 null  <||@
  Comment 4759 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4759 1898 stack:96|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4764 1900 JUMP ~[] destination: B196 -> B202  <||@
  Comment 4764 block B202 null  <||@
  Comment 4764 1952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4764 1954 rsi|DWORD[.] = MOV [rcx|DWORD[.] * 8 + 20] size: DWORD  <||@
  Comment 4771 1956 NULLCHECK [r12|QWORD[*] + rsi|DWORD[.] * 8] state [bci:8, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4771 [rcx:0, rsi:0, stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rcx|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]    |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4771 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4775 1958 rsi|QWORD[.] = UNCOMPRESSPOINTER (input: rsi|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@32843f4d encoding: base: 0 shift: 3  <||@
  Comment 4779 1960 rdx|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4783 1962 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:16, 5, 5, 5, 5, 5, 5, 18, 28, 50, 7]  <||@
  Comment 4783 7  <||@
  Comment 4799 {HotSpotMethod<Pattern$CharProperty.isSatisfiedBy(int)>}  <||@
  Comment 4804 [stack:12, stack:16, stack:20, stack:36, stack:44, stack:64, stack:72, stack:84, stack:92, stack:96, stack:112]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 16, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:132|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:128|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:124|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:108|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1                  |2  |3  |4               |5 
     locals:  |stack:80|DWORD[.]  |stack:32|QWORD[.]  |-  |-  |stack:92|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1                  |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |stack:32|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 4805 1964 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 4807 1966 BRANCH trueDestinationProbability: 0.012246995066949262 condition: = trueDestination: B202 -> B203 falseDestination: B202 -> B238  <||@
  Comment 4813 block B238 null  <||@
  Comment 4813 2312 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4813 2314 rsi|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4818 2316 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4822 2318 JUMP ~[] destination: B238 -> B272  <||@
  Comment 4827 block B201 null  <||@
  Comment 4827 1946 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4827 1948 rcx|DWORD[.] = MOVE stack:136|DWORD[.] moveKind: DWORD  <||@
  Comment 4831 1950 JUMP ~[] destination: B201 -> B202  <||@
  Comment 4833 block B222 null  <||@
  Comment 4833 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4833 2174 r10|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4838 2176 rbx|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4842 2178 rdx|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4847 2180 JUMP ~[] destination: B222 -> B242  <||@
  Comment 4852 block B219 null  <||@
  Comment 4852 2148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4852 2150 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 4857 2152 r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 4862 2154 JUMP ~[] destination: B219 -> B220  <||@
  Comment 4867 block B209 null  <||@
  Comment 4867 2040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4867 2042 r8|DWORD[.] = MOVE stack:108|DWORD[.] moveKind: DWORD  <||@
  Comment 4872 2044 r13|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 4877 2046 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4881 2048 r11|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 4886 2050 JUMP ~[] destination: B209 -> B210  <||@
  Comment 4891 block B40 null  <||@
  Comment 4891 404 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4891 406 r14|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4896 408 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 4900 410 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 4905 412 r11|DWORD[.] = MOVE stack:60|DWORD[.] moveKind: DWORD  <||@
  Comment 4910 414 JUMP ~[] destination: B40 -> B41  <||@
  Comment 4915 block B38 null  <||@
  Comment 4915 380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4915 382 r13|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4920 384 rbp|DWORD[.] = MOVE stack:104|DWORD[.] moveKind: DWORD  <||@
  Comment 4924 386 JUMP ~[] destination: B38 -> B39  <||@
  Comment 4929 block B207 null  <||@
  Comment 4929 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4929 2018 r14|DWORD[.] = MOVE stack:124|DWORD[.] moveKind: DWORD  <||@
  Comment 4934 2020 rax|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 4938 2022 JUMP ~[] destination: B207 -> B208  <||@
  Comment 4943 block B205 null  <||@
  Comment 4943 1992 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4943 1994 rsi|DWORD[.] = MOVE stack:128|DWORD[.] moveKind: DWORD  <||@
  Comment 4947 1996 JUMP ~[] destination: B205 -> B206  <||@
  Comment 4952 block B203 null  <||@
  Comment 4952 1968 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4952 1970 r9|DWORD[.] = MOVE stack:132|DWORD[.] moveKind: DWORD  <||@
  Comment 4957 1972 JUMP ~[] destination: B203 -> B204  <||@
  Comment 4962 block B293 null  <||@
  Comment 4962 2902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4962 2904 r11|DWORD = MOVE input: int[-877851|0xfffffffffff29ae5]  <||@
  Comment 4968 2906 rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 4972 2908 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4977 2910 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 4982 2912 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 4986 2914 JUMP ~[] destination: B293 -> B294  <||@
  Comment 4986 block B294 null  <||@
  Comment 4986 2916 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4986 2918 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 4993 2920 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5000 2922 DEOPT info [bci:73, 37, 28, 50, 7]  <||@
  Comment 5000 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5005 [rbx:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0             |1             |2  |3  |4  |5         |6         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r8|DWORD  |rcx|DWORD 
     stack:   |rax|DWORD     |              |   |   |   |          |          
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5006 block B131 null  <||@
  Comment 5006 1322 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5006 1324 r11|DWORD = MOVE input: int[-760339|0xfffffffffff465ed]  <||@
  Comment 5012 1326 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5017 1328 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5022 1330 JUMP ~[] destination: B131 -> B132  <||@
  Comment 5022 block B132 null  <||@
  Comment 5022 1332 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5022 1334 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5029 1336 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5036 1338 DEOPT info [bci:3, 28, 32, 7]  <||@
  Comment 5036 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5041 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4        
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |r8|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5042 block B214 null  <||@
  Comment 5042 2084 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5042 2086 r11|DWORD = MOVE input: int[-814363|0xfffffffffff392e5]  <||@
  Comment 5048 2098 JUMP ~[] destination: B214 -> B216  <||@
  Comment 5048 block B216 null  <||@
  Comment 5048 2118 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5048 2106 rcx|DWORD[.] = MOVE stack:100|DWORD[.] moveKind: DWORD  <||@
  Comment 5052 2108 rbx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5057 2110 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5061 2112 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5066 2114 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5071 2120 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5078 2122 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5085 2124 DEOPT info [bci:8, 5, 5, 18, 28, 50, 7]  <||@
  Comment 5085 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5090 [rcx:0, rbx:0, r8:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0            |1         
     locals:  |r8|DWORD[.]  |rax|DWORD 
     stack:   |int[0|0x0]   |          
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rcx|DWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0             |1         
     locals:  |rbx|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rbx|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rax|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5091 block B88 null  <||@
  Comment 5091 908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5091 910 r8|DWORD = MOVE input: int[-724763|0xfffffffffff4f0e5]  <||@
  Comment 5097 912 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5100 914 JUMP ~[] destination: B88 -> B90  <||@
  Comment 5100 block B90 null  <||@
  Comment 5100 924 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5100 926 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 5107 928 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5114 930 DEOPT info [bci:8, 18, 28, 32, 7]  <||@
  Comment 5114 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5119 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |r11|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5120 block B89 null  <||@
  Comment 5120 916 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5120 918 r8|DWORD = MOVE input: int[-721971|0xfffffffffff4fbcd]  <||@
  Comment 5126 920 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5131 922 JUMP ~[] destination: B89 -> B90  <||@
  Comment 5133 block B224 null  <||@
  Comment 5133 2188 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5133 2190 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5137 2192 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5142 2194 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5147 2196 r11|DWORD = MOVE input: int[-818451|0xfffffffffff382ed]  <||@
  Comment 5153 2198 JUMP ~[] destination: B224 -> B233  <||@
  Comment 5153 block B233 null  <||@
  Comment 5153 2272 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5153 2274 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5160 2276 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5167 2278 DEOPT info [bci:8, 5, 18, 28, 50, 7]  <||@
  Comment 5167 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5172 [r9:0, r10:0, stack:44, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                   |1              
     locals:  |stack:100|DWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]          |               
  at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 5, duringCall: true, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5173 block B232 null  <||@
  Comment 5173 2260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5173 2262 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5177 2264 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5182 2266 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5187 2268 r11|DWORD = MOVE input: int[-818739|0xfffffffffff381cd]  <||@
  Comment 5193 2270 JUMP ~[] destination: B232 -> B233  <||@
  Comment 5195 block B363 null  <||@
  Comment 5195 3626 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5195 3628 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5198 3630 r11|DWORD = MOVE input: int[-664603|0xfffffffffff5dbe5]  <||@
  Comment 5204 3632 JUMP ~[] destination: B363 -> B365  <||@
  Comment 5204 block B365 null  <||@
  Comment 5204 3642 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5204 3644 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5211 3646 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5218 3648 DEOPT info [bci:3, 7]  <||@
  Comment 5218 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5223 [r10:0, stack:92, stack:96]at java.util.regex.Pattern$Branch.match(Pattern.java:4602) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5224 block B250 null  <||@
  Comment 5224 2430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5224 2432 r11|DWORD = MOVE input: int[-843283|0xfffffffffff321ed]  <||@
  Comment 5230 2434 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5234 2436 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5239 2438 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5244 2440 JUMP ~[] destination: B250 -> B270  <||@
  Comment 5244 block B270 null  <||@
  Comment 5244 2652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5244 2654 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5251 2656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5258 2658 DEOPT info [bci:8, 18, 28, 50, 7]  <||@
  Comment 5258 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5263 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5264 block B258 null  <||@
  Comment 5264 2496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5264 2498 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5268 2500 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5273 2502 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5276 2504 MOV [r15|QWORD + 668] y: -823571 size: DWORD  <||@
  Comment 5287 2506 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5294 2508 DEOPT info [bci:21, 28, 50, 7]  <||@
  Comment 5294 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5299 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5300 block B263 null  <||@
  Comment 5300 2568 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5300 2570 r11|DWORD = MOVE input: int[-844051|0xfffffffffff31eed]  <||@
  Comment 5306 2572 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5310 2574 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5315 2576 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5318 2578 JUMP ~[] destination: B263 -> B270  <||@
  Comment 5320 block B264 null  <||@
  Comment 5320 2580 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5320 2582 r11|DWORD = MOVE input: int[-846619|0xfffffffffff314e5]  <||@
  Comment 5326 2584 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5330 2586 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5335 2588 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5338 2590 JUMP ~[] destination: B264 -> B270  <||@
  Comment 5340 block B265 null  <||@
  Comment 5340 2592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5340 2594 r11|DWORD = MOVE input: int[-843827|0xfffffffffff31fcd]  <||@
  Comment 5346 2596 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5350 2598 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5355 2600 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5358 2602 JUMP ~[] destination: B265 -> B270  <||@
  Comment 5360 block B215 null  <||@
  Comment 5360 2100 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5360 2102 r11|DWORD = MOVE input: int[-811795|0xfffffffffff39ced]  <||@
  Comment 5366 2116 JUMP ~[] destination: B215 -> B216  <||@
  Comment 5371 block B266 null  <||@
  Comment 5371 2604 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5371 2606 r11|DWORD = MOVE input: int[-839451|0xfffffffffff330e5]  <||@
  Comment 5377 2608 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5381 2610 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5386 2612 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5389 2614 JUMP ~[] destination: B266 -> B270  <||@
  Comment 5394 block B267 null  <||@
  Comment 5394 2616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5394 2618 r11|DWORD = MOVE input: int[-837147|0xfffffffffff339e5]  <||@
  Comment 5400 2620 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5404 2622 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5409 2624 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5412 2626 JUMP ~[] destination: B267 -> B270  <||@
  Comment 5417 block B245 null  <||@
  Comment 5417 2380 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5417 2382 r11|DWORD = MOVE input: int[-829459|0xfffffffffff357ed]  <||@
  Comment 5423 2384 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5427 2386 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5432 2388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5435 2390 JUMP ~[] destination: B245 -> B270  <||@
  Comment 5440 block B290 null  <||@
  Comment 5440 2858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5440 2860 r11|DWORD = MOVE input: int[-875283|0xfffffffffff2a4ed]  <||@
  Comment 5446 2862 rcx|DWORD = MOVE stack:96|DWORD moveKind: DWORD  <||@
  Comment 5450 2864 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 5455 2866 rbx|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5460 2868 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5464 2870 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5469 2872 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5474 2874 JUMP ~[] destination: B290 -> B294  <||@
  Comment 5479 block B269 null  <||@
  Comment 5479 2640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5479 2642 r11|DWORD = MOVE input: int[-824883|0xfffffffffff369cd]  <||@
  Comment 5485 2644 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5489 2646 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5494 2648 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5497 2650 JUMP ~[] destination: B269 -> B270  <||@
  Comment 5502 block B198 null  <||@
  Comment 5502 1908 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5502 1910 r11|DWORD = MOVE input: int[-803091|0xfffffffffff3beed]  <||@
  Comment 5508 1912 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5512 1914 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5517 1916 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5520 1918 JUMP ~[] destination: B198 -> B311  <||@
  Comment 5520 block B311 null  <||@
  Comment 5520 3090 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5520 3092 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5527 3094 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5534 3096 DEOPT info [bci:21, 50, 7]  <||@
  Comment 5534 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5539 [r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2               |3                  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5540 block B96 null  <||@
  Comment 5540 1000 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5540 1002 r11|DWORD = MOVE input: int[-679731|0xfffffffffff5a0cd]  <||@
  Comment 5546 1004 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 5550 1010 JUMP ~[] destination: B96 -> B98  <||@
  Comment 5550 block B98 null  <||@
  Comment 5550 1026 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5550 1020 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5553 1022 rdx|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 5557 1028 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5564 1030 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5571 1032 DEOPT info [bci:21, 32, 7]  <||@
  Comment 5571 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5576 [rbx:0, r8:0, r9:0, r10:0]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 21, duringCall: false, rethrow: false]
              |0            |1             |2          |3            |4          |5 
     locals:  |r9|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0             |1             |2          |3            |4         
     locals:  |rbx|DWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |r8|QWORD[.]  |rdx|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5577 block B45 null  <||@
  Comment 5577 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5577 450 r11|DWORD = MOVE input: int[-716563|0xfffffffffff510ed]  <||@
  Comment 5583 454 JUMP ~[] destination: B45 -> B47  <||@
  Comment 5583 block B47 null  <||@
  Comment 5583 464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5583 460 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5588 466 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5595 468 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5602 470 DEOPT info [bci:8, 18, 28, 32, 7]  <||@
  Comment 5602 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5607 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:88|QWORD[.]  |stack:92|DWORD 
     stack:   |int[0|0x0]         |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5608 block B300 null  <||@
  Comment 5608 2974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5608 2976 r11|DWORD = MOVE input: int[-800819|0xfffffffffff3c7cd]  <||@
  Comment 5614 2978 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5616 2980 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5621 2982 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5624 2984 JUMP ~[] destination: B300 -> B311  <||@
  Comment 5626 block B301 null  <||@
  Comment 5626 2986 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5626 2988 r11|DWORD = MOVE input: int[-798259|0xfffffffffff3d1cd]  <||@
  Comment 5632 2990 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5634 2992 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5639 2994 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5642 2996 JUMP ~[] destination: B301 -> B311  <||@
  Comment 5644 block B309 null  <||@
  Comment 5644 3070 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5644 3072 r11|DWORD = MOVE input: int[-780083|0xfffffffffff418cd]  <||@
  Comment 5650 3074 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5652 3076 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5655 3078 JUMP ~[] destination: B309 -> B311  <||@
  Comment 5660 block B84 null  <||@
  Comment 5660 866 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5660 868 r8|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 5665 870 r11|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 5670 872 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5675 874 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5680 876 MOV [r15|QWORD + 668] y: -747283 size: DWORD  <||@
  Comment 5691 878 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5698 880 DEOPT info [bci:73, 37, 28, 32, 7]  <||@
  Comment 5698 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5703 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 73, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4  |5          |6        
     locals:  |r9|QWORD[.]  |r10|QWORD[.]  |-  |-  |-  |r11|DWORD  |r8|DWORD 
     stack:   |int[0|0x0]   |              |   |   |   |           |         
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5704 block B91 null  <||@
  Comment 5704 932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5704 934 r11|DWORD = MOVE input: int[-690227|0xfffffffffff577cd]  <||@
  Comment 5710 938 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5715 940 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 5719 942 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 5724 950 JUMP ~[] destination: B91 -> B98  <||@
  Comment 5729 block B362 null  <||@
  Comment 5729 3618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5729 3620 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5732 3622 r11|DWORD = MOVE input: int[-770355|0xfffffffffff43ecd]  <||@
  Comment 5738 3624 JUMP ~[] destination: B362 -> B365  <||@
  Comment 5743 block B310 null  <||@
  Comment 5743 3080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5743 3082 r11|DWORD = MOVE input: int[-779539|0xfffffffffff41aed]  <||@
  Comment 5749 3084 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5751 3086 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5754 3088 JUMP ~[] destination: B310 -> B311  <||@
  Comment 5759 block B156 null  <||@
  Comment 5759 1586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5759 1588 r11|DWORD = MOVE input: int[-787731|0xfffffffffff3faed]  <||@
  Comment 5765 1590 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5767 1592 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5770 1594 JUMP ~[] destination: B156 -> B311  <||@
  Comment 5775 block B163 null  <||@
  Comment 5775 1638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5775 1640 r11|DWORD = MOVE input: int[-790291|0xfffffffffff3f0ed]  <||@
  Comment 5781 1642 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 5783 1644 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5788 1646 JUMP ~[] destination: B163 -> B311  <||@
  Comment 5793 block B119 null  <||@
  Comment 5793 1216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5793 1218 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5798 1220 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5801 1222 JUMP ~[] destination: B119 -> B120  <||@
  Comment 5801 block B120 null  <||@
  Comment 5801 1224 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5801 1226 r11|DWORD = MOVE input: int[-753435|0xfffffffffff480e5]  <||@
  Comment 5807 1228 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5812 1230 JUMP ~[] destination: B120 -> B132  <||@
  Comment 5817 block B121 null  <||@
  Comment 5817 1232 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5817 1234 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5822 1236 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5825 1238 JUMP ~[] destination: B121 -> B122  <||@
  Comment 5825 block B122 null  <||@
  Comment 5825 1240 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5825 1242 r11|DWORD = MOVE input: int[-752659|0xfffffffffff483ed]  <||@
  Comment 5831 1244 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5836 1246 JUMP ~[] destination: B122 -> B132  <||@
  Comment 5841 block B106 null  <||@
  Comment 5841 1082 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5841 1084 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5846 1086 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5849 1088 JUMP ~[] destination: B106 -> B107  <||@
  Comment 5849 block B107 null  <||@
  Comment 5849 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5849 1092 r11|DWORD = MOVE input: int[-750355|0xfffffffffff48ced]  <||@
  Comment 5855 1094 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5860 1096 JUMP ~[] destination: B107 -> B132  <||@
  Comment 5865 block B123 null  <||@
  Comment 5865 1248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5865 1250 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5870 1252 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5873 1254 JUMP ~[] destination: B123 -> B124  <||@
  Comment 5873 block B124 null  <||@
  Comment 5873 1256 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5873 1258 r11|DWORD = MOVE input: int[-750131|0xfffffffffff48dcd]  <||@
  Comment 5879 1260 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5884 1262 JUMP ~[] destination: B124 -> B132  <||@
  Comment 5889 block B125 null  <||@
  Comment 5889 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5889 1266 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5894 1268 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5897 1270 JUMP ~[] destination: B125 -> B126  <||@
  Comment 5897 block B126 null  <||@
  Comment 5897 1272 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5897 1274 r11|DWORD = MOVE input: int[-749587|0xfffffffffff48fed]  <||@
  Comment 5903 1276 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5908 1278 JUMP ~[] destination: B126 -> B132  <||@
  Comment 5913 block B127 null  <||@
  Comment 5913 1280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5913 1282 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 5918 1284 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 5921 1286 JUMP ~[] destination: B127 -> B128  <||@
  Comment 5921 block B128 null  <||@
  Comment 5921 1288 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5921 1290 r11|DWORD = MOVE input: int[-749107|0xfffffffffff491cd]  <||@
  Comment 5927 1292 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5932 1294 JUMP ~[] destination: B128 -> B132  <||@
  Comment 5937 block B60 null  <||@
  Comment 5937 624 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5937 626 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 5942 628 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 5945 630 r11|DWORD = MOVE input: int[-713755|0xfffffffffff51be5]  <||@
  Comment 5951 632 JUMP ~[] destination: B60 -> B64  <||@
  Comment 5951 block B64 null  <||@
  Comment 5951 664 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5951 666 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5958 668 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5965 670 DEOPT info [bci:21, 28, 32, 7]  <||@
  Comment 5965 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5970 [rax:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 21, duringCall: false, rethrow: false]
              |0             |1             |2               |3                  |4         
     locals:  |rax|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |r13|DWORD 
     stack:   |rsi|DWORD     |              |                |                   |          
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 5971 block B281 null  <||@
  Comment 5971 2762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5971 2764 r11|DWORD = MOVE input: int[-866067|0xfffffffffff2c8ed]  <||@
  Comment 5977 2766 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 5981 2768 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 5986 2770 JUMP ~[] destination: B281 -> B287  <||@
  Comment 5986 block B287 null  <||@
  Comment 5986 2822 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5986 2824 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 5993 2826 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6000 2828 DEOPT info [bci:63, 37, 28, 50, 7]  <||@
  Comment 6000 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6005 [rdx:0, r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4         |5          |6         
     locals:  |rdx|QWORD[.]  |r10|QWORD[.]  |r13|DWORD  |stack:48|QWORD[.]  |r8|DWORD  |rbp|DWORD  |rsi|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6006 block B26 null  <||@
  Comment 6006 258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6006 260 r11|DWORD = MOVE input: int[-689939|0xfffffffffff578ed]  <||@
  Comment 6012 262 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6016 268 JUMP ~[] destination: B26 -> B98  <||@
  Comment 6021 block B334 null  <||@
  Comment 6021 3328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6021 3330 r11|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 6026 3332 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6030 3334 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6035 3336 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6040 3338 JUMP ~[] destination: B334 -> B335  <||@
  Comment 6040 block B335 null  <||@
  Comment 6040 3340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6040 3342 MOV [r15|QWORD + 668] y: -900115 size: DWORD  <||@
  Comment 6051 3344 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6058 3346 DEOPT info [bci:34, 19, 28, 50, 7]  <||@
  Comment 6058 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6063 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4         
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |stack:48|QWORD[.]  |r11|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6064 block B92 null  <||@
  Comment 6064 952 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6064 954 r11|DWORD = MOVE input: int[-687667|0xfffffffffff581cd]  <||@
  Comment 6070 956 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6074 962 JUMP ~[] destination: B92 -> B98  <||@
  Comment 6079 block B177 null  <||@
  Comment 6079 1748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6079 1750 r11|DWORD = MOVE input: int[-795411|0xfffffffffff3dced]  <||@
  Comment 6085 1752 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6090 1754 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6093 1756 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6095 1758 JUMP ~[] destination: B177 -> B311  <||@
  Comment 6100 block B296 null  <||@
  Comment 6100 2934 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6100 2936 r11|DWORD = MOVE input: int[-860443|0xfffffffffff2dee5]  <||@
  Comment 6106 2938 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6110 2940 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6115 2942 JUMP ~[] destination: B296 -> B299  <||@
  Comment 6115 block B299 null  <||@
  Comment 6115 2966 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6115 2968 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 6122 2970 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6129 2972 DEOPT info [bci:8, 18, 28, 50, 7]  <||@
  Comment 6129 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6134 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$5.isSatisfiedBy(Pattern.java:5253) [bci: 8, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:76|DWORD 
     stack:   |rsi|DWORD          |               
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3778) [bci: 18, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6135 block B170 null  <||@
  Comment 6135 1696 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6135 1698 r11|DWORD = MOVE input: int[-792851|0xfffffffffff3e6ed]  <||@
  Comment 6141 1700 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6144 1702 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6146 1704 JUMP ~[] destination: B170 -> B311  <||@
  Comment 6151 block B303 null  <||@
  Comment 6151 3010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6151 3012 r11|DWORD = MOVE input: int[-793139|0xfffffffffff3e5cd]  <||@
  Comment 6157 3014 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6160 3016 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6162 3018 JUMP ~[] destination: B303 -> B311  <||@
  Comment 6167 block B297 null  <||@
  Comment 6167 2944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6167 2946 r11|DWORD = MOVE input: int[-851227|0xfffffffffff302e5]  <||@
  Comment 6173 2948 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6177 2950 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6182 2952 JUMP ~[] destination: B297 -> B299  <||@
  Comment 6184 block B304 null  <||@
  Comment 6184 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6184 3022 r11|DWORD = MOVE input: int[-790579|0xfffffffffff3efcd]  <||@
  Comment 6190 3024 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6193 3026 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6195 3028 JUMP ~[] destination: B304 -> B311  <||@
  Comment 6200 block B275 null  <||@
  Comment 6200 2698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6200 2700 r11|DWORD = MOVE input: int[-853011|0xfffffffffff2fbed]  <||@
  Comment 6206 2702 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6210 2704 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6215 2706 JUMP ~[] destination: B275 -> B299  <||@
  Comment 6217 block B77 null  <||@
  Comment 6217 790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6217 792 r8|DWORD = MOVE input: int[-739603|0xfffffffffff4b6ed]  <||@
  Comment 6223 796 JUMP ~[] destination: B77 -> B80  <||@
  Comment 6223 block B80 null  <||@
  Comment 6223 812 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6223 794 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6226 814 MOV (x: [r15|QWORD + 668], y: r8|DWORD) size: DWORD  <||@
  Comment 6233 816 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6240 818 DEOPT info [bci:63, 37, 28, 32, 7]  <||@
  Comment 6240 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6245 [rsi:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupTail.match(Pattern.java:4719) [bci: 63, duringCall: false, rethrow: false]
              |0             |1             |2          |3                  |4          |5          |6         
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |r14|DWORD  |stack:48|QWORD[.]  |rcx|DWORD  |rax|DWORD  |r11|DWORD 
  at java.util.regex.Pattern$CharProperty.match(Pattern.java:3779) [bci: 37, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6246 block B63 null  <||@
  Comment 6246 654 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6246 656 r11|DWORD = MOVE input: int[-698931|0xfffffffffff555cd]  <||@
  Comment 6252 658 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6257 660 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6262 662 JUMP ~[] destination: B63 -> B64  <||@
  Comment 6267 block B62 null  <||@
  Comment 6267 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6267 646 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6272 648 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6275 650 r11|DWORD = MOVE input: int[-701723|0xfffffffffff54ae5]  <||@
  Comment 6281 652 JUMP ~[] destination: B62 -> B64  <||@
  Comment 6286 block B319 null  <||@
  Comment 6286 3144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6286 3146 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6291 3148 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6295 3150 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6300 3152 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6303 3154 JUMP ~[] destination: B319 -> B320  <||@
  Comment 6303 block B320 null  <||@
  Comment 6303 3156 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6303 3158 r11|DWORD = MOVE input: int[-882451|0xfffffffffff288ed]  <||@
  Comment 6309 3160 JUMP ~[] destination: B320 -> B352  <||@
  Comment 6309 block B352 null  <||@
  Comment 6309 3514 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 6309 3516 MOV (x: [r15|QWORD + 668], y: r11|DWORD) size: DWORD  <||@
  Comment 6316 3518 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 6323 3520 DEOPT info [bci:3, 28, 50, 7]  <||@
  Comment 6323 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 6328 [r9:0, r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$Curly.match(Pattern.java:4228) [bci: 3, duringCall: false, rethrow: false]
              |0                  |1             |2          |3                  |4              
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |rcx|DWORD  |stack:48|QWORD[.]  |stack:76|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 6329 block B71 null  <||@
  Comment 6329 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6329 730 r8|DWORD = MOVE input: int[-726547|0xfffffffffff4e9ed]  <||@
  Comment 6335 732 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6338 734 JUMP ~[] destination: B71 -> B90  <||@
  Comment 6343 block B86 null  <||@
  Comment 6343 892 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6343 894 r8|DWORD = MOVE input: int[-736283|0xfffffffffff4c3e5]  <||@
  Comment 6349 896 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6352 898 JUMP ~[] destination: B86 -> B90  <||@
  Comment 6357 block B361 null  <||@
  Comment 6357 3610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6357 3612 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6360 3614 r11|DWORD = MOVE input: int[-776219|0xfffffffffff427e5]  <||@
  Comment 6366 3616 JUMP ~[] destination: B361 -> B365  <||@
  Comment 6371 block B230 null  <||@
  Comment 6371 2236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6371 2238 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6375 2240 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6380 2242 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6385 2244 r11|DWORD = MOVE input: int[-821531|0xfffffffffff376e5]  <||@
  Comment 6391 2246 JUMP ~[] destination: B230 -> B233  <||@
  Comment 6396 block B184 null  <||@
  Comment 6396 1802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6396 1804 r11|DWORD = MOVE input: int[-797971|0xfffffffffff3d2ed]  <||@
  Comment 6402 1806 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6404 1808 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6409 1810 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6412 1812 JUMP ~[] destination: B184 -> B311  <||@
  Comment 6417 block B307 null  <||@
  Comment 6417 3050 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6417 3052 r11|DWORD = MOVE input: int[-783387|0xfffffffffff40be5]  <||@
  Comment 6423 3054 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6425 3056 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6428 3058 JUMP ~[] destination: B307 -> B311  <||@
  Comment 6433 block B93 null  <||@
  Comment 6433 964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6433 966 r11|DWORD = MOVE input: int[-685075|0xfffffffffff58bed]  <||@
  Comment 6439 968 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6443 974 JUMP ~[] destination: B93 -> B98  <||@
  Comment 6448 block B339 null  <||@
  Comment 6448 3382 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6448 3384 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6453 3386 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6457 3388 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6462 3390 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6465 3392 JUMP ~[] destination: B339 -> B340  <||@
  Comment 6465 block B340 null  <||@
  Comment 6465 3394 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6465 3396 r11|DWORD = MOVE input: int[-885531|0xfffffffffff27ce5]  <||@
  Comment 6471 3398 JUMP ~[] destination: B340 -> B352  <||@
  Comment 6476 block B95 null  <||@
  Comment 6476 988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6476 990 r11|DWORD = MOVE input: int[-682259|0xfffffffffff596ed]  <||@
  Comment 6482 992 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6486 998 JUMP ~[] destination: B95 -> B98  <||@
  Comment 6491 block B268 null  <||@
  Comment 6491 2628 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6491 2630 r11|DWORD = MOVE input: int[-827675|0xfffffffffff35ee5]  <||@
  Comment 6497 2632 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6501 2634 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6506 2636 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6509 2638 JUMP ~[] destination: B268 -> B270  <||@
  Comment 6514 block B148 null  <||@
  Comment 6514 1516 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6514 1518 r11|DWORD = MOVE input: int[-780307|0xfffffffffff417ed]  <||@
  Comment 6520 1520 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6522 1522 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6525 1524 JUMP ~[] destination: B148 -> B311  <||@
  Comment 6530 block B341 null  <||@
  Comment 6530 3400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6530 3402 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6535 3404 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6539 3406 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6544 3408 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6547 3410 JUMP ~[] destination: B341 -> B342  <||@
  Comment 6547 block B342 null  <||@
  Comment 6547 3412 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6547 3414 r11|DWORD = MOVE input: int[-884755|0xfffffffffff27fed]  <||@
  Comment 6553 3416 JUMP ~[] destination: B342 -> B352  <||@
  Comment 6558 block B97 null  <||@
  Comment 6558 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6558 1014 r11|DWORD = MOVE input: int[-679187|0xfffffffffff5a2ed]  <||@
  Comment 6564 1016 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6568 1018 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 6573 1024 JUMP ~[] destination: B97 -> B98  <||@
  Comment 6578 block B33 null  <||@
  Comment 6578 310 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6578 312 r11|DWORD = MOVE input: int[-692499|0xfffffffffff56eed]  <||@
  Comment 6584 316 r9|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 6589 318 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6593 320 r8|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 6598 322 rcx|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 6602 328 JUMP ~[] destination: B33 -> B98  <||@
  Comment 6607 block B345 null  <||@
  Comment 6607 3436 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6607 3438 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6612 3440 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6616 3442 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6621 3444 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6624 3446 JUMP ~[] destination: B345 -> B346  <||@
  Comment 6624 block B346 null  <||@
  Comment 6624 3448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6624 3450 r11|DWORD = MOVE input: int[-881683|0xfffffffffff28bed]  <||@
  Comment 6630 3452 JUMP ~[] destination: B346 -> B352  <||@
  Comment 6635 block B302 null  <||@
  Comment 6635 2998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6635 3000 r11|DWORD = MOVE input: int[-795699|0xfffffffffff3dbcd]  <||@
  Comment 6641 3002 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6643 3004 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6648 3006 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6651 3008 JUMP ~[] destination: B302 -> B311  <||@
  Comment 6656 block B305 null  <||@
  Comment 6656 3030 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6656 3032 r11|DWORD = MOVE input: int[-788019|0xfffffffffff3f9cd]  <||@
  Comment 6662 3034 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6664 3036 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6669 3038 JUMP ~[] destination: B305 -> B311  <||@
  Comment 6674 block B330 null  <||@
  Comment 6674 3268 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6674 3270 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6679 3272 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6683 3274 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6688 3276 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6691 3278 JUMP ~[] destination: B330 -> B331  <||@
  Comment 6691 block B331 null  <||@
  Comment 6691 3280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6691 3282 r11|DWORD = MOVE input: int[-927771|0xfffffffffff1d7e5]  <||@
  Comment 6697 3284 JUMP ~[] destination: B331 -> B352  <||@
  Comment 6702 block B286 null  <||@
  Comment 6702 2814 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6702 2816 r11|DWORD = MOVE input: int[-873243|0xfffffffffff2ace5]  <||@
  Comment 6708 2818 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6712 2820 JUMP ~[] destination: B286 -> B287  <||@
  Comment 6717 block B19 null  <||@
  Comment 6717 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6717 206 r11|DWORD = MOVE input: int[-687379|0xfffffffffff582ed]  <||@
  Comment 6723 208 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6727 214 JUMP ~[] destination: B19 -> B98  <||@
  Comment 6732 block B364 null  <||@
  Comment 6732 3634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6732 3636 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6735 3638 r11|DWORD = MOVE input: int[-661779|0xfffffffffff5e6ed]  <||@
  Comment 6741 3640 JUMP ~[] destination: B364 -> B365  <||@
  Comment 6746 block B295 null  <||@
  Comment 6746 2924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6746 2926 r11|DWORD = MOVE input: int[-862747|0xfffffffffff2d5e5]  <||@
  Comment 6752 2928 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6756 2930 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6761 2932 JUMP ~[] destination: B295 -> B299  <||@
  Comment 6766 block B351 null  <||@
  Comment 6766 3504 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6766 3506 r11|DWORD = MOVE input: int[-901139|0xfffffffffff23fed]  <||@
  Comment 6772 3508 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 6774 3510 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6777 3512 JUMP ~[] destination: B351 -> B352  <||@
  Comment 6782 block B337 null  <||@
  Comment 6782 3364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6782 3366 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6787 3368 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6791 3370 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6796 3372 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6799 3374 JUMP ~[] destination: B337 -> B338  <||@
  Comment 6799 block B338 null  <||@
  Comment 6799 3376 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6799 3378 r11|DWORD = MOVE input: int[-887571|0xfffffffffff274ed]  <||@
  Comment 6805 3380 JUMP ~[] destination: B338 -> B352  <||@
  Comment 6810 block B79 null  <||@
  Comment 6810 804 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6810 806 r8|DWORD = MOVE input: int[-914459|0xfffffffffff20be5]  <||@
  Comment 6816 810 JUMP ~[] destination: B79 -> B80  <||@
  Comment 6821 block B54 null  <||@
  Comment 6821 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6821 540 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6826 542 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6829 544 r11|DWORD = MOVE input: int[-703507|0xfffffffffff543ed]  <||@
  Comment 6835 546 JUMP ~[] destination: B54 -> B64  <||@
  Comment 6840 block B61 null  <||@
  Comment 6840 634 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6840 636 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6845 638 r10|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 6848 640 r11|DWORD = MOVE input: int[-711451|0xfffffffffff524e5]  <||@
  Comment 6854 642 JUMP ~[] destination: B61 -> B64  <||@
  Comment 6859 block B50 null  <||@
  Comment 6859 494 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6859 496 r11|DWORD = MOVE input: int[-697619|0xfffffffffff55aed]  <||@
  Comment 6865 498 rax|QWORD[.] = MOVE stack:88|QWORD[.] moveKind: QWORD  <||@
  Comment 6870 500 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6875 502 JUMP ~[] destination: B50 -> B64  <||@
  Comment 6880 block B231 null  <||@
  Comment 6880 2248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6880 2250 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6884 2252 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6889 2254 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 6894 2256 r11|DWORD = MOVE input: int[-818963|0xfffffffffff380ed]  <||@
  Comment 6900 2258 JUMP ~[] destination: B231 -> B233  <||@
  Comment 6905 block B343 null  <||@
  Comment 6905 3418 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6905 3420 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 6910 3422 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6914 3424 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 6919 3426 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6922 3428 JUMP ~[] destination: B343 -> B344  <||@
  Comment 6922 block B344 null  <||@
  Comment 6922 3430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6922 3432 r11|DWORD = MOVE input: int[-882227|0xfffffffffff289cd]  <||@
  Comment 6928 3434 JUMP ~[] destination: B344 -> B352  <||@
  Comment 6933 block B46 null  <||@
  Comment 6933 456 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6933 458 r11|DWORD = MOVE input: int[-719131|0xfffffffffff506e5]  <||@
  Comment 6939 462 JUMP ~[] destination: B46 -> B47  <||@
  Comment 6944 block B327 null  <||@
  Comment 6944 3236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6944 3238 r11|DWORD = MOVE input: int[-891931|0xfffffffffff263e5]  <||@
  Comment 6950 3240 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 6954 3242 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6957 3244 JUMP ~[] destination: B327 -> B352  <||@
  Comment 6962 block B11 null  <||@
  Comment 6962 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6962 132 r11|DWORD = MOVE input: int[-679955|0xfffffffffff59fed]  <||@
  Comment 6968 134 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 6972 140 JUMP ~[] destination: B11 -> B98  <||@
  Comment 6977 block B137 null  <||@
  Comment 6977 1396 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6977 1398 r11|DWORD = MOVE input: int[-675867|0xfffffffffff5afe5]  <||@
  Comment 6983 1400 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6986 1402 JUMP ~[] destination: B137 -> B365  <||@
  Comment 6991 block B117 null  <||@
  Comment 6991 1200 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6991 1202 stack:92|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 6996 1204 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 6999 1206 JUMP ~[] destination: B117 -> B118  <||@
  Comment 6999 block B118 null  <||@
  Comment 6999 1208 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 6999 1210 r11|DWORD = MOVE input: int[-755475|0xfffffffffff478ed]  <||@
  Comment 7005 1212 r8|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7010 1214 JUMP ~[] destination: B118 -> B132  <||@
  Comment 7015 block B360 null  <||@
  Comment 7015 3598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7015 3600 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7019 3602 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7022 3604 MOV [r15|QWORD + 668] y: -905499 size: DWORD  <||@
  Comment 7033 3606 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7040 3608 DEOPT info [bci:31, 50, 7]  <||@
  Comment 7040 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7045 [r9:0, r10:0, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0            |1             |2  |3  |4          |5 
     locals:  |r9|DWORD[.]  |r10|QWORD[.]  |-  |-  |rdi|DWORD  |- 
     stack:   |rax|DWORD    |              |   |   |           |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4606) [bci: 50, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7046 block B191 null  <||@
  Comment 7046 1856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7046 1858 r11|DWORD = MOVE input: int[-800531|0xfffffffffff3c8ed]  <||@
  Comment 7052 1860 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7054 1862 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7059 1864 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7062 1866 JUMP ~[] destination: B191 -> B311  <||@
  Comment 7067 block B298 null  <||@
  Comment 7067 2954 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7067 2956 r11|DWORD = MOVE input: int[-848435|0xfffffffffff30dcd]  <||@
  Comment 7073 2958 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7077 2960 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7082 2962 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7087 2964 JUMP ~[] destination: B298 -> B299  <||@
  Comment 7092 block B366 null  <||@
  Comment 7092 3650 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7092 3652 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7095 3654 MOV [r15|QWORD + 668] y: -660787 size: DWORD  <||@
  Comment 7106 3656 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7113 3658 DEOPT info [bci:0]  <||@
  Comment 7113 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7118 [rsi:0, r10:0, stack:96]at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2               |3                 
     locals:  |rsi|QWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]   <||@
  Comment 7119 block B87 null  <||@
  Comment 7119 900 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7119 902 r8|DWORD = MOVE input: int[-733979|0xfffffffffff4cce5]  <||@
  Comment 7125 904 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7128 906 JUMP ~[] destination: B87 -> B90  <||@
  Comment 7133 block B252 null  <||@
  Comment 7133 2448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7133 2450 r11|DWORD = MOVE input: int[-843539|0xfffffffffff320ed]  <||@
  Comment 7139 2452 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7143 2454 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7148 2456 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7153 2458 JUMP ~[] destination: B252 -> B270  <||@
  Comment 7158 block B306 null  <||@
  Comment 7158 3040 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7158 3042 r11|DWORD = MOVE input: int[-785427|0xfffffffffff403ed]  <||@
  Comment 7164 3044 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7166 3046 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7169 3048 JUMP ~[] destination: B306 -> B311  <||@
  Comment 7174 block B136 null  <||@
  Comment 7174 1386 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7174 1388 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7177 1390 MOV [r15|QWORD + 668] y: -765211 size: DWORD  <||@
  Comment 7188 1392 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7195 1394 DEOPT info [bci:31, 32, 7]  <||@
  Comment 7195 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7200 [r10:0, stack:72, stack:92, stack:96]at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 31, duringCall: false, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
     stack:   |rax|DWORD          |              |   |   |                |  
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7201 block B140 null  <||@
  Comment 7201 1432 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7201 1434 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7204 1436 MOV [r15|QWORD + 668] y: -767251 size: DWORD  <||@
  Comment 7215 1438 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7222 1440 DEOPT info [bci:35, 7]  <||@
  Comment 7222 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7227 [r10:0, stack:92, stack:96]at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 35, duringCall: false, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
     stack:   |int[0|0x0]         |              |                |                   |               
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7228 block B284 null  <||@
  Comment 7228 2790 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7228 2792 r11|DWORD = MOVE input: int[-925467|0xfffffffffff1e0e5]  <||@
  Comment 7234 2794 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7238 2796 JUMP ~[] destination: B284 -> B287  <||@
  Comment 7243 block B114 null  <||@
  Comment 7243 1172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7243 1174 r10|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 7248 1176 JUMP ~[] destination: B114 -> B115  <||@
  Comment 7248 block B115 null  <||@
  Comment 7248 1178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7248 1180 MOV [r15|QWORD + 668] y: -759315 size: DWORD  <||@
  Comment 7259 1182 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 7266 1184 DEOPT info [bci:34, 19, 28, 32, 7]  <||@
  Comment 7266 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 7271 [r10:0, stack:56, stack:72, stack:92, stack:96]at java.util.regex.Pattern$BmpCharProperty.match(Pattern.java:3800) [bci: 34, duringCall: false, rethrow: false]
              |0           |1  |2  |3 
     locals:  |-           |-  |-  |- 
     stack:   |int[0|0x0]  |   |   |  
  at java.util.regex.Pattern$Curly.match(Pattern.java:4229) [bci: 19, duringCall: true, rethrow: false]
              |0                  |1             |2  |3                  |4              
     locals:  |stack:88|QWORD[.]  |r10|QWORD[.]  |-  |stack:48|QWORD[.]  |stack:92|DWORD 
  at java.util.regex.Pattern$GroupHead.match(Pattern.java:4660) [bci: 28, duringCall: true, rethrow: false]
              |0                  |1             |2  |3  |4               |5 
     locals:  |stack:72|QWORD[.]  |r10|QWORD[.]  |-  |-  |stack:80|DWORD  |- 
  at java.util.regex.Pattern$Branch.match(Pattern.java:4604) [bci: 32, duringCall: true, rethrow: false]
              |0                  |1             |2               |3                  |4              
     locals:  |stack:52|DWORD[.]  |r10|QWORD[.]  |stack:36|DWORD  |stack:48|QWORD[.]  |stack:56|DWORD 
  at java.util.regex.Pattern$BranchConn.match(Pattern.java:4570) [bci: 7, duringCall: true, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |-   <||@
  Comment 7272 block B94 null  <||@
  Comment 7272 976 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7272 978 r11|DWORD = MOVE input: int[-683035|0xfffffffffff593e5]  <||@
  Comment 7278 980 rbx|DWORD[.] = MOVE stack:52|DWORD[.] moveKind: DWORD  <||@
  Comment 7282 986 JUMP ~[] destination: B94 -> B98  <||@
  Comment 7287 block B308 null  <||@
  Comment 7287 3060 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7287 3062 r11|DWORD = MOVE input: int[-782611|0xfffffffffff40eed]  <||@
  Comment 7293 3064 rdi|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 7295 3066 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7298 3068 JUMP ~[] destination: B308 -> B311  <||@
  Comment 7303 block B347 null  <||@
  Comment 7303 3454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7303 3456 stack:76|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 7308 3458 rdi|DWORD = MOVE stack:92|DWORD moveKind: DWORD  <||@
  Comment 7312 3460 r9|DWORD[.] = MOVE stack:80|DWORD[.] moveKind: DWORD  <||@
  Comment 7317 3462 r10|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 7320 3464 JUMP ~[] destination: B347 -> B348  <||@
  Comment 7320 block B348 null  <||@
  Comment 7320 3466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 7320 3468 r11|DWORD = MOVE input: int[-881203|0xfffffffffff28dcd]  <||@
  Comment 7326 3470 JUMP ~[] destination: B348 -> B352  <||@
  Comment 7331 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 7331 4  <||@
  Comment 7337 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 7337 5  <||@
  HexCodeFile>>> <|@
end_nmethod
