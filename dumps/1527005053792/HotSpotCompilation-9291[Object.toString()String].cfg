begin_compilation
  name " HotSpotCompilation-9291[java.lang.Object.toString()]"
  method "HotSpotCompilation-9291[java.lang.Object.toString()]"
  date 1527005203844
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v3650  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?220 i979 ?402 ?215 ?63 v3718 v3699 v1083 i1071 v3903 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3718 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v3650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3650 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3718 
=== Succesors ===
next: a3651 
=== Usages ===
v3708 v3696 v3902 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3718 #next: a3651  <|@  <|@
f <@~|@floating>@ <|@
tid v3708 <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
a3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3651 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 8]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3708 
=== Succesors ===
next: a3652 
=== Usages ===
?58 v3688 v1084 ?1467 j1756 
=== Predecessor ===
v3650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3708 #next: a3652  <|@  <|@
f <@~|@floating>@ <|@
tid v3688 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3651 
index: - 
=== Succesors ===
=== Usages ===
a3652 v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3651 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3652 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3688 
=== Succesors ===
next: v55 
=== Usages ===
a812 v1251 v3702 
=== Predecessor ===
a3651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3688 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
value: a3652 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3652  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:333) [bci: 12]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 15
stableDimension: 0
stamp: i32 [15] ⇊000000000000000f ⇈000000000000000f
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
?104 ?109 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3644 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3576 v3593 v3608 v3623 v3638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3645 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3578 v3594 v3609 v3624 v3639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3646 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3580 v3595 v3610 v3625 v3640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3647 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3582 v3596 v3611 v3626 v3641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3643 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3642 v3597 v3612 v3627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3096 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3097 j3160 j3211 j3273 j3324 j3386 j3437 j3499 j3550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3064 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3074 j3120 j3178 j3234 j3291 j3347 j3404 j3460 j3517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3092 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3093 j3157 j3208 j3270 j3321 j3383 j3434 j3496 j3547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3080 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3069 j3128 j3184 j3242 j3297 j3355 j3410 j3468 j3523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3088 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3089 j3154 j3205 j3267 j3318 j3380 j3431 j3493 j3544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1752 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3529 j3476 j3416 j3363 j3303 j3250 j3075 j3190 j3136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3084 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3085 j3151 j3202 j3264 j3315 j3377 j3428 j3490 j3541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 30]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3535 j3484 j3422 j3309 j3371 j3258 j3196 j3144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3145 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3146 j3197 j3259 j3310 j3372 j3423 j3485 j3536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3469 j3477 j3298 j3356 v3311 v3373 v3486 j3364 j3251 j3304 v3424 j3417 j3411 v3260 j3075 v3086 v3537 j3129 j3137 v3147 j3530 j3185 j3191 v3198 j3524 j3243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2111 a2336 a2171 a2041 a2224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2048 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2049 i2118 i2178 i2231 i2343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2018 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2019 i2090 i2150 i2203 i2315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2025 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2026 v2096 v2321 v2209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 29]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?104 v186 v2002 v1516 v1064 a2224 v1555 v1594 v1007 v2313 v2408 a2041 v176 v972 v1215 v911 v851 a2111 a2171 a2336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1859 v1946 v1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1849 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1990 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1849 
=== Succesors ===
=== Usages ===
v3744 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid v3744 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1990 
index: - 
=== Succesors ===
=== Usages ===
j1994 j1942 j1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1990 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 14]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 a2378 a1833 a2282 a1922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?279 ?794 ?1470 ?157 ?63 ?281 ?722 ?782 ?270 ?292 ?299 ?247 ?770 ?653 ?357 ?313 ?790 ?324 ?331 ?263 ?776 ?1468 ?259 ?1471 ?1469 ?38 ?350 ?402 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?215 
values: a126 - 
=== Succesors ===
=== Usages ===
?722 ?313 ?653 ?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?215 values: a126 -  <|@  <|@
f <@~|@floating>@ <|@
tid j1430 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1431 j2451 j2415 j2456 j2424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1274 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 17
stableDimension: 0
stamp: i32 [17] ⇊0000000000000011 ⇈0000000000000011
stampKind: i32
value: int[17|0x11]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1275 v1278 v1637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1810 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1812 v1904 v2016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1807 v1900 v2012 v2065 v2134 v2194 v2247 v2359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v966 v1058 v1804 v1897 v2009 v2062 v2131 v2191 v2244 v2356 v2541 v2793 v2667 v2919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1639 i724 i724 v2008 v1896 v1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i963 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 j1062 a1780 a1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1767 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1780 a1833 a1877 a1922 a1965 a2282 a2378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2409 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2410 j2421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -16
stableDimension: 0
stamp: i32 [-16] ⇊00000000fffffff0 ⇈00000000fffffff0
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i375 i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 10]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 v116 v172 i2089 i2149 i2202 ?259 i261 i262 v285 v317 ?331 v343 v492 i78 i78 i2314 ?770 a1780 a2378 a1833 a1877 a1922 a1965 i2017 a2282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 v2077 v2146 v2259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1757 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1758 j2074 j2143 j2256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1761 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3719 v3756 v3768 v3787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1705 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1708 v1732 v1742 v1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 1
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?157 ?158 ?292 ?791 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a156 
=== Succesors ===
=== Usages ===
?58 ?60 ?402 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a156  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
values: - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?58 ?60 ?402 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a156 values: - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
trueSuccessorProbability: 0.002982106018175279
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
a3652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a57 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a57  <|@  <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@6b0a3735
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a3651 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3651  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a126 
=== Succesors ===
=== Usages ===
?58 ?60 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a126  <|@  <|@
tid ?1467 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?63 
values: - - a3651 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - a3651 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1084 
stateDuring: ?1467 
=== Succesors ===
next: a3653 
=== Usages ===
?58 a1085 ?60 v3700 a415 
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1084 stateDuring: ?1467 #next: a3653  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 2
=== Inputs ===
outerFrameState: ?63 
values: - - a3651 a57 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
v1716 a3653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - a3651 a57 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@~|@floating>@ <|@
tid v3700 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a57 
index: - 
=== Succesors ===
=== Usages ===
a3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3653 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?58 
guard: - 
address: v3700 
=== Succesors ===
next: v1341 
=== Usages ===
a1090 v1091 v3701 
=== Predecessor ===
a57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?58 guard: - address: v3700 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
value: a3653 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1091 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1338 
=== Usages ===
=== Predecessor ===
a3653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1091 #trueSuccessor: v1340 #falseSuccessor: v1338  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1716  <|@  <|@
f <@~|@floating>@ <|@
tid i1718 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279563
stableDimension: 0
stamp: i32 [-279563] ⇊00000000fffbbbf5 ⇈00000000fffbbbf5
stampKind: i32
value: int[-279563|0xfffffffffffbbbf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
actionAndReason: i1718 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?58 actionAndReason: i1718 speculation: a1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B13" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3654 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3654  <|@  <|@
f <@~|@floating>@ <|@
tid v3701 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3653 
=== Succesors ===
=== Usages ===
i3654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3654 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3701 
=== Succesors ===
next: v1086 
=== Usages ===
i375 i407 i727 j1819 i726 ?313 v1863 v1275 
=== Predecessor ===
v1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3701 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid a1085 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a57 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3688 
value: a1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1756 
=== Usages ===
=== Predecessor ===
i3654 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3688 value: a1085 stateAfter: - lastLocationAccess: - #next: j1756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1756 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3651 
=== Succesors ===
next: v1762 
=== Usages ===
j1758 
=== Predecessor ===
v1086 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3651 #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid j1758 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1756 
y: i1757 
=== Succesors ===
=== Usages ===
v3719 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1756 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3719 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1758 
index: j1761 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1758 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3719 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
j1756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3719 value: i1763 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i3654 
y: i121 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3654 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i375 
y: i71 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i375 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1787 
=== Usages ===
v3720 v3721 
=== Predecessor ===
v286 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1787  <|@  <|@
f <@~|@floating>@ <|@
tid v3720 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1787 v1789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1787 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
=== Succesors ===
next: j1788 
=== Usages ===
j2410 j1793 v3808 
=== Predecessor ===
j1769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3720 #next: j1788  <|@  <|@
f <@~|@floating>@ <|@
tid v3721 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1788 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1777 
=== Usages ===
v1774 
=== Predecessor ===
j1787 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j2410 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1787 
y: j2409 
=== Succesors ===
=== Usages ===
v1774 v1789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1787 y: j2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1788 
y: j2410 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1788 y: j2410  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Class.java
sourceLine: 643
stackSize: 0
=== Inputs ===
outerFrameState: ?63 
values: - a57 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a1780 v1128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - a57 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1774 
=== Succesors ===
trueSuccessor: v1775 
falseSuccessor: v1776 
=== Usages ===
=== Predecessor ===
j1788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1774 #trueSuccessor: v1775 #falseSuccessor: v1776  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1780 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1780 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v1767 i963 i71 
=== Succesors ===
next: j1781 
=== Usages ===
j1781 
=== Predecessor ===
v1775 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v1767 i963 i71 #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1780 
=== Succesors ===
next: v1794 
=== Usages ===
j1793 
=== Predecessor ===
a1780 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1780 #next: v1794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
j1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
value: j2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1785 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3720 value: j2410 stateAfter: - lastLocationAccess: - #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid v3808 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1787 
index: - 
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3808 
=== Succesors ===
next: v1792 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3808 #next: v1792  <|@  <|@
f <@*|@fixed>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
v1785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1793 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1791 
values: j1787 j1781 
=== Succesors ===
=== Usages ===
v3724 v3723 a1389 v3722 v3809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1791 values: j1787 j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1792 v1794 
=== Succesors ===
next: a1389 
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1792 v1794 #next: a1389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1389 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1793 
=== Succesors ===
next: v1803 
=== Usages ===
a1395 
=== Predecessor ===
v1791 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1793 #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid v3722 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3722 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
a1389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3722 value: i396 stateAfter: - lastLocationAccess: - #next: v1804  <|@  <|@
f <@~|@floating>@ <|@
tid v3723 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3723 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1807 
=== Usages ===
=== Predecessor ===
v1803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3723 value: j981 stateAfter: - lastLocationAccess: - #next: v1807  <|@  <|@
f <@~|@floating>@ <|@
tid v3724 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3724 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1812 
=== Usages ===
=== Predecessor ===
v1804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3724 value: v2413 stateAfter: - lastLocationAccess: - #next: v1812  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1395 
=== Usages ===
=== Predecessor ===
v1807 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3809 value: v1810 stateAfter: - lastLocationAccess: - #next: a1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1395 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1389 
=== Succesors ===
next: v1396 
=== Usages ===
j1817 ?776 a725 a1402 
=== Predecessor ===
v1812 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1389 #next: v1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
a1395 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3654 
y: i1274 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3654 y: i1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v1124 
falseSuccessor: v1126 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v1124 #falseSuccessor: v1126  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1813 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid a1090 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3653 
=== Succesors ===
=== Usages ===
j1813 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1813 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1090 
=== Succesors ===
next: j1817 
=== Usages ===
v3725 
=== Predecessor ===
v1124 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1090 #next: j1817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1817 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1395 
=== Succesors ===
next: v1820 
=== Usages ===
v3726 
=== Predecessor ===
j1813 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1395 #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v3725 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1813 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1813 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3726 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1819 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3654 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3725 v3726 j1819 
=== Succesors ===
next: j1822 
=== Usages ===
=== Predecessor ===
j1817 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3725 v3726 j1819 #next: j1822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1822 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1837 
=== Usages ===
v3727 v3728 
=== Predecessor ===
v1820 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1837  <|@  <|@
f <@~|@floating>@ <|@
tid v3727 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1822 
index: - 
=== Succesors ===
=== Usages ===
j1837 v1839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1837 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: j1838 
=== Usages ===
j2415 j1843 v3810 
=== Predecessor ===
j1822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: j1838  <|@  <|@
f <@~|@floating>@ <|@
tid v3728 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1822 
index: - 
=== Succesors ===
=== Usages ===
j1838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1838 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3728 
=== Succesors ===
next: v1830 
=== Usages ===
v1827 
=== Predecessor ===
j1837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3728 #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid j2415 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1837 
y: j1430 
=== Succesors ===
=== Usages ===
v1827 v1839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1837 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1827 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1838 
y: j2415 
=== Succesors ===
=== Usages ===
v1830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1838 y: j2415  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1827 
=== Succesors ===
trueSuccessor: v1828 
falseSuccessor: v1829 
=== Usages ===
=== Predecessor ===
j1838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1827 #trueSuccessor: v1828 #falseSuccessor: v1829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1833  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i3654 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i3654  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a1395 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a1395  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?313 
values: - - - - - 
virtualObjectMappings: ?776 
=== Succesors ===
=== Usages ===
a1833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?313 values: - - - - - virtualObjectMappings: ?776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?310 
arguments: v1767 i92 i71 
=== Succesors ===
next: j1834 
=== Usages ===
j1834 
=== Predecessor ===
v1828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?310 arguments: v1767 i92 i71 #next: j1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1834 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1833 
=== Succesors ===
next: v1844 
=== Usages ===
j1843 
=== Predecessor ===
a1833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1833 #next: v1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1841 
=== Predecessor ===
j1834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
value: j2415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3727 value: j2415 stateAfter: - lastLocationAccess: - #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid v3810 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1837 
index: - 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3810 
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3810 #next: v1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1841 
=== Predecessor ===
v1836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B84" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1843 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1841 
values: j1837 j1834 
=== Succesors ===
=== Usages ===
v3730 v3729 a1399 v3811 v3812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1841 values: j1837 j1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1842 v1844 
=== Succesors ===
next: a1399 
=== Usages ===
j1843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1842 v1844 #next: a1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1399 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1843 
=== Succesors ===
next: j1855 
=== Usages ===
a1405 
=== Predecessor ===
v1841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1843 #next: j1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1855 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1856 
=== Usages ===
v1856 
=== Predecessor ===
a1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1856  <|@  <|@
f <@~|@floating>@ <|@
tid v3729 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3729 
value: j1855 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
j1855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3729 value: j1855 stateAfter: - lastLocationAccess: - #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid v3730 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3730 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3730 value: v2418 stateAfter: - lastLocationAccess: - #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid v3811 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3811 
value: i3654 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3811 value: i3654 stateAfter: - lastLocationAccess: - #next: v1865  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1402 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1395 
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3812 
value: a1402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1405 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3812 value: a1402 stateAfter: - lastLocationAccess: - #next: a1405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1405 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1399 
=== Succesors ===
next: v1406 
=== Usages ===
a792 
=== Predecessor ===
v1865 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1399 #next: v1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
a1405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B25" 
    xhandlers
    flags 
    probability 4549304361639224109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4607155558376912941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3655 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3655  <|@  <|@
f <@~|@floating>@ <|@
tid v3702 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3652 
=== Succesors ===
=== Usages ===
a3655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3655 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3702 
=== Succesors ===
next: i3656 
=== Usages ===
a1141 v3703 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3702 #next: i3656  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1708 a1877 i3656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v3703 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
i3656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3656 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v3703 
=== Succesors ===
next: v495 
=== Usages ===
i496 i727 i407 v1950 ?653 j1909 i726 v1278 
=== Predecessor ===
a3655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v3703 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i3656 
y: i121 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3656 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i71 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i496 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
i3656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1866 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1866 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1881 
=== Usages ===
v3731 v3732 
=== Predecessor ===
v493 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1881  <|@  <|@
f <@~|@floating>@ <|@
tid v3731 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1866 
index: - 
=== Succesors ===
=== Usages ===
j1881 v1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1881 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3731 
=== Succesors ===
next: j1882 
=== Usages ===
j2421 j1887 v3813 
=== Predecessor ===
j1866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3731 #next: j1882  <|@  <|@
f <@~|@floating>@ <|@
tid v3732 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1866 
index: - 
=== Succesors ===
=== Usages ===
j1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1882 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3732 
=== Succesors ===
next: v1874 
=== Usages ===
v1871 
=== Predecessor ===
j1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3732 #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2421 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1881 
y: j2409 
=== Succesors ===
=== Usages ===
v1871 v1883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1881 y: j2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1871 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1882 
y: j2421 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1882 y: j2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1874 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1871 
=== Succesors ===
trueSuccessor: v1872 
falseSuccessor: v1873 
=== Usages ===
=== Predecessor ===
j1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1871 #trueSuccessor: v1872 #falseSuccessor: v1873  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1877 
=== Usages ===
=== Predecessor ===
v1874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v1767 i963 i71 
=== Succesors ===
next: j1878 
=== Usages ===
j1878 
=== Predecessor ===
v1872 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v1767 i963 i71 #next: j1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1878 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1877 
=== Succesors ===
next: v1888 
=== Usages ===
j1887 
=== Predecessor ===
a1877 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1877 #next: v1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
j1878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3731 
value: j2421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3731 value: j2421 stateAfter: - lastLocationAccess: - #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1881 
index: - 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3813 
=== Succesors ===
next: v1886 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3813 #next: v1886  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
v1880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1887 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1885 
values: j1881 j1878 
=== Succesors ===
=== Usages ===
v3735 v3734 a1409 v3733 v3814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1885 values: j1881 j1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1886 v1888 
=== Succesors ===
next: a1409 
=== Usages ===
j1887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1886 v1888 #next: a1409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1409 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1887 
=== Succesors ===
next: v1896 
=== Usages ===
a1414 
=== Predecessor ===
v1885 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1887 #next: v1896  <|@  <|@
f <@~|@floating>@ <|@
tid v3733 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3733 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1897 
=== Usages ===
=== Predecessor ===
a1409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3733 value: i396 stateAfter: - lastLocationAccess: - #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v3734 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3734 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3734 value: j981 stateAfter: - lastLocationAccess: - #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v3735 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3735 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3735 value: v2413 stateAfter: - lastLocationAccess: - #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v3814 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1414 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3814 value: v1810 stateAfter: - lastLocationAccess: - #next: a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1414 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1409 
=== Succesors ===
next: v1415 
=== Usages ===
j1907 ?782 a725 a1421 
=== Predecessor ===
v1904 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1409 #next: v1415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
a1414 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3656 
y: i1274 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3656 y: i1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1278 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1178 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1278 #trueSuccessor: v1176 #falseSuccessor: v1178  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1905 
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1905  <|@  <|@
f <@~|@floating>@ <|@
tid a1141 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3655 
=== Succesors ===
=== Usages ===
j1905 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1905 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1141 
=== Succesors ===
next: j1907 
=== Usages ===
v3736 
=== Predecessor ===
v1176 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1141 #next: j1907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1907 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1414 
=== Succesors ===
next: v1910 
=== Usages ===
v3737 
=== Predecessor ===
j1905 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1414 #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid v3736 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1905 
index: - 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1905 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3737 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1907 
index: - 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1909 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3656 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3736 v3737 j1909 
=== Succesors ===
next: j1911 
=== Usages ===
=== Predecessor ===
j1907 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3736 v3737 j1909 #next: j1911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1911 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1926 
=== Usages ===
v3738 v3739 
=== Predecessor ===
v1910 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1926  <|@  <|@
f <@~|@floating>@ <|@
tid v3738 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1911 
index: - 
=== Succesors ===
=== Usages ===
j1926 v1928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1911 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
=== Succesors ===
next: j1927 
=== Usages ===
j2424 j1932 v3815 
=== Predecessor ===
j1911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3738 #next: j1927  <|@  <|@
f <@~|@floating>@ <|@
tid v3739 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1911 
index: - 
=== Succesors ===
=== Usages ===
j1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1911 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3739 
=== Succesors ===
next: v1919 
=== Usages ===
v1916 
=== Predecessor ===
j1926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3739 #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid j2424 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1926 
y: j1430 
=== Succesors ===
=== Usages ===
v1916 v1928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1926 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1927 
y: j2424 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1927 y: j2424  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1916 
=== Succesors ===
trueSuccessor: v1917 
falseSuccessor: v1918 
=== Usages ===
=== Predecessor ===
j1927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1916 #trueSuccessor: v1917 #falseSuccessor: v1918  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1922 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1922  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i3656 
=== Succesors ===
=== Usages ===
?651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i3656  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a1414 
=== Succesors ===
=== Usages ===
?651 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a1414  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?653 
values: - - - - - 
virtualObjectMappings: ?782 
=== Succesors ===
=== Usages ===
a1922 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?653 values: - - - - - virtualObjectMappings: ?782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1922 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?651 
arguments: v1767 i92 i71 
=== Succesors ===
next: j1923 
=== Usages ===
j1923 
=== Predecessor ===
v1917 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?651 arguments: v1767 i92 i71 #next: j1923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1923 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1922 
=== Succesors ===
next: v1933 
=== Usages ===
j1932 
=== Predecessor ===
a1922 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1922 #next: v1933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
j1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1928 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
value: j2424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v1918 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3738 value: j2424 stateAfter: - lastLocationAccess: - #next: v1925  <|@  <|@
f <@~|@floating>@ <|@
tid v3815 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1926 
index: - 
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3815 
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3815 #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
v1925 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1932 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1930 
values: j1926 j1923 
=== Succesors ===
=== Usages ===
v3741 v3740 a1418 v3816 v3817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1930 values: j1926 j1923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1931 v1933 
=== Succesors ===
next: a1418 
=== Usages ===
j1932 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1931 v1933 #next: a1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1418 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1932 
=== Succesors ===
next: j1942 
=== Usages ===
a1424 
=== Predecessor ===
v1930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1932 #next: j1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1942 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1943 
=== Usages ===
v1943 
=== Predecessor ===
a1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid v3740 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3740 
value: j1942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
j1942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3740 value: j1942 stateAfter: - lastLocationAccess: - #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid v3741 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3741 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3741 value: v2418 stateAfter: - lastLocationAccess: - #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid v3816 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
value: i3656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3816 value: i3656 stateAfter: - lastLocationAccess: - #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1421 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1414 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3817 
value: a1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1424 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3817 value: a1421 stateAfter: - lastLocationAccess: - #next: a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1424 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1418 
=== Succesors ===
next: v1425 
=== Usages ===
a792 
=== Predecessor ===
v1952 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1418 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
a1424 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid i1710 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302177
stableDimension: 0
stamp: i32 [-302177] ⇊00000000fffb639f ⇈00000000fffb639f
stampKind: i32
value: int[-302177|0xfffffffffffb639f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1710 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1178 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1710 speculation: a1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B25" 
    xhandlers
    flags 
    probability 4586915843131299805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 11]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a3652 
=== Succesors ===
=== Usages ===
a415 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3652  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v400 
values: i3654 i3656 
=== Succesors ===
=== Usages ===
i727 ?299 v1191 i671 i1233 j2087 v1280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: i3654 i3656  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v400 
values: a57 a812 
=== Succesors ===
=== Usages ===
v3706 ?299 ?402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: a57 a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v403 
=== Succesors ===
next: j1954 
=== Usages ===
i407 a415 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v403 #next: j1954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1954 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1978 
=== Usages ===
v3742 v3743 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1978  <|@  <|@
f <@~|@floating>@ <|@
tid v3742 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1954 
index: - 
=== Succesors ===
=== Usages ===
j1978 v1980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1978 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
=== Succesors ===
next: j1979 
=== Usages ===
j2429 j1984 v3818 v3819 v3820 v3821 
=== Predecessor ===
j1954 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3742 #next: j1979  <|@  <|@
f <@~|@floating>@ <|@
tid v3743 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1954 
index: - 
=== Succesors ===
=== Usages ===
j1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1979 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3743 
=== Succesors ===
next: v1962 
=== Usages ===
v1959 
=== Predecessor ===
j1978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3743 #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid j2428 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 72
stableDimension: 0
stamp: i64 [72] ⇊0000000000000048 ⇈0000000000000048
stampKind: i64
value: long[72|0x48]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2429 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1978 
y: j2428 
=== Succesors ===
=== Usages ===
v1959 v1980 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1978 y: j2428  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1979 
y: j2429 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1979 y: j2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1959 
=== Succesors ===
trueSuccessor: v1960 
falseSuccessor: v1961 
=== Usages ===
=== Predecessor ===
j1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1959 #trueSuccessor: v1960 #falseSuccessor: v1961  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4557307913614559813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1965 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1965  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a126 a415 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a1965 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a126 a415 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@~|@floating>@ <|@
tid i2431 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1965 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?402 
arguments: v1767 i2431 i71 
=== Succesors ===
next: j1966 
=== Usages ===
j1966 
=== Predecessor ===
v1960 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?402 arguments: v1767 i2431 i71 #next: j1966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1966 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1965 
=== Succesors ===
next: v1985 
=== Usages ===
j1984 
=== Predecessor ===
a1965 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1965 #next: v1985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1982 
=== Predecessor ===
j1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4586868295309743851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1980 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
value: j2429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3742 value: j2429 stateAfter: - lastLocationAccess: - #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid v3818 <|@
d <@d|@=== Debug Properties ===
displacement: 264
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3818 
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3818 #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
d <@d|@=== Debug Properties ===
displacement: 328
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3819 
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1968 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3819 #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid v3820 <|@
d <@d|@=== Debug Properties ===
displacement: 392
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3820 
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1970 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3820 #next: v1976  <|@  <|@
f <@~|@floating>@ <|@
tid v3821 <|@
d <@d|@=== Debug Properties ===
displacement: 456
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3821 
=== Succesors ===
next: v1983 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3821 #next: v1983  <|@  <|@
f <@*|@fixed>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1982 
=== Predecessor ===
v1976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1982 
values: j1978 j1966 
=== Succesors ===
=== Usages ===
v3827 v3745 j1431 a1428 v3746 v3822 v3823 v3824 v3825 v3826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1982 values: j1978 j1966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1983 v1985 
=== Succesors ===
next: a1428 
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1983 v1985 #next: a1428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1428 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1984 
=== Succesors ===
next: a1432 
=== Usages ===
a1441 
=== Predecessor ===
v1982 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1984 #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1430 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1431 
=== Succesors ===
next: j1994 
=== Usages ===
a1442 a1435 
=== Predecessor ===
a1428 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1431 #next: j1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1994 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1995 
=== Usages ===
v1995 
=== Predecessor ===
a1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v3745 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
value: j1994 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1998 
=== Usages ===
=== Predecessor ===
j1994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3745 value: j1994 stateAfter: - lastLocationAccess: - #next: v1998  <|@  <|@
f <@~|@floating>@ <|@
tid v3746 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3746 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3746 value: v2418 stateAfter: - lastLocationAccess: - #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid v3822 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3822 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2004 
=== Usages ===
=== Predecessor ===
v1998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3822 value: i82 stateAfter: - lastLocationAccess: - #next: v2004  <|@  <|@
f <@~|@floating>@ <|@
tid v3823 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1435 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1432 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
value: a1435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3823 value: a1435 stateAfter: - lastLocationAccess: - #next: v2008  <|@  <|@
f <@~|@floating>@ <|@
tid v3824 <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3824 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2009 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3824 value: i396 stateAfter: - lastLocationAccess: - #next: v2009  <|@  <|@
f <@~|@floating>@ <|@
tid v3825 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3825 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2012 
=== Usages ===
=== Predecessor ===
v2008 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3825 value: j981 stateAfter: - lastLocationAccess: - #next: v2012  <|@  <|@
f <@~|@floating>@ <|@
tid v3826 <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3826 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v2009 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3826 value: v2413 stateAfter: - lastLocationAccess: - #next: v2016  <|@  <|@
f <@~|@floating>@ <|@
tid v3827 <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3827 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1441 
=== Usages ===
=== Predecessor ===
v2012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3827 value: v1810 stateAfter: - lastLocationAccess: - #next: a1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1441 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1428 
=== Succesors ===
next: a1442 
=== Usages ===
v1191 ?790 v3704 v3705 a792 j2073 
=== Predecessor ===
v2016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1428 #next: a1442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1442 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1432 
=== Succesors ===
next: v1443 
=== Usages ===
?791 v3710 
=== Predecessor ===
a1441 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1432 #next: v1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i291 
=== Usages ===
=== Predecessor ===
a1442 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i291  <|@  <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6de977a2
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1441 i407 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1441 i407  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 a415 i407 
=== Succesors ===
=== Usages ===
?292 ?296 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 a415 i407  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
materializedValue: a1441 
=== Succesors ===
=== Usages ===
?292 ?296 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a126 materializedValue: a1441  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
materializedValue: a1442 
=== Succesors ===
=== Usages ===
?292 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a156 materializedValue: a1442  <|@  <|@
tid ?1468 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?299 
values: - - a126 a156 
virtualObjectMappings: ?790 ?791 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - a126 a156 virtualObjectMappings: ?790 ?791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i291 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1191 
stateDuring: ?1468 
=== Succesors ===
next: a3657 
=== Usages ===
?292 v2061 i724 i1233 j2476 a2041 i1639 i2017 v2026 v1637 v1516 
=== Predecessor ===
v1443 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1191 stateDuring: ?1468 #next: a3657  <|@  <|@
f <@~|@floating>@ <|@
tid v3706 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a415 
index: - 
=== Succesors ===
=== Usages ===
a3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3657 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: i3658 
=== Usages ===
a1200 v3707 
=== Predecessor ===
i291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: i3658  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?299 
values: - - a126 a156 i291 
virtualObjectMappings: ?790 ?791 
=== Succesors ===
=== Usages ===
v1742 a2041 i3658 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - a126 a156 i291 virtualObjectMappings: ?790 ?791  <|@  <|@
f <@~|@floating>@ <|@
tid v3707 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3657 
=== Succesors ===
=== Usages ===
i3658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3658 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?292 
guard: - 
address: v3707 
=== Succesors ===
next: v1357 
=== Usages ===
v1280 
=== Predecessor ===
a3657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?292 guard: - address: v3707 #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3658 
y: i407 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3658 y: i407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v1356 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i3658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v1356 #falseSuccessor: v1354  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid i1744 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308755
stableDimension: 0
stamp: i32 [-308755] ⇊00000000fffb49ed ⇈00000000fffb49ed
stampKind: i32
value: int[-308755|0xfffffffffffb49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B33" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i82 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1516 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1516 #trueSuccessor: v1521 #falseSuccessor: v1517  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid i1746 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391265
stableDimension: 0
stamp: i32 [-391265] ⇊00000000fffa079f ⇈00000000fffa079f
stampKind: i32
value: int[-391265|0xfffffffffffa079f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
v1521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1740 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-391265 - -307723] ⇊00000000fffa0185 ⇈00000000fffb4fff
valueDescription: i32
=== Inputs ===
merge: v1737 
values: i1744 i1746 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1737 values: i1744 i1746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1745 
=== Succesors ===
next: v1742 
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1745 #next: v1742  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?292 
actionAndReason: i1740 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?292 actionAndReason: i1740 speculation: a1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2020 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2020 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2058 
=== Usages ===
v3747 v3748 
=== Predecessor ===
v1517 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v3747 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2020 
index: - 
=== Succesors ===
=== Usages ===
j2058 v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2020 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2058 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
=== Succesors ===
next: j2059 
=== Usages ===
j2024 v3749 v3750 a2040 v3755 v3751 v3752 v3753 v3754 
=== Predecessor ===
j2020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3747 #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2020 
index: - 
=== Succesors ===
=== Usages ===
j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2020 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3748 
=== Succesors ===
next: v2029 
=== Usages ===
v2030 
=== Predecessor ===
j2058 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3748 #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i2025 
=== Succesors ===
=== Usages ===
v2029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i291 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2026 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2027 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2026 #trueSuccessor: v2028 #falseSuccessor: v2027  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4586258524921202995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2036 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2036  <|@  <|@
f <@~|@floating>@ <|@
tid i2017 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i291 
y: i71 
=== Succesors ===
=== Usages ===
i2049 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i291 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2049 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2017 
y: i2048 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2017 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2019 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2049 
y: i2018 
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2049 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2019 
=== Succesors ===
=== Usages ===
j2024 v3751 v3752 v3753 v3754 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
x: j2023 
y: j2058 
=== Succesors ===
=== Usages ===
v2030 v2060 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2023 y: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2059 
y: j2024 
=== Succesors ===
=== Usages ===
v2036 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2059 y: j2024  <|@  <|@
f <@*|@fixed>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2030 
=== Succesors ===
trueSuccessor: v2035 
falseSuccessor: v2034 
=== Usages ===
=== Predecessor ===
v2028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2030 #trueSuccessor: v2035 #falseSuccessor: v2034  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4556440684617523928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2033 
=== Usages ===
=== Predecessor ===
v2036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2033  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v2035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586197547882348909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v2036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
value: j2024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3747 value: j2024 stateAfter: - lastLocationAccess: - #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v3751 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3751 
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3751 #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3752 
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3752 #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v3753 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3753 
=== Succesors ===
next: v2057 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3753 #next: v2057  <|@  <|@
f <@~|@floating>@ <|@
tid v3754 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3754 
=== Succesors ===
next: v2061 
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3754 #next: v2061  <|@  <|@
f <@~|@floating>@ <|@
tid v3749 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3749 
value: i291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3749 value: i291 stateAfter: - lastLocationAccess: - #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3750 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3750 value: j981 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3755 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2039 
=== Usages ===
=== Predecessor ===
v2062 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3755 value: v2413 stateAfter: - lastLocationAccess: - #next: v2039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2040 
=== Usages ===
=== Predecessor ===
v2065 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2040 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2058 
=== Succesors ===
next: v2042 
=== Usages ===
a2045 
=== Predecessor ===
v2039 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2058 #next: v2042  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2043 
=== Predecessor ===
a2040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572070203385157221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2031 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2031  <|@  <|@
f <@*|@fixed>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v2027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572558019695989906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2031 v2033 
=== Succesors ===
next: a2041 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2031 v2033 #next: a2041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2041 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?292 
arguments: v1799 i291 i82 
=== Succesors ===
next: v2044 
=== Usages ===
a2045 
=== Predecessor ===
v2032 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?292 arguments: v1799 i291 i82 #next: v2044  <|@  <|@
f <@*|@fixed>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2043 
=== Predecessor ===
a2041 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2045 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2043 
values: a2040 a2041 
=== Succesors ===
=== Usages ===
v3835 a1647 v3714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2043 values: a2040 a2041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2042 v2044 
=== Succesors ===
next: v3215 
=== Usages ===
a2045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2042 v2044 #next: v3215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2670 
=== Usages ===
j3216 j3218 
=== Predecessor ===
v2043 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2670  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i1274 
=== Succesors ===
=== Usages ===
i1639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i1274  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1637 
trueValue: i291 
falseValue: i396 
=== Succesors ===
=== Usages ===
j2477 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1637 trueValue: i291 falseValue: i396  <|@  <|@
f <@~|@floating>@ <|@
tid j2477 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1639 
=== Succesors ===
=== Usages ===
j3273 v3835 j2481 v2667 v3052 j3259 j3264 j3267 j3270 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1639  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2477 
y: j981 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2477 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v2668 
falseSuccessor: v2669 
=== Usages ===
=== Predecessor ===
v3215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v2668 #falseSuccessor: v2669  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2686 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2686  <|@  <|@
f <@*|@fixed>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v2668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2673 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2673  <|@  <|@
f <@~|@floating>@ <|@
tid v3714 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2045 
index: - 
=== Succesors ===
=== Usages ===
j3218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2045 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3218 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3215 
address: v3714 
=== Succesors ===
=== Usages ===
v3856 v3858 v3860 v3862 v3864 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3215 address: v3714  <|@  <|@
f <@~|@floating>@ <|@
tid v3710 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1442 
index: - 
=== Succesors ===
=== Usages ===
j3216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1442 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3216 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3215 
address: v3710 
=== Succesors ===
=== Usages ===
v3857 v3859 v3861 v3863 v3865 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3215 address: v3710  <|@  <|@
f <@~|@floating>@ <|@
tid j3259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2477 
y: j3145 
=== Succesors ===
=== Usages ===
v3260 v3262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3260 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3259 
y: j964 
=== Succesors ===
=== Usages ===
v2673 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3259 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3260 
=== Succesors ===
trueSuccessor: v2671 
falseSuccessor: v2672 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3260 #trueSuccessor: v2671 #falseSuccessor: v2672  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2682 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2682  <|@  <|@
f <@*|@fixed>@ <|@
tid v2682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
v2671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2674 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2674  <|@  <|@
f <@*|@fixed>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
v2672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B309" 
    successors "B45" "B309" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3251 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2675 
values: j964 j3258 
=== Succesors ===
=== Usages ===
v3865 j3258 v3864 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2675 values: j964 j3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2674 
=== Succesors ===
next: v3659 
=== Usages ===
v3659 v2678 v2679 j3251 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2674 #next: v3659  <|@  <|@
f <@~|@floating>@ <|@
tid v3865 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3251 
=== Succesors ===
=== Usages ===
v3659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3659 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2675 
address: v3865 
=== Succesors ===
next: v3607 
=== Usages ===
v3607 
=== Predecessor ===
v2675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2675 address: v3865 #next: v3607  <|@  <|@
f <@~|@floating>@ <|@
tid v3864 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3251 
=== Succesors ===
=== Usages ===
v3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3864 
value: v3659 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v3659 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3864 value: v3659 stateAfter: - lastLocationAccess: - #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid j3258 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3251 
y: j818 
=== Succesors ===
=== Usages ===
j3243 j3251 v3262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3251 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3259 
y: j3258 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3259 y: j3258  <|@  <|@
f <@*|@fixed>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3262 
=== Succesors ===
trueSuccessor: v2678 
falseSuccessor: v2680 
=== Usages ===
=== Predecessor ===
v3607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3262 #trueSuccessor: v2678 #falseSuccessor: v2680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2675 
=== Succesors ===
next: v2684 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2675 #next: v2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
v2678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3243 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2683 
values: j964 j3258 
=== Succesors ===
=== Usages ===
v3863 j3250 j3235 v3265 v3862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2683 values: j964 j3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2682 v2684 
=== Succesors ===
next: v2705 
=== Usages ===
j3243 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2682 v2684 #next: v2705  <|@  <|@
f <@~|@floating>@ <|@
tid j3264 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2477 
y: j3084 
=== Succesors ===
=== Usages ===
v3265 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3265 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3264 
y: j3243 
=== Succesors ===
=== Usages ===
v2705 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3264 y: j3243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3265 
=== Succesors ===
trueSuccessor: v2704 
falseSuccessor: v2703 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3265 #trueSuccessor: v2704 #falseSuccessor: v2703  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v2705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@*|@fixed>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2694 
=== Predecessor ===
v2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3660 
=== Usages ===
v3660 
=== Predecessor ===
v2705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3660  <|@  <|@
f <@~|@floating>@ <|@
tid v3863 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3243 
=== Succesors ===
=== Usages ===
v3660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3660 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2703 
address: v3863 
=== Succesors ===
next: v3605 
=== Usages ===
v3605 
=== Predecessor ===
v2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2703 address: v3863 #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v3862 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3243 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3862 
value: v3660 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2693 
=== Usages ===
=== Predecessor ===
v3660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3862 value: v3660 stateAfter: - lastLocationAccess: - #next: v2693  <|@  <|@
f <@~|@floating>@ <|@
tid j3250 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3243 
y: j1752 
=== Succesors ===
=== Usages ===
j3235 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3243 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2694 
=== Predecessor ===
v3605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3235 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2694 
values: j3250 j3243 
=== Succesors ===
=== Usages ===
v3861 j3242 j3227 v3268 v3860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2694 values: j3250 j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2693 v2708 
=== Succesors ===
next: v2711 
=== Usages ===
j3235 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2693 v2708 #next: v2711  <|@  <|@
f <@~|@floating>@ <|@
tid j3267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2477 
y: j3088 
=== Succesors ===
=== Usages ===
v3268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3268 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j3235 
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j3235  <|@  <|@
f <@*|@fixed>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3268 
=== Succesors ===
trueSuccessor: v2710 
falseSuccessor: v2709 
=== Usages ===
=== Predecessor ===
v2694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3268 #trueSuccessor: v2710 #falseSuccessor: v2709  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2714 
=== Usages ===
=== Predecessor ===
v2711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2697 
=== Predecessor ===
v2710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3661 
=== Usages ===
v3661 
=== Predecessor ===
v2711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3661  <|@  <|@
f <@~|@floating>@ <|@
tid v3861 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3235 
=== Succesors ===
=== Usages ===
v3661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3661 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2709 
address: v3861 
=== Succesors ===
next: v3603 
=== Usages ===
v3603 
=== Predecessor ===
v2709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2709 address: v3861 #next: v3603  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3235 
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3860 
value: v3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2696 
=== Usages ===
=== Predecessor ===
v3661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3860 value: v3661 stateAfter: - lastLocationAccess: - #next: v2696  <|@  <|@
f <@~|@floating>@ <|@
tid j3242 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3235 
y: j3080 
=== Succesors ===
=== Usages ===
j3227 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3235 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2697 
=== Predecessor ===
v3603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3227 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2697 
values: j3242 j3235 
=== Succesors ===
=== Usages ===
v3859 j3234 j3219 v3271 v3858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2697 values: j3242 j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2696 v2714 
=== Succesors ===
next: v2717 
=== Usages ===
j3227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2696 v2714 #next: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid j3270 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2477 
y: j3092 
=== Succesors ===
=== Usages ===
v3271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3271 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3270 
y: j3227 
=== Succesors ===
=== Usages ===
v2717 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3270 y: j3227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3271 
=== Succesors ===
trueSuccessor: v2716 
falseSuccessor: v2715 
=== Usages ===
=== Predecessor ===
v2697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3271 #trueSuccessor: v2716 #falseSuccessor: v2715  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2720 
=== Usages ===
=== Predecessor ===
v2717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2720  <|@  <|@
f <@*|@fixed>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
v2716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3662 
=== Usages ===
v3662 
=== Predecessor ===
v2717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3662  <|@  <|@
f <@~|@floating>@ <|@
tid v3859 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3227 
=== Succesors ===
=== Usages ===
v3662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3662 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2715 
address: v3859 
=== Succesors ===
next: v3601 
=== Usages ===
v3601 
=== Predecessor ===
v2715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2715 address: v3859 #next: v3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3227 
=== Succesors ===
=== Usages ===
v3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3858 
value: v3662 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v3662 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3858 value: v3662 stateAfter: - lastLocationAccess: - #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid j3234 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3227 
y: j3064 
=== Succesors ===
=== Usages ===
j3219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3227 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
v3601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3219 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2700 
values: j3234 j3227 
=== Succesors ===
=== Usages ===
v3857 v3274 v3856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2700 values: j3234 j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2699 v2720 
=== Succesors ===
next: v2723 
=== Usages ===
j3219 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2699 v2720 #next: v2723  <|@  <|@
f <@~|@floating>@ <|@
tid j3273 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2477 
y: j3096 
=== Succesors ===
=== Usages ===
v3274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3274 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3273 
y: j3219 
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3273 y: j3219  <|@  <|@
f <@*|@fixed>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3274 
=== Succesors ===
trueSuccessor: v2722 
falseSuccessor: v2721 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3274 #trueSuccessor: v2722 #falseSuccessor: v2721  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2726 
=== Usages ===
=== Predecessor ===
v2723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v2722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3663 
=== Usages ===
i3663 
=== Predecessor ===
v2723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3663  <|@  <|@
f <@~|@floating>@ <|@
tid v3857 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3219 
=== Succesors ===
=== Usages ===
i3663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3663 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2721 
address: v3857 
=== Succesors ===
next: v3599 
=== Usages ===
v3599 
=== Predecessor ===
v2721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2721 address: v3857 #next: v3599  <|@  <|@
f <@~|@floating>@ <|@
tid v3856 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3219 
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3856 
value: i3663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2702 
=== Usages ===
=== Predecessor ===
i3663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3856 value: i3663 stateAfter: - lastLocationAccess: - #next: v2702  <|@  <|@
f <@*|@fixed>@ <|@
tid v2702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v3599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" "B56" 
    successors "B59" "B77" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2686 v2702 v2726 
=== Succesors ===
next: v3277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2686 v2702 v2726 #next: v3277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2733 
=== Usages ===
j3279 
=== Predecessor ===
v2687 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid j2476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i291 
=== Succesors ===
=== Usages ===
j2481 v3052 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i291  <|@  <|@
f <@~|@floating>@ <|@
tid v3052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2477 
y: j2476 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2477 y: j2476  <|@  <|@
f <@*|@fixed>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3052 
=== Succesors ===
trueSuccessor: v2732 
falseSuccessor: v2731 
=== Usages ===
=== Predecessor ===
v3277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3052 #trueSuccessor: v2732 #falseSuccessor: v2731  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2736 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2736  <|@  <|@
f <@~|@floating>@ <|@
tid v3835 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2045 
index: j2477 
=== Succesors ===
=== Usages ===
j3279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2045 index: j2477  <|@  <|@
f <@~|@floating>@ <|@
tid j3279 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3277 
address: v3835 
=== Succesors ===
=== Usages ===
v3866 v3867 v3868 v3869 v3870 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3277 address: v3835  <|@  <|@
f <@~|@floating>@ <|@
tid j2481 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2476 
y: j2477 
=== Succesors ===
=== Usages ===
j3324 j3310 j3315 j3318 j3321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2476 y: j2477  <|@  <|@
f <@~|@floating>@ <|@
tid j3310 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2481 
y: j3145 
=== Succesors ===
=== Usages ===
v3311 v3313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3311 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3310 
y: j964 
=== Succesors ===
=== Usages ===
v2736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3310 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3311 
=== Succesors ===
trueSuccessor: v2734 
falseSuccessor: v2735 
=== Usages ===
=== Predecessor ===
v2732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3311 #trueSuccessor: v2734 #falseSuccessor: v2735  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2745 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2745  <|@  <|@
f <@*|@fixed>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
v2734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2737 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2737  <|@  <|@
f <@*|@fixed>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2738 
=== Predecessor ===
v2735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B76" 
    successors "B63" "B76" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3304 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2738 
values: j964 j3309 
=== Succesors ===
=== Usages ===
v3870 j3309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2738 values: j964 j3309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2737 
=== Succesors ===
next: v3612 
=== Usages ===
j3304 v2741 v2742 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2737 #next: v3612  <|@  <|@
f <@~|@floating>@ <|@
tid v3870 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3304 
=== Succesors ===
=== Usages ===
v3612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3870 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2744 
=== Usages ===
=== Predecessor ===
v2738 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3870 value: v3643 stateAfter: - lastLocationAccess: - #next: v2744  <|@  <|@
f <@~|@floating>@ <|@
tid j3309 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3304 
y: j818 
=== Succesors ===
=== Usages ===
j3298 j3304 v3313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3304 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3313 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3310 
y: j3309 
=== Succesors ===
=== Usages ===
v2744 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3310 y: j3309  <|@  <|@
f <@*|@fixed>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3313 
=== Succesors ===
trueSuccessor: v2741 
falseSuccessor: v2743 
=== Usages ===
=== Predecessor ===
v3612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3313 #trueSuccessor: v2741 #falseSuccessor: v2743  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2738 
=== Succesors ===
next: v2747 
=== Usages ===
=== Predecessor ===
v2744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2738 #next: v2747  <|@  <|@
f <@*|@fixed>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
v2741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3298 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2746 
values: j964 j3309 
=== Succesors ===
=== Usages ===
v3869 j3303 j3292 v3316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2746 values: j964 j3309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2745 v2747 
=== Succesors ===
next: v2768 
=== Usages ===
j3298 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2745 v2747 #next: v2768  <|@  <|@
f <@~|@floating>@ <|@
tid j3315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2481 
y: j3084 
=== Succesors ===
=== Usages ===
v3316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3315 
y: j3298 
=== Succesors ===
=== Usages ===
v2768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3315 y: j3298  <|@  <|@
f <@*|@fixed>@ <|@
tid v2768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3316 
=== Succesors ===
trueSuccessor: v2767 
falseSuccessor: v2766 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3316 #trueSuccessor: v2767 #falseSuccessor: v2766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2771 
=== Usages ===
=== Predecessor ===
v2768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2771  <|@  <|@
f <@*|@fixed>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2757 
=== Predecessor ===
v2767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3611 
=== Usages ===
=== Predecessor ===
v2768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3611  <|@  <|@
f <@~|@floating>@ <|@
tid v3869 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3298 
=== Succesors ===
=== Usages ===
v3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3869 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2756 
=== Usages ===
=== Predecessor ===
v2766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3869 value: v3647 stateAfter: - lastLocationAccess: - #next: v2756  <|@  <|@
f <@~|@floating>@ <|@
tid j3303 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3298 
y: j1752 
=== Succesors ===
=== Usages ===
j3292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3298 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2757 
=== Predecessor ===
v3611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3292 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2757 
values: j3303 j3298 
=== Succesors ===
=== Usages ===
v3868 j3297 j3286 v3319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2757 values: j3303 j3298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2756 v2771 
=== Succesors ===
next: v2774 
=== Usages ===
j3292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2756 v2771 #next: v2774  <|@  <|@
f <@~|@floating>@ <|@
tid j3318 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2481 
y: j3088 
=== Succesors ===
=== Usages ===
v3319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3318 
y: j3292 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3318 y: j3292  <|@  <|@
f <@*|@fixed>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3319 
=== Succesors ===
trueSuccessor: v2773 
falseSuccessor: v2772 
=== Usages ===
=== Predecessor ===
v2757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3319 #trueSuccessor: v2773 #falseSuccessor: v2772  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2777 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2777  <|@  <|@
f <@*|@fixed>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2760 
=== Predecessor ===
v2773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3610 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3610  <|@  <|@
f <@~|@floating>@ <|@
tid v3868 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3292 
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3868 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2759 
=== Usages ===
=== Predecessor ===
v2772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3868 value: v3646 stateAfter: - lastLocationAccess: - #next: v2759  <|@  <|@
f <@~|@floating>@ <|@
tid j3297 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3292 
y: j3080 
=== Succesors ===
=== Usages ===
j3286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3292 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2760 
=== Predecessor ===
v3610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3286 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2760 
values: j3297 j3292 
=== Succesors ===
=== Usages ===
v3867 j3291 j3280 v3322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2760 values: j3297 j3292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2759 v2777 
=== Succesors ===
next: v2780 
=== Usages ===
j3286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2759 v2777 #next: v2780  <|@  <|@
f <@~|@floating>@ <|@
tid j3321 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2481 
y: j3092 
=== Succesors ===
=== Usages ===
v3322 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3321 
y: j3286 
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3321 y: j3286  <|@  <|@
f <@*|@fixed>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3322 
=== Succesors ===
trueSuccessor: v2779 
falseSuccessor: v2778 
=== Usages ===
=== Predecessor ===
v2760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3322 #trueSuccessor: v2779 #falseSuccessor: v2778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2783 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2783  <|@  <|@
f <@*|@fixed>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3867 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3286 
=== Succesors ===
=== Usages ===
v3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3867 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2762 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3867 value: v3645 stateAfter: - lastLocationAccess: - #next: v2762  <|@  <|@
f <@~|@floating>@ <|@
tid j3291 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3286 
y: j3064 
=== Succesors ===
=== Usages ===
j3280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3286 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v3609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3280 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2763 
values: j3291 j3286 
=== Succesors ===
=== Usages ===
v3866 v3325 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2763 values: j3291 j3286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2762 v2783 
=== Succesors ===
next: v2786 
=== Usages ===
j3280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2762 v2783 #next: v2786  <|@  <|@
f <@~|@floating>@ <|@
tid j3324 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2481 
y: j3096 
=== Succesors ===
=== Usages ===
v3325 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3325 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3324 
y: j3280 
=== Succesors ===
=== Usages ===
v2786 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3324 y: j3280  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3325 
=== Succesors ===
trueSuccessor: v2785 
falseSuccessor: v2784 
=== Usages ===
=== Predecessor ===
v2763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3325 #trueSuccessor: v2785 #falseSuccessor: v2784  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2789 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2789  <|@  <|@
f <@*|@fixed>@ <|@
tid v2789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v2785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3608 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3608  <|@  <|@
f <@~|@floating>@ <|@
tid v3866 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3280 
=== Succesors ===
=== Usages ===
v3608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3866 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2765 
=== Usages ===
=== Predecessor ===
v2784 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3866 value: i3644 stateAfter: - lastLocationAccess: - #next: v2765  <|@  <|@
f <@*|@fixed>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v3608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2742 
=== Usages ===
=== Predecessor ===
v2744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2742  <|@  <|@
f <@*|@fixed>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2738 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2743 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2749 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2749  <|@  <|@
f <@*|@fixed>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v2731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B75" "B74" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2749 v2765 v2789 
=== Succesors ===
next: a1647 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2749 v2765 v2789 #next: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1647 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2045 
=== Succesors ===
next: v1194 
=== Usages ===
j2082 a1192 a725 
=== Predecessor ===
v2750 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2045 #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v3704 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1441 
index: - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1441 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Compress
stamp: n! -
=== Inputs ===
value: a1647 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3704 
value: a1192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2073 
=== Usages ===
=== Predecessor ===
a1647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3704 value: a1192 stateAfter: - lastLocationAccess: - #next: j2073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2073 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1441 
=== Succesors ===
next: v2077 
=== Usages ===
j2074 
=== Predecessor ===
v1194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1441 #next: v2077  <|@  <|@
f <@~|@floating>@ <|@
tid j2074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2073 
y: i1757 
=== Succesors ===
=== Usages ===
v3756 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2073 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3756 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: j1761 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3756 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3664 
=== Usages ===
=== Predecessor ===
j2073 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3756 value: i1763 stateAfter: - lastLocationAccess: - #next: i3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3705 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1441 
index: - 
=== Succesors ===
=== Usages ===
i3664 v1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1441 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3664 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
=== Succesors ===
next: v1221 
=== Usages ===
i671 j2083 v1215 v1234 
=== Predecessor ===
v2077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3705 #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3664 
y: i82 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3664 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1216 
=== Usages ===
=== Predecessor ===
i3664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1220 #falseSuccessor: v1216  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557307913614559812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B83" 
    xhandlers
    flags 
    probability 4586868295309743850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1233 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32
=== Inputs ===
x: i291 
y: i407 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i291 y: i407  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1233 
y: i3664 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1233 y: i3664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1237 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1237 #falseSuccessor: v1235  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557221190714856223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4561768151792078514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1219 v1236 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1219 v1236 #next: v1239  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: - - 
virtualObjectMappings: ?790 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - virtualObjectMappings: ?790  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?296  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4586801220567004356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2080 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2080  <|@  <|@
f <@~|@floating>@ <|@
tid a1200 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3657 
=== Succesors ===
=== Usages ===
j2080 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2080 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1200 
=== Succesors ===
next: j2082 
=== Usages ===
v3757 
=== Predecessor ===
v1235 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1200 #next: j2082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2082 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1647 
=== Succesors ===
next: v2088 
=== Usages ===
v3758 
=== Predecessor ===
j2080 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1647 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v3757 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2080 
index: - 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2080 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2083 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3664 
=== Succesors ===
=== Usages ===
v3758 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3758 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2082 
index: j2083 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2082 index: j2083  <|@  <|@
f <@~|@floating>@ <|@
tid j2087 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3757 v3758 j2087 
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
j2082 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3757 v3758 j2087 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32
=== Inputs ===
x: i407 
y: i3664 
=== Succesors ===
=== Usages ===
v1250 i726 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i407 y: i3664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
value: i671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3705 value: i671 stateAfter: - lastLocationAccess: - #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B83" 
    successors "B85" "B101" 
    xhandlers
    flags 
    probability 4607173992112009100
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i724 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v721 
values: i396 i396 i291 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i396 i396 i291  <|@  <|@
f <@~|@floating>@ <|@
tid a725 <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v721 
values: a1395 a1414 a1647 
=== Succesors ===
=== Usages ===
v3695 ?324 v3697 v3711 ?1469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: a1395 a1414 a1647  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v721 
values: i3654 i3656 i671 
=== Succesors ===
=== Usages ===
i261 j939 v911 v930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i3654 i3656 i671  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v721 
values: i3654 i3656 i407 
=== Succesors ===
=== Usages ===
?722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i3654 i3656 i407  <|@  <|@
f <@~|@floating>@ <|@
tid a792 <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v721 
values: a1405 a1424 a1441 
=== Succesors ===
=== Usages ===
?794 v3691 v3692 v993 v897 j2142 j2255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: a1405 a1424 a1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v720 v723 v761 
=== Succesors ===
next: i3665 
=== Usages ===
i724 a725 i726 i727 a792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v720 v723 v761 #next: i3665  <|@  <|@
f <@~|@floating>@ <|@
tid v3697 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
i3665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3665 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3697 
=== Succesors ===
next: v320 
=== Usages ===
i1259 i1634 v1569 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3697 #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v3692 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a792 
index: - 
=== Succesors ===
=== Usages ===
a3672 v900 v997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a792 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3691 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a792 
index: - 
=== Succesors ===
=== Usages ===
i3674 v886 i3681 v955 i3671 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a792 index: -  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
materializedValue: a792 
=== Succesors ===
=== Usages ===
?722 ?1469 ?770 ?324 ?328 ?1470 ?259 ?350 ?1471 ?270 ?513 ?104 ?109 ?279 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a126 materializedValue: a792  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i726 
y: i71 
=== Succesors ===
=== Usages ===
v993 i316 v955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i726 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i261 
y: i724 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i261 y: i724  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i316 
y: i71 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i316 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 0]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i528 i717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 35
stableDimension: 0
stamp: i32 [35] ⇊0000000000000023 ⇈0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i524 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -4
stableDimension: 0
stamp: i32 [-4] ⇊00000000fffffffc ⇈00000000fffffffc
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 v525 v716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?220 
values: a126 - 
=== Succesors ===
=== Usages ===
?331 ?770 ?259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?220 values: a126 -  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1260 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawLoadNode.load(Object, long, JavaKind, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:197) [bci: 116]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rawvalue: 64
stableDimension: 0
stamp: i16 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i16
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 v1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:333) [bci: 12]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 i1263 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
i3665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v318 #falseSuccessor: v319  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606750936613628552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i726 
y: i82 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i726 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v911 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v912 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v911 #trueSuccessor: v916 #falseSuccessor: v912  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576642080704798812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4606665179442945031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid i1259 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3665 
y: i99 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3665 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1259 
y: i726 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1259 y: i726  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v933 #falseSuccessor: v931  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576587196115561358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 4581118238037550581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v915 v932 
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v915 v932 #next: v935  <|@  <|@
tid ?722 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i727 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i727 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?722 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?722  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B100" 
    xhandlers
    flags 
    probability 4606580279843968345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid j939 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:185) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i726 
=== Succesors ===
=== Usages ===
v3695 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i726  <|@  <|@
f <@~|@floating>@ <|@
tid v3695 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a725 
index: j939 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: j939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawStoreNode.storeObject(Object, long, Object, JavaKind, LocationIdentity, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:198) [bci: 134]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3695 
value: i1260 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3695 value: i1260 stateAfter: - lastLocationAccess: - #next: v955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i261 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v3696 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3696 
=== Succesors ===
next: v608 
=== Usages ===
v605 
=== Predecessor ===
v955 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3696 #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v958 
y: v20 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v958 y: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j983 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j983  <|@  <|@
f <@~|@floating>@ <|@
tid v3903 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3903 
=== Succesors ===
next: v969 
=== Usages ===
j965 j970 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3903 #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j983 
y: j980 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j983 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j965 
y: j981 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j965 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v966 
=== Succesors ===
trueSuccessor: v968 
falseSuccessor: v967 
=== Usages ===
=== Predecessor ===
j983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v966 #trueSuccessor: v968 #falseSuccessor: v967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4606413019144024376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid j970 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j983 
y: i963 
=== Succesors ===
=== Usages ===
i971 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j983 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
resultBits: 32
stamp: i32
=== Inputs ===
value: j970 
=== Succesors ===
=== Usages ===
v972 i987 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j970  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i971 
y: i82 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i971 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v976 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v977 #falseSuccessor: v976  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576425813524252139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606330641148036896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576479067986304651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4580956040382648891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v975 
=== Succesors ===
next: i979 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v975 #next: i979  <|@  <|@
tid ?770 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 - i71 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i979 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 - i71 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i979 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?770 
arguments: a1 
=== Succesors ===
next: v989 
=== Usages ===
i987 
=== Predecessor ===
v974 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?770 arguments: a1 #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
i979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i987 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v985 
values: i971 i979 
=== Succesors ===
=== Usages ===
i512 i711 i511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v985 values: i971 i979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v988 v989 
=== Succesors ===
next: v714 
=== Usages ===
i987 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v988 v989 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i711 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i987 
=== Succesors ===
=== Usages ===
i715 i717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i987  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i711 
=== Succesors ===
=== Usages ===
i515 i516 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i711  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i711 
=== Succesors ===
=== Usages ===
v716 i509 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i711  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i715 
y: i96 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i715 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v712 #falseSuccessor: v713  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4598056962486991259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B167" 
    xhandlers
    flags 
    probability 4604273993691867467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B164" 
    xhandlers
    flags 
    probability 4576532860372216279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i323  <|@  <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5af40c8c
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a792 i261 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a792 i261  <|@  <|@
f <@~|@floating>@ <|@
tid a12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 17]
rawvalue: "@"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"@"]
=== Inputs ===
=== Succesors ===
=== Usages ===
?331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?331 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 a12 i71 
=== Succesors ===
=== Usages ===
?324 ?328 ?1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 a12 i71  <|@  <|@
tid ?1469 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?331 
values: - - a126 a725 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - a126 a725 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i323 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v993 
stateDuring: ?1469 
=== Succesors ===
next: v1561 
=== Usages ===
?324 v2096 i1263 j2483 i2089 v2130 a2111 i1634 v1555 v1569 
=== Predecessor ===
v319 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v993 stateDuring: ?1469 #next: v1561  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?331 
values: - - a126 a725 i323 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
a2111 v1567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - a126 a725 i323 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i82 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i323 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1555 
=== Succesors ===
trueSuccessor: v1560 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1555 #trueSuccessor: v1560 #falseSuccessor: v1556  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?324 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?324  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2091 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2091 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2127 
=== Usages ===
v3759 v3760 
=== Predecessor ===
v1556 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2127  <|@  <|@
f <@~|@floating>@ <|@
tid v3759 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2127 v2129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2127 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3759 
=== Succesors ===
next: j2128 
=== Usages ===
j2095 v3761 v3762 a2110 v3767 v3763 v3764 v3765 v3766 
=== Predecessor ===
j2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3759 #next: j2128  <|@  <|@
f <@~|@floating>@ <|@
tid v3760 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2128 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3760 
=== Succesors ===
next: v2099 
=== Usages ===
v2100 
=== Predecessor ===
j2127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3760 #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i2025 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2098 
falseSuccessor: v2097 
=== Usages ===
=== Predecessor ===
j2128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2098 #falseSuccessor: v2097  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4586252820212474326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid i2089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i323 
y: i71 
=== Succesors ===
=== Usages ===
i2118 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i323 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2118 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2089 
y: i2048 
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2089 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2090 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2118 
y: i2018 
=== Succesors ===
=== Usages ===
j2094 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2118 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2094 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2090 
=== Succesors ===
=== Usages ===
j2095 v3763 v3764 v3765 v3766 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid j2095 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64
=== Inputs ===
x: j2094 
y: j2127 
=== Succesors ===
=== Usages ===
v2100 v2129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2094 y: j2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2128 
y: j2095 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2128 y: j2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2100 
=== Succesors ===
trueSuccessor: v2105 
falseSuccessor: v2104 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2100 #trueSuccessor: v2105 #falseSuccessor: v2104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4556433382590351231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2103 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2103  <|@  <|@
f <@*|@fixed>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
v2105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4586191900220707527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2129 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3759 
value: j2095 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
v2104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3759 value: j2095 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v3763 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3763 
=== Succesors ===
next: v2122 
=== Usages ===
=== Predecessor ===
v2129 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3763 #next: v2122  <|@  <|@
f <@~|@floating>@ <|@
tid v3764 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3764 
=== Succesors ===
next: v2124 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3764 #next: v2124  <|@  <|@
f <@~|@floating>@ <|@
tid v3765 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3765 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3765 #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v3766 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3766 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2124 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3766 #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v3761 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3761 
value: i323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2131 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3761 value: i323 stateAfter: - lastLocationAccess: - #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v3762 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3762 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
v2130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3762 value: j981 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v3767 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3767 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3767 value: v2413 stateAfter: - lastLocationAccess: - #next: v2109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2110 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2110 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2127 
=== Succesors ===
next: v2112 
=== Usages ===
a2115 
=== Predecessor ===
v2109 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2127 #next: v2112  <|@  <|@
f <@*|@fixed>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
a2110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4572065132532953960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2101 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2101  <|@  <|@
f <@*|@fixed>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
v2097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4572552492467088352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2101 v2103 
=== Succesors ===
next: a2111 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2101 v2103 #next: a2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2111 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?324 
arguments: v1799 i323 i82 
=== Succesors ===
next: v2114 
=== Usages ===
a2115 
=== Predecessor ===
v2102 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?324 arguments: v1799 i323 i82 #next: v2114  <|@  <|@
f <@*|@fixed>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
a2111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2113 
values: a2110 a2111 
=== Succesors ===
=== Usages ===
v3836 a1651 v3715 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2113 values: a2110 a2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2112 v2114 
=== Succesors ===
next: v3328 
=== Usages ===
a2115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2112 v2114 #next: v3328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2796 
=== Usages ===
j3329 j3331 
=== Predecessor ===
v2113 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2796  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3665 
y: i323 
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3665 y: i323  <|@  <|@
f <@~|@floating>@ <|@
tid i1634 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1569 
trueValue: i3665 
falseValue: i323 
=== Succesors ===
=== Usages ===
j2484 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1569 trueValue: i3665 falseValue: i323  <|@  <|@
f <@~|@floating>@ <|@
tid j2484 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1634 
=== Succesors ===
=== Usages ===
j3386 v3836 j2488 v2793 v3054 j3372 j3377 j3380 j3383 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1634  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2484 
y: j981 
=== Succesors ===
=== Usages ===
v2796 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2484 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2793 
=== Succesors ===
trueSuccessor: v2794 
falseSuccessor: v2795 
=== Usages ===
=== Predecessor ===
v3328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2793 #trueSuccessor: v2794 #falseSuccessor: v2795  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B128" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2812 
=== Usages ===
=== Predecessor ===
v2796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2812  <|@  <|@
f <@*|@fixed>@ <|@
tid v2812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v2794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2799 
=== Usages ===
=== Predecessor ===
v2796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2799  <|@  <|@
f <@~|@floating>@ <|@
tid v3715 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2115 
index: - 
=== Succesors ===
=== Usages ===
j3331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2115 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3331 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3328 
address: v3715 
=== Succesors ===
=== Usages ===
v3871 v3873 v3875 v3877 v3879 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3328 address: v3715  <|@  <|@
f <@~|@floating>@ <|@
tid v3711 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
j3329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3329 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3328 
address: v3711 
=== Succesors ===
=== Usages ===
v3872 v3874 v3876 v3878 v3880 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3328 address: v3711  <|@  <|@
f <@~|@floating>@ <|@
tid j3372 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2484 
y: j3145 
=== Succesors ===
=== Usages ===
v3373 v3375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3373 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3372 
y: j964 
=== Succesors ===
=== Usages ===
v2799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3372 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3373 
=== Succesors ===
trueSuccessor: v2797 
falseSuccessor: v2798 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3373 #trueSuccessor: v2797 #falseSuccessor: v2798  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B116" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2808 
=== Usages ===
=== Predecessor ===
v2799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2809 
=== Predecessor ===
v2797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2800 
=== Usages ===
=== Predecessor ===
v2799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2800  <|@  <|@
f <@*|@fixed>@ <|@
tid v2800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2801 
=== Predecessor ===
v2798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B308" 
    successors "B115" "B308" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3364 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2801 
values: j964 j3371 
=== Succesors ===
=== Usages ===
v3880 j3371 v3879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2801 values: j964 j3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2801 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2800 
=== Succesors ===
next: v3666 
=== Usages ===
v3666 v2804 v2805 j3364 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2800 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid v3880 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3364 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2801 
address: v3880 
=== Succesors ===
next: v3622 
=== Usages ===
v3622 
=== Predecessor ===
v2801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2801 address: v3880 #next: v3622  <|@  <|@
f <@~|@floating>@ <|@
tid v3879 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3364 
=== Succesors ===
=== Usages ===
v3622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3879 
value: v3666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2807 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3879 value: v3666 stateAfter: - lastLocationAccess: - #next: v2807  <|@  <|@
f <@~|@floating>@ <|@
tid j3371 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3364 
y: j818 
=== Succesors ===
=== Usages ===
j3356 j3364 v3375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3364 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3375 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3372 
y: j3371 
=== Succesors ===
=== Usages ===
v2807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3372 y: j3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3375 
=== Succesors ===
trueSuccessor: v2804 
falseSuccessor: v2806 
=== Usages ===
=== Predecessor ===
v3622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3375 #trueSuccessor: v2804 #falseSuccessor: v2806  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2801 
=== Succesors ===
next: v2810 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2801 #next: v2810  <|@  <|@
f <@*|@fixed>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2809 
=== Predecessor ===
v2804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3356 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2809 
values: j964 j3371 
=== Succesors ===
=== Usages ===
v3878 j3363 j3348 v3378 v3877 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2809 values: j964 j3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2808 v2810 
=== Succesors ===
next: v2831 
=== Usages ===
j3356 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2808 v2810 #next: v2831  <|@  <|@
f <@~|@floating>@ <|@
tid j3377 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2484 
y: j3084 
=== Succesors ===
=== Usages ===
v3378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3377 
y: j3356 
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3377 y: j3356  <|@  <|@
f <@*|@fixed>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3378 
=== Succesors ===
trueSuccessor: v2830 
falseSuccessor: v2829 
=== Usages ===
=== Predecessor ===
v2809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3378 #trueSuccessor: v2830 #falseSuccessor: v2829  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2834 
=== Usages ===
=== Predecessor ===
v2831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2834  <|@  <|@
f <@*|@fixed>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
v2830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3667 
=== Usages ===
v3667 
=== Predecessor ===
v2831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3667  <|@  <|@
f <@~|@floating>@ <|@
tid v3878 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3356 
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2829 
address: v3878 
=== Succesors ===
next: v3620 
=== Usages ===
v3620 
=== Predecessor ===
v2829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2829 address: v3878 #next: v3620  <|@  <|@
f <@~|@floating>@ <|@
tid v3877 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3356 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3877 
value: v3667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2819 
=== Usages ===
=== Predecessor ===
v3667 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3877 value: v3667 stateAfter: - lastLocationAccess: - #next: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid j3363 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3356 
y: j1752 
=== Succesors ===
=== Usages ===
j3348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3356 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
v3620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3348 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2820 
values: j3363 j3356 
=== Succesors ===
=== Usages ===
v3876 j3355 j3340 v3381 v3875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2820 values: j3363 j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2819 v2834 
=== Succesors ===
next: v2837 
=== Usages ===
j3348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2819 v2834 #next: v2837  <|@  <|@
f <@~|@floating>@ <|@
tid j3380 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2484 
y: j3088 
=== Succesors ===
=== Usages ===
v3381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3380 
y: j3348 
=== Succesors ===
=== Usages ===
v2837 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3380 y: j3348  <|@  <|@
f <@*|@fixed>@ <|@
tid v2837 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3381 
=== Succesors ===
trueSuccessor: v2836 
falseSuccessor: v2835 
=== Usages ===
=== Predecessor ===
v2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3381 #trueSuccessor: v2836 #falseSuccessor: v2835  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2840 
=== Usages ===
=== Predecessor ===
v2837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2840  <|@  <|@
f <@*|@fixed>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
v2836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3668 
=== Usages ===
v3668 
=== Predecessor ===
v2837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3668  <|@  <|@
f <@~|@floating>@ <|@
tid v3876 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3348 
=== Succesors ===
=== Usages ===
v3668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3668 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2835 
address: v3876 
=== Succesors ===
next: v3618 
=== Usages ===
v3618 
=== Predecessor ===
v2835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2835 address: v3876 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid v3875 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3348 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3875 
value: v3668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2822 
=== Usages ===
=== Predecessor ===
v3668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3875 value: v3668 stateAfter: - lastLocationAccess: - #next: v2822  <|@  <|@
f <@~|@floating>@ <|@
tid j3355 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3348 
y: j3080 
=== Succesors ===
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3348 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
v3618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3340 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2823 
values: j3355 j3348 
=== Succesors ===
=== Usages ===
v3874 j3347 j3332 v3384 v3873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2823 values: j3355 j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2822 v2840 
=== Succesors ===
next: v2843 
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2822 v2840 #next: v2843  <|@  <|@
f <@~|@floating>@ <|@
tid j3383 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2484 
y: j3092 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3383 
y: j3340 
=== Succesors ===
=== Usages ===
v2843 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3383 y: j3340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2843 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3384 
=== Succesors ===
trueSuccessor: v2842 
falseSuccessor: v2841 
=== Usages ===
=== Predecessor ===
v2823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3384 #trueSuccessor: v2842 #falseSuccessor: v2841  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2846 
=== Usages ===
=== Predecessor ===
v2843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2846  <|@  <|@
f <@*|@fixed>@ <|@
tid v2846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
v2842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3669 
=== Usages ===
v3669 
=== Predecessor ===
v2843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3669  <|@  <|@
f <@~|@floating>@ <|@
tid v3874 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3340 
=== Succesors ===
=== Usages ===
v3669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3669 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2841 
address: v3874 
=== Succesors ===
next: v3616 
=== Usages ===
v3616 
=== Predecessor ===
v2841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2841 address: v3874 #next: v3616  <|@  <|@
f <@~|@floating>@ <|@
tid v3873 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3340 
=== Succesors ===
=== Usages ===
v3616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3873 
value: v3669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2825 
=== Usages ===
=== Predecessor ===
v3669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3873 value: v3669 stateAfter: - lastLocationAccess: - #next: v2825  <|@  <|@
f <@~|@floating>@ <|@
tid j3347 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3340 
y: j3064 
=== Succesors ===
=== Usages ===
j3332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
v3616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3332 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2826 
values: j3347 j3340 
=== Succesors ===
=== Usages ===
v3872 v3387 v3871 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2826 values: j3347 j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2825 v2846 
=== Succesors ===
next: v2849 
=== Usages ===
j3332 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2825 v2846 #next: v2849  <|@  <|@
f <@~|@floating>@ <|@
tid j3386 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2484 
y: j3096 
=== Succesors ===
=== Usages ===
v3387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3387 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3386 
y: j3332 
=== Succesors ===
=== Usages ===
v2849 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3386 y: j3332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2849 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3387 
=== Succesors ===
trueSuccessor: v2848 
falseSuccessor: v2847 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3387 #trueSuccessor: v2848 #falseSuccessor: v2847  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2852 
=== Usages ===
=== Predecessor ===
v2849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2852  <|@  <|@
f <@*|@fixed>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v2848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3670 
=== Usages ===
i3670 
=== Predecessor ===
v2849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3670  <|@  <|@
f <@~|@floating>@ <|@
tid v3872 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3332 
=== Succesors ===
=== Usages ===
i3670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3670 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2847 
address: v3872 
=== Succesors ===
next: v3614 
=== Usages ===
v3614 
=== Predecessor ===
v2847 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2847 address: v3872 #next: v3614  <|@  <|@
f <@~|@floating>@ <|@
tid v3871 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3332 
=== Succesors ===
=== Usages ===
v3614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3871 
value: i3670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
i3670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3871 value: i3670 stateAfter: - lastLocationAccess: - #next: v2828  <|@  <|@
f <@*|@fixed>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v3614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B110" "B127" "B126" 
    successors "B129" "B147" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2812 v2828 v2852 
=== Succesors ===
next: v3390 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2812 v2828 v2852 #next: v3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2859 
=== Usages ===
j3392 
=== Predecessor ===
v2813 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2859  <|@  <|@
f <@~|@floating>@ <|@
tid j2483 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i323 
=== Succesors ===
=== Usages ===
j2488 v3054 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i323  <|@  <|@
f <@~|@floating>@ <|@
tid v3054 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2484 
y: j2483 
=== Succesors ===
=== Usages ===
v2859 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2484 y: j2483  <|@  <|@
f <@*|@fixed>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3054 
=== Succesors ===
trueSuccessor: v2858 
falseSuccessor: v2857 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3054 #trueSuccessor: v2858 #falseSuccessor: v2857  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
v2859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2862  <|@  <|@
f <@~|@floating>@ <|@
tid v3836 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2115 
index: j2484 
=== Succesors ===
=== Usages ===
j3392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2115 index: j2484  <|@  <|@
f <@~|@floating>@ <|@
tid j3392 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3390 
address: v3836 
=== Succesors ===
=== Usages ===
v3881 v3882 v3883 v3884 v3885 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3390 address: v3836  <|@  <|@
f <@~|@floating>@ <|@
tid j2488 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2483 
y: j2484 
=== Succesors ===
=== Usages ===
j3437 j3423 j3428 j3431 j3434 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2483 y: j2484  <|@  <|@
f <@~|@floating>@ <|@
tid j3423 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2488 
y: j3145 
=== Succesors ===
=== Usages ===
v3424 v3426 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3424 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3423 
y: j964 
=== Succesors ===
=== Usages ===
v2862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3423 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3424 
=== Succesors ===
trueSuccessor: v2860 
falseSuccessor: v2861 
=== Usages ===
=== Predecessor ===
v2858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3424 #trueSuccessor: v2860 #falseSuccessor: v2861  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2871 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2871  <|@  <|@
f <@*|@fixed>@ <|@
tid v2871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2872 
=== Predecessor ===
v2860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2863 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2863  <|@  <|@
f <@*|@fixed>@ <|@
tid v2863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
v2861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B146" 
    successors "B133" "B146" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3417 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2864 
values: j964 j3422 
=== Succesors ===
=== Usages ===
v3885 j3422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2864 values: j964 j3422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2864 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2863 
=== Succesors ===
next: v3627 
=== Usages ===
j3417 v2867 v2868 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2863 #next: v3627  <|@  <|@
f <@~|@floating>@ <|@
tid v3885 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3417 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3885 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2870 
=== Usages ===
=== Predecessor ===
v2864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3885 value: v3643 stateAfter: - lastLocationAccess: - #next: v2870  <|@  <|@
f <@~|@floating>@ <|@
tid j3422 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3417 
y: j818 
=== Succesors ===
=== Usages ===
j3411 j3417 v3426 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3417 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3426 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3423 
y: j3422 
=== Succesors ===
=== Usages ===
v2870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3423 y: j3422  <|@  <|@
f <@*|@fixed>@ <|@
tid v2870 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3426 
=== Succesors ===
trueSuccessor: v2867 
falseSuccessor: v2869 
=== Usages ===
=== Predecessor ===
v3627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3426 #trueSuccessor: v2867 #falseSuccessor: v2869  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2864 
=== Succesors ===
next: v2873 
=== Usages ===
=== Predecessor ===
v2870 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2864 #next: v2873  <|@  <|@
f <@*|@fixed>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2872 
=== Predecessor ===
v2867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3411 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2872 
values: j964 j3422 
=== Succesors ===
=== Usages ===
v3884 j3416 j3405 v3429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2872 values: j964 j3422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2871 v2873 
=== Succesors ===
next: v2894 
=== Usages ===
j3411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2871 v2873 #next: v2894  <|@  <|@
f <@~|@floating>@ <|@
tid j3428 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2488 
y: j3084 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3428 
y: j3411 
=== Succesors ===
=== Usages ===
v2894 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3428 y: j3411  <|@  <|@
f <@*|@fixed>@ <|@
tid v2894 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3429 
=== Succesors ===
trueSuccessor: v2893 
falseSuccessor: v2892 
=== Usages ===
=== Predecessor ===
v2872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3429 #trueSuccessor: v2893 #falseSuccessor: v2892  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2897 
=== Usages ===
=== Predecessor ===
v2894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2883 
=== Predecessor ===
v2893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3626 
=== Usages ===
=== Predecessor ===
v2894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3626  <|@  <|@
f <@~|@floating>@ <|@
tid v3884 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3411 
=== Succesors ===
=== Usages ===
v3626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3884 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2882 
=== Usages ===
=== Predecessor ===
v2892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3884 value: v3647 stateAfter: - lastLocationAccess: - #next: v2882  <|@  <|@
f <@~|@floating>@ <|@
tid j3416 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3411 
y: j1752 
=== Succesors ===
=== Usages ===
j3405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2883 
=== Predecessor ===
v3626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3405 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2883 
values: j3416 j3411 
=== Succesors ===
=== Usages ===
v3883 j3410 j3399 v3432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2883 values: j3416 j3411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2882 v2897 
=== Succesors ===
next: v2900 
=== Usages ===
j3405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2882 v2897 #next: v2900  <|@  <|@
f <@~|@floating>@ <|@
tid j3431 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2488 
y: j3088 
=== Succesors ===
=== Usages ===
v3432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3432 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3431 
y: j3405 
=== Succesors ===
=== Usages ===
v2900 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3431 y: j3405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3432 
=== Succesors ===
trueSuccessor: v2899 
falseSuccessor: v2898 
=== Usages ===
=== Predecessor ===
v2883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3432 #trueSuccessor: v2899 #falseSuccessor: v2898  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2903 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2903  <|@  <|@
f <@*|@fixed>@ <|@
tid v2903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2886 
=== Predecessor ===
v2899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3625 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3625  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3405 
=== Succesors ===
=== Usages ===
v3625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3883 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2885 
=== Usages ===
=== Predecessor ===
v2898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3883 value: v3646 stateAfter: - lastLocationAccess: - #next: v2885  <|@  <|@
f <@~|@floating>@ <|@
tid j3410 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3405 
y: j3080 
=== Succesors ===
=== Usages ===
j3399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3405 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2886 
=== Predecessor ===
v3625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3399 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2886 
values: j3410 j3405 
=== Succesors ===
=== Usages ===
v3882 j3404 j3393 v3435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2886 values: j3410 j3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2885 v2903 
=== Succesors ===
next: v2906 
=== Usages ===
j3399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2885 v2903 #next: v2906  <|@  <|@
f <@~|@floating>@ <|@
tid j3434 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2488 
y: j3092 
=== Succesors ===
=== Usages ===
v3435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3434 
y: j3399 
=== Succesors ===
=== Usages ===
v2906 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3434 y: j3399  <|@  <|@
f <@*|@fixed>@ <|@
tid v2906 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3435 
=== Succesors ===
trueSuccessor: v2905 
falseSuccessor: v2904 
=== Usages ===
=== Predecessor ===
v2886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3435 #trueSuccessor: v2905 #falseSuccessor: v2904  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2909 
=== Usages ===
=== Predecessor ===
v2906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2909  <|@  <|@
f <@*|@fixed>@ <|@
tid v2909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2889 
=== Predecessor ===
v2905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3624 
=== Usages ===
=== Predecessor ===
v2906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid v3882 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3399 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3882 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2888 
=== Usages ===
=== Predecessor ===
v2904 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3882 value: v3645 stateAfter: - lastLocationAccess: - #next: v2888  <|@  <|@
f <@~|@floating>@ <|@
tid j3404 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3399 
y: j3064 
=== Succesors ===
=== Usages ===
j3393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3399 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2889 
=== Predecessor ===
v3624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3393 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2889 
values: j3404 j3399 
=== Succesors ===
=== Usages ===
v3881 v3438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2889 values: j3404 j3399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2888 v2909 
=== Succesors ===
next: v2912 
=== Usages ===
j3393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2888 v2909 #next: v2912  <|@  <|@
f <@~|@floating>@ <|@
tid j3437 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2488 
y: j3096 
=== Succesors ===
=== Usages ===
v3438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3438 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3437 
y: j3393 
=== Succesors ===
=== Usages ===
v2912 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3437 y: j3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2912 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3438 
=== Succesors ===
trueSuccessor: v2911 
falseSuccessor: v2910 
=== Usages ===
=== Predecessor ===
v2889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3438 #trueSuccessor: v2911 #falseSuccessor: v2910  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2915 
=== Usages ===
=== Predecessor ===
v2912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2915  <|@  <|@
f <@*|@fixed>@ <|@
tid v2915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v2911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3623 
=== Usages ===
=== Predecessor ===
v2912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3623  <|@  <|@
f <@~|@floating>@ <|@
tid v3881 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3393 
=== Succesors ===
=== Usages ===
v3623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3881 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2891 
=== Usages ===
=== Predecessor ===
v2910 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3881 value: i3644 stateAfter: - lastLocationAccess: - #next: v2891  <|@  <|@
f <@*|@fixed>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v3623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B132" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2868 
=== Usages ===
=== Predecessor ===
v2870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2868  <|@  <|@
f <@*|@fixed>@ <|@
tid v2868 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2869 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2864  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B148" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@*|@fixed>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v2857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2875 v2891 v2915 
=== Succesors ===
next: a1651 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2875 v2891 v2915 #next: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2115 
=== Succesors ===
next: v997 
=== Usages ===
v3698 a996 
=== Predecessor ===
v2876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2115 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid a996 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: Compress
stamp: n! -
=== Inputs ===
value: a1651 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
value: a996 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2142 
=== Usages ===
=== Predecessor ===
a1651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3692 value: a996 stateAfter: - lastLocationAccess: - #next: j2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2142 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a792 
=== Succesors ===
next: v2146 
=== Usages ===
j2143 
=== Predecessor ===
v997 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a792 #next: v2146  <|@  <|@
f <@~|@floating>@ <|@
tid j2143 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2142 
y: i1757 
=== Succesors ===
=== Usages ===
v3768 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2142 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3768 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2143 
index: j1761 
=== Succesors ===
=== Usages ===
v2146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2143 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3768 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3671 
=== Usages ===
=== Predecessor ===
j2142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3768 value: i1763 stateAfter: - lastLocationAccess: - #next: i3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3671 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: v1013 
=== Usages ===
j1035 i262 v1007 v1026 
=== Predecessor ===
v2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3671 
y: i82 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3671 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i3671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v1012 #falseSuccessor: v1008  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557299800251034593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B153" 
    xhandlers
    flags 
    probability 4586862020130142314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i323 
y: i99 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1263 
y: i3671 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1263 y: i3671  <|@  <|@
f <@*|@fixed>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v1029 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v1029 #falseSuccessor: v1027  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557213158484966257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
v1029 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" 
    successors 
    xhandlers
    flags 
    probability 4561760078995370921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1011 v1028 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1011 v1028 #next: v1031  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?331 
values: - - 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?328  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" "B163" 
    xhandlers
    flags 
    probability 4586795008139198835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1035 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:185) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3671 
=== Succesors ===
=== Usages ===
v3698 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3671  <|@  <|@
f <@~|@floating>@ <|@
tid v3698 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1651 
index: j1035 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1651 index: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawStoreNode.storeObject(Object, long, Object, JavaKind, LocationIdentity, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:198) [bci: 134]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3698 
value: i1260 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3698 value: i1260 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i3671 
y: i71 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3671 y: i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1052 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i262 stateAfter: - lastLocationAccess: - #next: v1052  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3902 
=== Succesors ===
next: v24 
=== Usages ===
v21 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3902 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1052 
y: v20 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1052 y: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    probability 4586728666268164791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1073 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1073  <|@  <|@
f <@~|@floating>@ <|@
tid v3699 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1073 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3699 
=== Succesors ===
next: v1061 
=== Usages ===
j1057 j1062 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3699 #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1073 
y: j980 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1073 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1057 
y: j981 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1057 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1059 
=== Usages ===
=== Predecessor ===
j1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1060 #falseSuccessor: v1059  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4586662987815841087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j1073 
y: i963 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1073 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i1063 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1062 
=== Succesors ===
=== Usages ===
v1064 i1077 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1062  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1063 
y: i82 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1063 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1064 
=== Succesors ===
trueSuccessor: v1069 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1064 #trueSuccessor: v1069 #falseSuccessor: v1068  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B159" 
    xhandlers
    flags 
    probability 4556958397122660686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4586597966148040620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B159" 
    xhandlers
    flags 
    probability 4557042465541635027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B160" 
    xhandlers
    flags 
    probability 4561504030959518352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1065 v1067 
=== Succesors ===
next: i1071 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1065 v1067 #next: i1071  <|@  <|@
tid ?259 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 - i71 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i1071 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 - i71 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1071 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?259 
arguments: a1 
=== Succesors ===
next: v1079 
=== Usages ===
i1077 
=== Predecessor ===
v1066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?259 arguments: a1 #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
i1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4586728666268164790
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1077 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1075 
values: i1063 i1071 
=== Succesors ===
=== Usages ===
i511 i512 i520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1075 values: i1063 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1078 v1079 
=== Succesors ===
next: v523 
=== Usages ===
i1077 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1078 v1079 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i1077 
=== Succesors ===
=== Usages ===
i524 i528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i1077  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i520 
=== Succesors ===
=== Usages ===
i516 i515 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i520 
=== Succesors ===
=== Usages ===
v525 i509 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i524 
y: i96 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i524 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v525 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v525 #trueSuccessor: v521 #falseSuccessor: v522  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B168" 
    xhandlers
    flags 
    probability 4578169741069550642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B167" 
    xhandlers
    flags 
    probability 4584974636446040490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B164" 
    xhandlers
    flags 
    probability 4557127383136558603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B100" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4576798227856352455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v602 
=== Succesors ===
next: i29 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v602 #next: i29  <|@  <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@537c397
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1470 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a126 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a126 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i29 <|@
d <@d|@=== Debug Properties ===
bci: 23
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1083 
stateDuring: ?1470 
=== Succesors ===
next: v74 
=== Usages ===
i512 i69 i511 
=== Predecessor ===
v599 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1083 stateDuring: ?1470 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
i70 i94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i69 
=== Succesors ===
=== Usages ===
i516 i515 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i69 
=== Succesors ===
=== Usages ===
i509 v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i94 
y: i96 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i94 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
i29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B168" 
    xhandlers
    flags 
    probability 4568176288968000960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4574924301083436718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B162" "B99" 
    successors "B168" 
    xhandlers
    flags 
    probability 4604639499959146547
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i509 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [3 - 35] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v505 
values: i94 i524 i715 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i94 i524 i715  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v505 
values: i29 i1077 i987 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i29 i1077 i987  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 32] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v505 
values: i70 i528 i717 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i70 i528 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v508 v719 
=== Succesors ===
next: v75 
=== Usages ===
i509 i512 i516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v508 v719 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 14]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 8] ⇈000000000000000f
=== Inputs ===
x: i509 
y: i92 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i509 y: i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" "B161" "B98" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 8] ⇈000000000000000f
valueDescription: i32
=== Inputs ===
merge: v76 
values: i95 i71 i71 i71 
=== Succesors ===
=== Usages ===
?513 a2171 i103 ?357 i267 ?270 j2269 i869 i277 ?279 v823 v2190 i2149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i95 i71 i71 i71  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i512 i29 i1077 i987 
=== Succesors ===
=== Usages ===
i102 ?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i512 i29 i1077 i987  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 32] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v76 
values: i516 i70 i528 i717 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i516 i70 i528 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v529 v718 
=== Succesors ===
next: a3672 
=== Usages ===
i78 i511 i515 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v529 v718 #next: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3672 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
=== Succesors ===
next: v1361 
=== Usages ===
a837 v838 v3693 v3712 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3692 #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3672  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a126 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a126  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.toHexString(int)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - 
=== Succesors ===
=== Usages ===
?514 ?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toHexString(Integer.java:233) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 ?514 ?104 ?109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Integer.java
sourceLine: 312
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: i511 i35 i515 - - 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: i511 i35 i515 - -  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?514 
values: - - i78 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1359 a2171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: - - i78 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1358 
=== Usages ===
=== Predecessor ===
a3672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v1360 #falseSuccessor: v1358  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 839
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
reason: NullCheckException
speculation: Object[d.a@437821581]
stamp: void
=== Inputs ===
stateBefore: ?513 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?513  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2151 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2187 
=== Usages ===
v3769 v3770 
=== Predecessor ===
v1358 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2187  <|@  <|@
f <@~|@floating>@ <|@
tid v3769 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2151 
index: - 
=== Succesors ===
=== Usages ===
j2187 v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2187 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
=== Succesors ===
next: j2188 
=== Usages ===
j2155 v3771 v3772 a2170 v3777 v3773 v3774 v3775 v3776 
=== Predecessor ===
j2151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3769 #next: j2188  <|@  <|@
f <@~|@floating>@ <|@
tid v3770 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2151 
index: - 
=== Succesors ===
=== Usages ===
j2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2188 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3770 
=== Succesors ===
next: v2166 
=== Usages ===
v2160 
=== Predecessor ===
j2187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3770 #next: v2166  <|@  <|@
f <@~|@floating>@ <|@
tid i2149 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 16] ⇈000000000000001e
=== Inputs ===
x: i78 
y: i71 
=== Succesors ===
=== Usages ===
i2178 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i78 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [23 - 39] ⇊0000000000000001 ⇈000000000000003f
=== Inputs ===
x: i2149 
y: i2048 
=== Succesors ===
=== Usages ===
i2150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2149 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2150 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 56] ⇈0000000000000038
=== Inputs ===
x: i2178 
y: i2018 
=== Succesors ===
=== Usages ===
j2468 v3773 v3774 v3775 v3776 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2178 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
resultBits: 64
stamp: i64 [0 - 56] ⇈0000000000000038
=== Inputs ===
value: i2150 
=== Succesors ===
=== Usages ===
j2155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2150  <|@  <|@
f <@~|@floating>@ <|@
tid j2155 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i64
=== Inputs ===
x: j2187 
y: j2468 
=== Succesors ===
=== Usages ===
v2160 v2189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2187 y: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2188 
y: j2155 
=== Succesors ===
=== Usages ===
v2166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2188 y: j2155  <|@  <|@
f <@*|@fixed>@ <|@
tid v2166 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2160 
=== Succesors ===
trueSuccessor: v2165 
falseSuccessor: v2164 
=== Usages ===
=== Predecessor ===
j2188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2160 #trueSuccessor: v2165 #falseSuccessor: v2164  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2171 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2171 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?513 
arguments: v1799 i78 i82 
=== Succesors ===
next: v2174 
=== Usages ===
a2175 
=== Predecessor ===
v2165 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?513 arguments: v1799 i78 i82 #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
a2171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
value: j2155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2180 
=== Usages ===
=== Predecessor ===
v2164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3769 value: j2155 stateAfter: - lastLocationAccess: - #next: v2180  <|@  <|@
f <@~|@floating>@ <|@
tid v3773 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3773 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3773 #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v3774 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3774 
=== Succesors ===
next: v2184 
=== Usages ===
=== Predecessor ===
v2180 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3774 #next: v2184  <|@  <|@
f <@~|@floating>@ <|@
tid v3775 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3775 
=== Succesors ===
next: v2186 
=== Usages ===
=== Predecessor ===
v2182 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3775 #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v3776 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3776 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
v2184 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3776 #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v3771 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
value: i78 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3771 value: i78 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid v3772 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3772 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3772 value: j981 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid v3777 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3777 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3777 value: v2413 stateAfter: - lastLocationAccess: - #next: v2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2170 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2170 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2187 
=== Succesors ===
next: v2172 
=== Usages ===
a2175 
=== Predecessor ===
v2169 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2187 #next: v2172  <|@  <|@
f <@*|@fixed>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
a2170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B171" 
    successors "B174" "B175" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2173 
values: a2170 a2171 
=== Succesors ===
=== Usages ===
v3717 a1659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2173 values: a2170 a2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2172 v2174 
=== Succesors ===
next: v3059 
=== Usages ===
a2175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2172 v2174 #next: v3059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2507 
=== Usages ===
j3061 
=== Predecessor ===
v2173 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2507  <|@  <|@
f <@~|@floating>@ <|@
tid v3717 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2175 
index: - 
=== Succesors ===
=== Usages ===
j3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2175 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3061 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3059 
address: v3717 
=== Succesors ===
=== Usages ===
v3838 v3839 v3840 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3059 address: v3717  <|@  <|@
f <@~|@floating>@ <|@
tid v3840 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3061 
index: - 
=== Succesors ===
=== Usages ===
v3580 v3582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2269 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [0 - 8] ⇈000000000000000f
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
v2270 j3097 j3085 j3089 j3093 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j3085 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 0]
=== Inputs ===
x: j2269 
y: j3084 
=== Succesors ===
=== Usages ===
v3086 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3086 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3085 
y: j964 
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3085 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3086 
=== Succesors ===
trueSuccessor: v2506 
falseSuccessor: v2505 
=== Usages ===
=== Predecessor ===
v3059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3086 #trueSuccessor: v2506 #falseSuccessor: v2505  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2510 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2510  <|@  <|@
f <@*|@fixed>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
v2506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3582 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3840 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2500 
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3840 value: v3647 stateAfter: - lastLocationAccess: - #next: v2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
v3582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3075 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v2501 
values: j1752 j964 
=== Succesors ===
=== Usages ===
v3090 j3069 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2501 values: j1752 j964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2500 v2510 
=== Succesors ===
next: v2522 
=== Usages ===
j3075 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2500 v2510 #next: v2522  <|@  <|@
f <@~|@floating>@ <|@
tid j3089 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4]
=== Inputs ===
x: j2269 
y: j3088 
=== Succesors ===
=== Usages ===
v3090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3090 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3089 
y: j3075 
=== Succesors ===
=== Usages ===
v2522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3089 y: j3075  <|@  <|@
f <@*|@fixed>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3090 
=== Succesors ===
trueSuccessor: v2521 
falseSuccessor: v2520 
=== Usages ===
=== Predecessor ===
v2501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3090 #trueSuccessor: v2521 #falseSuccessor: v2520  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2525 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2525  <|@  <|@
f <@*|@fixed>@ <|@
tid v2525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
v2521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3580 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3840 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v2520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3840 value: v3646 stateAfter: - lastLocationAccess: - #next: v2511  <|@  <|@
f <@*|@fixed>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
v3580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" 
    successors "B180" "B181" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3069 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v2512 
values: j3080 j3075 
=== Succesors ===
=== Usages ===
v3839 j3074 j3062 v3094 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2512 values: j3080 j3075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2511 v2525 
=== Succesors ===
next: v2528 
=== Usages ===
j3069 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2511 v2525 #next: v2528  <|@  <|@
f <@~|@floating>@ <|@
tid j3093 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 6]
=== Inputs ===
x: j2269 
y: j3092 
=== Succesors ===
=== Usages ===
v3094 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3094 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3093 
y: j3069 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3093 y: j3069  <|@  <|@
f <@*|@fixed>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3094 
=== Succesors ===
trueSuccessor: v2527 
falseSuccessor: v2526 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3094 #trueSuccessor: v2527 #falseSuccessor: v2526  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2531 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v2531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v2527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3578 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3578  <|@  <|@
f <@~|@floating>@ <|@
tid v3839 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3061 
index: j3069 
=== Succesors ===
=== Usages ===
v3578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: j3069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3839 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2514 
=== Usages ===
=== Predecessor ===
v2526 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3839 value: v3645 stateAfter: - lastLocationAccess: - #next: v2514  <|@  <|@
f <@~|@floating>@ <|@
tid j3074 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j3069 
y: j3064 
=== Succesors ===
=== Usages ===
j3062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3069 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B180" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3062 <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v2515 
values: j3074 j3069 
=== Succesors ===
=== Usages ===
v3838 v3098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2515 values: j3074 j3069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2514 v2531 
=== Succesors ===
next: v2534 
=== Usages ===
j3062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2514 v2531 #next: v2534  <|@  <|@
f <@~|@floating>@ <|@
tid j3097 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 7]
=== Inputs ===
x: j2269 
y: j3096 
=== Succesors ===
=== Usages ===
v3098 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3098 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3097 
y: j3062 
=== Succesors ===
=== Usages ===
v2534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3097 y: j3062  <|@  <|@
f <@*|@fixed>@ <|@
tid v2534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3098 
=== Succesors ===
trueSuccessor: v2533 
falseSuccessor: v2532 
=== Usages ===
=== Predecessor ===
v2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3098 #trueSuccessor: v2533 #falseSuccessor: v2532  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2537 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2537  <|@  <|@
f <@*|@fixed>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
v2533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3576 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3576  <|@  <|@
f <@~|@floating>@ <|@
tid v3838 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3061 
index: j3062 
=== Succesors ===
=== Usages ===
v3576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: j3062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3838 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2517 
=== Usages ===
=== Predecessor ===
v2532 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3838 value: i3644 stateAfter: - lastLocationAccess: - #next: v2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
v3576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2517 v2537 
=== Succesors ===
next: a1659 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2517 v2537 #next: a1659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1659 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2175 
=== Succesors ===
next: v100 
=== Usages ===
?109 ?124 ?390 v3690 ?104 j2262 
=== Predecessor ===
v2518 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2175 #next: v100  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 315
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: - - - - a1659 
=== Succesors ===
=== Usages ===
?104 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: - - - - a1659  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 23]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
a1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B306" 
    successors "B187" "B307" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i511 i110 
=== Succesors ===
=== Usages ===
?104 ?109 i110 v122 i123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i511 i110  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i78 i105 
=== Succesors ===
=== Usages ===
?104 i105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i78 i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.1412951457789284
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v100 
=== Succesors ===
next: v1366 
=== Usages ===
i102 i103 v111 v118 v1382 v1365 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v100 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 17]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32
=== Inputs ===
x: i103 
y: i99 
=== Succesors ===
=== Usages ===
i103 v3690 ?109 v116 v823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i103 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i78 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i105 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B304" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3673 
=== Usages ===
v831 
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3673  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i102 
y: i120 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i102 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid v3689 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a106 
index: i123 
=== Succesors ===
=== Usages ===
i3673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a106 index: i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3673 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 30]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v3689 
=== Succesors ===
next: v831 
=== Usages ===
v831 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3689 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v3690 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1659 
index: i105 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1659 index: i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1362 
address: v3690 
value: i3673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
i3673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1362 address: v3690 value: i3673 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i102 
y: i121 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i102 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.4670070830596475
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:339) [bci: 45]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: i3674 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: i3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3674 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: i3675 
=== Usages ===
i267 i553 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: i3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3693 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
i3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3675 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3693 
=== Succesors ===
next: v346 
=== Usages ===
i342 i1635 v1608 
=== Predecessor ===
i3674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3693 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i78 
y: i3674 
=== Succesors ===
=== Usages ===
v897 i342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i3674  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i267 
y: i3675 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i267 y: i3675  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i342 
y: i71 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i342 y: i71  <|@  <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?270 ?390 ?357 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?390 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a130 
values: a1659 - 
=== Succesors ===
=== Usages ===
?350 ?1471 ?270 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a130 values: a1659 -  <|@  <|@
f <@~|@floating>@ <|@
tid a837 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
?1471 a552 ?350 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3672  <|@  <|@
tid ?225 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?225 
values: a126 - 
=== Succesors ===
=== Usages ===
?270 ?357 ?279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?225 values: a126 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
i3675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B238" 
    xhandlers
    flags 
    probability 4606580279843968346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i349  <|@  <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3f3eef9b
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a792 i267 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a792 i267  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 a130 i78 
=== Succesors ===
=== Usages ===
?350 ?1471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 a130 i78  <|@  <|@
tid ?1471 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?357 
values: - - a126 a837 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?357 values: - - a126 a837 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i349 <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v897 
stateDuring: ?1471 
=== Succesors ===
next: v1600 
=== Usages ===
?350 i2202 j2490 v2243 a2224 i1635 v2209 v1594 v1608 
=== Predecessor ===
v345 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v897 stateDuring: ?1471 #next: v1600  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?357 
values: - - a126 a837 i349 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
a2224 v1606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?357 values: - - a126 a837 i349 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i349 
y: i82 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i349 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1594 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
i349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1594 #trueSuccessor: v1599 #falseSuccessor: v1595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?350  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B196" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2204 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2204 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2240 
=== Usages ===
v3778 v3779 
=== Predecessor ===
v1595 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2240  <|@  <|@
f <@~|@floating>@ <|@
tid v3778 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: - 
=== Succesors ===
=== Usages ===
j2240 v2242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2240 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
=== Succesors ===
next: j2241 
=== Usages ===
j2208 v3780 v3781 a2223 v3786 v3782 v3783 v3784 v3785 
=== Predecessor ===
j2204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3778 #next: j2241  <|@  <|@
f <@~|@floating>@ <|@
tid v3779 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: - 
=== Succesors ===
=== Usages ===
j2241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2241 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3779 
=== Succesors ===
next: v2212 
=== Usages ===
v2213 
=== Predecessor ===
j2240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3779 #next: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i349 
y: i2025 
=== Succesors ===
=== Usages ===
v2212 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i349 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2209 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2210 
=== Usages ===
=== Predecessor ===
j2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2209 #trueSuccessor: v2211 #falseSuccessor: v2210  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4586131589428858397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2219 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2219  <|@  <|@
f <@~|@floating>@ <|@
tid i2202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i349 
y: i71 
=== Succesors ===
=== Usages ===
i2231 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i349 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2231 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2202 
y: i2048 
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2202 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2203 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2231 
y: i2018 
=== Succesors ===
=== Usages ===
j2207 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2231 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2207 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2203 
=== Succesors ===
=== Usages ===
j2208 v3782 v3783 v3784 v3785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2203  <|@  <|@
f <@~|@floating>@ <|@
tid j2208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
x: j2207 
y: j2240 
=== Succesors ===
=== Usages ===
v2213 v2242 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2207 y: j2240  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2241 
y: j2208 
=== Succesors ===
=== Usages ===
v2219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2241 y: j2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v2218 
falseSuccessor: v2217 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v2218 #falseSuccessor: v2217  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B197" 
    xhandlers
    flags 
    probability 4556278207187322842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v2219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2215 
=== Predecessor ===
v2218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4586071881744927757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
value: j2208 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2233 
=== Usages ===
=== Predecessor ===
v2217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3778 value: j2208 stateAfter: - lastLocationAccess: - #next: v2233  <|@  <|@
f <@~|@floating>@ <|@
tid v3782 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3782 
=== Succesors ===
next: v2235 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3782 #next: v2235  <|@  <|@
f <@~|@floating>@ <|@
tid v3783 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3783 
=== Succesors ===
next: v2237 
=== Usages ===
=== Predecessor ===
v2233 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3783 #next: v2237  <|@  <|@
f <@~|@floating>@ <|@
tid v3784 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3784 
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v2235 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3784 #next: v2239  <|@  <|@
f <@~|@floating>@ <|@
tid v3785 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3785 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
v2237 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3785 #next: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v3780 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3780 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3780 value: i349 stateAfter: - lastLocationAccess: - #next: v2244  <|@  <|@
f <@~|@floating>@ <|@
tid v3781 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3781 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3781 value: j981 stateAfter: - lastLocationAccess: - #next: v2247  <|@  <|@
f <@~|@floating>@ <|@
tid v3786 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3786 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v2244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3786 value: v2413 stateAfter: - lastLocationAccess: - #next: v2222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2223 
=== Usages ===
=== Predecessor ===
v2247 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2223 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2240 
=== Succesors ===
next: v2225 
=== Usages ===
a2228 
=== Predecessor ===
v2222 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2240 #next: v2225  <|@  <|@
f <@*|@fixed>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
a2223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B197" 
    xhandlers
    flags 
    probability 4571957371836406467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2214  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2215 
=== Predecessor ===
v2210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B194" 
    successors "B198" 
    xhandlers
    flags 
    probability 4572435033307851585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2214 v2216 
=== Succesors ===
next: a2224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2214 v2216 #next: a2224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2224 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?350 
arguments: v1799 i349 i82 
=== Succesors ===
next: v2227 
=== Usages ===
a2228 
=== Predecessor ===
v2215 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?350 arguments: v1799 i349 i82 #next: v2227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
a2224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2228 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2226 
values: a2223 a2224 
=== Succesors ===
=== Usages ===
v3837 a1655 v3716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2226 values: a2223 a2224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2225 v2227 
=== Succesors ===
next: v3441 
=== Usages ===
a2228 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2225 v2227 #next: v3441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2922 
=== Usages ===
j3442 j3444 
=== Predecessor ===
v2226 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2922  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3675 
y: i349 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3675 y: i349  <|@  <|@
f <@~|@floating>@ <|@
tid i1635 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1608 
trueValue: i3675 
falseValue: i349 
=== Succesors ===
=== Usages ===
j2491 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1608 trueValue: i3675 falseValue: i349  <|@  <|@
f <@~|@floating>@ <|@
tid j2491 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1635 
=== Succesors ===
=== Usages ===
j3499 v3837 j2495 v2919 v3056 j3485 j3490 j3493 j3496 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1635  <|@  <|@
f <@~|@floating>@ <|@
tid v2919 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2491 
y: j981 
=== Succesors ===
=== Usages ===
v2922 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2491 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2922 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2919 
=== Succesors ===
trueSuccessor: v2920 
falseSuccessor: v2921 
=== Usages ===
=== Predecessor ===
v3441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2919 #trueSuccessor: v2920 #falseSuccessor: v2921  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B217" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2938 
=== Usages ===
=== Predecessor ===
v2922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2938  <|@  <|@
f <@*|@fixed>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v2920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2925 
=== Usages ===
=== Predecessor ===
v2922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2925  <|@  <|@
f <@~|@floating>@ <|@
tid v3716 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2228 
index: - 
=== Succesors ===
=== Usages ===
j3444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2228 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3444 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3441 
address: v3716 
=== Succesors ===
=== Usages ===
v3886 v3888 v3890 v3892 v3894 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3441 address: v3716  <|@  <|@
f <@~|@floating>@ <|@
tid v3712 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
j3442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@~|@floating>@ <|@
tid j3442 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3441 
address: v3712 
=== Succesors ===
=== Usages ===
v3887 v3889 v3891 v3893 v3895 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3441 address: v3712  <|@  <|@
f <@~|@floating>@ <|@
tid j3485 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2491 
y: j3145 
=== Succesors ===
=== Usages ===
v3486 v3488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3485 
y: j964 
=== Succesors ===
=== Usages ===
v2925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3485 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3486 
=== Succesors ===
trueSuccessor: v2923 
falseSuccessor: v2924 
=== Usages ===
=== Predecessor ===
v2921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3486 #trueSuccessor: v2923 #falseSuccessor: v2924  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B205" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2934 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2934  <|@  <|@
f <@*|@fixed>@ <|@
tid v2934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
v2923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2926 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2926  <|@  <|@
f <@*|@fixed>@ <|@
tid v2926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2927 
=== Predecessor ===
v2924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" "B303" 
    successors "B204" "B303" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3477 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2927 
values: j964 j3484 
=== Succesors ===
=== Usages ===
v3895 j3484 v3894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2927 values: j964 j3484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2927 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2926 
=== Succesors ===
next: v3676 
=== Usages ===
v3676 v2930 v2931 j3477 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2926 #next: v3676  <|@  <|@
f <@~|@floating>@ <|@
tid v3895 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3477 
=== Succesors ===
=== Usages ===
v3676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3676 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2927 
address: v3895 
=== Succesors ===
next: v3637 
=== Usages ===
v3637 
=== Predecessor ===
v2927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2927 address: v3895 #next: v3637  <|@  <|@
f <@~|@floating>@ <|@
tid v3894 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3477 
=== Succesors ===
=== Usages ===
v3637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3894 
value: v3676 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2933 
=== Usages ===
=== Predecessor ===
v3676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3894 value: v3676 stateAfter: - lastLocationAccess: - #next: v2933  <|@  <|@
f <@~|@floating>@ <|@
tid j3484 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3477 
y: j818 
=== Succesors ===
=== Usages ===
j3469 j3477 v3488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3477 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3485 
y: j3484 
=== Succesors ===
=== Usages ===
v2933 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3485 y: j3484  <|@  <|@
f <@*|@fixed>@ <|@
tid v2933 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3488 
=== Succesors ===
trueSuccessor: v2930 
falseSuccessor: v2932 
=== Usages ===
=== Predecessor ===
v3637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3488 #trueSuccessor: v2930 #falseSuccessor: v2932  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2927 
=== Succesors ===
next: v2936 
=== Usages ===
=== Predecessor ===
v2933 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2927 #next: v2936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
v2930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B201" "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3469 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2935 
values: j964 j3484 
=== Succesors ===
=== Usages ===
v3893 j3476 j3461 v3491 v3892 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2935 values: j964 j3484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2934 v2936 
=== Succesors ===
next: v2957 
=== Usages ===
j3469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2934 v2936 #next: v2957  <|@  <|@
f <@~|@floating>@ <|@
tid j3490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2491 
y: j3084 
=== Succesors ===
=== Usages ===
v3491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3490 
y: j3469 
=== Succesors ===
=== Usages ===
v2957 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3490 y: j3469  <|@  <|@
f <@*|@fixed>@ <|@
tid v2957 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3491 
=== Succesors ===
trueSuccessor: v2956 
falseSuccessor: v2955 
=== Usages ===
=== Predecessor ===
v2935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3491 #trueSuccessor: v2956 #falseSuccessor: v2955  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2960 
=== Usages ===
=== Predecessor ===
v2957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2960  <|@  <|@
f <@*|@fixed>@ <|@
tid v2960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
v2956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3677 
=== Usages ===
v3677 
=== Predecessor ===
v2957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3677  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3469 
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3677 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2955 
address: v3893 
=== Succesors ===
next: v3635 
=== Usages ===
v3635 
=== Predecessor ===
v2955 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2955 address: v3893 #next: v3635  <|@  <|@
f <@~|@floating>@ <|@
tid v3892 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3469 
=== Succesors ===
=== Usages ===
v3635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3892 
value: v3677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2945 
=== Usages ===
=== Predecessor ===
v3677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3892 value: v3677 stateAfter: - lastLocationAccess: - #next: v2945  <|@  <|@
f <@~|@floating>@ <|@
tid j3476 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3469 
y: j1752 
=== Succesors ===
=== Usages ===
j3461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3469 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
v3635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B206" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3461 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2946 
values: j3476 j3469 
=== Succesors ===
=== Usages ===
v3891 j3468 j3453 v3494 v3890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2946 values: j3476 j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2945 v2960 
=== Succesors ===
next: v2963 
=== Usages ===
j3461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2945 v2960 #next: v2963  <|@  <|@
f <@~|@floating>@ <|@
tid j3493 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2491 
y: j3088 
=== Succesors ===
=== Usages ===
v3494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3493 
y: j3461 
=== Succesors ===
=== Usages ===
v2963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3493 y: j3461  <|@  <|@
f <@*|@fixed>@ <|@
tid v2963 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3494 
=== Succesors ===
trueSuccessor: v2962 
falseSuccessor: v2961 
=== Usages ===
=== Predecessor ===
v2946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3494 #trueSuccessor: v2962 #falseSuccessor: v2961  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2966 
=== Usages ===
=== Predecessor ===
v2963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2966  <|@  <|@
f <@*|@fixed>@ <|@
tid v2966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2949 
=== Predecessor ===
v2962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3678 
=== Usages ===
v3678 
=== Predecessor ===
v2963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3678  <|@  <|@
f <@~|@floating>@ <|@
tid v3891 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3461 
=== Succesors ===
=== Usages ===
v3678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3678 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2961 
address: v3891 
=== Succesors ===
next: v3633 
=== Usages ===
v3633 
=== Predecessor ===
v2961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2961 address: v3891 #next: v3633  <|@  <|@
f <@~|@floating>@ <|@
tid v3890 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3461 
=== Succesors ===
=== Usages ===
v3633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3890 
value: v3678 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2948 
=== Usages ===
=== Predecessor ===
v3678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3890 value: v3678 stateAfter: - lastLocationAccess: - #next: v2948  <|@  <|@
f <@~|@floating>@ <|@
tid j3468 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3461 
y: j3080 
=== Succesors ===
=== Usages ===
j3453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3461 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2949 
=== Predecessor ===
v3633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors "B212" "B213" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3453 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2949 
values: j3468 j3461 
=== Succesors ===
=== Usages ===
v3889 j3460 j3445 v3497 v3888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2949 values: j3468 j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2948 v2966 
=== Succesors ===
next: v2969 
=== Usages ===
j3453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2948 v2966 #next: v2969  <|@  <|@
f <@~|@floating>@ <|@
tid j3496 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2491 
y: j3092 
=== Succesors ===
=== Usages ===
v3497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3497 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3496 
y: j3453 
=== Succesors ===
=== Usages ===
v2969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3496 y: j3453  <|@  <|@
f <@*|@fixed>@ <|@
tid v2969 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3497 
=== Succesors ===
trueSuccessor: v2968 
falseSuccessor: v2967 
=== Usages ===
=== Predecessor ===
v2949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3497 #trueSuccessor: v2968 #falseSuccessor: v2967  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2972 
=== Usages ===
=== Predecessor ===
v2969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2972  <|@  <|@
f <@*|@fixed>@ <|@
tid v2972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
v2968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3679 
=== Usages ===
v3679 
=== Predecessor ===
v2969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3679  <|@  <|@
f <@~|@floating>@ <|@
tid v3889 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3453 
=== Succesors ===
=== Usages ===
v3679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3679 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2967 
address: v3889 
=== Succesors ===
next: v3631 
=== Usages ===
v3631 
=== Predecessor ===
v2967 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2967 address: v3889 #next: v3631  <|@  <|@
f <@~|@floating>@ <|@
tid v3888 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3453 
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3888 
value: v3679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2951 
=== Usages ===
=== Predecessor ===
v3679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3888 value: v3679 stateAfter: - lastLocationAccess: - #next: v2951  <|@  <|@
f <@~|@floating>@ <|@
tid j3460 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3453 
y: j3064 
=== Succesors ===
=== Usages ===
j3445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3453 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
v3631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3445 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2952 
values: j3460 j3453 
=== Succesors ===
=== Usages ===
v3887 v3500 v3886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2952 values: j3460 j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2951 v2972 
=== Succesors ===
next: v2975 
=== Usages ===
j3445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2951 v2972 #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid j3499 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2491 
y: j3096 
=== Succesors ===
=== Usages ===
v3500 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3500 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3499 
y: j3445 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3499 y: j3445  <|@  <|@
f <@*|@fixed>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3500 
=== Succesors ===
trueSuccessor: v2974 
falseSuccessor: v2973 
=== Usages ===
=== Predecessor ===
v2952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3500 #trueSuccessor: v2974 #falseSuccessor: v2973  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2978 
=== Usages ===
=== Predecessor ===
v2975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2978  <|@  <|@
f <@*|@fixed>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v2974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3680 
=== Usages ===
i3680 
=== Predecessor ===
v2975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3680  <|@  <|@
f <@~|@floating>@ <|@
tid v3887 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3445 
=== Succesors ===
=== Usages ===
i3680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3680 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2973 
address: v3887 
=== Succesors ===
next: v3629 
=== Usages ===
v3629 
=== Predecessor ===
v2973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2973 address: v3887 #next: v3629  <|@  <|@
f <@~|@floating>@ <|@
tid v3886 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3445 
=== Succesors ===
=== Usages ===
v3629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3886 
value: i3680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2954 
=== Usages ===
=== Predecessor ===
i3680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3886 value: i3680 stateAfter: - lastLocationAccess: - #next: v2954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v3629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B199" "B216" "B215" 
    successors "B218" "B236" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2938 v2954 v2978 
=== Succesors ===
next: v3503 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2938 v2954 v2978 #next: v3503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2985 
=== Usages ===
j3505 
=== Predecessor ===
v2939 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2985  <|@  <|@
f <@~|@floating>@ <|@
tid j2490 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i349 
=== Succesors ===
=== Usages ===
j2495 v3056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i349  <|@  <|@
f <@~|@floating>@ <|@
tid v3056 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2491 
y: j2490 
=== Succesors ===
=== Usages ===
v2985 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2491 y: j2490  <|@  <|@
f <@*|@fixed>@ <|@
tid v2985 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3056 
=== Succesors ===
trueSuccessor: v2984 
falseSuccessor: v2983 
=== Usages ===
=== Predecessor ===
v3503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3056 #trueSuccessor: v2984 #falseSuccessor: v2983  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2988 
=== Usages ===
=== Predecessor ===
v2985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2988  <|@  <|@
f <@~|@floating>@ <|@
tid v3837 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2228 
index: j2491 
=== Succesors ===
=== Usages ===
j3505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2228 index: j2491  <|@  <|@
f <@~|@floating>@ <|@
tid j3505 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3503 
address: v3837 
=== Succesors ===
=== Usages ===
v3896 v3897 v3898 v3899 v3900 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3503 address: v3837  <|@  <|@
f <@~|@floating>@ <|@
tid j2495 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2490 
y: j2491 
=== Succesors ===
=== Usages ===
j3550 j3536 j3541 j3544 j3547 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2490 y: j2491  <|@  <|@
f <@~|@floating>@ <|@
tid j3536 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2495 
y: j3145 
=== Succesors ===
=== Usages ===
v3537 v3539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3536 
y: j964 
=== Succesors ===
=== Usages ===
v2988 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3536 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3537 
=== Succesors ===
trueSuccessor: v2986 
falseSuccessor: v2987 
=== Usages ===
=== Predecessor ===
v2984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3537 #trueSuccessor: v2986 #falseSuccessor: v2987  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B223" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2997 
=== Usages ===
=== Predecessor ===
v2988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2997  <|@  <|@
f <@*|@fixed>@ <|@
tid v2997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
v2986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2989 
=== Usages ===
=== Predecessor ===
v2988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2989  <|@  <|@
f <@*|@fixed>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2990 
=== Predecessor ===
v2987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B235" 
    successors "B222" "B235" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3530 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2990 
values: j964 j3535 
=== Succesors ===
=== Usages ===
v3900 j3535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2990 values: j964 j3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2990 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2989 
=== Succesors ===
next: v3642 
=== Usages ===
j3530 v2993 v2994 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2989 #next: v3642  <|@  <|@
f <@~|@floating>@ <|@
tid v3900 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3530 
=== Succesors ===
=== Usages ===
v3642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3900 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2996 
=== Usages ===
=== Predecessor ===
v2990 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3900 value: v3643 stateAfter: - lastLocationAccess: - #next: v2996  <|@  <|@
f <@~|@floating>@ <|@
tid j3535 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3530 
y: j818 
=== Succesors ===
=== Usages ===
j3524 j3530 v3539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3530 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3536 
y: j3535 
=== Succesors ===
=== Usages ===
v2996 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3536 y: j3535  <|@  <|@
f <@*|@fixed>@ <|@
tid v2996 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3539 
=== Succesors ===
trueSuccessor: v2993 
falseSuccessor: v2995 
=== Usages ===
=== Predecessor ===
v3642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3539 #trueSuccessor: v2993 #falseSuccessor: v2995  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B223" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2990 
=== Succesors ===
next: v2999 
=== Usages ===
=== Predecessor ===
v2996 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2990 #next: v2999  <|@  <|@
f <@*|@fixed>@ <|@
tid v2999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
v2993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B219" "B222" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3524 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2998 
values: j964 j3535 
=== Succesors ===
=== Usages ===
v3899 j3529 j3518 v3542 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2998 values: j964 j3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2997 v2999 
=== Succesors ===
next: v3020 
=== Usages ===
j3524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2997 v2999 #next: v3020  <|@  <|@
f <@~|@floating>@ <|@
tid j3541 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2495 
y: j3084 
=== Succesors ===
=== Usages ===
v3542 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3542 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3541 
y: j3524 
=== Succesors ===
=== Usages ===
v3020 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3541 y: j3524  <|@  <|@
f <@*|@fixed>@ <|@
tid v3020 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3542 
=== Succesors ===
trueSuccessor: v3019 
falseSuccessor: v3018 
=== Usages ===
=== Predecessor ===
v2998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3542 #trueSuccessor: v3019 #falseSuccessor: v3018  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3023 
=== Usages ===
=== Predecessor ===
v3020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3023  <|@  <|@
f <@*|@fixed>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3009 
=== Predecessor ===
v3019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3641 
=== Usages ===
=== Predecessor ===
v3020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3641  <|@  <|@
f <@~|@floating>@ <|@
tid v3899 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3524 
=== Succesors ===
=== Usages ===
v3641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3899 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3008 
=== Usages ===
=== Predecessor ===
v3018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3899 value: v3647 stateAfter: - lastLocationAccess: - #next: v3008  <|@  <|@
f <@~|@floating>@ <|@
tid j3529 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3524 
y: j1752 
=== Succesors ===
=== Usages ===
j3518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3524 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v3008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3009 
=== Predecessor ===
v3641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" "B224" 
    successors "B227" "B228" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3518 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3009 
values: j3529 j3524 
=== Succesors ===
=== Usages ===
v3898 j3523 j3512 v3545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3009 values: j3529 j3524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3008 v3023 
=== Succesors ===
next: v3026 
=== Usages ===
j3518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3008 v3023 #next: v3026  <|@  <|@
f <@~|@floating>@ <|@
tid j3544 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2495 
y: j3088 
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3545 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3544 
y: j3518 
=== Succesors ===
=== Usages ===
v3026 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3544 y: j3518  <|@  <|@
f <@*|@fixed>@ <|@
tid v3026 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3545 
=== Succesors ===
trueSuccessor: v3025 
falseSuccessor: v3024 
=== Usages ===
=== Predecessor ===
v3009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3545 #trueSuccessor: v3025 #falseSuccessor: v3024  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3029 
=== Usages ===
=== Predecessor ===
v3026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3029  <|@  <|@
f <@*|@fixed>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
v3025 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3640 
=== Usages ===
=== Predecessor ===
v3026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3640  <|@  <|@
f <@~|@floating>@ <|@
tid v3898 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3518 
=== Succesors ===
=== Usages ===
v3640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3898 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3011 
=== Usages ===
=== Predecessor ===
v3024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3898 value: v3646 stateAfter: - lastLocationAccess: - #next: v3011  <|@  <|@
f <@~|@floating>@ <|@
tid j3523 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3518 
y: j3080 
=== Succesors ===
=== Usages ===
j3512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3518 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v3011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
v3640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" "B227" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3512 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3012 
values: j3523 j3518 
=== Succesors ===
=== Usages ===
v3897 j3517 j3506 v3548 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3012 values: j3523 j3518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3011 v3029 
=== Succesors ===
next: v3032 
=== Usages ===
j3512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3011 v3029 #next: v3032  <|@  <|@
f <@~|@floating>@ <|@
tid j3547 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2495 
y: j3092 
=== Succesors ===
=== Usages ===
v3548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3548 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3547 
y: j3512 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3547 y: j3512  <|@  <|@
f <@*|@fixed>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3548 
=== Succesors ===
trueSuccessor: v3031 
falseSuccessor: v3030 
=== Usages ===
=== Predecessor ===
v3012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3548 #trueSuccessor: v3031 #falseSuccessor: v3030  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3035  <|@  <|@
f <@*|@fixed>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
v3031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3639 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3639  <|@  <|@
f <@~|@floating>@ <|@
tid v3897 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3512 
=== Succesors ===
=== Usages ===
v3639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3897 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3014 
=== Usages ===
=== Predecessor ===
v3030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3897 value: v3645 stateAfter: - lastLocationAccess: - #next: v3014  <|@  <|@
f <@~|@floating>@ <|@
tid j3517 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3512 
y: j3064 
=== Succesors ===
=== Usages ===
j3506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3512 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
v3639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3506 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3015 
values: j3517 j3512 
=== Succesors ===
=== Usages ===
v3896 v3551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3015 values: j3517 j3512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3014 v3035 
=== Succesors ===
next: v3038 
=== Usages ===
j3506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3014 v3035 #next: v3038  <|@  <|@
f <@~|@floating>@ <|@
tid j3550 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2495 
y: j3096 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3550 
y: j3506 
=== Succesors ===
=== Usages ===
v3038 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3550 y: j3506  <|@  <|@
f <@*|@fixed>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3551 
=== Succesors ===
trueSuccessor: v3037 
falseSuccessor: v3036 
=== Usages ===
=== Predecessor ===
v3015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3551 #trueSuccessor: v3037 #falseSuccessor: v3036  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3041 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3041  <|@  <|@
f <@*|@fixed>@ <|@
tid v3041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v3037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3638 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3638  <|@  <|@
f <@~|@floating>@ <|@
tid v3896 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3506 
=== Succesors ===
=== Usages ===
v3638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3896 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3017 
=== Usages ===
=== Predecessor ===
v3036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3896 value: i3644 stateAfter: - lastLocationAccess: - #next: v3017  <|@  <|@
f <@*|@fixed>@ <|@
tid v3017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v3638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B221" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2994 
=== Usages ===
=== Predecessor ===
v2996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2994  <|@  <|@
f <@*|@fixed>@ <|@
tid v2994 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2990 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2995 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2990  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B237" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3001 
=== Usages ===
=== Predecessor ===
v2985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3001  <|@  <|@
f <@*|@fixed>@ <|@
tid v3001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v2983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" "B234" "B233" 
    successors "B238" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3001 v3017 v3041 
=== Succesors ===
next: a1655 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3001 v3017 v3041 #next: a1655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1655 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2228 
=== Succesors ===
next: v900 
=== Usages ===
a552 a899 
=== Predecessor ===
v3002 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2228 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid a899 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: Compress
stamp: n! -
=== Inputs ===
value: a1655 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
value: a899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2255 
=== Usages ===
=== Predecessor ===
a1655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3692 value: a899 stateAfter: - lastLocationAccess: - #next: j2255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2255 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a792 
=== Succesors ===
next: v2259 
=== Usages ===
j2256 
=== Predecessor ===
v900 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a792 #next: v2259  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2255 
y: i1757 
=== Succesors ===
=== Usages ===
v3787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2255 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3787 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2256 
index: j1761 
=== Succesors ===
=== Usages ===
v2259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2256 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3681 
=== Usages ===
=== Predecessor ===
j2255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3787 value: i1763 stateAfter: - lastLocationAccess: - #next: i3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3681 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: v538 
=== Usages ===
i553 
=== Predecessor ===
v2259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
i3681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B189" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a552 <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v539 
values: a1655 a837 
=== Succesors ===
=== Usages ===
j2264 v3709 v3694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v539 values: a1655 a837  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v539 
values: i3681 i3674 
=== Succesors ===
=== Usages ===
i277 j2265 v851 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v539 values: i3681 i3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v540 
=== Succesors ===
next: v857 
=== Usages ===
a552 i553 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v540 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i82 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i553 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v856 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v856 #falseSuccessor: v852  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1725 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1725  <|@  <|@
f <@*|@fixed>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" "B243" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3682 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3682  <|@  <|@
f <@~|@floating>@ <|@
tid v3694 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a552 
index: - 
=== Succesors ===
=== Usages ===
i3682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3682 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3694 
=== Succesors ===
next: v874 
=== Usages ===
i185 i1632 i869 v1490 
=== Predecessor ===
v852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3694 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-8 - 2147483647]
=== Inputs ===
x: i3682 
y: i78 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3682 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i869 
y: i553 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i869 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
i3682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v873 #falseSuccessor: v871  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576741781795599466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B239" "B241" 
    successors 
    xhandlers
    flags 
    probability 4581273604453346457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1725 v1747 
=== Succesors ===
next: v3901 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1725 v1747 #next: v3901  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 a130 i78 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
v3901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 a130 i78 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v3901 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 875
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?270  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" "B250" 
    xhandlers
    flags 
    probability 4606819404567777292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2262 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2262 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
object: a1659 
=== Succesors ===
next: j2264 
=== Usages ===
v3788 
=== Predecessor ===
v871 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1659 #next: j2264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2264 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
object: a552 
=== Succesors ===
next: v2270 
=== Usages ===
v3789 
=== Predecessor ===
j2262 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a552 #next: v2270  <|@  <|@
f <@~|@floating>@ <|@
tid v3788 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2262 
index: - 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2262 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2265 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v3789 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v3789 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2264 
index: j2265 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2264 index: j2265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3788 v3789 j2269 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
j2264 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3788 v3789 j2269 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i78 
y: i553 
=== Succesors ===
=== Usages ===
v886 j2469 v172 v176 i185 a2336 v1490 i1632 v2355 i2314 v2321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i277 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v2270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i277 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i71 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i277 y: i71  <|@  <|@
tid ?279 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 - i78 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1732 a2378 a2282 a2336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 - i78 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2307 v2402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2298 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2394 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2298 
=== Succesors ===
=== Usages ===
v3805 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2298  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
j2398 j2303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v173 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v173 #falseSuccessor: v174  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i82 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i277 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v1373 #falseSuccessor: v1371  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227091
stableDimension: 0
stamp: i32 [-227091] ⇊00000000fffc88ed ⇈00000000fffc88ed
stampKind: i32
value: int[-227091|0xfffffffffffc88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1727 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B248" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2271 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2271 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2286 
=== Usages ===
v3790 v3791 
=== Predecessor ===
v1371 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2286  <|@  <|@
f <@~|@floating>@ <|@
tid v3790 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: - 
=== Succesors ===
=== Usages ===
j2286 v2288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2286 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
=== Succesors ===
next: j2287 
=== Usages ===
j2451 j2292 v3828 
=== Predecessor ===
j2271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3790 #next: j2287  <|@  <|@
f <@~|@floating>@ <|@
tid v3791 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: - 
=== Succesors ===
=== Usages ===
j2287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2287 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3791 
=== Succesors ===
next: v2279 
=== Usages ===
v2276 
=== Predecessor ===
j2286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3791 #next: v2279  <|@  <|@
f <@~|@floating>@ <|@
tid j2451 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2286 
y: j1430 
=== Succesors ===
=== Usages ===
v2276 v2288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2286 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2276 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2287 
y: j2451 
=== Succesors ===
=== Usages ===
v2279 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2287 y: j2451  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2276 
=== Succesors ===
trueSuccessor: v2277 
falseSuccessor: v2278 
=== Usages ===
=== Predecessor ===
j2287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2276 #trueSuccessor: v2277 #falseSuccessor: v2278  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4561357127623488149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2282 
=== Usages ===
=== Predecessor ===
v2279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2282 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1767 i92 i71 
=== Succesors ===
next: j2283 
=== Usages ===
j2283 
=== Predecessor ===
v2277 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1767 i92 i71 #next: j2283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2283 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2282 
=== Succesors ===
next: v2293 
=== Usages ===
j2292 
=== Predecessor ===
a2282 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2282 #next: v2293  <|@  <|@
f <@*|@fixed>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2290 
=== Predecessor ===
j2283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4591020456060350490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v2279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
value: j2451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2285 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3790 value: j2451 stateAfter: - lastLocationAccess: - #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid v3828 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2286 
index: - 
=== Succesors ===
=== Usages ===
v2285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3828 
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3828 #next: v2291  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2290 
=== Predecessor ===
v2285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" "B247" 
    successors 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2292 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2290 
values: j2286 j2283 
=== Succesors ===
=== Usages ===
v3793 v3792 a1446 v3829 v3830 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2290 values: j2286 j2283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2291 v2293 
=== Succesors ===
next: a1446 
=== Usages ===
j2292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2291 v2293 #next: a1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1446 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2292 
=== Succesors ===
next: j2303 
=== Usages ===
a1452 
=== Predecessor ===
v2290 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2292 #next: j2303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2303 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3805 
=== Succesors ===
next: v2304 
=== Usages ===
v2304 
=== Predecessor ===
a1446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3805 #next: v2304  <|@  <|@
f <@~|@floating>@ <|@
tid v3792 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3792 
value: j2303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2307 
=== Usages ===
=== Predecessor ===
j2303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3792 value: j2303 stateAfter: - lastLocationAccess: - #next: v2307  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3793 
value: v2453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3793 value: v2453 stateAfter: - lastLocationAccess: - #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v3829 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1466 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3829 
value: a1466 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2313 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3829 value: a1466 stateAfter: - lastLocationAccess: - #next: v2313  <|@  <|@
f <@~|@floating>@ <|@
tid v3830 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1452 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3830 value: i82 stateAfter: - lastLocationAccess: - #next: a1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1452 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1446 
=== Succesors ===
next: v1453 
=== Usages ===
v198 
=== Predecessor ===
v2313 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1446 #next: v1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
a1452 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1452 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1453 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1452 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B251" "B253" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32
=== Inputs ===
x: i3682 
y: i277 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3682 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i82 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i185 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v1377 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v1377 #falseSuccessor: v1375  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid i1734 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229395
stableDimension: 0
stamp: i32 [-229395] ⇊00000000fffc7fed ⇈00000000fffc7fed
stampKind: i32
value: int[-229395|0xfffffffffffc7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1727 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B245" "B251" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1730 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-229395 - -227091] ⇊00000000fffc08ed ⇈00000000fffcffed
valueDescription: i32
=== Inputs ===
merge: v1727 
values: i1729 i1734 
=== Succesors ===
=== Usages ===
v1732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1727 values: i1729 i1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1728 v1733 
=== Succesors ===
next: v1732 
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1728 v1733 #next: v1732  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?279 
actionAndReason: i1730 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1727 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?279 actionAndReason: i1730 speculation: a1705  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B254" "B257" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2316 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2316 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2352 
=== Usages ===
v3794 v3795 
=== Predecessor ===
v1375 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2352  <|@  <|@
f <@~|@floating>@ <|@
tid v3794 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
j2352 v2354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2352 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
=== Succesors ===
next: j2353 
=== Usages ===
j2320 v3796 v3797 a2335 v3802 v3798 v3799 v3800 v3801 
=== Predecessor ===
j2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3794 #next: j2353  <|@  <|@
f <@~|@floating>@ <|@
tid v3795 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
j2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2353 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3795 
=== Succesors ===
next: v2324 
=== Usages ===
v2325 
=== Predecessor ===
j2352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3795 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i2025 
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i277 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2321 
=== Succesors ===
trueSuccessor: v2323 
falseSuccessor: v2322 
=== Usages ===
=== Predecessor ===
j2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2321 #trueSuccessor: v2323 #falseSuccessor: v2322  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" "B256" 
    xhandlers
    flags 
    probability 4605232709315847027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid i2314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i277 
y: i71 
=== Succesors ===
=== Usages ===
i2343 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i277 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2343 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2314 
y: i2048 
=== Succesors ===
=== Usages ===
i2315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2314 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2315 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2343 
y: i2018 
=== Succesors ===
=== Usages ===
j2319 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2343 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2319 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2315 
=== Succesors ===
=== Usages ===
j2320 v3798 v3799 v3800 v3801 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2315  <|@  <|@
f <@~|@floating>@ <|@
tid j2320 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i64
=== Inputs ===
x: j2319 
y: j2352 
=== Succesors ===
=== Usages ===
v2325 v2354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2319 y: j2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2353 
y: j2320 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2353 y: j2320  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2325 
=== Succesors ===
trueSuccessor: v2330 
falseSuccessor: v2329 
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2325 #trueSuccessor: v2330 #falseSuccessor: v2329  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B258" 
    xhandlers
    flags 
    probability 4575670415234218635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2328 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2327 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4605162134418141321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
value: j2320 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2345 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3794 value: j2320 stateAfter: - lastLocationAccess: - #next: v2345  <|@  <|@
f <@~|@floating>@ <|@
tid v3798 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3798 
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3798 #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid v3799 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3799 
=== Succesors ===
next: v2349 
=== Usages ===
=== Predecessor ===
v2345 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3799 #next: v2349  <|@  <|@
f <@~|@floating>@ <|@
tid v3800 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3800 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3800 #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3801 
=== Succesors ===
next: v2355 
=== Usages ===
=== Predecessor ===
v2349 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3801 #next: v2355  <|@  <|@
f <@~|@floating>@ <|@
tid v3796 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
value: i277 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v2351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3796 value: i277 stateAfter: - lastLocationAccess: - #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v3797 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2359 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3797 value: j981 stateAfter: - lastLocationAccess: - #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid v3802 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3802 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3802 value: v2413 stateAfter: - lastLocationAccess: - #next: v2334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2352 
=== Succesors ===
next: v2337 
=== Usages ===
a2340 
=== Predecessor ===
v2334 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2352 #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
a2335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590937744903672136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2326 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2327 
=== Predecessor ===
v2322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B255" 
    successors "B259" 
    xhandlers
    flags 
    probability 4591502344085317785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2326 v2328 
=== Succesors ===
next: a2336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2326 v2328 #next: a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2336 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1799 i277 i82 
=== Succesors ===
next: v2339 
=== Usages ===
a2340 
=== Predecessor ===
v2327 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1799 i277 i82 #next: v2339  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
a2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B256" "B258" 
    successors "B260" "B261" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2338 
values: a2335 a2336 
=== Succesors ===
=== Usages ===
v3834 a1643 v3713 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2338 values: a2335 a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2337 v2339 
=== Succesors ===
next: v3101 
=== Usages ===
a2340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2337 v2339 #next: v3101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2544 
=== Usages ===
j3102 j3104 
=== Predecessor ===
v2338 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2544  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3682 
y: i277 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3682 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid i1632 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1490 
trueValue: i3682 
falseValue: i277 
=== Succesors ===
=== Usages ===
j2470 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1490 trueValue: i3682 falseValue: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j2470 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1632 
=== Succesors ===
=== Usages ===
j3160 v3834 j2474 v2541 v3050 j3146 j3151 j3154 j3157 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1632  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2470 
y: j981 
=== Succesors ===
=== Usages ===
v2544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2470 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2544 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2543 
=== Usages ===
=== Predecessor ===
v3101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v2542 #falseSuccessor: v2543  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B278" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2560  <|@  <|@
f <@*|@fixed>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2547 
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2547  <|@  <|@
f <@~|@floating>@ <|@
tid v3713 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2340 
index: - 
=== Succesors ===
=== Usages ===
j3104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2340 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3104 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3101 
address: v3713 
=== Succesors ===
=== Usages ===
v3841 v3843 v3845 v3847 v3849 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3101 address: v3713  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a552 
index: - 
=== Succesors ===
=== Usages ===
j3102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3102 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3101 
address: v3709 
=== Succesors ===
=== Usages ===
v3842 v3844 v3846 v3848 v3850 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3101 address: v3709  <|@  <|@
f <@~|@floating>@ <|@
tid j3146 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2470 
y: j3145 
=== Succesors ===
=== Usages ===
v3147 v3149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3147 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3146 
y: j964 
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3146 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3147 
=== Succesors ===
trueSuccessor: v2545 
falseSuccessor: v2546 
=== Usages ===
=== Predecessor ===
v2543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3147 #trueSuccessor: v2545 #falseSuccessor: v2546  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B266" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2556 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v2556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
v2545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2548 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v2548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
v2546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B302" 
    successors "B265" "B302" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3137 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2549 
values: j964 j3144 
=== Succesors ===
=== Usages ===
v3850 j3144 v3849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2549 values: j964 j3144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2548 
=== Succesors ===
next: v3683 
=== Usages ===
v3683 v2552 v2553 j3137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2548 #next: v3683  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3137 
=== Succesors ===
=== Usages ===
v3683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3683 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2549 
address: v3850 
=== Succesors ===
next: v3592 
=== Usages ===
v3592 
=== Predecessor ===
v2549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2549 address: v3850 #next: v3592  <|@  <|@
f <@~|@floating>@ <|@
tid v3849 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3137 
=== Succesors ===
=== Usages ===
v3592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3849 
value: v3683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2555 
=== Usages ===
=== Predecessor ===
v3683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3849 value: v3683 stateAfter: - lastLocationAccess: - #next: v2555  <|@  <|@
f <@~|@floating>@ <|@
tid j3144 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3137 
y: j818 
=== Succesors ===
=== Usages ===
j3129 j3137 v3149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3137 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3149 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3146 
y: j3144 
=== Succesors ===
=== Usages ===
v2555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3146 y: j3144  <|@  <|@
f <@*|@fixed>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3149 
=== Succesors ===
trueSuccessor: v2552 
falseSuccessor: v2554 
=== Usages ===
=== Predecessor ===
v3592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3149 #trueSuccessor: v2552 #falseSuccessor: v2554  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2549 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v2555 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2549 #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
v2552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B262" "B265" 
    successors "B267" "B268" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3129 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2557 
values: j964 j3144 
=== Succesors ===
=== Usages ===
v3848 j3136 j3121 v3152 v3847 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2557 values: j964 j3144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2556 v2558 
=== Succesors ===
next: v2579 
=== Usages ===
j3129 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2556 v2558 #next: v2579  <|@  <|@
f <@~|@floating>@ <|@
tid j3151 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2470 
y: j3084 
=== Succesors ===
=== Usages ===
v3152 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3152 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3151 
y: j3129 
=== Succesors ===
=== Usages ===
v2579 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3151 y: j3129  <|@  <|@
f <@*|@fixed>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3152 
=== Succesors ===
trueSuccessor: v2578 
falseSuccessor: v2577 
=== Usages ===
=== Predecessor ===
v2557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3152 #trueSuccessor: v2578 #falseSuccessor: v2577  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2582 
=== Usages ===
=== Predecessor ===
v2579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2582  <|@  <|@
f <@*|@fixed>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
v2578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3684 
=== Usages ===
v3684 
=== Predecessor ===
v2579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3684  <|@  <|@
f <@~|@floating>@ <|@
tid v3848 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3129 
=== Succesors ===
=== Usages ===
v3684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3684 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2577 
address: v3848 
=== Succesors ===
next: v3590 
=== Usages ===
v3590 
=== Predecessor ===
v2577 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2577 address: v3848 #next: v3590  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3129 
=== Succesors ===
=== Usages ===
v3590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3847 
value: v3684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v3684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3847 value: v3684 stateAfter: - lastLocationAccess: - #next: v2567  <|@  <|@
f <@~|@floating>@ <|@
tid j3136 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3129 
y: j1752 
=== Succesors ===
=== Usages ===
j3121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3129 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
v3590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" "B267" 
    successors "B270" "B271" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3121 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2568 
values: j3136 j3129 
=== Succesors ===
=== Usages ===
v3846 j3128 j3113 v3155 v3845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2568 values: j3136 j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2567 v2582 
=== Succesors ===
next: v2585 
=== Usages ===
j3121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2567 v2582 #next: v2585  <|@  <|@
f <@~|@floating>@ <|@
tid j3154 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2470 
y: j3088 
=== Succesors ===
=== Usages ===
v3155 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3155 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3154 
y: j3121 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3154 y: j3121  <|@  <|@
f <@*|@fixed>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3155 
=== Succesors ===
trueSuccessor: v2584 
falseSuccessor: v2583 
=== Usages ===
=== Predecessor ===
v2568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3155 #trueSuccessor: v2584 #falseSuccessor: v2583  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2588 
=== Usages ===
=== Predecessor ===
v2585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2588  <|@  <|@
f <@*|@fixed>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
v2584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3685 
=== Usages ===
v3685 
=== Predecessor ===
v2585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3685  <|@  <|@
f <@~|@floating>@ <|@
tid v3846 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3121 
=== Succesors ===
=== Usages ===
v3685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3685 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2583 
address: v3846 
=== Succesors ===
next: v3588 
=== Usages ===
v3588 
=== Predecessor ===
v2583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2583 address: v3846 #next: v3588  <|@  <|@
f <@~|@floating>@ <|@
tid v3845 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3121 
=== Succesors ===
=== Usages ===
v3588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3845 
value: v3685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
v3685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3845 value: v3685 stateAfter: - lastLocationAccess: - #next: v2570  <|@  <|@
f <@~|@floating>@ <|@
tid j3128 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3121 
y: j3080 
=== Succesors ===
=== Usages ===
j3113 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3121 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
v3588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B270" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3113 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2571 
values: j3128 j3121 
=== Succesors ===
=== Usages ===
v3844 j3120 j3105 v3158 v3843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2571 values: j3128 j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2570 v2588 
=== Succesors ===
next: v2591 
=== Usages ===
j3113 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2570 v2588 #next: v2591  <|@  <|@
f <@~|@floating>@ <|@
tid j3157 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2470 
y: j3092 
=== Succesors ===
=== Usages ===
v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3157 
y: j3113 
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3157 y: j3113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3158 
=== Succesors ===
trueSuccessor: v2590 
falseSuccessor: v2589 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3158 #trueSuccessor: v2590 #falseSuccessor: v2589  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@*|@fixed>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2574 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3686 
=== Usages ===
v3686 
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3686  <|@  <|@
f <@~|@floating>@ <|@
tid v3844 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3113 
=== Succesors ===
=== Usages ===
v3686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3686 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2589 
address: v3844 
=== Succesors ===
next: v3586 
=== Usages ===
v3586 
=== Predecessor ===
v2589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2589 address: v3844 #next: v3586  <|@  <|@
f <@~|@floating>@ <|@
tid v3843 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3113 
=== Succesors ===
=== Usages ===
v3586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3843 
value: v3686 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2573 
=== Usages ===
=== Predecessor ===
v3686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3843 value: v3686 stateAfter: - lastLocationAccess: - #next: v2573  <|@  <|@
f <@~|@floating>@ <|@
tid j3120 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3113 
y: j3064 
=== Succesors ===
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3113 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2574 
=== Predecessor ===
v3586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3105 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2574 
values: j3120 j3113 
=== Succesors ===
=== Usages ===
v3842 v3161 v3841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2574 values: j3120 j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2573 v2594 
=== Succesors ===
next: v2597 
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2573 v2594 #next: v2597  <|@  <|@
f <@~|@floating>@ <|@
tid j3160 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2470 
y: j3096 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3160 
y: j3105 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3160 y: j3105  <|@  <|@
f <@*|@fixed>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3161 
=== Succesors ===
trueSuccessor: v2596 
falseSuccessor: v2595 
=== Usages ===
=== Predecessor ===
v2574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3161 #trueSuccessor: v2596 #falseSuccessor: v2595  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2600 
=== Usages ===
=== Predecessor ===
v2597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2600  <|@  <|@
f <@*|@fixed>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3687 
=== Usages ===
i3687 
=== Predecessor ===
v2597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3687  <|@  <|@
f <@~|@floating>@ <|@
tid v3842 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3105 
=== Succesors ===
=== Usages ===
i3687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3687 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2595 
address: v3842 
=== Succesors ===
next: v3584 
=== Usages ===
v3584 
=== Predecessor ===
v2595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2595 address: v3842 #next: v3584  <|@  <|@
f <@~|@floating>@ <|@
tid v3841 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3105 
=== Succesors ===
=== Usages ===
v3584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3841 
value: i3687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2576 
=== Usages ===
=== Predecessor ===
i3687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3841 value: i3687 stateAfter: - lastLocationAccess: - #next: v2576  <|@  <|@
f <@*|@fixed>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v3584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B260" "B277" "B276" 
    successors "B279" "B297" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2560 v2576 v2600 
=== Succesors ===
next: v3164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2560 v2576 v2600 #next: v3164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2607 
=== Usages ===
j3166 
=== Predecessor ===
v2561 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2607  <|@  <|@
f <@~|@floating>@ <|@
tid j2469 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
j2474 v3050 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v3050 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2470 
y: j2469 
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2470 y: j2469  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3050 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2605 
=== Usages ===
=== Predecessor ===
v3164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3050 #trueSuccessor: v2606 #falseSuccessor: v2605  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" "B281" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2610 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3834 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2340 
index: j2470 
=== Succesors ===
=== Usages ===
j3166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2340 index: j2470  <|@  <|@
f <@~|@floating>@ <|@
tid j3166 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3164 
address: v3834 
=== Succesors ===
=== Usages ===
v3851 v3852 v3853 v3854 v3855 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3164 address: v3834  <|@  <|@
f <@~|@floating>@ <|@
tid j2474 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2469 
y: j2470 
=== Succesors ===
=== Usages ===
j3211 j3197 j3202 j3205 j3208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2469 y: j2470  <|@  <|@
f <@~|@floating>@ <|@
tid j3197 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2474 
y: j3145 
=== Succesors ===
=== Usages ===
v3198 v3200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3197 
y: j964 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3197 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3198 
=== Succesors ===
trueSuccessor: v2608 
falseSuccessor: v2609 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3198 #trueSuccessor: v2608 #falseSuccessor: v2609  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2619 
=== Usages ===
=== Predecessor ===
v2610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2619  <|@  <|@
f <@*|@fixed>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
v2608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B282" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v2610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2611  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v2609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" "B296" 
    successors "B283" "B296" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3191 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2612 
values: j964 j3196 
=== Succesors ===
=== Usages ===
v3855 j3196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2612 values: j964 j3196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2611 
=== Succesors ===
next: v3597 
=== Usages ===
j3191 v2615 v2616 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2611 #next: v3597  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3191 
=== Succesors ===
=== Usages ===
v3597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3855 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2618 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3855 value: v3643 stateAfter: - lastLocationAccess: - #next: v2618  <|@  <|@
f <@~|@floating>@ <|@
tid j3196 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3191 
y: j818 
=== Succesors ===
=== Usages ===
j3185 j3191 v3200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3191 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3197 
y: j3196 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3197 y: j3196  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3200 
=== Succesors ===
trueSuccessor: v2615 
falseSuccessor: v2617 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3200 #trueSuccessor: v2615 #falseSuccessor: v2617  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2612 
=== Succesors ===
next: v2621 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2612 #next: v2621  <|@  <|@
f <@*|@fixed>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
v2615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B280" "B283" 
    successors "B285" "B286" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3185 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2620 
values: j964 j3196 
=== Succesors ===
=== Usages ===
v3854 j3190 j3179 v3203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2620 values: j964 j3196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2619 v2621 
=== Succesors ===
next: v2642 
=== Usages ===
j3185 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2619 v2621 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid j3202 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2474 
y: j3084 
=== Succesors ===
=== Usages ===
v3203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3202 
y: j3185 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3202 y: j3185  <|@  <|@
f <@*|@fixed>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3203 
=== Succesors ===
trueSuccessor: v2641 
falseSuccessor: v2640 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3203 #trueSuccessor: v2641 #falseSuccessor: v2640  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
v2641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3596 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3596  <|@  <|@
f <@~|@floating>@ <|@
tid v3854 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3185 
=== Succesors ===
=== Usages ===
v3596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2630 
=== Usages ===
=== Predecessor ===
v2640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3854 value: v3647 stateAfter: - lastLocationAccess: - #next: v2630  <|@  <|@
f <@~|@floating>@ <|@
tid j3190 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3185 
y: j1752 
=== Succesors ===
=== Usages ===
j3179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3185 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
v3596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" "B285" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3179 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2631 
values: j3190 j3185 
=== Succesors ===
=== Usages ===
v3853 j3184 j3173 v3206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2631 values: j3190 j3185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2630 v2645 
=== Succesors ===
next: v2648 
=== Usages ===
j3179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2630 v2645 #next: v2648  <|@  <|@
f <@~|@floating>@ <|@
tid j3205 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2474 
y: j3088 
=== Succesors ===
=== Usages ===
v3206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3206 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3205 
y: j3179 
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3205 y: j3179  <|@  <|@
f <@*|@fixed>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3206 
=== Succesors ===
trueSuccessor: v2647 
falseSuccessor: v2646 
=== Usages ===
=== Predecessor ===
v2631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3206 #trueSuccessor: v2647 #falseSuccessor: v2646  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2634 
=== Predecessor ===
v2647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3595  <|@  <|@
f <@~|@floating>@ <|@
tid v3853 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3179 
=== Succesors ===
=== Usages ===
v3595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2633 
=== Usages ===
=== Predecessor ===
v2646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3853 value: v3646 stateAfter: - lastLocationAccess: - #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid j3184 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3179 
y: j3080 
=== Succesors ===
=== Usages ===
j3173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3179 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2634 
=== Predecessor ===
v3595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3173 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2634 
values: j3184 j3179 
=== Succesors ===
=== Usages ===
v3852 j3178 j3167 v3209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2634 values: j3184 j3179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2633 v2651 
=== Succesors ===
next: v2654 
=== Usages ===
j3173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2633 v2651 #next: v2654  <|@  <|@
f <@~|@floating>@ <|@
tid j3208 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2474 
y: j3092 
=== Succesors ===
=== Usages ===
v3209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3209 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3208 
y: j3173 
=== Succesors ===
=== Usages ===
v2654 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3208 y: j3173  <|@  <|@
f <@*|@fixed>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3209 
=== Succesors ===
trueSuccessor: v2653 
falseSuccessor: v2652 
=== Usages ===
=== Predecessor ===
v2634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3209 #trueSuccessor: v2653 #falseSuccessor: v2652  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2657 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2657  <|@  <|@
f <@*|@fixed>@ <|@
tid v2657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2637 
=== Predecessor ===
v2653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3594 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3594  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3173 
=== Succesors ===
=== Usages ===
v3594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3852 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3852 value: v3645 stateAfter: - lastLocationAccess: - #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid j3178 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3173 
y: j3064 
=== Succesors ===
=== Usages ===
j3167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3173 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2637 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3167 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2637 
values: j3178 j3173 
=== Succesors ===
=== Usages ===
v3851 v3212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2637 values: j3178 j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2636 v2657 
=== Succesors ===
next: v2660 
=== Usages ===
j3167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2636 v2657 #next: v2660  <|@  <|@
f <@~|@floating>@ <|@
tid j3211 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2474 
y: j3096 
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3212 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3211 
y: j3167 
=== Succesors ===
=== Usages ===
v2660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3211 y: j3167  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3212 
=== Succesors ===
trueSuccessor: v2659 
falseSuccessor: v2658 
=== Usages ===
=== Predecessor ===
v2637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3212 #trueSuccessor: v2659 #falseSuccessor: v2658  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2663 
=== Usages ===
=== Predecessor ===
v2660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2663  <|@  <|@
f <@*|@fixed>@ <|@
tid v2663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v2659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3593 
=== Usages ===
=== Predecessor ===
v2660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3593  <|@  <|@
f <@~|@floating>@ <|@
tid v3851 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3167 
=== Succesors ===
=== Usages ===
v3593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3851 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2639 
=== Usages ===
=== Predecessor ===
v2658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3851 value: i3644 stateAfter: - lastLocationAccess: - #next: v2639  <|@  <|@
f <@*|@fixed>@ <|@
tid v2639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v3593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B282" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2616 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2616  <|@  <|@
f <@*|@fixed>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2612 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2617 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B298" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v2605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2623 v2639 v2663 
=== Succesors ===
next: a1643 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2623 v2639 v2663 #next: a1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1643 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2340 
=== Succesors ===
next: j2367 
=== Usages ===
a1459 
=== Predecessor ===
v2624 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2340 #next: j2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2367 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2382 
=== Usages ===
v3803 v3804 
=== Predecessor ===
a1643 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2382  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2367 
index: - 
=== Succesors ===
=== Usages ===
j2382 v2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2382 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3803 
=== Succesors ===
next: j2383 
=== Usages ===
j2456 j2388 v3831 
=== Predecessor ===
j2367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3803 #next: j2383  <|@  <|@
f <@~|@floating>@ <|@
tid v3804 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2367 
index: - 
=== Succesors ===
=== Usages ===
j2383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2383 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3804 
=== Succesors ===
next: v2375 
=== Usages ===
v2372 
=== Predecessor ===
j2382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3804 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2456 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2382 
y: j1430 
=== Succesors ===
=== Usages ===
v2372 v2384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2382 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2372 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2383 
y: j2456 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2383 y: j2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2372 
=== Succesors ===
trueSuccessor: v2373 
falseSuccessor: v2374 
=== Usages ===
=== Predecessor ===
j2383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2372 #trueSuccessor: v2373 #falseSuccessor: v2374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4576172281173459212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2378 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1767 i92 i71 
=== Succesors ===
next: j2379 
=== Usages ===
j2379 
=== Predecessor ===
v2373 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1767 i92 i71 #next: j2379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2379 <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2378 
=== Succesors ===
next: v2389 
=== Usages ===
j2388 
=== Predecessor ===
a2378 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2378 #next: v2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
j2379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4605938458292904088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3803 
value: j2456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3803 value: j2456 stateAfter: - lastLocationAccess: - #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid v3831 <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2382 
index: - 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3831 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2384 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3831 #next: v2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v2381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B299" 
    successors 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2388 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2386 
values: j2382 j2379 
=== Succesors ===
=== Usages ===
v3807 v3806 a1456 v3832 v3833 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: j2382 j2379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2387 v2389 
=== Succesors ===
next: a1456 
=== Usages ===
j2388 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2387 v2389 #next: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1456 <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2388 
=== Succesors ===
next: j2398 
=== Usages ===
a1462 
=== Predecessor ===
v2386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2388 #next: j2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2398 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3805 
=== Succesors ===
next: v2399 
=== Usages ===
v2399 
=== Predecessor ===
a1456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3805 #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid v3806 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3806 
value: j2398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
j2398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3806 value: j2398 stateAfter: - lastLocationAccess: - #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid v3807 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3807 
value: v2453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v2399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3807 value: v2453 stateAfter: - lastLocationAccess: - #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid v3832 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1459 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1643 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
value: a1459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3832 value: a1459 stateAfter: - lastLocationAccess: - #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid v3833 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3833 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1462 
=== Usages ===
=== Predecessor ===
v2406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3833 value: i82 stateAfter: - lastLocationAccess: - #next: a1462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1462 <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1456 
=== Succesors ===
next: v1463 
=== Usages ===
v199 
=== Predecessor ===
v2408 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1456 #next: v1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
a1462 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1462 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1462 memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B264" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2553 
=== Usages ===
=== Predecessor ===
v2555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2553  <|@  <|@
f <@*|@fixed>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2549 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2554 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2549  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B203" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2931 
=== Usages ===
=== Predecessor ===
v2933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2931  <|@  <|@
f <@*|@fixed>@ <|@
tid v2931 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2927 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2932 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2927  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B305" "B306" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 40]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1383 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1383  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, char[], int, int)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Integer.java
sourceLine: 336
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: i102 i35 a1659 i82 - i105 - i120 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1332 v1380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: i102 i35 a1659 i82 - i105 - i120 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i71 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i105 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v1382 #falseSuccessor: v1379  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: v1380  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 902
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?109  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B186" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?109 #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 34]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 268435455] ⇈000000000fffffff
=== Inputs ===
x: i102 
y: i35 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i102 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: v1363  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, char[], int, int)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: i102 i35 a1659 i82 - i103 - i120 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: i102 i35 a1659 i82 - i103 - i120 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 824
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?104  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B114" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2805 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2805  <|@  <|@
f <@*|@fixed>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2801 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2806 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2801  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@*|@fixed>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2675 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2675  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: v3650 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: v3650  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a! Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?2 ?220 i979 ?402 ?215 ?63 v3718 v3699 v1083 i1071 v3903 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3718 <|@
result [v0|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v3650 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3650 <|@
result v1|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v3718 
=== Succesors ===
next: a3651 
=== Usages ===
v3708 v3696 v3902 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3718 #next: a3651  <|@  <|@
f <@~|@floating>@ <|@
tid v3708 <|@
result [v1|DWORD * 8 + 104] <|@
d <@d|@=== Debug Properties ===
displacement: 104
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
a3651 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3651 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Klass::_java_mirror:final
nodeSourcePosition: at java.lang.Object.getClass() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 8]
nullCheck: false
stamp: a!# Ljava/lang/Class;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3708 
=== Succesors ===
next: a3652 
=== Usages ===
?58 v3688 v1084 ?1467 j1756 
=== Predecessor ===
v3650 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3708 #next: a3652  <|@  <|@
f <@~|@floating>@ <|@
tid v3688 <|@
result [v2|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a3651 
index: - 
=== Succesors ===
=== Usages ===
a3652 v1086 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a3651 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3652 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: n# Ljava/lang/String;
=== Inputs ===
stateBefore: - 
guard: - 
address: v3688 
=== Succesors ===
next: v55 
=== Usages ===
a812 v1251 v3702 
=== Predecessor ===
a3651 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3688 #next: v55  <|@  <|@
f <@~|@floating>@ <|@
tid v1251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
value: a3652 
=== Succesors ===
=== Usages ===
v55 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3652  <|@  <|@
f <@~|@floating>@ <|@
tid i120 <|@
result int[15|0xf] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:333) [bci: 12]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 15
stableDimension: 0
stamp: i32 [15] ⇊000000000000000f ⇈000000000000000f
stampKind: i32
value: int[15|0xf]
=== Inputs ===
=== Succesors ===
=== Usages ===
?104 ?109 i123 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i3644 <|@
result short[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 0
stableDimension: 0
stamp: i16 [0] ⇈0000000000000000
stampKind: i16
value: short[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3576 v3593 v3608 v3623 v3638 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3645 <|@
result v4|V32_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16>
value: SIMD<0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3578 v3594 v3609 v3624 v3639 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3646 <|@
result v5|V64_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3580 v3595 v3610 v3625 v3640 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3647 <|@
result v6|V128_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3582 v3596 v3611 v3626 v3641 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v3643 <|@
result v7|V256_WORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
stableDimension: 0
stamp: <i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000,i16 [0] ⇈0000000000000000>
stampKind: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
value: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v3642 v3597 v3612 v3627 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3096 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3097 j3160 j3211 j3273 j3324 j3386 j3437 j3499 j3550 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3064 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3074 j3120 j3178 j3234 j3291 j3347 j3404 j3460 j3517 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3092 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3093 j3157 j3208 j3270 j3321 j3383 j3434 j3496 j3547 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3080 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3069 j3128 j3184 j3242 j3297 j3355 j3410 j3468 j3523 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3088 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3089 j3154 j3205 j3267 j3318 j3380 j3431 j3493 j3544 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1752 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3529 j3476 j3416 j3363 j3303 j3250 j3075 j3190 j3136 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3084 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3085 j3151 j3202 j3264 j3315 j3377 j3428 j3490 j3541 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result long[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 30]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 16
stableDimension: 0
stamp: i64 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i64
value: long[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3535 j3484 j3422 j3309 j3371 j3258 j3196 j3144 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j3145 <|@
result long[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -16
stableDimension: 0
stamp: i64 [-16] ⇊fffffffffffffff0 ⇈fffffffffffffff0
stampKind: i64
value: long[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3146 j3197 j3259 j3310 j3372 j3423 j3485 j3536 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j964 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j3469 j3477 j3298 j3356 v3311 v3373 v3486 j3364 j3251 j3304 v3424 j3417 j3411 v3260 j3075 v3086 v3537 j3129 j3137 v3147 j3530 j3185 j3191 v3198 j3524 j3243 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1799 <|@
result v8|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[C, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a2111 a2336 a2171 a2041 a2224 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2048 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2049 i2118 i2178 i2231 i2343 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2018 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i2019 i2090 i2150 i2203 i2315 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i2025 <|@
result int[16777215|0xffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 48]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 16777215
stableDimension: 0
stamp: i32 [16777215] ⇊0000000000ffffff ⇈0000000000ffffff
stampKind: i32
value: int[16777215|0xffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2026 v2096 v2321 v2209 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i82 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 29]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
?109 ?104 v186 v2002 v1516 v1064 a2224 v1555 v1594 v1007 v2313 v2408 a2041 v176 v972 v1215 v911 v851 a2111 a2171 a2336 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2418 <|@
result meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1859 v1946 v1998 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1849 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j1990 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1990 <|@
result v9|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v1849 
=== Succesors ===
=== Usages ===
v3744 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v1849  <|@  <|@
f <@~|@floating>@ <|@
tid v3744 <|@
result [v9|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j1990 
index: - 
=== Succesors ===
=== Usages ===
j1994 j1942 j1855 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1990 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid i92 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 14]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i95 a2378 a1833 a2282 a1922 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?215 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?247 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid a126 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@915094e
hasIdentity: true
objectId: 0
stamp: a!# Ljava/lang/StringBuilder;
type: HotSpotType<Ljava/lang/StringBuilder;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?279 ?794 ?1470 ?157 ?63 ?281 ?722 ?782 ?270 ?292 ?299 ?247 ?770 ?653 ?357 ?313 ?790 ?324 ?331 ?263 ?776 ?1468 ?259 ?1471 ?1469 ?38 ?350 ?402 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?247 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?215 
values: a126 - 
=== Succesors ===
=== Usages ===
?722 ?313 ?653 ?299 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?215 values: a126 -  <|@  <|@
f <@~|@floating>@ <|@
tid j1430 <|@
result long[24|0x18] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 24
stableDimension: 0
stamp: i64 [24] ⇊0000000000000018 ⇈0000000000000018
stampKind: i64
value: long[24|0x18]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1431 j2451 j2415 j2456 j2424 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1274 <|@
result int[17|0x11] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 17
stableDimension: 0
stamp: i32 [17] ⇊0000000000000011 ⇈0000000000000011
stampKind: i32
value: int[17|0x11]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1275 v1278 v1637 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1810 <|@
result v10|V256_QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <0,0,0,0>
stableDimension: 0
stamp: <i64,i64,i64,i64>
stampKind: <i64,i64,i64,i64>
value: SIMD<0,0,0,0>
=== Inputs ===
=== Succesors ===
=== Usages ===
v1812 v1904 v2016 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2413 <|@
result meta{HotSpotType<[C, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[C, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[C, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v1807 v1900 v2012 v2065 v2134 v2194 v2247 v2359 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j981 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 32]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v966 v1058 v1804 v1897 v2009 v2062 v2131 v2191 v2244 v2356 v2541 v2793 v2667 v2919 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i396 <|@
result int[16|0x10] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rawvalue: 16
stableDimension: 0
stamp: i32 [16] ⇊0000000000000010 ⇈0000000000000010
stampKind: i32
value: int[16|0x10]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1639 i724 i724 v2008 v1896 v1803 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i963 <|@
result int[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.hubOffset(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:751) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 8
stableDimension: 0
stamp: i32 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i32
value: int[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j970 j1062 a1780 a1877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v1767 <|@
result v11|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[I, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<[I, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
a1780 a1833 a1877 a1922 a1965 a2282 a2378 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2409 <|@
result long[48|0x30] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 48
stableDimension: 0
stamp: i64 [48] ⇊0000000000000030 ⇈0000000000000030
stampKind: i64
value: long[48|0x30]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2410 j2421 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i121 <|@
result int[-16|0xfffffffffffffff0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -16
stableDimension: 0
stamp: i32 [-16] ⇊00000000fffffff0 ⇈00000000fffffff0
stampKind: i32
value: int[-16|0xfffffffffffffff0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v122 i375 i496 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i71 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 10]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i78 v116 v172 i2089 i2149 i2202 ?259 i261 i262 v285 v317 ?331 v343 v492 i78 i78 i2314 ?770 a1780 a2378 a1833 a1877 a1922 a1965 i2017 a2282 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1763 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1762 v2077 v2146 v2259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1757 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j1758 j2074 j2143 j2256 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j1761 <|@
result v12|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3719 v3756 v3768 v3787 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid a1705 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1708 v1732 v1742 v1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid a156 <|@
d <@d|@=== Debug Properties ===
componentType: HotSpotResolvedPrimitiveType<char>
hasIdentity: true
length: 16
objectId: 1
stamp: a!# [C
=== Inputs ===
=== Succesors ===
=== Usages ===
?157 ?158 ?292 ?791 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@VirtualArray|@org.graalvm.compiler.nodes.virtual.VirtualArrayNode>@  <|@  <|@
tid ?157 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a156 
=== Succesors ===
=== Usages ===
?58 ?60 ?402 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a156  <|@  <|@
tid ?158 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
values: - - - - - - - - - - - - - - - - 
=== Succesors ===
=== Usages ===
?58 ?60 ?402 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a156 values: - - - - - - - - - - - - - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v55 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:641) [bci: 6]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
trueSuccessorProbability: 0.002982106018175279
=== Inputs ===
condition: v1251 
=== Succesors ===
trueSuccessor: v53 
falseSuccessor: v54 
=== Usages ===
=== Predecessor ===
a3652 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1251 #trueSuccessor: v53 #falseSuccessor: v54  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v1|DWORD * 8 + 104] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v5|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v6|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v7|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v8|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v10|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v11|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction v12|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v53 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 9]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a57 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a57  <|@  <|@
tid v1084 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
returnStamp: a# Ljava/lang/String;
signature: [Ljdk.vm.ci.meta.JavaType;@6b0a3735
stamp: void
targetMethod: HotSpotMethod<Class.getName0()>
=== Inputs ===
arguments: a3651 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a3651  <|@  <|@
tid ?63 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: a1 a126 
=== Succesors ===
=== Usages ===
?58 ?60 ?1467 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a126  <|@  <|@
tid ?1467 <|@
d <@d|@=== Debug Properties ===
bci: 11
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 1
=== Inputs ===
outerFrameState: ?63 
values: - - a3651 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a57 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - a3651 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a57 <|@
result v13|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: 11
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
polymorphic: false
stamp: a# Ljava/lang/String;
targetMethod: Direct#Class.getName0
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1084 
stateDuring: ?1467 
=== Succesors ===
next: a3653 
=== Usages ===
?58 a1085 ?60 v3700 a415 
=== Predecessor ===
v53 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1084 stateDuring: ?1467 #next: a3653  <|@  <|@
tid ?58 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 11]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Class.java
sourceLine: 642
stackSize: 2
=== Inputs ===
outerFrameState: ?63 
values: - - a3651 a57 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
v1716 a3653 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - - a3651 a57 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@~|@floating>@ <|@
tid v3700 <|@
result [v13|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a57 
index: - 
=== Succesors ===
=== Usages ===
a3653 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a57 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3653 <|@
result v14|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: n# [C
=== Inputs ===
stateBefore: ?58 
guard: - 
address: v3700 
=== Succesors ===
next: v1341 
=== Usages ===
a1090 v1091 v3701 
=== Predecessor ===
a57 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?58 guard: - address: v3700 #next: v1341  <|@  <|@
f <@~|@floating>@ <|@
tid v1091 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
value: a3653 
=== Succesors ===
=== Usages ===
v1341 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3653  <|@  <|@
f <@*|@fixed>@ <|@
tid v1341 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1091 
=== Succesors ===
trueSuccessor: v1340 
falseSuccessor: v1338 
=== Usages ===
=== Predecessor ===
a3653 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1091 #trueSuccessor: v1340 #falseSuccessor: v1338  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v2|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 14]
stack: v2|QWORD[.] v13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction v14|DWORD[.] = MOV [v13|QWORD[.] + 12] size: DWORD state [bci:14, 11] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1340 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1716 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1716  <|@  <|@
f <@~|@floating>@ <|@
tid i1718 <|@
result int[-279563|0xfffffffffffbbbf5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -279563
stableDimension: 0
stamp: i32 [-279563] ⇊00000000fffbbbf5 ⇈00000000fffbbbf5
stampKind: i32
value: int[-279563|0xfffffffffffbbbf5]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?58 
actionAndReason: i1718 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1340 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?58 actionAndReason: i1718 speculation: a1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -279563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 14]
stack: v2|QWORD[.] v13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:14, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B13" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3654 
=== Usages ===
=== Predecessor ===
v1341 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3654  <|@  <|@
f <@~|@floating>@ <|@
tid v3701 <|@
result [v14|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3653 
=== Succesors ===
=== Usages ===
i3654 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3654 <|@
result v15|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3701 
=== Succesors ===
next: v1086 
=== Usages ===
i375 i407 i727 j1819 i726 ?313 v1863 v1275 
=== Predecessor ===
v1338 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3701 #next: v1086  <|@  <|@
f <@~|@floating>@ <|@
tid a1085 <|@
result v16|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
op: Compress
stamp: n# Ljava/lang/String;
=== Inputs ===
value: a57 
=== Succesors ===
=== Usages ===
v1086 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a57  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1086 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: Class.name
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3688 
value: a1085 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j1756 
=== Usages ===
=== Predecessor ===
i3654 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3688 value: a1085 stateAfter: - lastLocationAccess: - #next: j1756  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1756 <|@
result v2|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a3651 
=== Succesors ===
next: v1762 
=== Usages ===
j1758 
=== Predecessor ===
v1086 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a3651 #next: v1762  <|@  <|@
f <@~|@floating>@ <|@
tid j1758 <|@
result v17|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j1756 
y: i1757 
=== Succesors ===
=== Usages ===
v3719 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1756 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3719 <|@
result [v17|QWORD[*] + v12|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1758 
index: j1761 
=== Succesors ===
=== Usages ===
v1762 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1758 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1762 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3719 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v288 
=== Usages ===
=== Predecessor ===
j1756 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3719 value: i1763 stateAfter: - lastLocationAccess: - #next: v288  <|@  <|@
f <@~|@floating>@ <|@
tid i375 <|@
result v18|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i3654 
y: i121 
=== Succesors ===
=== Usages ===
v285 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3654 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v285 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i375 
y: i71 
=== Succesors ===
=== Usages ===
v288 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i375 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v288 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v285 
=== Succesors ===
trueSuccessor: v286 
falseSuccessor: v287 
=== Usages ===
=== Predecessor ===
v1762 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v285 #trueSuccessor: v286 #falseSuccessor: v287  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 20], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = SHR v2|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v17|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v15|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v286 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1769 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1769  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1769 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1787 
=== Usages ===
v3720 v3721 
=== Predecessor ===
v286 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1787  <|@  <|@
f <@~|@floating>@ <|@
tid v3720 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1787 v1789 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1787 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
=== Succesors ===
next: j1788 
=== Usages ===
j2410 j1793 v3808 
=== Predecessor ===
j1769 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3720 #next: j1788  <|@  <|@
f <@~|@floating>@ <|@
tid v3721 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1769 
index: - 
=== Succesors ===
=== Usages ===
j1788 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1769 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1788 <|@
result v20|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3721 
=== Succesors ===
next: v1777 
=== Usages ===
v1774 
=== Predecessor ===
j1787 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3721 #next: v1777  <|@  <|@
f <@~|@floating>@ <|@
tid j2410 <|@
result v21|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1787 
y: j2409 
=== Succesors ===
=== Usages ===
v1774 v1789 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1787 y: j2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1774 <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1788 
y: j2410 
=== Succesors ===
=== Usages ===
v1777 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1788 y: j2410  <|@  <|@
tid ?60 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Class.getName()>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Class.getName(Class.java:642) [bci: 16]
at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Class.java
sourceLine: 643
stackSize: 0
=== Inputs ===
outerFrameState: ?63 
values: - a57 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a1780 v1128 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?63 values: - a57 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@*|@fixed>@ <|@
tid v1777 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1774 
=== Succesors ===
trueSuccessor: v1775 
falseSuccessor: v1776 
=== Usages ===
=== Predecessor ===
j1788 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1774 #trueSuccessor: v1775 #falseSuccessor: v1776  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v19|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1775 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1780 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1780  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1780 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?60 
arguments: v1767 i963 i71 
=== Succesors ===
next: j1781 
=== Usages ===
j1781 
=== Predecessor ===
v1775 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?60 arguments: v1767 i963 i71 #next: j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1781 <|@
result v22|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1780 
=== Succesors ===
next: v1794 
=== Usages ===
j1793 
=== Predecessor ===
a1780 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1780 #next: v1794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
j1781 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - v13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1776 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1789 
=== Usages ===
=== Predecessor ===
v1777 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1789 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3720 
value: j2410 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1785 
=== Usages ===
=== Predecessor ===
v1776 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3720 value: j2410 stateAfter: - lastLocationAccess: - #next: v1785  <|@  <|@
f <@~|@floating>@ <|@
tid v3808 <|@
result [v19|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1787 
index: - 
=== Succesors ===
=== Usages ===
v1785 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1787 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3808 
=== Succesors ===
next: v1792 
=== Usages ===
=== Predecessor ===
v1789 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3808 #next: v1792  <|@  <|@
f <@*|@fixed>@ <|@
tid v1792 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1791 
=== Predecessor ===
v1785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1793 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1791 
values: j1787 j1781 
=== Succesors ===
=== Usages ===
v3724 v3723 a1389 v3722 v3809 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1791 values: j1787 j1781  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1791 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1792 v1794 
=== Succesors ===
next: a1389 
=== Usages ===
j1793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1792 v1794 #next: a1389  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1389 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1793 
=== Succesors ===
next: v1803 
=== Usages ===
a1395 
=== Predecessor ===
v1791 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1793 #next: v1803  <|@  <|@
f <@~|@floating>@ <|@
tid v3722 <|@
result [v23|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1803 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1803 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3722 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1804 
=== Usages ===
=== Predecessor ===
a1389 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3722 value: i396 stateAfter: - lastLocationAccess: - #next: v1804  <|@  <|@
f <@~|@floating>@ <|@
tid v3723 <|@
result [v23|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1804 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1804 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3723 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1807 
=== Usages ===
=== Predecessor ===
v1803 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3723 value: j981 stateAfter: - lastLocationAccess: - #next: v1807  <|@  <|@
f <@~|@floating>@ <|@
tid v3724 <|@
result [v23|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1807 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1807 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3724 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1812 
=== Usages ===
=== Predecessor ===
v1804 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3724 value: v2413 stateAfter: - lastLocationAccess: - #next: v1812  <|@  <|@
f <@~|@floating>@ <|@
tid v3809 <|@
result [v23|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1793 
index: - 
=== Succesors ===
=== Usages ===
v1812 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1793 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1812 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3809 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1395 
=== Usages ===
=== Predecessor ===
v1807 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3809 value: v1810 stateAfter: - lastLocationAccess: - #next: a1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1395 <|@
result v24|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1389 
=== Succesors ===
next: v1396 
=== Usages ===
j1817 ?776 a725 a1402 
=== Predecessor ===
v1812 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1389 #next: v1396  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1396 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1127 
=== Usages ===
=== Predecessor ===
a1395 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1127  <|@  <|@
f <@~|@floating>@ <|@
tid v1275 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3654 
y: i1274 
=== Succesors ===
=== Usages ===
v1127 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3654 y: i1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1127 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1275 
=== Succesors ===
trueSuccessor: v1124 
falseSuccessor: v1126 
=== Usages ===
=== Predecessor ===
v1396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1275 #trueSuccessor: v1124 #falseSuccessor: v1126  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[*] + 16], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1813 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1813  <|@  <|@
f <@~|@floating>@ <|@
tid a1090 <|@
result v25|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3653 
=== Succesors ===
=== Usages ===
j1813 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1813 <|@
result v26|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1090 
=== Succesors ===
next: j1817 
=== Usages ===
v3725 
=== Predecessor ===
v1124 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1090 #next: j1817  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1817 <|@
result v27|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1395 
=== Succesors ===
next: v1820 
=== Usages ===
v3726 
=== Predecessor ===
j1813 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1395 #next: v1820  <|@  <|@
f <@~|@floating>@ <|@
tid v3725 <|@
result [v26|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1813 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1813 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3726 <|@
result [v27|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1817 
index: - 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1817 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1819 <|@
result v28|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3654 
=== Succesors ===
=== Usages ===
v1820 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3654  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1820 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3725 v3726 j1819 
=== Succesors ===
next: j1822 
=== Usages ===
=== Predecessor ===
j1817 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3725 v3726 j1819 #next: j1822  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1822 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1837 
=== Usages ===
v3727 v3728 
=== Predecessor ===
v1820 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1837  <|@  <|@
f <@~|@floating>@ <|@
tid v3727 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1822 
index: - 
=== Succesors ===
=== Usages ===
j1837 v1839 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1837 <|@
result v29|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
=== Succesors ===
next: j1838 
=== Usages ===
j2415 j1843 v3810 
=== Predecessor ===
j1822 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3727 #next: j1838  <|@  <|@
f <@~|@floating>@ <|@
tid v3728 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1822 
index: - 
=== Succesors ===
=== Usages ===
j1838 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1822 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1838 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3728 
=== Succesors ===
next: v1830 
=== Usages ===
v1827 
=== Predecessor ===
j1837 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3728 #next: v1830  <|@  <|@
f <@~|@floating>@ <|@
tid j2415 <|@
result v30|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1837 
y: j1430 
=== Succesors ===
=== Usages ===
v1827 v1839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1837 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1827 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1838 
y: j2415 
=== Succesors ===
=== Usages ===
v1830 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1838 y: j2415  <|@  <|@
f <@*|@fixed>@ <|@
tid v1830 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1827 
=== Succesors ===
trueSuccessor: v1828 
falseSuccessor: v1829 
=== Usages ===
=== Predecessor ===
j1838 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1827 #trueSuccessor: v1828 #falseSuccessor: v1829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v26|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v27|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1833 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1833  <|@  <|@
tid ?313 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i3654 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i3654  <|@  <|@
tid ?776 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a1395 
=== Succesors ===
=== Usages ===
?310 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a1395  <|@  <|@
tid ?310 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?313 
values: - - - - - 
virtualObjectMappings: ?776 
=== Succesors ===
=== Usages ===
a1833 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?313 values: - - - - - virtualObjectMappings: ?776  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1833 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?310 
arguments: v1767 i92 i71 
=== Succesors ===
next: j1834 
=== Usages ===
j1834 
=== Predecessor ===
v1828 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?310 arguments: v1767 i92 i71 #next: j1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1834 <|@
result v31|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1833 
=== Succesors ===
next: v1844 
=== Usages ===
j1843 
=== Predecessor ===
a1833 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1833 #next: v1844  <|@  <|@
f <@*|@fixed>@ <|@
tid v1844 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1841 
=== Predecessor ===
j1834 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} - v15|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1839 
=== Usages ===
=== Predecessor ===
v1830 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1839  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1839 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3727 
value: j2415 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1836 
=== Usages ===
=== Predecessor ===
v1829 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3727 value: j2415 stateAfter: - lastLocationAccess: - #next: v1836  <|@  <|@
f <@~|@floating>@ <|@
tid v3810 <|@
result [v29|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1837 
index: - 
=== Succesors ===
=== Usages ===
v1836 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1837 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3810 
=== Succesors ===
next: v1842 
=== Usages ===
=== Predecessor ===
v1839 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3810 #next: v1842  <|@  <|@
f <@*|@fixed>@ <|@
tid v1842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1841 
=== Predecessor ===
v1836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B84" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1843 <|@
result v32|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1841 
values: j1837 j1834 
=== Succesors ===
=== Usages ===
v3730 v3729 a1399 v3811 v3812 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1841 values: j1837 j1834  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1842 v1844 
=== Succesors ===
next: a1399 
=== Usages ===
j1843 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1842 v1844 #next: a1399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1399 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1843 
=== Succesors ===
next: j1855 
=== Usages ===
a1405 
=== Predecessor ===
v1841 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1843 #next: j1855  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1855 <|@
result v34|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1856 
=== Usages ===
v1856 
=== Predecessor ===
a1399 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1856  <|@  <|@
f <@~|@floating>@ <|@
tid v3729 <|@
result [v32|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1856 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1856 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3729 
value: j1855 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1859 
=== Usages ===
=== Predecessor ===
j1855 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3729 value: j1855 stateAfter: - lastLocationAccess: - #next: v1859  <|@  <|@
f <@~|@floating>@ <|@
tid v3730 <|@
result [v32|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1859 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1859 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3730 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1863 
=== Usages ===
=== Predecessor ===
v1856 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3730 value: v2418 stateAfter: - lastLocationAccess: - #next: v1863  <|@  <|@
f <@~|@floating>@ <|@
tid v3811 <|@
result [v32|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1863 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1863 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3811 
value: i3654 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1865 
=== Usages ===
=== Predecessor ===
v1859 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3811 value: i3654 stateAfter: - lastLocationAccess: - #next: v1865  <|@  <|@
f <@~|@floating>@ <|@
tid v3812 <|@
result [v32|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1843 
index: - 
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1843 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1402 <|@
result v35|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1395 
=== Succesors ===
=== Usages ===
v1865 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1395  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1865 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3812 
value: a1402 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1405 
=== Usages ===
=== Predecessor ===
v1863 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3812 value: a1402 stateAfter: - lastLocationAccess: - #next: a1405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1405 <|@
result v33|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1399 
=== Succesors ===
next: v1406 
=== Usages ===
a792 
=== Predecessor ===
v1865 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1399 #next: v1406  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1406 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v720 
=== Usages ===
=== Predecessor ===
a1405 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v720  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1406 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v32|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*]], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*] + 16], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v24|QWORD[.], v15|DWORD, v15|DWORD, v33|QWORD[.]] destination: B11 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1128 
=== Usages ===
=== Predecessor ===
v1127 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1128  <|@  <|@
f <@*|@fixed>@ <|@
tid v1128 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?60 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1126 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?60  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288865 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - v13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:19, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B25" 
    xhandlers
    flags 
    probability 4549304361639224109
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v401 
=== Usages ===
=== Predecessor ===
v288 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v401  <|@  <|@
f <@*|@fixed>@ <|@
tid v401 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v287 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v13|QWORD[.]] destination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4607155558376912941
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v54 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Class.getName(Class.java:643) [bci: 19]
at java.lang.Object.toString(Object.java:236) [bci: 11]
stamp: void
=== Inputs ===
=== Succesors ===
next: a3655 
=== Usages ===
=== Predecessor ===
v55 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a3655  <|@  <|@
f <@~|@floating>@ <|@
tid v3702 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3652 
=== Succesors ===
=== Usages ===
a3655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3652  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3655 <|@
result v36|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3702 
=== Succesors ===
next: i3656 
=== Usages ===
a1141 v3703 
=== Predecessor ===
v54 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3702 #next: i3656  <|@  <|@
tid ?2 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: false
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
v1708 a1877 i3656 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
f <@~|@floating>@ <|@
tid v3703 <|@
result [v36|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3655 
=== Succesors ===
=== Usages ===
i3656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3656 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 4]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?2 
guard: - 
address: v3703 
=== Succesors ===
next: v495 
=== Usages ===
i496 i727 i407 v1950 ?653 j1909 i726 v1278 
=== Predecessor ===
a3655 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?2 guard: - address: v3703 #next: v495  <|@  <|@
f <@~|@floating>@ <|@
tid i496 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i32 [-16 - 2147483631]
=== Inputs ===
x: i3656 
y: i121 
=== Succesors ===
=== Usages ===
v492 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3656 y: i121  <|@  <|@
f <@~|@floating>@ <|@
tid v492 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i496 
y: i71 
=== Succesors ===
=== Usages ===
v495 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i496 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v495 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v492 
=== Succesors ===
trueSuccessor: v493 
falseSuccessor: v494 
=== Usages ===
=== Predecessor ===
i3656 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v492 #trueSuccessor: v493 #falseSuccessor: v494  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA [v37|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1866 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1866 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1881 
=== Usages ===
v3731 v3732 
=== Predecessor ===
v493 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1881  <|@  <|@
f <@~|@floating>@ <|@
tid v3731 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1866 
index: - 
=== Succesors ===
=== Usages ===
j1881 v1883 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1881 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3731 
=== Succesors ===
next: j1882 
=== Usages ===
j2421 j1887 v3813 
=== Predecessor ===
j1866 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3731 #next: j1882  <|@  <|@
f <@~|@floating>@ <|@
tid v3732 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1866 
index: - 
=== Succesors ===
=== Usages ===
j1882 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1866 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1882 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3732 
=== Succesors ===
next: v1874 
=== Usages ===
v1871 
=== Predecessor ===
j1881 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3732 #next: v1874  <|@  <|@
f <@~|@floating>@ <|@
tid j2421 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1881 
y: j2409 
=== Succesors ===
=== Usages ===
v1871 v1883 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1881 y: j2409  <|@  <|@
f <@~|@floating>@ <|@
tid v1871 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1882 
y: j2421 
=== Succesors ===
=== Usages ===
v1874 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1882 y: j2421  <|@  <|@
f <@*|@fixed>@ <|@
tid v1874 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1871 
=== Succesors ===
trueSuccessor: v1872 
falseSuccessor: v1873 
=== Usages ===
=== Predecessor ===
j1882 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1871 #trueSuccessor: v1872 #falseSuccessor: v1873  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1877 
=== Usages ===
=== Predecessor ===
v1874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1877  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1877 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?2 
arguments: v1767 i963 i71 
=== Succesors ===
next: j1878 
=== Usages ===
j1878 
=== Predecessor ===
v1872 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?2 arguments: v1767 i963 i71 #next: j1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1878 <|@
result v41|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1877 
=== Succesors ===
next: v1888 
=== Usages ===
j1887 
=== Predecessor ===
a1877 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1877 #next: v1888  <|@  <|@
f <@*|@fixed>@ <|@
tid v1888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
j1878 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1883 
=== Usages ===
=== Predecessor ===
v1874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1883  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1883 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3731 
value: j2421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1880 
=== Usages ===
=== Predecessor ===
v1873 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3731 value: j2421 stateAfter: - lastLocationAccess: - #next: v1880  <|@  <|@
f <@~|@floating>@ <|@
tid v3813 <|@
result [v39|QWORD + 240] <|@
d <@d|@=== Debug Properties ===
displacement: 240
scale: Times1
stamp: void*
=== Inputs ===
base: j1881 
index: - 
=== Succesors ===
=== Usages ===
v1880 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1881 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1880 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3813 
=== Succesors ===
next: v1886 
=== Usages ===
=== Predecessor ===
v1883 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3813 #next: v1886  <|@  <|@
f <@*|@fixed>@ <|@
tid v1886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1885 
=== Predecessor ===
v1880 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1887 <|@
result v42|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1885 
values: j1881 j1878 
=== Succesors ===
=== Usages ===
v3735 v3734 a1409 v3733 v3814 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1885 values: j1881 j1878  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1886 v1888 
=== Succesors ===
next: a1409 
=== Usages ===
j1887 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1886 v1888 #next: a1409  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1409 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1887 
=== Succesors ===
next: v1896 
=== Usages ===
a1414 
=== Predecessor ===
v1885 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1887 #next: v1896  <|@  <|@
f <@~|@floating>@ <|@
tid v3733 <|@
result [v42|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3733 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1897 
=== Usages ===
=== Predecessor ===
a1409 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3733 value: i396 stateAfter: - lastLocationAccess: - #next: v1897  <|@  <|@
f <@~|@floating>@ <|@
tid v3734 <|@
result [v42|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1897 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1897 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3734 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1900 
=== Usages ===
=== Predecessor ===
v1896 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3734 value: j981 stateAfter: - lastLocationAccess: - #next: v1900  <|@  <|@
f <@~|@floating>@ <|@
tid v3735 <|@
result [v42|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1900 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1900 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3735 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1904 
=== Usages ===
=== Predecessor ===
v1897 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3735 value: v2413 stateAfter: - lastLocationAccess: - #next: v1904  <|@  <|@
f <@~|@floating>@ <|@
tid v3814 <|@
result [v42|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1887 
index: - 
=== Succesors ===
=== Usages ===
v1904 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1887 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1904 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3814 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1414 
=== Usages ===
=== Predecessor ===
v1900 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3814 value: v1810 stateAfter: - lastLocationAccess: - #next: a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1414 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1409 
=== Succesors ===
next: v1415 
=== Usages ===
j1907 ?782 a725 a1421 
=== Predecessor ===
v1904 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1409 #next: v1415  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1415 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v1179 
=== Usages ===
=== Predecessor ===
a1414 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v1179  <|@  <|@
f <@~|@floating>@ <|@
tid v1278 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3656 
y: i1274 
=== Succesors ===
=== Usages ===
v1179 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3656 y: i1274  <|@  <|@
f <@*|@fixed>@ <|@
tid v1179 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v1278 
=== Succesors ===
trueSuccessor: v1176 
falseSuccessor: v1178 
=== Usages ===
=== Predecessor ===
v1415 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1278 #trueSuccessor: v1176 #falseSuccessor: v1178  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE v42|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[*] + 16], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1176 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1905 
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1905  <|@  <|@
f <@~|@floating>@ <|@
tid a1141 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.length(String.java:623) [bci: 1]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:447) [bci: 10]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3655 
=== Succesors ===
=== Usages ===
j1905 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1905 <|@
result v45|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1141 
=== Succesors ===
next: j1907 
=== Usages ===
v3736 
=== Predecessor ===
v1176 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1141 #next: j1907  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1907 <|@
result v46|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1414 
=== Succesors ===
next: v1910 
=== Usages ===
v3737 
=== Predecessor ===
j1905 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1414 #next: v1910  <|@  <|@
f <@~|@floating>@ <|@
tid v3736 <|@
result [v45|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1905 
index: - 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1905 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3737 <|@
result [v46|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1907 
index: - 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1907 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j1909 <|@
result v47|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i3656 
=== Succesors ===
=== Usages ===
v1910 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i3656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1910 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charDisjointArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3736 v3737 j1909 
=== Succesors ===
next: j1911 
=== Usages ===
=== Predecessor ===
j1907 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3736 v3737 j1909 #next: j1911  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1911 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1926 
=== Usages ===
v3738 v3739 
=== Predecessor ===
v1910 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1926  <|@  <|@
f <@~|@floating>@ <|@
tid v3738 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1911 
index: - 
=== Succesors ===
=== Usages ===
j1926 v1928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1911 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1926 <|@
result v48|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
=== Succesors ===
next: j1927 
=== Usages ===
j2424 j1932 v3815 
=== Predecessor ===
j1911 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3738 #next: j1927  <|@  <|@
f <@~|@floating>@ <|@
tid v3739 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1911 
index: - 
=== Succesors ===
=== Usages ===
j1927 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1911 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1927 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3739 
=== Succesors ===
next: v1919 
=== Usages ===
v1916 
=== Predecessor ===
j1926 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3739 #next: v1919  <|@  <|@
f <@~|@floating>@ <|@
tid j2424 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1926 
y: j1430 
=== Succesors ===
=== Usages ===
v1916 v1928 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1926 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v1916 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1927 
y: j2424 
=== Succesors ===
=== Usages ===
v1919 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1927 y: j2424  <|@  <|@
f <@*|@fixed>@ <|@
tid v1919 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1916 
=== Succesors ===
trueSuccessor: v1917 
falseSuccessor: v1918 
=== Usages ===
=== Predecessor ===
j1927 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1916 #trueSuccessor: v1917 #falseSuccessor: v1918  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v45|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1917 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1922 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1922  <|@  <|@
tid ?653 <|@
d <@d|@=== Debug Properties ===
bci: 35
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i3656 
=== Succesors ===
=== Usages ===
?651 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i3656  <|@  <|@
tid ?782 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
values: - a1414 
=== Succesors ===
=== Usages ===
?651 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a126 values: - a1414  <|@  <|@
tid ?651 <|@
d <@d|@=== Debug Properties ===
bci: 61
code: ResolvedJavaMethodBytecode<String.getChars(int, int, char[], int)>
duringCall: false
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: String.java
sourceLine: 827
stackSize: 0
=== Inputs ===
outerFrameState: ?653 
values: - - - - - 
virtualObjectMappings: ?782 
=== Succesors ===
=== Usages ===
a1922 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?653 values: - - - - - virtualObjectMappings: ?782  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1922 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?651 
arguments: v1767 i92 i71 
=== Succesors ===
next: j1923 
=== Usages ===
j1923 
=== Predecessor ===
v1917 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?651 arguments: v1767 i92 i71 #next: j1923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1923 <|@
result v50|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1922 
=== Succesors ===
next: v1933 
=== Usages ===
j1932 
=== Predecessor ===
a1922 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1922 #next: v1933  <|@  <|@
f <@*|@fixed>@ <|@
tid v1933 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
j1923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} - v37|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] v43|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1918 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1928 
=== Usages ===
=== Predecessor ===
v1919 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1928  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3738 
value: j2424 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1925 
=== Usages ===
=== Predecessor ===
v1918 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3738 value: j2424 stateAfter: - lastLocationAccess: - #next: v1925  <|@  <|@
f <@~|@floating>@ <|@
tid v3815 <|@
result [v48|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j1926 
index: - 
=== Succesors ===
=== Usages ===
v1925 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1926 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1925 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3815 
=== Succesors ===
next: v1931 
=== Usages ===
=== Predecessor ===
v1928 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3815 #next: v1931  <|@  <|@
f <@*|@fixed>@ <|@
tid v1931 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1930 
=== Predecessor ===
v1925 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1932 <|@
result v51|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1930 
values: j1926 j1923 
=== Succesors ===
=== Usages ===
v3741 v3740 a1418 v3816 v3817 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1930 values: j1926 j1923  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1931 v1933 
=== Succesors ===
next: a1418 
=== Usages ===
j1932 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1931 v1933 #next: a1418  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1418 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1932 
=== Succesors ===
next: j1942 
=== Usages ===
a1424 
=== Predecessor ===
v1930 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1932 #next: j1942  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1942 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1943 
=== Usages ===
v1943 
=== Predecessor ===
a1418 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1943  <|@  <|@
f <@~|@floating>@ <|@
tid v3740 <|@
result [v51|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1943 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1943 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3740 
value: j1942 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1946 
=== Usages ===
=== Predecessor ===
j1942 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3740 value: j1942 stateAfter: - lastLocationAccess: - #next: v1946  <|@  <|@
f <@~|@floating>@ <|@
tid v3741 <|@
result [v51|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1946 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1946 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3741 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1950 
=== Usages ===
=== Predecessor ===
v1943 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3741 value: v2418 stateAfter: - lastLocationAccess: - #next: v1950  <|@  <|@
f <@~|@floating>@ <|@
tid v3816 <|@
result [v51|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3816 
value: i3656 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1952 
=== Usages ===
=== Predecessor ===
v1946 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3816 value: i3656 stateAfter: - lastLocationAccess: - #next: v1952  <|@  <|@
f <@~|@floating>@ <|@
tid v3817 <|@
result [v51|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1932 
index: - 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1932 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1421 <|@
result v54|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1414 
=== Succesors ===
=== Usages ===
v1952 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1414  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1952 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3817 
value: a1421 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1424 
=== Usages ===
=== Predecessor ===
v1950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3817 value: a1421 stateAfter: - lastLocationAccess: - #next: a1424  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1424 <|@
result v52|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1418 
=== Succesors ===
next: v1425 
=== Usages ===
a792 
=== Predecessor ===
v1952 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1418 #next: v1425  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1425 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
a1424 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1425 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v51|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*]], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v43|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*] + 16], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v43|QWORD[.], v37|DWORD, v37|DWORD, v52|QWORD[.]] destination: B22 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1178 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1708 
=== Usages ===
=== Predecessor ===
v1179 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1708  <|@  <|@
f <@~|@floating>@ <|@
tid i1710 <|@
result int[-302177|0xfffffffffffb639f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -302177
stableDimension: 0
stamp: i32 [-302177] ⇊00000000fffb639f ⇈00000000fffb639f
stampKind: i32
value: int[-302177|0xfffffffffffb639f]
=== Inputs ===
=== Succesors ===
=== Usages ===
v1708 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?2 
actionAndReason: i1710 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1178 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?2 actionAndReason: i1710 speculation: a1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -302177 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B25" 
    xhandlers
    flags 
    probability 4586915843131299805
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v403 
=== Usages ===
=== Predecessor ===
v495 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid a812 <|@
result v55|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.Class.getName(Class.java:640) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 11]
op: Uncompress
stamp: a# Ljava/lang/String;
=== Inputs ===
value: a3652 
=== Succesors ===
=== Usages ===
a415 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3652  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v400 
=== Predecessor ===
v494 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v55|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i407 <|@
result v56|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v400 
values: i3654 i3656 
=== Succesors ===
=== Usages ===
i727 ?299 v1191 i671 i1233 j2087 v1280 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: i3654 i3656  <|@  <|@
f <@~|@floating>@ <|@
tid a415 <|@
result v57|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Ljava/lang/String;
valueDescription: a -
=== Inputs ===
merge: v400 
values: a57 a812 
=== Succesors ===
=== Usages ===
v3706 ?299 ?402 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v400 values: a57 a812  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v401 v403 
=== Succesors ===
next: j1954 
=== Usages ===
i407 a415 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v401 v403 #next: j1954  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1954 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j1978 
=== Usages ===
v3742 v3743 
=== Predecessor ===
v400 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j1978  <|@  <|@
f <@~|@floating>@ <|@
tid v3742 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j1954 
index: - 
=== Succesors ===
=== Usages ===
j1978 v1980 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1978 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
=== Succesors ===
next: j1979 
=== Usages ===
j2429 j1984 v3818 v3819 v3820 v3821 
=== Predecessor ===
j1954 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3742 #next: j1979  <|@  <|@
f <@~|@floating>@ <|@
tid v3743 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j1954 
index: - 
=== Succesors ===
=== Usages ===
j1979 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1954 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1979 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3743 
=== Succesors ===
next: v1962 
=== Usages ===
v1959 
=== Predecessor ===
j1978 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3743 #next: v1962  <|@  <|@
f <@~|@floating>@ <|@
tid j2428 <|@
result long[72|0x48] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 72
stableDimension: 0
stamp: i64 [72] ⇊0000000000000048 ⇈0000000000000048
stampKind: i64
value: long[72|0x48]
=== Inputs ===
=== Succesors ===
=== Usages ===
j2429 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2429 <|@
result v59|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1978 
y: j2428 
=== Succesors ===
=== Usages ===
v1959 v1980 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1978 y: j2428  <|@  <|@
f <@~|@floating>@ <|@
tid v1959 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1979 
y: j2429 
=== Succesors ===
=== Usages ===
v1962 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j1979 y: j2429  <|@  <|@
f <@*|@fixed>@ <|@
tid v1962 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1959 
=== Succesors ===
trueSuccessor: v1960 
falseSuccessor: v1961 
=== Usages ===
=== Predecessor ===
j1979 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1959 #trueSuccessor: v1960 #falseSuccessor: v1961  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4557307913614559813
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a1965 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a1965  <|@  <|@
tid ?402 <|@
d <@d|@=== Debug Properties ===
bci: 14
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: false
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 11]
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 2
=== Inputs ===
outerFrameState: - 
values: a1 a126 a415 
virtualObjectMappings: ?157 ?158 
=== Succesors ===
=== Usages ===
a1965 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a126 a415 virtualObjectMappings: ?157 ?158  <|@  <|@
f <@~|@floating>@ <|@
tid i2431 <|@
result int[14|0xe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 14
stableDimension: 0
stamp: i32 [14] ⇊000000000000000e ⇈000000000000000e
stampKind: i32
value: int[14|0xe]
=== Inputs ===
=== Succesors ===
=== Usages ===
a1965 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1965 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?402 
arguments: v1767 i2431 i71 
=== Succesors ===
next: j1966 
=== Usages ===
j1966 
=== Predecessor ===
v1960 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?402 arguments: v1767 i2431 i71 #next: j1966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1966 <|@
result v60|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1965 
=== Succesors ===
next: v1985 
=== Usages ===
j1984 
=== Predecessor ===
a1965 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1965 #next: v1985  <|@  <|@
f <@*|@fixed>@ <|@
tid v1985 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1982 
=== Predecessor ===
j1966 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[14|0xe] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 14]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} v57|QWORD[.] 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4586868295309743851
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v1980 
=== Usages ===
=== Predecessor ===
v1962 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1980 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3742 
value: j2429 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1968 
=== Usages ===
=== Predecessor ===
v1961 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3742 value: j2429 stateAfter: - lastLocationAccess: - #next: v1968  <|@  <|@
f <@~|@floating>@ <|@
tid v3818 <|@
result [v58|QWORD + 264] <|@
d <@d|@=== Debug Properties ===
displacement: 264
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1968 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3818 
=== Succesors ===
next: v1970 
=== Usages ===
=== Predecessor ===
v1980 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3818 #next: v1970  <|@  <|@
f <@~|@floating>@ <|@
tid v3819 <|@
result [v58|QWORD + 328] <|@
d <@d|@=== Debug Properties ===
displacement: 328
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1970 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1970 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3819 
=== Succesors ===
next: v1973 
=== Usages ===
=== Predecessor ===
v1968 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3819 #next: v1973  <|@  <|@
f <@~|@floating>@ <|@
tid v3820 <|@
result [v58|QWORD + 392] <|@
d <@d|@=== Debug Properties ===
displacement: 392
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1973 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3820 
=== Succesors ===
next: v1976 
=== Usages ===
=== Predecessor ===
v1970 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3820 #next: v1976  <|@  <|@
f <@~|@floating>@ <|@
tid v3821 <|@
result [v58|QWORD + 456] <|@
d <@d|@=== Debug Properties ===
displacement: 456
scale: Times1
stamp: void*
=== Inputs ===
base: j1978 
index: - 
=== Succesors ===
=== Usages ===
v1976 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1978 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1976 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3821 
=== Succesors ===
next: v1983 
=== Usages ===
=== Predecessor ===
v1973 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3821 #next: v1983  <|@  <|@
f <@*|@fixed>@ <|@
tid v1983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1982 
=== Predecessor ===
v1976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 264] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 328] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 392] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 456] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j1984 <|@
result v61|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v1982 
values: j1978 j1966 
=== Succesors ===
=== Usages ===
v3827 v3745 j1431 a1428 v3746 v3822 v3823 v3824 v3825 v3826 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1982 values: j1978 j1966  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1982 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1983 v1985 
=== Succesors ===
next: a1428 
=== Usages ===
j1984 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1983 v1985 #next: a1428  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1428 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1984 
=== Succesors ===
next: a1432 
=== Usages ===
a1441 
=== Predecessor ===
v1982 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1984 #next: a1432  <|@  <|@
f <@~|@floating>@ <|@
tid j1431 <|@
result v63|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j1984 
y: j1430 
=== Succesors ===
=== Usages ===
a1432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j1984 y: j1430  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1432 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j1431 
=== Succesors ===
next: j1994 
=== Usages ===
a1442 a1435 
=== Predecessor ===
a1428 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j1431 #next: j1994  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1994 <|@
result v65|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3744 
=== Succesors ===
next: v1995 
=== Usages ===
v1995 
=== Predecessor ===
a1432 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3744 #next: v1995  <|@  <|@
f <@~|@floating>@ <|@
tid v3745 <|@
result [v61|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v1995 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1995 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3745 
value: j1994 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1998 
=== Usages ===
=== Predecessor ===
j1994 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3745 value: j1994 stateAfter: - lastLocationAccess: - #next: v1998  <|@  <|@
f <@~|@floating>@ <|@
tid v3746 <|@
result [v61|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v1998 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1998 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3746 
value: v2418 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2002 
=== Usages ===
=== Predecessor ===
v1995 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3746 value: v2418 stateAfter: - lastLocationAccess: - #next: v2002  <|@  <|@
f <@~|@floating>@ <|@
tid v3822 <|@
result [v61|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2002 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2002 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3822 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2004 
=== Usages ===
=== Predecessor ===
v1998 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3822 value: i82 stateAfter: - lastLocationAccess: - #next: v2004  <|@  <|@
f <@~|@floating>@ <|@
tid v3823 <|@
result [v61|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1435 <|@
result v66|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n -
=== Inputs ===
value: a1432 
=== Succesors ===
=== Usages ===
v2004 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2004 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3823 
value: a1435 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2008 
=== Usages ===
=== Predecessor ===
v2002 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3823 value: a1435 stateAfter: - lastLocationAccess: - #next: v2008  <|@  <|@
f <@~|@floating>@ <|@
tid v3824 <|@
result [v61|QWORD[*] + 36] <|@
d <@d|@=== Debug Properties ===
displacement: 36
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2008 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2008 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3824 
value: i396 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2009 
=== Usages ===
=== Predecessor ===
v2004 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3824 value: i396 stateAfter: - lastLocationAccess: - #next: v2009  <|@  <|@
f <@~|@floating>@ <|@
tid v3825 <|@
result [v61|QWORD[*] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2009 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2009 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3825 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2012 
=== Usages ===
=== Predecessor ===
v2008 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3825 value: j981 stateAfter: - lastLocationAccess: - #next: v2012  <|@  <|@
f <@~|@floating>@ <|@
tid v3826 <|@
result [v61|QWORD[*] + 32] <|@
d <@d|@=== Debug Properties ===
displacement: 32
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2012 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2012 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3826 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2016 
=== Usages ===
=== Predecessor ===
v2009 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3826 value: v2413 stateAfter: - lastLocationAccess: - #next: v2016  <|@  <|@
f <@~|@floating>@ <|@
tid v3827 <|@
result [v61|QWORD[*] + 40] <|@
d <@d|@=== Debug Properties ===
displacement: 40
scale: Times1
stamp: void*
=== Inputs ===
base: j1984 
index: - 
=== Succesors ===
=== Usages ===
v2016 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j1984 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2016 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3827 
value: v1810 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1441 
=== Usages ===
=== Predecessor ===
v2012 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3827 value: v1810 stateAfter: - lastLocationAccess: - #next: a1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1441 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1428 
=== Succesors ===
next: a1442 
=== Usages ===
v1191 ?790 v3704 v3705 a792 j2073 
=== Predecessor ===
v2016 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1428 #next: a1442  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1442 <|@
result v64|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1432 
=== Succesors ===
next: v1443 
=== Usages ===
?791 v3710 
=== Predecessor ===
a1441 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1432 #next: v1443  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1443 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: i291 
=== Usages ===
=== Predecessor ===
a1442 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: i291  <|@  <|@
tid v1191 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@6de977a2
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a1441 i407 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1441 i407  <|@  <|@
tid ?299 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 a415 i407 
=== Succesors ===
=== Usages ===
?292 ?296 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 a415 i407  <|@  <|@
tid ?790 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
materializedValue: a1441 
=== Succesors ===
=== Usages ===
?292 ?296 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a126 materializedValue: a1441  <|@  <|@
tid ?791 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a156 
materializedValue: a1442 
=== Succesors ===
=== Usages ===
?292 ?1468 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a156 materializedValue: a1442  <|@  <|@
tid ?1468 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?299 
values: - - a126 a156 
virtualObjectMappings: ?790 ?791 
=== Succesors ===
=== Usages ===
i291 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - a126 a156 virtualObjectMappings: ?790 ?791  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i291 <|@
result v67|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1191 
stateDuring: ?1468 
=== Succesors ===
next: a3657 
=== Usages ===
?292 v2061 i724 i1233 j2476 a2041 i1639 i2017 v2026 v1637 v1516 
=== Predecessor ===
v1443 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1191 stateDuring: ?1468 #next: a3657  <|@  <|@
f <@~|@floating>@ <|@
tid v3706 <|@
result [v57|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a415 
index: - 
=== Succesors ===
=== Usages ===
a3657 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a415 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3657 <|@
result v68|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: String.value
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3706 
=== Succesors ===
next: i3658 
=== Usages ===
a1200 v3707 
=== Predecessor ===
i291 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3706 #next: i3658  <|@  <|@
tid ?292 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?299 
values: - - a126 a156 i291 
virtualObjectMappings: ?790 ?791 
=== Succesors ===
=== Usages ===
v1742 a2041 i3658 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - a126 a156 i291 virtualObjectMappings: ?790 ?791  <|@  <|@
f <@~|@floating>@ <|@
tid v3707 <|@
result [v68|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3657 
=== Succesors ===
=== Usages ===
i3658 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3658 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: true
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: ?292 
guard: - 
address: v3707 
=== Succesors ===
next: v1357 
=== Usages ===
v1280 
=== Predecessor ===
a3657 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?292 guard: - address: v3707 #next: v1357  <|@  <|@
f <@~|@floating>@ <|@
tid v1280 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3658 
y: i407 
=== Succesors ===
=== Usages ===
v1357 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i3658 y: i407  <|@  <|@
f <@*|@fixed>@ <|@
tid v1357 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1280 
=== Succesors ===
trueSuccessor: v1356 
falseSuccessor: v1354 
=== Usages ===
=== Predecessor ===
i3658 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1280 #trueSuccessor: v1356 #falseSuccessor: v1354  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = LEA [v61|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE v63|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*]], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*] + 16], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 36] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 24] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[*] + 40], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v62|QWORD[.] v64|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v57|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v56|DWORD, y: [v68|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1356 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1743 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1743  <|@  <|@
f <@~|@floating>@ <|@
tid i1744 <|@
result int[-308755|0xfffffffffffb49ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -308755
stableDimension: 0
stamp: i32 [-308755] ⇊00000000fffb49ed ⇈00000000fffb49ed
stampKind: i32
value: int[-308755|0xfffffffffffb49ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
v1356 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308755|0xfffffffffffb49ed]] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B33" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1354 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 19]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1522 
=== Usages ===
=== Predecessor ===
v1357 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1522  <|@  <|@
f <@~|@floating>@ <|@
tid v1516 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i82 
=== Succesors ===
=== Usages ===
v1522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1516 
=== Succesors ===
trueSuccessor: v1521 
falseSuccessor: v1517 
=== Usages ===
=== Predecessor ===
v1354 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1516 #trueSuccessor: v1521 #falseSuccessor: v1517  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1745 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1745  <|@  <|@
f <@~|@floating>@ <|@
tid i1746 <|@
result int[-391265|0xfffffffffffa079f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -391265
stableDimension: 0
stamp: i32 [-391265] ⇊00000000fffa079f ⇈00000000fffa079f
stampKind: i32
value: int[-391265|0xfffffffffffa079f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1737 
=== Predecessor ===
v1521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391265|0xfffffffffffa079f]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1740 <|@
result v69|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-391265 - -307723] ⇊00000000fffa0185 ⇈00000000fffb4fff
valueDescription: i32
=== Inputs ===
merge: v1737 
values: i1744 i1746 
=== Succesors ===
=== Usages ===
v1742 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1737 values: i1744 i1746  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1743 v1745 
=== Succesors ===
next: v1742 
=== Usages ===
i1740 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1743 v1745 #next: v1742  <|@  <|@
f <@*|@fixed>@ <|@
tid v1742 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?292 
actionAndReason: i1740 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1737 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?292 actionAndReason: i1740 speculation: a1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2020 
=== Usages ===
=== Predecessor ===
v1522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2020  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2020 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2058 
=== Usages ===
v3747 v3748 
=== Predecessor ===
v1517 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v3747 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2020 
index: - 
=== Succesors ===
=== Usages ===
j2058 v2060 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2020 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2058 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
=== Succesors ===
next: j2059 
=== Usages ===
j2024 v3749 v3750 a2040 v3755 v3751 v3752 v3753 v3754 
=== Predecessor ===
j2020 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3747 #next: j2059  <|@  <|@
f <@~|@floating>@ <|@
tid v3748 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2020 
index: - 
=== Succesors ===
=== Usages ===
j2059 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2020 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2059 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3748 
=== Succesors ===
next: v2029 
=== Usages ===
v2030 
=== Predecessor ===
j2058 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3748 #next: v2029  <|@  <|@
f <@~|@floating>@ <|@
tid v2026 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i2025 
=== Succesors ===
=== Usages ===
v2029 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i291 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2026 
=== Succesors ===
trueSuccessor: v2028 
falseSuccessor: v2027 
=== Usages ===
=== Predecessor ===
j2059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2026 #trueSuccessor: v2028 #falseSuccessor: v2027  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4586258524921202995
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2036 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2036  <|@  <|@
f <@~|@floating>@ <|@
tid i2017 <|@
result v72|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i291 
y: i71 
=== Succesors ===
=== Usages ===
i2049 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i291 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2049 <|@
result v73|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2017 
y: i2048 
=== Succesors ===
=== Usages ===
i2019 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2017 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2019 <|@
result v74|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2049 
y: i2018 
=== Succesors ===
=== Usages ===
j2023 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2049 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2023 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2019 
=== Succesors ===
=== Usages ===
j2024 v3751 v3752 v3753 v3754 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2019  <|@  <|@
f <@~|@floating>@ <|@
tid j2024 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
x: j2023 
y: j2058 
=== Succesors ===
=== Usages ===
v2030 v2060 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2023 y: j2058  <|@  <|@
f <@~|@floating>@ <|@
tid v2030 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2059 
y: j2024 
=== Succesors ===
=== Usages ===
v2036 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2059 y: j2024  <|@  <|@
f <@*|@fixed>@ <|@
tid v2036 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2030 
=== Succesors ===
trueSuccessor: v2035 
falseSuccessor: v2034 
=== Usages ===
=== Predecessor ===
v2028 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2030 #trueSuccessor: v2035 #falseSuccessor: v2034  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA [v72|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = AND v73|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = ADD (x: v75|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4556440684617523928
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2035 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2033 
=== Usages ===
=== Predecessor ===
v2036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2033  <|@  <|@
f <@*|@fixed>@ <|@
tid v2033 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v2035 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586197547882348909
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2034 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2060 
=== Usages ===
=== Predecessor ===
v2036 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2060  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2060 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3747 
value: j2024 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2051 
=== Usages ===
=== Predecessor ===
v2034 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3747 value: j2024 stateAfter: - lastLocationAccess: - #next: v2051  <|@  <|@
f <@~|@floating>@ <|@
tid v3751 <|@
result [v75|QWORD + v70|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2051 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3751 
=== Succesors ===
next: v2053 
=== Usages ===
=== Predecessor ===
v2060 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3751 #next: v2053  <|@  <|@
f <@~|@floating>@ <|@
tid v3752 <|@
result [v75|QWORD + v70|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2053 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2053 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3752 
=== Succesors ===
next: v2055 
=== Usages ===
=== Predecessor ===
v2051 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3752 #next: v2055  <|@  <|@
f <@~|@floating>@ <|@
tid v3753 <|@
result [v75|QWORD + v70|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2055 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2055 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3753 
=== Succesors ===
next: v2057 
=== Usages ===
=== Predecessor ===
v2053 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3753 #next: v2057  <|@  <|@
f <@~|@floating>@ <|@
tid v3754 <|@
result [v75|QWORD + v70|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2023 
index: j2058 
=== Succesors ===
=== Usages ===
v2057 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2023 index: j2058  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2057 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
address: v3754 
=== Succesors ===
next: v2061 
=== Usages ===
=== Predecessor ===
v2055 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3754 #next: v2061  <|@  <|@
f <@~|@floating>@ <|@
tid v3749 <|@
result [v70|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2061 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3749 
value: i291 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2062 
=== Usages ===
=== Predecessor ===
v2057 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3749 value: i291 stateAfter: - lastLocationAccess: - #next: v2062  <|@  <|@
f <@~|@floating>@ <|@
tid v3750 <|@
result [v70|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2062 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2062 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3750 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2065 
=== Usages ===
=== Predecessor ===
v2061 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3750 value: j981 stateAfter: - lastLocationAccess: - #next: v2065  <|@  <|@
f <@~|@floating>@ <|@
tid v3755 <|@
result [v70|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2058 
index: - 
=== Succesors ===
=== Usages ===
v2065 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2058 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2065 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3755 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2039 
=== Usages ===
=== Predecessor ===
v2062 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3755 value: v2413 stateAfter: - lastLocationAccess: - #next: v2039  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2039 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2040 
=== Usages ===
=== Predecessor ===
v2065 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2040  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2040 <|@
result v77|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2058 
=== Succesors ===
next: v2042 
=== Usages ===
a2045 
=== Predecessor ===
v2039 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2058 #next: v2042  <|@  <|@
f <@*|@fixed>@ <|@
tid v2042 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2043 
=== Predecessor ===
a2040 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v70|QWORD + 12], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572070203385157221
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2031 
=== Usages ===
=== Predecessor ===
v2029 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2031  <|@  <|@
f <@*|@fixed>@ <|@
tid v2031 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2032 
=== Predecessor ===
v2027 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572558019695989906
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2032 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2031 v2033 
=== Succesors ===
next: a2041 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2031 v2033 #next: a2041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2041 <|@
result v78|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?292 
arguments: v1799 i291 i82 
=== Succesors ===
next: v2044 
=== Usages ===
a2045 
=== Predecessor ===
v2032 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?292 arguments: v1799 i291 i82 #next: v2044  <|@  <|@
f <@*|@fixed>@ <|@
tid v2044 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2043 
=== Predecessor ===
a2041 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2045 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2043 
values: a2040 a2041 
=== Succesors ===
=== Usages ===
v3835 a1647 v3714 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2043 values: a2040 a2041  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2043 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2042 v2044 
=== Succesors ===
next: v3215 
=== Usages ===
a2045 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2042 v2044 #next: v3215  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3215 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2670 
=== Usages ===
j3216 j3218 
=== Predecessor ===
v2043 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2670  <|@  <|@
f <@~|@floating>@ <|@
tid v1637 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i291 
y: i1274 
=== Succesors ===
=== Usages ===
i1639 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i291 y: i1274  <|@  <|@
f <@~|@floating>@ <|@
tid i1639 <|@
result v80|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1637 
trueValue: i291 
falseValue: i396 
=== Succesors ===
=== Usages ===
j2477 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1637 trueValue: i291 falseValue: i396  <|@  <|@
f <@~|@floating>@ <|@
tid j2477 <|@
result v81|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1639 
=== Succesors ===
=== Usages ===
j3273 v3835 j2481 v2667 v3052 j3259 j3264 j3267 j3270 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1639  <|@  <|@
f <@~|@floating>@ <|@
tid v2667 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2477 
y: j981 
=== Succesors ===
=== Usages ===
v2670 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2477 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2670 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2667 
=== Succesors ===
trueSuccessor: v2668 
falseSuccessor: v2669 
=== Usages ===
=== Predecessor ===
v3215 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2667 #trueSuccessor: v2668 #falseSuccessor: v2669  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: v67|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v81|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2668 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2686 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2686  <|@  <|@
f <@*|@fixed>@ <|@
tid v2686 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v2668 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2669 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2673 
=== Usages ===
=== Predecessor ===
v2670 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2673  <|@  <|@
f <@~|@floating>@ <|@
tid v3714 <|@
result [v79|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2045 
index: - 
=== Succesors ===
=== Usages ===
j3218 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2045 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3218 <|@
result v82|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3215 
address: v3714 
=== Succesors ===
=== Usages ===
v3856 v3858 v3860 v3862 v3864 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3215 address: v3714  <|@  <|@
f <@~|@floating>@ <|@
tid v3710 <|@
result [v64|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1442 
index: - 
=== Succesors ===
=== Usages ===
j3216 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1442 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3216 <|@
result v83|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3215 
address: v3710 
=== Succesors ===
=== Usages ===
v3857 v3859 v3861 v3863 v3865 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3215 address: v3710  <|@  <|@
f <@~|@floating>@ <|@
tid j3259 <|@
result v84|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2477 
y: j3145 
=== Succesors ===
=== Usages ===
v3260 v3262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3260 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3259 
y: j964 
=== Succesors ===
=== Usages ===
v2673 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3259 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2673 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3260 
=== Succesors ===
trueSuccessor: v2671 
falseSuccessor: v2672 
=== Usages ===
=== Predecessor ===
v2669 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3260 #trueSuccessor: v2671 #falseSuccessor: v2672  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LEA [v79|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v64|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v84|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2671 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2682 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2682  <|@  <|@
f <@*|@fixed>@ <|@
tid v2682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
v2671 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2672 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2674 
=== Usages ===
=== Predecessor ===
v2673 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2674  <|@  <|@
f <@*|@fixed>@ <|@
tid v2674 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2675 
=== Predecessor ===
v2672 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B309" 
    successors "B45" "B309" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3251 <|@
result v85|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2675 
values: j964 j3258 
=== Succesors ===
=== Usages ===
v3865 j3258 v3864 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2675 values: j964 j3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2675 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2674 
=== Succesors ===
next: v3659 
=== Usages ===
v3659 v2678 v2679 j3251 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2674 #next: v3659  <|@  <|@
f <@~|@floating>@ <|@
tid v3865 <|@
result [v83|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3251 
=== Succesors ===
=== Usages ===
v3659 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3659 <|@
result v86|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2675 
address: v3865 
=== Succesors ===
next: v3607 
=== Usages ===
v3607 
=== Predecessor ===
v2675 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2675 address: v3865 #next: v3607  <|@  <|@
f <@~|@floating>@ <|@
tid v3864 <|@
result [v82|QWORD[.] + v85|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3251 
=== Succesors ===
=== Usages ===
v3607 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3251  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3607 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3864 
value: v3659 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2681 
=== Usages ===
=== Predecessor ===
v3659 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3864 value: v3659 stateAfter: - lastLocationAccess: - #next: v2681  <|@  <|@
f <@~|@floating>@ <|@
tid j3258 <|@
result v87|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3251 
y: j818 
=== Succesors ===
=== Usages ===
j3243 j3251 v3262 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3251 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3262 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3259 
y: j3258 
=== Succesors ===
=== Usages ===
v2681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3259 y: j3258  <|@  <|@
f <@*|@fixed>@ <|@
tid v2681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3262 
=== Succesors ===
trueSuccessor: v2678 
falseSuccessor: v2680 
=== Usages ===
=== Predecessor ===
v3607 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3262 #trueSuccessor: v2678 #falseSuccessor: v2680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V256_WORD = H [v83|QWORD[.] + v85|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v85|QWORD * 2], input: v86|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2678 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2675 
=== Succesors ===
next: v2684 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2675 #next: v2684  <|@  <|@
f <@*|@fixed>@ <|@
tid v2684 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2683 
=== Predecessor ===
v2678 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3243 <|@
result v88|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2683 
values: j964 j3258 
=== Succesors ===
=== Usages ===
v3863 j3250 j3235 v3265 v3862 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2683 values: j964 j3258  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2682 v2684 
=== Succesors ===
next: v2705 
=== Usages ===
j3243 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2682 v2684 #next: v2705  <|@  <|@
f <@~|@floating>@ <|@
tid j3264 <|@
result v89|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2477 
y: j3084 
=== Succesors ===
=== Usages ===
v3265 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3265 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3264 
y: j3243 
=== Succesors ===
=== Usages ===
v2705 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3264 y: j3243  <|@  <|@
f <@*|@fixed>@ <|@
tid v2705 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3265 
=== Succesors ===
trueSuccessor: v2704 
falseSuccessor: v2703 
=== Usages ===
=== Predecessor ===
v2683 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3265 #trueSuccessor: v2704 #falseSuccessor: v2703  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2704 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2708 
=== Usages ===
=== Predecessor ===
v2705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2708  <|@  <|@
f <@*|@fixed>@ <|@
tid v2708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2694 
=== Predecessor ===
v2704 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2703 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3660 
=== Usages ===
v3660 
=== Predecessor ===
v2705 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3660  <|@  <|@
f <@~|@floating>@ <|@
tid v3863 <|@
result [v83|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3243 
=== Succesors ===
=== Usages ===
v3660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3660 <|@
result v90|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2703 
address: v3863 
=== Succesors ===
next: v3605 
=== Usages ===
v3605 
=== Predecessor ===
v2703 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2703 address: v3863 #next: v3605  <|@  <|@
f <@~|@floating>@ <|@
tid v3862 <|@
result [v82|QWORD[.] + v88|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3243 
=== Succesors ===
=== Usages ===
v3605 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3605 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3862 
value: v3660 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2693 
=== Usages ===
=== Predecessor ===
v3660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3862 value: v3660 stateAfter: - lastLocationAccess: - #next: v2693  <|@  <|@
f <@~|@floating>@ <|@
tid j3250 <|@
result v91|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3243 
y: j1752 
=== Succesors ===
=== Usages ===
j3235 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3243 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2693 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2694 
=== Predecessor ===
v3605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V128_WORD = H [v83|QWORD[.] + v88|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v88|QWORD * 2], input: v90|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3235 <|@
result v92|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2694 
values: j3250 j3243 
=== Succesors ===
=== Usages ===
v3861 j3242 j3227 v3268 v3860 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2694 values: j3250 j3243  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2693 v2708 
=== Succesors ===
next: v2711 
=== Usages ===
j3235 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2693 v2708 #next: v2711  <|@  <|@
f <@~|@floating>@ <|@
tid j3267 <|@
result v93|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2477 
y: j3088 
=== Succesors ===
=== Usages ===
v3268 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3268 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3267 
y: j3235 
=== Succesors ===
=== Usages ===
v2711 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3267 y: j3235  <|@  <|@
f <@*|@fixed>@ <|@
tid v2711 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3268 
=== Succesors ===
trueSuccessor: v2710 
falseSuccessor: v2709 
=== Usages ===
=== Predecessor ===
v2694 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3268 #trueSuccessor: v2710 #falseSuccessor: v2709  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v81|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2710 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2714 
=== Usages ===
=== Predecessor ===
v2711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2714  <|@  <|@
f <@*|@fixed>@ <|@
tid v2714 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2697 
=== Predecessor ===
v2710 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3661 
=== Usages ===
v3661 
=== Predecessor ===
v2711 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3661  <|@  <|@
f <@~|@floating>@ <|@
tid v3861 <|@
result [v83|QWORD[.] + v92|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3235 
=== Succesors ===
=== Usages ===
v3661 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3661 <|@
result v94|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2709 
address: v3861 
=== Succesors ===
next: v3603 
=== Usages ===
v3603 
=== Predecessor ===
v2709 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2709 address: v3861 #next: v3603  <|@  <|@
f <@~|@floating>@ <|@
tid v3860 <|@
result [v82|QWORD[.] + v92|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3235 
=== Succesors ===
=== Usages ===
v3603 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3603 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3860 
value: v3661 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2696 
=== Usages ===
=== Predecessor ===
v3661 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3860 value: v3661 stateAfter: - lastLocationAccess: - #next: v2696  <|@  <|@
f <@~|@floating>@ <|@
tid j3242 <|@
result v95|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3235 
y: j3080 
=== Succesors ===
=== Usages ===
j3227 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3235 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2697 
=== Predecessor ===
v3603 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V64_WORD = H [v83|QWORD[.] + v92|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v92|QWORD * 2], input: v94|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v92|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3227 <|@
result v96|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2697 
values: j3242 j3235 
=== Succesors ===
=== Usages ===
v3859 j3234 j3219 v3271 v3858 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2697 values: j3242 j3235  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2697 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2696 v2714 
=== Succesors ===
next: v2717 
=== Usages ===
j3227 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2696 v2714 #next: v2717  <|@  <|@
f <@~|@floating>@ <|@
tid j3270 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2477 
y: j3092 
=== Succesors ===
=== Usages ===
v3271 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3271 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3270 
y: j3227 
=== Succesors ===
=== Usages ===
v2717 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3270 y: j3227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2717 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3271 
=== Succesors ===
trueSuccessor: v2716 
falseSuccessor: v2715 
=== Usages ===
=== Predecessor ===
v2697 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3271 #trueSuccessor: v2716 #falseSuccessor: v2715  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v81|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2716 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2720 
=== Usages ===
=== Predecessor ===
v2717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2720  <|@  <|@
f <@*|@fixed>@ <|@
tid v2720 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
v2716 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2715 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3662 
=== Usages ===
v3662 
=== Predecessor ===
v2717 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3662  <|@  <|@
f <@~|@floating>@ <|@
tid v3859 <|@
result [v83|QWORD[.] + v96|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3227 
=== Succesors ===
=== Usages ===
v3662 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3662 <|@
result v98|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2715 
address: v3859 
=== Succesors ===
next: v3601 
=== Usages ===
v3601 
=== Predecessor ===
v2715 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2715 address: v3859 #next: v3601  <|@  <|@
f <@~|@floating>@ <|@
tid v3858 <|@
result [v82|QWORD[.] + v96|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3227 
=== Succesors ===
=== Usages ===
v3601 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3601 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3858 
value: v3662 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2699 
=== Usages ===
=== Predecessor ===
v3662 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3858 value: v3662 stateAfter: - lastLocationAccess: - #next: v2699  <|@  <|@
f <@~|@floating>@ <|@
tid j3234 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3227 
y: j3064 
=== Succesors ===
=== Usages ===
j3219 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3227 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2700 
=== Predecessor ===
v3601 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|V32_WORD = H [v83|QWORD[.] + v96|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v96|QWORD * 2], input: v98|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA [v96|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3219 <|@
result v100|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2700 
values: j3234 j3227 
=== Succesors ===
=== Usages ===
v3857 v3274 v3856 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2700 values: j3234 j3227  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2700 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2699 v2720 
=== Succesors ===
next: v2723 
=== Usages ===
j3219 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2699 v2720 #next: v2723  <|@  <|@
f <@~|@floating>@ <|@
tid j3273 <|@
result v101|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2477 
y: j3096 
=== Succesors ===
=== Usages ===
v3274 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2477 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3274 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3273 
y: j3219 
=== Succesors ===
=== Usages ===
v2723 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3273 y: j3219  <|@  <|@
f <@*|@fixed>@ <|@
tid v2723 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3274 
=== Succesors ===
trueSuccessor: v2722 
falseSuccessor: v2721 
=== Usages ===
=== Predecessor ===
v2700 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3274 #trueSuccessor: v2722 #falseSuccessor: v2721  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = DEC v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2722 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2726 
=== Usages ===
=== Predecessor ===
v2723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2726  <|@  <|@
f <@*|@fixed>@ <|@
tid v2726 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v2722 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3663 
=== Usages ===
i3663 
=== Predecessor ===
v2723 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3663  <|@  <|@
f <@~|@floating>@ <|@
tid v3857 <|@
result [v83|QWORD[.] + v100|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3216 
index: j3219 
=== Succesors ===
=== Usages ===
i3663 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3216 index: j3219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3663 <|@
result v102|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2721 
address: v3857 
=== Succesors ===
next: v3599 
=== Usages ===
v3599 
=== Predecessor ===
v2721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2721 address: v3857 #next: v3599  <|@  <|@
f <@~|@floating>@ <|@
tid v3856 <|@
result [v82|QWORD[.] + v100|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3218 
index: j3219 
=== Succesors ===
=== Usages ===
v3599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3218 index: j3219  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3856 
value: i3663 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2702 
=== Usages ===
=== Predecessor ===
i3663 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3856 value: i3663 stateAfter: - lastLocationAccess: - #next: v2702  <|@  <|@
f <@*|@fixed>@ <|@
tid v2702 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2687 
=== Predecessor ===
v3599 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSX [v83|QWORD[.] + v100|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v100|QWORD * 2], y: v102|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" "B56" 
    successors "B59" "B77" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2687 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2686 v2702 v2726 
=== Succesors ===
next: v3277 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2686 v2702 v2726 #next: v3277  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2733 
=== Usages ===
j3279 
=== Predecessor ===
v2687 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2733  <|@  <|@
f <@~|@floating>@ <|@
tid j2476 <|@
result v103|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i291 
=== Succesors ===
=== Usages ===
j2481 v3052 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i291  <|@  <|@
f <@~|@floating>@ <|@
tid v3052 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2477 
y: j2476 
=== Succesors ===
=== Usages ===
v2733 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2477 y: j2476  <|@  <|@
f <@*|@fixed>@ <|@
tid v2733 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3052 
=== Succesors ===
trueSuccessor: v2732 
falseSuccessor: v2731 
=== Usages ===
=== Predecessor ===
v3277 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3052 #trueSuccessor: v2732 #falseSuccessor: v2731  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2736 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2736  <|@  <|@
f <@~|@floating>@ <|@
tid v3835 <|@
result [v79|QWORD[.] + v81|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2045 
index: j2477 
=== Succesors ===
=== Usages ===
j3279 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2045 index: j2477  <|@  <|@
f <@~|@floating>@ <|@
tid j3279 <|@
result v104|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3277 
address: v3835 
=== Succesors ===
=== Usages ===
v3866 v3867 v3868 v3869 v3870 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3277 address: v3835  <|@  <|@
f <@~|@floating>@ <|@
tid j2481 <|@
result v105|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2476 
y: j2477 
=== Succesors ===
=== Usages ===
j3324 j3310 j3315 j3318 j3321 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2476 y: j2477  <|@  <|@
f <@~|@floating>@ <|@
tid j3310 <|@
result v106|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2481 
y: j3145 
=== Succesors ===
=== Usages ===
v3311 v3313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3311 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3310 
y: j964 
=== Succesors ===
=== Usages ===
v2736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3310 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3311 
=== Succesors ===
trueSuccessor: v2734 
falseSuccessor: v2735 
=== Usages ===
=== Predecessor ===
v2732 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3311 #trueSuccessor: v2734 #falseSuccessor: v2735  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = LEA [v79|QWORD[.] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = SUB (x: v103|QWORD, ~y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = LEA [v105|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2745 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2745  <|@  <|@
f <@*|@fixed>@ <|@
tid v2745 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
v2734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2737 
=== Usages ===
=== Predecessor ===
v2736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2737  <|@  <|@
f <@*|@fixed>@ <|@
tid v2737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2738 
=== Predecessor ===
v2735 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B76" 
    successors "B63" "B76" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3304 <|@
result v107|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2738 
values: j964 j3309 
=== Succesors ===
=== Usages ===
v3870 j3309 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2738 values: j964 j3309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2738 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2737 
=== Succesors ===
next: v3612 
=== Usages ===
j3304 v2741 v2742 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2737 #next: v3612  <|@  <|@
f <@~|@floating>@ <|@
tid v3870 <|@
result [v104|QWORD[.] + v107|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3304 
=== Succesors ===
=== Usages ===
v3612 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3304  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3612 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3870 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2744 
=== Usages ===
=== Predecessor ===
v2738 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3870 value: v3643 stateAfter: - lastLocationAccess: - #next: v2744  <|@  <|@
f <@~|@floating>@ <|@
tid j3309 <|@
result v108|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3304 
y: j818 
=== Succesors ===
=== Usages ===
j3298 j3304 v3313 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3304 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3313 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3310 
y: j3309 
=== Succesors ===
=== Usages ===
v2744 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3310 y: j3309  <|@  <|@
f <@*|@fixed>@ <|@
tid v2744 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3313 
=== Succesors ===
trueSuccessor: v2741 
falseSuccessor: v2743 
=== Usages ===
=== Predecessor ===
v3612 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3313 #trueSuccessor: v2741 #falseSuccessor: v2743  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v107|QWORD * 2], input: v7|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v107|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2741 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2738 
=== Succesors ===
next: v2747 
=== Usages ===
=== Predecessor ===
v2744 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2738 #next: v2747  <|@  <|@
f <@*|@fixed>@ <|@
tid v2747 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2746 
=== Predecessor ===
v2741 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3298 <|@
result v109|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2746 
values: j964 j3309 
=== Succesors ===
=== Usages ===
v3869 j3303 j3292 v3316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2746 values: j964 j3309  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2745 v2747 
=== Succesors ===
next: v2768 
=== Usages ===
j3298 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2745 v2747 #next: v2768  <|@  <|@
f <@~|@floating>@ <|@
tid j3315 <|@
result v110|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2481 
y: j3084 
=== Succesors ===
=== Usages ===
v3316 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3316 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3315 
y: j3298 
=== Succesors ===
=== Usages ===
v2768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3315 y: j3298  <|@  <|@
f <@*|@fixed>@ <|@
tid v2768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3316 
=== Succesors ===
trueSuccessor: v2767 
falseSuccessor: v2766 
=== Usages ===
=== Predecessor ===
v2746 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3316 #trueSuccessor: v2767 #falseSuccessor: v2766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2771 
=== Usages ===
=== Predecessor ===
v2768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2771  <|@  <|@
f <@*|@fixed>@ <|@
tid v2771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2757 
=== Predecessor ===
v2767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3611 
=== Usages ===
=== Predecessor ===
v2768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3611  <|@  <|@
f <@~|@floating>@ <|@
tid v3869 <|@
result [v104|QWORD[.] + v109|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3298 
=== Succesors ===
=== Usages ===
v3611 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3611 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3869 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2756 
=== Usages ===
=== Predecessor ===
v2766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3869 value: v3647 stateAfter: - lastLocationAccess: - #next: v2756  <|@  <|@
f <@~|@floating>@ <|@
tid j3303 <|@
result v111|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3298 
y: j1752 
=== Succesors ===
=== Usages ===
j3292 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3298 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2756 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2757 
=== Predecessor ===
v3611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v109|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v109|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3292 <|@
result v112|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2757 
values: j3303 j3298 
=== Succesors ===
=== Usages ===
v3868 j3297 j3286 v3319 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2757 values: j3303 j3298  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2757 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2756 v2771 
=== Succesors ===
next: v2774 
=== Usages ===
j3292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2756 v2771 #next: v2774  <|@  <|@
f <@~|@floating>@ <|@
tid j3318 <|@
result v113|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2481 
y: j3088 
=== Succesors ===
=== Usages ===
v3319 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3319 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3318 
y: j3292 
=== Succesors ===
=== Usages ===
v2774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3318 y: j3292  <|@  <|@
f <@*|@fixed>@ <|@
tid v2774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3319 
=== Succesors ===
trueSuccessor: v2773 
falseSuccessor: v2772 
=== Usages ===
=== Predecessor ===
v2757 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3319 #trueSuccessor: v2773 #falseSuccessor: v2772  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v105|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2777 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2777  <|@  <|@
f <@*|@fixed>@ <|@
tid v2777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2760 
=== Predecessor ===
v2773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3610 
=== Usages ===
=== Predecessor ===
v2774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3610  <|@  <|@
f <@~|@floating>@ <|@
tid v3868 <|@
result [v104|QWORD[.] + v112|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3292 
=== Succesors ===
=== Usages ===
v3610 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3610 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3868 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2759 
=== Usages ===
=== Predecessor ===
v2772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3868 value: v3646 stateAfter: - lastLocationAccess: - #next: v2759  <|@  <|@
f <@~|@floating>@ <|@
tid j3297 <|@
result v114|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3292 
y: j3080 
=== Succesors ===
=== Usages ===
j3286 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3292 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2760 
=== Predecessor ===
v3610 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v112|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v112|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3286 <|@
result v115|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2760 
values: j3297 j3292 
=== Succesors ===
=== Usages ===
v3867 j3291 j3280 v3322 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2760 values: j3297 j3292  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2759 v2777 
=== Succesors ===
next: v2780 
=== Usages ===
j3286 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2759 v2777 #next: v2780  <|@  <|@
f <@~|@floating>@ <|@
tid j3321 <|@
result v116|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2481 
y: j3092 
=== Succesors ===
=== Usages ===
v3322 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3322 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3321 
y: j3286 
=== Succesors ===
=== Usages ===
v2780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3321 y: j3286  <|@  <|@
f <@*|@fixed>@ <|@
tid v2780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3322 
=== Succesors ===
trueSuccessor: v2779 
falseSuccessor: v2778 
=== Usages ===
=== Predecessor ===
v2760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3322 #trueSuccessor: v2779 #falseSuccessor: v2778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v105|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2783 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2783  <|@  <|@
f <@*|@fixed>@ <|@
tid v2783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v2779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3609 
=== Usages ===
=== Predecessor ===
v2780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3609  <|@  <|@
f <@~|@floating>@ <|@
tid v3867 <|@
result [v104|QWORD[.] + v115|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3286 
=== Succesors ===
=== Usages ===
v3609 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3609 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3867 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2762 
=== Usages ===
=== Predecessor ===
v2778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3867 value: v3645 stateAfter: - lastLocationAccess: - #next: v2762  <|@  <|@
f <@~|@floating>@ <|@
tid j3291 <|@
result v117|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3286 
y: j3064 
=== Succesors ===
=== Usages ===
j3280 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3286 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2763 
=== Predecessor ===
v3609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v115|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v115|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3280 <|@
result v118|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2763 
values: j3291 j3286 
=== Succesors ===
=== Usages ===
v3866 v3325 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2763 values: j3291 j3286  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2762 v2783 
=== Succesors ===
next: v2786 
=== Usages ===
j3280 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2762 v2783 #next: v2786  <|@  <|@
f <@~|@floating>@ <|@
tid j3324 <|@
result v119|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2481 
y: j3096 
=== Succesors ===
=== Usages ===
v3325 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2481 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3325 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3324 
y: j3280 
=== Succesors ===
=== Usages ===
v2786 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3324 y: j3280  <|@  <|@
f <@*|@fixed>@ <|@
tid v2786 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3325 
=== Succesors ===
trueSuccessor: v2785 
falseSuccessor: v2784 
=== Usages ===
=== Predecessor ===
v2763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3325 #trueSuccessor: v2785 #falseSuccessor: v2784  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = DEC v105|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2785 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2789 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2789  <|@  <|@
f <@*|@fixed>@ <|@
tid v2789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v2785 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2784 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3608 
=== Usages ===
=== Predecessor ===
v2786 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3608  <|@  <|@
f <@~|@floating>@ <|@
tid v3866 <|@
result [v104|QWORD[.] + v118|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3279 
index: j3280 
=== Succesors ===
=== Usages ===
v3608 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3279 index: j3280  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3608 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3866 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2765 
=== Usages ===
=== Predecessor ===
v2784 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3866 value: i3644 stateAfter: - lastLocationAccess: - #next: v2765  <|@  <|@
f <@*|@fixed>@ <|@
tid v2765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v3608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v104|QWORD[.] + v118|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2743 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2742 
=== Usages ===
=== Predecessor ===
v2744 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2742  <|@  <|@
f <@*|@fixed>@ <|@
tid v2742 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2738 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2743 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B76 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2731 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2749 
=== Usages ===
=== Predecessor ===
v2733 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2749  <|@  <|@
f <@*|@fixed>@ <|@
tid v2749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2750 
=== Predecessor ===
v2731 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B75" "B74" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2749 v2765 v2789 
=== Succesors ===
next: a1647 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2749 v2765 v2789 #next: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1647 <|@
result v79|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2045 
=== Succesors ===
next: v1194 
=== Usages ===
j2082 a1192 a725 
=== Predecessor ===
v2750 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2045 #next: v1194  <|@  <|@
f <@~|@floating>@ <|@
tid v3704 <|@
result [v62|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1441 
index: - 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1441 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1192 <|@
result v120|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Compress
stamp: n! -
=== Inputs ===
value: a1647 
=== Succesors ===
=== Usages ===
v1194 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1647  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1194 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3704 
value: a1192 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2073 
=== Usages ===
=== Predecessor ===
a1647 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3704 value: a1192 stateAfter: - lastLocationAccess: - #next: j2073  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2073 <|@
result v62|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a1441 
=== Succesors ===
next: v2077 
=== Usages ===
j2074 
=== Predecessor ===
v1194 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a1441 #next: v2077  <|@  <|@
f <@~|@floating>@ <|@
tid j2074 <|@
result v121|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2073 
y: i1757 
=== Succesors ===
=== Usages ===
v3756 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2073 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3756 <|@
result [v121|QWORD[*] + v12|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2074 
index: j1761 
=== Succesors ===
=== Usages ===
v2077 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2074 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2077 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3756 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3664 
=== Usages ===
=== Predecessor ===
j2073 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3756 value: i1763 stateAfter: - lastLocationAccess: - #next: i3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3705 <|@
result [v62|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1441 
index: - 
=== Succesors ===
=== Usages ===
i3664 v1250 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1441 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3664 <|@
result v122|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
=== Succesors ===
next: v1221 
=== Usages ===
i671 j2083 v1215 v1234 
=== Predecessor ===
v2077 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3705 #next: v1221  <|@  <|@
f <@~|@floating>@ <|@
tid v1215 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3664 
y: i82 
=== Succesors ===
=== Usages ===
v1221 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3664 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1221 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1215 
=== Succesors ===
trueSuccessor: v1220 
falseSuccessor: v1216 
=== Usages ===
=== Predecessor ===
i3664 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1215 #trueSuccessor: v1220 #falseSuccessor: v1216  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = COMPRESSPOINTER (input: v79|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v120|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v121|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557307913614559812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1220 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1219 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1219  <|@  <|@
f <@*|@fixed>@ <|@
tid v1219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1220 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B83" 
    xhandlers
    flags 
    probability 4586868295309743850
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1238 
=== Usages ===
=== Predecessor ===
v1221 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1238  <|@  <|@
f <@~|@floating>@ <|@
tid i1233 <|@
result v123|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32
=== Inputs ===
x: i291 
y: i407 
=== Succesors ===
=== Usages ===
v1234 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i291 y: i407  <|@  <|@
f <@~|@floating>@ <|@
tid v1234 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1233 
y: i3664 
=== Succesors ===
=== Usages ===
v1238 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1233 y: i3664  <|@  <|@
f <@*|@fixed>@ <|@
tid v1238 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1234 
=== Succesors ===
trueSuccessor: v1237 
falseSuccessor: v1235 
=== Usages ===
=== Predecessor ===
v1216 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1234 #trueSuccessor: v1237 #falseSuccessor: v1235  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SUB (x: v67|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557221190714856223
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1236 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1236  <|@  <|@
f <@*|@fixed>@ <|@
tid v1236 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1218 
=== Predecessor ===
v1237 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4561768151792078514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1219 v1236 
=== Succesors ===
next: v1239 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1219 v1236 #next: v1239  <|@  <|@
tid ?296 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?299 
values: - - 
virtualObjectMappings: ?790 
=== Succesors ===
=== Usages ===
v1239 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?299 values: - - virtualObjectMappings: ?790  <|@  <|@
f <@*|@fixed>@ <|@
tid v1239 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?296 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1218 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?296  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -317281 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4586801220567004356
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2080 
=== Usages ===
=== Predecessor ===
v1238 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2080  <|@  <|@
f <@~|@floating>@ <|@
tid a1200 <|@
result v124|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.String.getChars(String.java:820) [bci: 15]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3657 
=== Succesors ===
=== Usages ===
j2080 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3657  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2080 <|@
result v125|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1200 
=== Succesors ===
next: j2082 
=== Usages ===
v3757 
=== Predecessor ===
v1235 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1200 #next: j2082  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2082 <|@
result v126|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i64
=== Inputs ===
object: a1647 
=== Succesors ===
next: v2088 
=== Usages ===
v3758 
=== Predecessor ===
j2080 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1647 #next: v2088  <|@  <|@
f <@~|@floating>@ <|@
tid v3757 <|@
result [v125|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2080 
index: - 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2080 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2083 <|@
result v127|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3664 
=== Succesors ===
=== Usages ===
v3758 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3664  <|@  <|@
f <@~|@floating>@ <|@
tid v3758 <|@
result [v126|QWORD[*] + v127|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2082 
index: j2083 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2082 index: j2083  <|@  <|@
f <@~|@floating>@ <|@
tid j2087 <|@
result v128|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
resultBits: 64
stamp: i64 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
value: i407 
=== Succesors ===
=== Usages ===
v2088 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i407  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2088 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3757 v3758 j2087 
=== Succesors ===
next: v1250 
=== Usages ===
=== Predecessor ===
j2082 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3757 v3758 j2087 #next: v1250  <|@  <|@
f <@~|@floating>@ <|@
tid i671 <|@
result v129|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
stamp: i32
=== Inputs ===
x: i407 
y: i3664 
=== Succesors ===
=== Usages ===
v1250 i726 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i407 y: i3664  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1250 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3705 
value: i671 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v761 
=== Usages ===
=== Predecessor ===
v2088 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3705 value: i671 stateAfter: - lastLocationAccess: - #next: v761  <|@  <|@
f <@*|@fixed>@ <|@
tid v761 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v721 
=== Predecessor ===
v1250 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[*] = MOVE v124|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[*] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v122|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v125|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v126|QWORD[*] + v127|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ADD (x: v56|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v79|QWORD[.], v129|DWORD, v56|DWORD, v62|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B83" 
    successors "B85" "B101" 
    xhandlers
    flags 
    probability 4607173992112009100
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i724 <|@
result v130|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v721 
values: i396 i396 i291 
=== Succesors ===
=== Usages ===
i316 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i396 i396 i291  <|@  <|@
f <@~|@floating>@ <|@
tid a725 <|@
result v131|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# [C
valueDescription: a -
=== Inputs ===
merge: v721 
values: a1395 a1414 a1647 
=== Succesors ===
=== Usages ===
v3695 ?324 v3697 v3711 ?1469 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: a1395 a1414 a1647  <|@  <|@
f <@~|@floating>@ <|@
tid i726 <|@
result v132|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v721 
values: i3654 i3656 i671 
=== Succesors ===
=== Usages ===
i261 j939 v911 v930 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i3654 i3656 i671  <|@  <|@
f <@~|@floating>@ <|@
tid i727 <|@
result v133|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
valueDescription: i32
=== Inputs ===
merge: v721 
values: i3654 i3656 i407 
=== Succesors ===
=== Usages ===
?722 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: i3654 i3656 i407  <|@  <|@
f <@~|@floating>@ <|@
tid a792 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a!# Ljava/lang/StringBuilder;
valueDescription: a -
=== Inputs ===
merge: v721 
values: a1405 a1424 a1441 
=== Succesors ===
=== Usages ===
?794 v3691 v3692 v993 v897 j2142 j2255 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v721 values: a1405 a1424 a1441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v721 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v720 v723 v761 
=== Succesors ===
next: i3665 
=== Usages ===
i724 a725 i726 i727 a792 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v720 v723 v761 #next: i3665  <|@  <|@
f <@~|@floating>@ <|@
tid v3697 <|@
result [v131|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
i3665 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3665 <|@
result v135|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at org.graalvm.compiler.nodes.java.ArrayLengthNode.arrayLength(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 85]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3697 
=== Succesors ===
next: v320 
=== Usages ===
i1259 i1634 v1569 
=== Predecessor ===
v721 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3697 #next: v320  <|@  <|@
f <@~|@floating>@ <|@
tid v3692 <|@
result [v134|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a792 
index: - 
=== Succesors ===
=== Usages ===
a3672 v900 v997 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a792 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v3691 <|@
result [v134|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a792 
index: - 
=== Succesors ===
=== Usages ===
i3674 v886 i3681 v955 i3671 v1051 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a792 index: -  <|@  <|@
tid ?794 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a126 
materializedValue: a792 
=== Succesors ===
=== Usages ===
?722 ?1469 ?770 ?324 ?328 ?1470 ?259 ?350 ?1471 ?270 ?513 ?104 ?109 ?279 
=== Predecessor ===
- >@ <|@
instruction <@MaterializedObjectState|@org.graalvm.compiler.virtual.nodes.MaterializedObjectState>@ object: a126 materializedValue: a792  <|@  <|@
f <@~|@floating>@ <|@
tid i261 <|@
result v136|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i726 
y: i71 
=== Succesors ===
=== Usages ===
v993 i316 v955 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i726 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i316 <|@
result v137|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i261 
y: i724 
=== Succesors ===
=== Usages ===
v317 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i261 y: i724  <|@  <|@
f <@~|@floating>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i316 
y: i71 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i316 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i68 <|@
result int[32|0x20] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 0]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 32
stableDimension: 0
stamp: i32 [32] ⇊0000000000000020 ⇈0000000000000020
stampKind: i32
value: int[32|0x20]
=== Inputs ===
=== Succesors ===
=== Usages ===
i70 i528 i717 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result int[35|0x23] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 35
stableDimension: 0
stamp: i32 [35] ⇊0000000000000023 ⇈0000000000000023
stampKind: i32
value: int[35|0x23]
=== Inputs ===
=== Succesors ===
=== Usages ===
i94 i524 i715 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i96 <|@
result int[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -4
stableDimension: 0
stamp: i32 [-4] ⇊00000000fffffffc ⇈00000000fffffffc
stampKind: i32
value: int[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
v97 v525 v716 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?220 <|@
d <@d|@=== Debug Properties ===
bci: 19
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 
=== Succesors ===
=== Usages ===
?263 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1  <|@  <|@
tid ?263 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?220 
values: a126 - 
=== Succesors ===
=== Usages ===
?331 ?770 ?259 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?220 values: a126 -  <|@  <|@
f <@~|@floating>@ <|@
tid j980 <|@
result long[7|0x7] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: 7
stableDimension: 0
stamp: i64 [7] ⇊0000000000000007 ⇈0000000000000007
stampKind: i64
value: long[7|0x7]
=== Inputs ===
=== Succesors ===
=== Usages ===
j965 j1057 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v20 <|@
result v138|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
rawvalue: meta{HotSpotMethod<Object.hashCode()>}
stableDimension: 0
stamp: Method*!
stampKind: Method*
value: meta{HotSpotMethod<Object.hashCode()>}
=== Inputs ===
=== Succesors ===
=== Usages ===
v21 v605 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i1260 <|@
result int[64|0x40] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawLoadNode.load(Object, long, JavaKind, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:197) [bci: 116]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rawvalue: 64
stableDimension: 0
stamp: i16 [64] ⇊0000000000000040 ⇈0000000000000040
stampKind: i16
value: int[64|0x40]
=== Inputs ===
=== Succesors ===
=== Usages ===
v950 v1046 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i99 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:333) [bci: 12]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
i105 i1263 i1259 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v317 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v319 
=== Usages ===
=== Predecessor ===
i3665 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v317 #trueSuccessor: v318 #falseSuccessor: v319  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD, v131|QWORD[.], v132|DWORD, v133|DWORD, v134|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV [v131|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = SUB (x: v136|DWORD, ~y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP v137|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606750936613628552
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v917 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v917  <|@  <|@
f <@~|@floating>@ <|@
tid v911 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i726 
y: i82 
=== Succesors ===
=== Usages ===
v917 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i726 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v917 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v911 
=== Succesors ===
trueSuccessor: v916 
falseSuccessor: v912 
=== Usages ===
=== Predecessor ===
v318 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v911 #trueSuccessor: v916 #falseSuccessor: v912  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576642080704798812
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v916 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v915 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v915  <|@  <|@
f <@*|@fixed>@ <|@
tid v915 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v916 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4606665179442945031
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v912 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v934 
=== Usages ===
=== Predecessor ===
v917 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid i1259 <|@
result v139|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-1 - 2147483646]
=== Inputs ===
x: i3665 
y: i99 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3665 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1259 
y: i726 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1259 y: i726  <|@  <|@
f <@*|@fixed>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v930 
=== Succesors ===
trueSuccessor: v933 
falseSuccessor: v931 
=== Usages ===
=== Predecessor ===
v912 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v930 #trueSuccessor: v933 #falseSuccessor: v931  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = DEC v135|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576587196115561358
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v933 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@*|@fixed>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v914 
=== Predecessor ===
v933 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 4581118238037550581
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v914 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v915 v932 
=== Succesors ===
next: v935 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v915 v932 #next: v935  <|@  <|@
tid ?722 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 14]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?247 
values: a126 - i727 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v935 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?247 values: a126 - i727 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?722 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v914 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?722  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -239457 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v133|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B100" 
    xhandlers
    flags 
    probability 4606580279843968345
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v950 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v950  <|@  <|@
f <@~|@floating>@ <|@
tid j939 <|@
result v140|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:185) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i726 
=== Succesors ===
=== Usages ===
v3695 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i726  <|@  <|@
f <@~|@floating>@ <|@
tid v3695 <|@
result [v131|QWORD[.] + v140|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a725 
index: j939 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: j939  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawStoreNode.storeObject(Object, long, Object, JavaKind, LocationIdentity, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:198) [bci: 134]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3695 
value: i1260 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v955 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3695 value: i1260 stateAfter: - lastLocationAccess: - #next: v955  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i261 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v958 
=== Usages ===
=== Predecessor ===
v950 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i261 stateAfter: - lastLocationAccess: - #next: v958  <|@  <|@
f <@~|@floating>@ <|@
tid v3696 <|@
result [v1|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
v958 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v958 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3696 
=== Succesors ===
next: v608 
=== Usages ===
v605 
=== Predecessor ===
v955 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3696 #next: v608  <|@  <|@
f <@~|@floating>@ <|@
tid v605 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v958 
y: v20 
=== Succesors ===
=== Usages ===
v608 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v958 y: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v608 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v605 
=== Succesors ===
trueSuccessor: v606 
falseSuccessor: v607 
=== Usages ===
=== Predecessor ===
v958 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v605 #trueSuccessor: v606 #falseSuccessor: v607  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOVSXD v132|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v131|QWORD[.] + v140|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v606 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j983 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j983  <|@  <|@
f <@~|@floating>@ <|@
tid v3903 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j983 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j983 <|@
result v141|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3903 
=== Succesors ===
next: v969 
=== Usages ===
j965 j970 
=== Predecessor ===
v606 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3903 #next: v969  <|@  <|@
f <@~|@floating>@ <|@
tid j965 <|@
result v142|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j983 
y: j980 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j983 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j965 
y: j981 
=== Succesors ===
=== Usages ===
v969 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j965 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v966 
=== Succesors ===
trueSuccessor: v968 
falseSuccessor: v967 
=== Usages ===
=== Predecessor ===
j983 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v966 #trueSuccessor: v968 #falseSuccessor: v967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = AND v141|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v142|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4606413019144024376
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v978 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v978  <|@  <|@
f <@~|@floating>@ <|@
tid j970 <|@
result v143|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j983 
y: i963 
=== Succesors ===
=== Usages ===
i971 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j983 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i971 <|@
result v144|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
resultBits: 32
stamp: i32
=== Inputs ===
value: j970 
=== Succesors ===
=== Usages ===
v972 i987 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j970  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i971 
y: i82 
=== Succesors ===
=== Usages ===
v978 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i971 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v972 
=== Succesors ===
trueSuccessor: v977 
falseSuccessor: v976 
=== Usages ===
=== Predecessor ===
v968 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v972 #trueSuccessor: v977 #falseSuccessor: v976  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = SHR v141|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOV v143|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v144|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576425813524252139
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v975 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v975  <|@  <|@
f <@*|@fixed>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v977 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606330641148036896
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v988 
=== Usages ===
=== Predecessor ===
v978 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v988  <|@  <|@
f <@*|@fixed>@ <|@
tid v988 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
v976 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576479067986304651
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v973 
=== Usages ===
=== Predecessor ===
v969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v973  <|@  <|@
f <@*|@fixed>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v974 
=== Predecessor ===
v967 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4580956040382648891
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v973 v975 
=== Succesors ===
next: i979 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v973 v975 #next: i979  <|@  <|@
tid ?770 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 - i71 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i979 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 - i71 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i979 <|@
result v145|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?770 
arguments: a1 
=== Succesors ===
next: v989 
=== Usages ===
i987 
=== Predecessor ===
v974 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?770 arguments: a1 #next: v989  <|@  <|@
f <@*|@fixed>@ <|@
tid v989 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v985 
=== Predecessor ===
i979 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i987 <|@
result v146|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v985 
values: i971 i979 
=== Succesors ===
=== Usages ===
i512 i711 i511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v985 values: i971 i979  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v985 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v988 v989 
=== Succesors ===
next: v714 
=== Usages ===
i987 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v988 v989 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid i711 <|@
result v147|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i987 
=== Succesors ===
=== Usages ===
i715 i717 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i987  <|@  <|@
f <@~|@floating>@ <|@
tid i717 <|@
result v149|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i711 
=== Succesors ===
=== Usages ===
i515 i516 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i711  <|@  <|@
f <@~|@floating>@ <|@
tid i715 <|@
result v151|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i711 
=== Succesors ===
=== Usages ===
v716 i509 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i711  <|@  <|@
f <@~|@floating>@ <|@
tid v716 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i715 
y: i96 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i715 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v716 
=== Succesors ===
trueSuccessor: v712 
falseSuccessor: v713 
=== Usages ===
=== Predecessor ===
v985 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v716 #trueSuccessor: v712 #falseSuccessor: v713  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = LZCNT v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SUB (x: v148|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = SUB (x: v150|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v151|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4598056962486991259
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v718 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v718  <|@  <|@
f <@*|@fixed>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v712 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v146|DWORD, v149|DWORD] destination: B98 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B167" 
    xhandlers
    flags 
    probability 4604273993691867467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v719 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v719  <|@  <|@
f <@*|@fixed>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|DWORD, v146|DWORD, v149|DWORD] destination: B99 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B164" 
    xhandlers
    flags 
    probability 4576532860372216279
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v607 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v608 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v602  <|@  <|@
f <@*|@fixed>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v607 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: i323 
=== Usages ===
=== Predecessor ===
v320 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i323  <|@  <|@
tid v993 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@5af40c8c
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a792 i261 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a792 i261  <|@  <|@
f <@~|@floating>@ <|@
tid a12 <|@
result Object[String:"@"] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 17]
rawvalue: "@"
stableDimension: 0
stamp: a!# Ljava/lang/String;
stampKind: a -
value: Object[String:"@"]
=== Inputs ===
=== Succesors ===
=== Usages ===
?331 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?331 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 a12 i71 
=== Succesors ===
=== Usages ===
?324 ?328 ?1469 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 a12 i71  <|@  <|@
tid ?1469 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?331 
values: - - a126 a725 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i323 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - a126 a725 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i323 <|@
result v152|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v993 
stateDuring: ?1469 
=== Succesors ===
next: v1561 
=== Usages ===
?324 v2096 i1263 j2483 i2089 v2130 a2111 i1634 v1555 v1569 
=== Predecessor ===
v319 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v993 stateDuring: ?1469 #next: v1561  <|@  <|@
tid ?324 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?331 
values: - - a126 a725 i323 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
a2111 v1567 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - a126 a725 i323 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v1555 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i82 
=== Succesors ===
=== Usages ===
v1561 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i323 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1561 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1555 
=== Succesors ===
trueSuccessor: v1560 
falseSuccessor: v1556 
=== Usages ===
=== Predecessor ===
i323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1555 #trueSuccessor: v1560 #falseSuccessor: v1556  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v136|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v134|QWORD[.] v131|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v152|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1560 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1567 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1567  <|@  <|@
f <@*|@fixed>@ <|@
tid v1567 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?324 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1560 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?324  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -401249 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v131|QWORD[.] v152|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1556 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2091 
=== Usages ===
=== Predecessor ===
v1561 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2091  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2091 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2127 
=== Usages ===
v3759 v3760 
=== Predecessor ===
v1556 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2127  <|@  <|@
f <@~|@floating>@ <|@
tid v3759 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2127 v2129 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2127 <|@
result v153|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3759 
=== Succesors ===
next: j2128 
=== Usages ===
j2095 v3761 v3762 a2110 v3767 v3763 v3764 v3765 v3766 
=== Predecessor ===
j2091 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3759 #next: j2128  <|@  <|@
f <@~|@floating>@ <|@
tid v3760 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2091 
index: - 
=== Succesors ===
=== Usages ===
j2128 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2091 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2128 <|@
result v154|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3760 
=== Succesors ===
next: v2099 
=== Usages ===
v2100 
=== Predecessor ===
j2127 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3760 #next: v2099  <|@  <|@
f <@~|@floating>@ <|@
tid v2096 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i323 
y: i2025 
=== Succesors ===
=== Usages ===
v2099 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i323 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2099 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2096 
=== Succesors ===
trueSuccessor: v2098 
falseSuccessor: v2097 
=== Usages ===
=== Predecessor ===
j2128 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2096 #trueSuccessor: v2098 #falseSuccessor: v2097  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v152|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4586252820212474326
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2098 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2106 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2106  <|@  <|@
f <@~|@floating>@ <|@
tid i2089 <|@
result v155|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i323 
y: i71 
=== Succesors ===
=== Usages ===
i2118 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i323 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2118 <|@
result v156|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2089 
y: i2048 
=== Succesors ===
=== Usages ===
i2090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2089 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2090 <|@
result v157|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2118 
y: i2018 
=== Succesors ===
=== Usages ===
j2094 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2118 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2094 <|@
result v158|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2090 
=== Succesors ===
=== Usages ===
j2095 v3763 v3764 v3765 v3766 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2090  <|@  <|@
f <@~|@floating>@ <|@
tid j2095 <|@
result v159|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64
=== Inputs ===
x: j2094 
y: j2127 
=== Succesors ===
=== Usages ===
v2100 v2129 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2094 y: j2127  <|@  <|@
f <@~|@floating>@ <|@
tid v2100 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2128 
y: j2095 
=== Succesors ===
=== Usages ===
v2106 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2128 y: j2095  <|@  <|@
f <@*|@fixed>@ <|@
tid v2106 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2100 
=== Succesors ===
trueSuccessor: v2105 
falseSuccessor: v2104 
=== Usages ===
=== Predecessor ===
v2098 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2100 #trueSuccessor: v2105 #falseSuccessor: v2104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = SHL v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = LEA [v155|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = AND v156|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = MOVSXD v157|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = ADD (x: v158|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v154|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4556433382590351231
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2105 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2103 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2103  <|@  <|@
f <@*|@fixed>@ <|@
tid v2103 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
v2105 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4586191900220707527
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2104 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2129 
=== Usages ===
=== Predecessor ===
v2106 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2129 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3759 
value: j2095 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2120 
=== Usages ===
=== Predecessor ===
v2104 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3759 value: j2095 stateAfter: - lastLocationAccess: - #next: v2120  <|@  <|@
f <@~|@floating>@ <|@
tid v3763 <|@
result [v158|QWORD + v153|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2120 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2120 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3763 
=== Succesors ===
next: v2122 
=== Usages ===
=== Predecessor ===
v2129 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3763 #next: v2122  <|@  <|@
f <@~|@floating>@ <|@
tid v3764 <|@
result [v158|QWORD + v153|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2122 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3764 
=== Succesors ===
next: v2124 
=== Usages ===
=== Predecessor ===
v2120 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3764 #next: v2124  <|@  <|@
f <@~|@floating>@ <|@
tid v3765 <|@
result [v158|QWORD + v153|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2124 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2124 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3765 
=== Succesors ===
next: v2126 
=== Usages ===
=== Predecessor ===
v2122 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3765 #next: v2126  <|@  <|@
f <@~|@floating>@ <|@
tid v3766 <|@
result [v158|QWORD + v153|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2094 
index: j2127 
=== Succesors ===
=== Usages ===
v2126 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2094 index: j2127  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2126 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
address: v3766 
=== Succesors ===
next: v2130 
=== Usages ===
=== Predecessor ===
v2124 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3766 #next: v2130  <|@  <|@
f <@~|@floating>@ <|@
tid v3761 <|@
result [v153|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2130 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2130 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3761 
value: i323 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2131 
=== Usages ===
=== Predecessor ===
v2126 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3761 value: i323 stateAfter: - lastLocationAccess: - #next: v2131  <|@  <|@
f <@~|@floating>@ <|@
tid v3762 <|@
result [v153|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2131 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2131 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3762 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2134 
=== Usages ===
=== Predecessor ===
v2130 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3762 value: j981 stateAfter: - lastLocationAccess: - #next: v2134  <|@  <|@
f <@~|@floating>@ <|@
tid v3767 <|@
result [v153|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2127 
index: - 
=== Succesors ===
=== Usages ===
v2134 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2127 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2134 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3767 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2109 
=== Usages ===
=== Predecessor ===
v2131 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3767 value: v2413 stateAfter: - lastLocationAccess: - #next: v2109  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2109 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2110 
=== Usages ===
=== Predecessor ===
v2134 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2110  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2110 <|@
result v160|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2127 
=== Succesors ===
next: v2112 
=== Usages ===
a2115 
=== Predecessor ===
v2109 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2127 #next: v2112  <|@  <|@
f <@*|@fixed>@ <|@
tid v2112 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
a2110 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v153|QWORD + 12], y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v153|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v153|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v153|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD[.]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4572065132532953960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2097 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2101 
=== Usages ===
=== Predecessor ===
v2099 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2101  <|@  <|@
f <@*|@fixed>@ <|@
tid v2101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2102 
=== Predecessor ===
v2097 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4572552492467088352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2101 v2103 
=== Succesors ===
next: a2111 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2101 v2103 #next: a2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2111 <|@
result v161|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?324 
arguments: v1799 i323 i82 
=== Succesors ===
next: v2114 
=== Usages ===
a2115 
=== Predecessor ===
v2102 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?324 arguments: v1799 i323 i82 #next: v2114  <|@  <|@
f <@*|@fixed>@ <|@
tid v2114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2113 
=== Predecessor ===
a2111 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v152|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v131|QWORD[.] v152|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD[.]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2115 <|@
result v162|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2113 
values: a2110 a2111 
=== Succesors ===
=== Usages ===
v3836 a1651 v3715 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2113 values: a2110 a2111  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2113 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2112 v2114 
=== Succesors ===
next: v3328 
=== Usages ===
a2115 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2112 v2114 #next: v3328  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3328 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2796 
=== Usages ===
j3329 j3331 
=== Predecessor ===
v2113 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2796  <|@  <|@
f <@~|@floating>@ <|@
tid v1569 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3665 
y: i323 
=== Succesors ===
=== Usages ===
i1634 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3665 y: i323  <|@  <|@
f <@~|@floating>@ <|@
tid i1634 <|@
result v163|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1569 
trueValue: i3665 
falseValue: i323 
=== Succesors ===
=== Usages ===
j2484 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1569 trueValue: i3665 falseValue: i323  <|@  <|@
f <@~|@floating>@ <|@
tid j2484 <|@
result v164|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1634 
=== Succesors ===
=== Usages ===
j3386 v3836 j2488 v2793 v3054 j3372 j3377 j3380 j3383 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1634  <|@  <|@
f <@~|@floating>@ <|@
tid v2793 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2484 
y: j981 
=== Succesors ===
=== Usages ===
v2796 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2484 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2796 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2793 
=== Succesors ===
trueSuccessor: v2794 
falseSuccessor: v2795 
=== Usages ===
=== Predecessor ===
v3328 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2793 #trueSuccessor: v2794 #falseSuccessor: v2795  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = CMOVE (falseValue: v152|DWORD, ~trueValue: v135|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVSXD v163|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v164|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B128" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2794 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2812 
=== Usages ===
=== Predecessor ===
v2796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2812  <|@  <|@
f <@*|@fixed>@ <|@
tid v2812 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v2794 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2795 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2799 
=== Usages ===
=== Predecessor ===
v2796 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2799  <|@  <|@
f <@~|@floating>@ <|@
tid v3715 <|@
result [v162|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2115 
index: - 
=== Succesors ===
=== Usages ===
j3331 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2115 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3331 <|@
result v165|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3328 
address: v3715 
=== Succesors ===
=== Usages ===
v3871 v3873 v3875 v3877 v3879 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3328 address: v3715  <|@  <|@
f <@~|@floating>@ <|@
tid v3711 <|@
result [v131|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a725 
index: - 
=== Succesors ===
=== Usages ===
j3329 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a725 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3329 <|@
result v166|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3328 
address: v3711 
=== Succesors ===
=== Usages ===
v3872 v3874 v3876 v3878 v3880 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3328 address: v3711  <|@  <|@
f <@~|@floating>@ <|@
tid j3372 <|@
result v167|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2484 
y: j3145 
=== Succesors ===
=== Usages ===
v3373 v3375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3373 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3372 
y: j964 
=== Succesors ===
=== Usages ===
v2799 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3372 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2799 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3373 
=== Succesors ===
trueSuccessor: v2797 
falseSuccessor: v2798 
=== Usages ===
=== Predecessor ===
v2795 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3373 #trueSuccessor: v2797 #falseSuccessor: v2798  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = LEA [v162|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = LEA [v131|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v164|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v167|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B116" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2797 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2808 
=== Usages ===
=== Predecessor ===
v2799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2808  <|@  <|@
f <@*|@fixed>@ <|@
tid v2808 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2809 
=== Predecessor ===
v2797 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2798 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2800 
=== Usages ===
=== Predecessor ===
v2799 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2800  <|@  <|@
f <@*|@fixed>@ <|@
tid v2800 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2801 
=== Predecessor ===
v2798 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B308" 
    successors "B115" "B308" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3364 <|@
result v168|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2801 
values: j964 j3371 
=== Succesors ===
=== Usages ===
v3880 j3371 v3879 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2801 values: j964 j3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2801 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2800 
=== Succesors ===
next: v3666 
=== Usages ===
v3666 v2804 v2805 j3364 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2800 #next: v3666  <|@  <|@
f <@~|@floating>@ <|@
tid v3880 <|@
result [v166|QWORD[.] + v168|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3364 
=== Succesors ===
=== Usages ===
v3666 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3666 <|@
result v169|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2801 
address: v3880 
=== Succesors ===
next: v3622 
=== Usages ===
v3622 
=== Predecessor ===
v2801 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2801 address: v3880 #next: v3622  <|@  <|@
f <@~|@floating>@ <|@
tid v3879 <|@
result [v165|QWORD[.] + v168|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3364 
=== Succesors ===
=== Usages ===
v3622 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3364  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3622 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3879 
value: v3666 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2807 
=== Usages ===
=== Predecessor ===
v3666 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3879 value: v3666 stateAfter: - lastLocationAccess: - #next: v2807  <|@  <|@
f <@~|@floating>@ <|@
tid j3371 <|@
result v170|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3364 
y: j818 
=== Succesors ===
=== Usages ===
j3356 j3364 v3375 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3364 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3375 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3372 
y: j3371 
=== Succesors ===
=== Usages ===
v2807 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3372 y: j3371  <|@  <|@
f <@*|@fixed>@ <|@
tid v2807 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3375 
=== Succesors ===
trueSuccessor: v2804 
falseSuccessor: v2806 
=== Usages ===
=== Predecessor ===
v3622 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3375 #trueSuccessor: v2804 #falseSuccessor: v2806  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|V256_WORD = H [v166|QWORD[.] + v168|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v168|QWORD * 2], input: v169|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = LEA [v168|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2804 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2801 
=== Succesors ===
next: v2810 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2801 #next: v2810  <|@  <|@
f <@*|@fixed>@ <|@
tid v2810 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2809 
=== Predecessor ===
v2804 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3356 <|@
result v171|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2809 
values: j964 j3371 
=== Succesors ===
=== Usages ===
v3878 j3363 j3348 v3378 v3877 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2809 values: j964 j3371  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2809 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2808 v2810 
=== Succesors ===
next: v2831 
=== Usages ===
j3356 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2808 v2810 #next: v2831  <|@  <|@
f <@~|@floating>@ <|@
tid j3377 <|@
result v172|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2484 
y: j3084 
=== Succesors ===
=== Usages ===
v3378 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3378 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3377 
y: j3356 
=== Succesors ===
=== Usages ===
v2831 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3377 y: j3356  <|@  <|@
f <@*|@fixed>@ <|@
tid v2831 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3378 
=== Succesors ===
trueSuccessor: v2830 
falseSuccessor: v2829 
=== Usages ===
=== Predecessor ===
v2809 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3378 #trueSuccessor: v2830 #falseSuccessor: v2829  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v171|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = LEA [v164|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|QWORD, y: v172|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2830 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2834 
=== Usages ===
=== Predecessor ===
v2831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2834  <|@  <|@
f <@*|@fixed>@ <|@
tid v2834 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
v2830 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|QWORD] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2829 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3667 
=== Usages ===
v3667 
=== Predecessor ===
v2831 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3667  <|@  <|@
f <@~|@floating>@ <|@
tid v3878 <|@
result [v166|QWORD[.] + v171|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3356 
=== Succesors ===
=== Usages ===
v3667 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3667 <|@
result v173|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2829 
address: v3878 
=== Succesors ===
next: v3620 
=== Usages ===
v3620 
=== Predecessor ===
v2829 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2829 address: v3878 #next: v3620  <|@  <|@
f <@~|@floating>@ <|@
tid v3877 <|@
result [v165|QWORD[.] + v171|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3356 
=== Succesors ===
=== Usages ===
v3620 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3620 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3877 
value: v3667 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2819 
=== Usages ===
=== Predecessor ===
v3667 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3877 value: v3667 stateAfter: - lastLocationAccess: - #next: v2819  <|@  <|@
f <@~|@floating>@ <|@
tid j3363 <|@
result v174|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3356 
y: j1752 
=== Succesors ===
=== Usages ===
j3348 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3356 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2819 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2820 
=== Predecessor ===
v3620 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|V128_WORD = H [v166|QWORD[.] + v171|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v171|QWORD * 2], input: v173|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = LEA [v171|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3348 <|@
result v175|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2820 
values: j3363 j3356 
=== Succesors ===
=== Usages ===
v3876 j3355 j3340 v3381 v3875 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2820 values: j3363 j3356  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2820 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2819 v2834 
=== Succesors ===
next: v2837 
=== Usages ===
j3348 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2819 v2834 #next: v2837  <|@  <|@
f <@~|@floating>@ <|@
tid j3380 <|@
result v176|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2484 
y: j3088 
=== Succesors ===
=== Usages ===
v3381 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3381 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3380 
y: j3348 
=== Succesors ===
=== Usages ===
v2837 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3380 y: j3348  <|@  <|@
f <@*|@fixed>@ <|@
tid v2837 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3381 
=== Succesors ===
trueSuccessor: v2836 
falseSuccessor: v2835 
=== Usages ===
=== Predecessor ===
v2820 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3381 #trueSuccessor: v2836 #falseSuccessor: v2835  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = LEA [v164|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: v176|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2836 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2840 
=== Usages ===
=== Predecessor ===
v2837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2840  <|@  <|@
f <@*|@fixed>@ <|@
tid v2840 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
v2836 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|QWORD] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2835 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3668 
=== Usages ===
v3668 
=== Predecessor ===
v2837 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3668  <|@  <|@
f <@~|@floating>@ <|@
tid v3876 <|@
result [v166|QWORD[.] + v175|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3348 
=== Succesors ===
=== Usages ===
v3668 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3668 <|@
result v177|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2835 
address: v3876 
=== Succesors ===
next: v3618 
=== Usages ===
v3618 
=== Predecessor ===
v2835 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2835 address: v3876 #next: v3618  <|@  <|@
f <@~|@floating>@ <|@
tid v3875 <|@
result [v165|QWORD[.] + v175|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3348 
=== Succesors ===
=== Usages ===
v3618 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3618 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3875 
value: v3668 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2822 
=== Usages ===
=== Predecessor ===
v3668 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3875 value: v3668 stateAfter: - lastLocationAccess: - #next: v2822  <|@  <|@
f <@~|@floating>@ <|@
tid j3355 <|@
result v178|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3348 
y: j3080 
=== Succesors ===
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3348 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2822 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2823 
=== Predecessor ===
v3618 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|V64_WORD = H [v166|QWORD[.] + v175|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v175|QWORD * 2], input: v177|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = LEA [v175|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3340 <|@
result v179|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2823 
values: j3355 j3348 
=== Succesors ===
=== Usages ===
v3874 j3347 j3332 v3384 v3873 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2823 values: j3355 j3348  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2823 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2822 v2840 
=== Succesors ===
next: v2843 
=== Usages ===
j3340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2822 v2840 #next: v2843  <|@  <|@
f <@~|@floating>@ <|@
tid j3383 <|@
result v180|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2484 
y: j3092 
=== Succesors ===
=== Usages ===
v3384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3384 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3383 
y: j3340 
=== Succesors ===
=== Usages ===
v2843 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3383 y: j3340  <|@  <|@
f <@*|@fixed>@ <|@
tid v2843 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3384 
=== Succesors ===
trueSuccessor: v2842 
falseSuccessor: v2841 
=== Usages ===
=== Predecessor ===
v2823 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3384 #trueSuccessor: v2842 #falseSuccessor: v2841  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD = LEA [v164|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v179|QWORD, y: v180|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2842 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2846 
=== Usages ===
=== Predecessor ===
v2843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2846  <|@  <|@
f <@*|@fixed>@ <|@
tid v2846 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
v2842 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2841 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3669 
=== Usages ===
v3669 
=== Predecessor ===
v2843 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3669  <|@  <|@
f <@~|@floating>@ <|@
tid v3874 <|@
result [v166|QWORD[.] + v179|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3340 
=== Succesors ===
=== Usages ===
v3669 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3669 <|@
result v181|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2841 
address: v3874 
=== Succesors ===
next: v3616 
=== Usages ===
v3616 
=== Predecessor ===
v2841 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2841 address: v3874 #next: v3616  <|@  <|@
f <@~|@floating>@ <|@
tid v3873 <|@
result [v165|QWORD[.] + v179|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3340 
=== Succesors ===
=== Usages ===
v3616 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3616 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3873 
value: v3669 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2825 
=== Usages ===
=== Predecessor ===
v3669 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3873 value: v3669 stateAfter: - lastLocationAccess: - #next: v2825  <|@  <|@
f <@~|@floating>@ <|@
tid j3347 <|@
result v182|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3340 
y: j3064 
=== Succesors ===
=== Usages ===
j3332 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3340 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2825 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2826 
=== Predecessor ===
v3616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|V32_WORD = H [v166|QWORD[.] + v179|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v179|QWORD * 2], input: v181|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = LEA [v179|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3332 <|@
result v183|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2826 
values: j3347 j3340 
=== Succesors ===
=== Usages ===
v3872 v3387 v3871 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2826 values: j3347 j3340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2826 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2825 v2846 
=== Succesors ===
next: v2849 
=== Usages ===
j3332 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2825 v2846 #next: v2849  <|@  <|@
f <@~|@floating>@ <|@
tid j3386 <|@
result v184|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2484 
y: j3096 
=== Succesors ===
=== Usages ===
v3387 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2484 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3387 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3386 
y: j3332 
=== Succesors ===
=== Usages ===
v2849 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3386 y: j3332  <|@  <|@
f <@*|@fixed>@ <|@
tid v2849 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3387 
=== Succesors ===
trueSuccessor: v2848 
falseSuccessor: v2847 
=== Usages ===
=== Predecessor ===
v2826 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3387 #trueSuccessor: v2848 #falseSuccessor: v2847  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = DEC v164|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v183|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2848 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2852 
=== Usages ===
=== Predecessor ===
v2849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2852  <|@  <|@
f <@*|@fixed>@ <|@
tid v2852 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v2848 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2847 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3670 
=== Usages ===
i3670 
=== Predecessor ===
v2849 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3670  <|@  <|@
f <@~|@floating>@ <|@
tid v3872 <|@
result [v166|QWORD[.] + v183|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3329 
index: j3332 
=== Succesors ===
=== Usages ===
i3670 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3329 index: j3332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3670 <|@
result v185|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2847 
address: v3872 
=== Succesors ===
next: v3614 
=== Usages ===
v3614 
=== Predecessor ===
v2847 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2847 address: v3872 #next: v3614  <|@  <|@
f <@~|@floating>@ <|@
tid v3871 <|@
result [v165|QWORD[.] + v183|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3331 
index: j3332 
=== Succesors ===
=== Usages ===
v3614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3331 index: j3332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3614 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3871 
value: i3670 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2828 
=== Usages ===
=== Predecessor ===
i3670 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3871 value: i3670 stateAfter: - lastLocationAccess: - #next: v2828  <|@  <|@
f <@*|@fixed>@ <|@
tid v2828 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2813 
=== Predecessor ===
v3614 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVSX [v166|QWORD[.] + v183|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v165|QWORD[.] + v183|QWORD * 2], y: v185|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B110" "B127" "B126" 
    successors "B129" "B147" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2813 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2812 v2828 v2852 
=== Succesors ===
next: v3390 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2812 v2828 v2852 #next: v3390  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3390 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2859 
=== Usages ===
j3392 
=== Predecessor ===
v2813 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2859  <|@  <|@
f <@~|@floating>@ <|@
tid j2483 <|@
result v186|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i323 
=== Succesors ===
=== Usages ===
j2488 v3054 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i323  <|@  <|@
f <@~|@floating>@ <|@
tid v3054 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2484 
y: j2483 
=== Succesors ===
=== Usages ===
v2859 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2484 y: j2483  <|@  <|@
f <@*|@fixed>@ <|@
tid v2859 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3054 
=== Succesors ===
trueSuccessor: v2858 
falseSuccessor: v2857 
=== Usages ===
=== Predecessor ===
v3390 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3054 #trueSuccessor: v2858 #falseSuccessor: v2857  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|QWORD = MOVSXD v152|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2858 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2862 
=== Usages ===
=== Predecessor ===
v2859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2862  <|@  <|@
f <@~|@floating>@ <|@
tid v3836 <|@
result [v162|QWORD[.] + v164|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2115 
index: j2484 
=== Succesors ===
=== Usages ===
j3392 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2115 index: j2484  <|@  <|@
f <@~|@floating>@ <|@
tid j3392 <|@
result v187|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3390 
address: v3836 
=== Succesors ===
=== Usages ===
v3881 v3882 v3883 v3884 v3885 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3390 address: v3836  <|@  <|@
f <@~|@floating>@ <|@
tid j2488 <|@
result v188|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2483 
y: j2484 
=== Succesors ===
=== Usages ===
j3437 j3423 j3428 j3431 j3434 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2483 y: j2484  <|@  <|@
f <@~|@floating>@ <|@
tid j3423 <|@
result v189|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2488 
y: j3145 
=== Succesors ===
=== Usages ===
v3424 v3426 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3424 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3423 
y: j964 
=== Succesors ===
=== Usages ===
v2862 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3423 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2862 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3424 
=== Succesors ===
trueSuccessor: v2860 
falseSuccessor: v2861 
=== Usages ===
=== Predecessor ===
v2858 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3424 #trueSuccessor: v2860 #falseSuccessor: v2861  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = LEA [v162|QWORD[.] + v164|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = SUB (x: v186|QWORD, ~y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v188|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v189|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2860 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2871 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2871  <|@  <|@
f <@*|@fixed>@ <|@
tid v2871 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2872 
=== Predecessor ===
v2860 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2861 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2863 
=== Usages ===
=== Predecessor ===
v2862 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2863  <|@  <|@
f <@*|@fixed>@ <|@
tid v2863 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2864 
=== Predecessor ===
v2861 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B146" 
    successors "B133" "B146" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3417 <|@
result v190|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2864 
values: j964 j3422 
=== Succesors ===
=== Usages ===
v3885 j3422 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2864 values: j964 j3422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2864 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2863 
=== Succesors ===
next: v3627 
=== Usages ===
j3417 v2867 v2868 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2863 #next: v3627  <|@  <|@
f <@~|@floating>@ <|@
tid v3885 <|@
result [v187|QWORD[.] + v190|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3417 
=== Succesors ===
=== Usages ===
v3627 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3417  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3627 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3885 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2870 
=== Usages ===
=== Predecessor ===
v2864 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3885 value: v3643 stateAfter: - lastLocationAccess: - #next: v2870  <|@  <|@
f <@~|@floating>@ <|@
tid j3422 <|@
result v191|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3417 
y: j818 
=== Succesors ===
=== Usages ===
j3411 j3417 v3426 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3417 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3426 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3423 
y: j3422 
=== Succesors ===
=== Usages ===
v2870 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3423 y: j3422  <|@  <|@
f <@*|@fixed>@ <|@
tid v2870 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3426 
=== Succesors ===
trueSuccessor: v2867 
falseSuccessor: v2869 
=== Usages ===
=== Predecessor ===
v3627 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3426 #trueSuccessor: v2867 #falseSuccessor: v2869  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v190|QWORD * 2], input: v7|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v190|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v191|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2867 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2864 
=== Succesors ===
next: v2873 
=== Usages ===
=== Predecessor ===
v2870 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2864 #next: v2873  <|@  <|@
f <@*|@fixed>@ <|@
tid v2873 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2872 
=== Predecessor ===
v2867 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3411 <|@
result v192|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2872 
values: j964 j3422 
=== Succesors ===
=== Usages ===
v3884 j3416 j3405 v3429 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2872 values: j964 j3422  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2872 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2871 v2873 
=== Succesors ===
next: v2894 
=== Usages ===
j3411 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2871 v2873 #next: v2894  <|@  <|@
f <@~|@floating>@ <|@
tid j3428 <|@
result v193|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2488 
y: j3084 
=== Succesors ===
=== Usages ===
v3429 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3429 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3428 
y: j3411 
=== Succesors ===
=== Usages ===
v2894 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3428 y: j3411  <|@  <|@
f <@*|@fixed>@ <|@
tid v2894 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3429 
=== Succesors ===
trueSuccessor: v2893 
falseSuccessor: v2892 
=== Usages ===
=== Predecessor ===
v2872 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3429 #trueSuccessor: v2893 #falseSuccessor: v2892  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v188|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2893 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2897 
=== Usages ===
=== Predecessor ===
v2894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2897  <|@  <|@
f <@*|@fixed>@ <|@
tid v2897 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2883 
=== Predecessor ===
v2893 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2892 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3626 
=== Usages ===
=== Predecessor ===
v2894 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3626  <|@  <|@
f <@~|@floating>@ <|@
tid v3884 <|@
result [v187|QWORD[.] + v192|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3411 
=== Succesors ===
=== Usages ===
v3626 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3626 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3884 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2882 
=== Usages ===
=== Predecessor ===
v2892 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3884 value: v3647 stateAfter: - lastLocationAccess: - #next: v2882  <|@  <|@
f <@~|@floating>@ <|@
tid j3416 <|@
result v194|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3411 
y: j1752 
=== Succesors ===
=== Usages ===
j3405 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3411 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2882 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2883 
=== Predecessor ===
v3626 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v192|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = LEA [v192|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v194|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3405 <|@
result v195|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2883 
values: j3416 j3411 
=== Succesors ===
=== Usages ===
v3883 j3410 j3399 v3432 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2883 values: j3416 j3411  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2883 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2882 v2897 
=== Succesors ===
next: v2900 
=== Usages ===
j3405 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2882 v2897 #next: v2900  <|@  <|@
f <@~|@floating>@ <|@
tid j3431 <|@
result v196|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2488 
y: j3088 
=== Succesors ===
=== Usages ===
v3432 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3432 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3431 
y: j3405 
=== Succesors ===
=== Usages ===
v2900 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3431 y: j3405  <|@  <|@
f <@*|@fixed>@ <|@
tid v2900 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3432 
=== Succesors ===
trueSuccessor: v2899 
falseSuccessor: v2898 
=== Usages ===
=== Predecessor ===
v2883 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3432 #trueSuccessor: v2899 #falseSuccessor: v2898  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v195|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = LEA [v188|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|QWORD, y: v196|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2899 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2903 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2903  <|@  <|@
f <@*|@fixed>@ <|@
tid v2903 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2886 
=== Predecessor ===
v2899 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2898 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3625 
=== Usages ===
=== Predecessor ===
v2900 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3625  <|@  <|@
f <@~|@floating>@ <|@
tid v3883 <|@
result [v187|QWORD[.] + v195|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3405 
=== Succesors ===
=== Usages ===
v3625 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3625 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3883 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2885 
=== Usages ===
=== Predecessor ===
v2898 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3883 value: v3646 stateAfter: - lastLocationAccess: - #next: v2885  <|@  <|@
f <@~|@floating>@ <|@
tid j3410 <|@
result v197|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3405 
y: j3080 
=== Succesors ===
=== Usages ===
j3399 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3405 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2885 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2886 
=== Predecessor ===
v3625 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v195|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v195|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3399 <|@
result v198|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2886 
values: j3410 j3405 
=== Succesors ===
=== Usages ===
v3882 j3404 j3393 v3435 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2886 values: j3410 j3405  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2886 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2885 v2903 
=== Succesors ===
next: v2906 
=== Usages ===
j3399 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2885 v2903 #next: v2906  <|@  <|@
f <@~|@floating>@ <|@
tid j3434 <|@
result v199|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2488 
y: j3092 
=== Succesors ===
=== Usages ===
v3435 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3435 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3434 
y: j3399 
=== Succesors ===
=== Usages ===
v2906 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3434 y: j3399  <|@  <|@
f <@*|@fixed>@ <|@
tid v2906 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3435 
=== Succesors ===
trueSuccessor: v2905 
falseSuccessor: v2904 
=== Usages ===
=== Predecessor ===
v2886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3435 #trueSuccessor: v2905 #falseSuccessor: v2904  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v198|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = LEA [v188|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v199|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2905 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2909 
=== Usages ===
=== Predecessor ===
v2906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2909  <|@  <|@
f <@*|@fixed>@ <|@
tid v2909 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2889 
=== Predecessor ===
v2905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2904 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3624 
=== Usages ===
=== Predecessor ===
v2906 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3624  <|@  <|@
f <@~|@floating>@ <|@
tid v3882 <|@
result [v187|QWORD[.] + v198|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3399 
=== Succesors ===
=== Usages ===
v3624 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3624 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3882 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2888 
=== Usages ===
=== Predecessor ===
v2904 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3882 value: v3645 stateAfter: - lastLocationAccess: - #next: v2888  <|@  <|@
f <@~|@floating>@ <|@
tid j3404 <|@
result v200|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3399 
y: j3064 
=== Succesors ===
=== Usages ===
j3393 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3399 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2888 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2889 
=== Predecessor ===
v3624 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v198|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = LEA [v198|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3393 <|@
result v201|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2889 
values: j3404 j3399 
=== Succesors ===
=== Usages ===
v3881 v3438 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2889 values: j3404 j3399  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2889 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2888 v2909 
=== Succesors ===
next: v2912 
=== Usages ===
j3393 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2888 v2909 #next: v2912  <|@  <|@
f <@~|@floating>@ <|@
tid j3437 <|@
result v202|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2488 
y: j3096 
=== Succesors ===
=== Usages ===
v3438 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2488 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3438 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3437 
y: j3393 
=== Succesors ===
=== Usages ===
v2912 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3437 y: j3393  <|@  <|@
f <@*|@fixed>@ <|@
tid v2912 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3438 
=== Succesors ===
trueSuccessor: v2911 
falseSuccessor: v2910 
=== Usages ===
=== Predecessor ===
v2889 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3438 #trueSuccessor: v2911 #falseSuccessor: v2910  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = DEC v188|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2911 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2915 
=== Usages ===
=== Predecessor ===
v2912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2915  <|@  <|@
f <@*|@fixed>@ <|@
tid v2915 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v2911 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2910 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3623 
=== Usages ===
=== Predecessor ===
v2912 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3623  <|@  <|@
f <@~|@floating>@ <|@
tid v3881 <|@
result [v187|QWORD[.] + v201|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3392 
index: j3393 
=== Succesors ===
=== Usages ===
v3623 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3392 index: j3393  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3623 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3881 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2891 
=== Usages ===
=== Predecessor ===
v2910 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3881 value: i3644 stateAfter: - lastLocationAccess: - #next: v2891  <|@  <|@
f <@*|@fixed>@ <|@
tid v2891 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v3623 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v187|QWORD[.] + v201|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B132" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2869 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2868 
=== Usages ===
=== Predecessor ===
v2870 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2868  <|@  <|@
f <@*|@fixed>@ <|@
tid v2868 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2864 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2869 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2864  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B146 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B148" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2857 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2875 
=== Usages ===
=== Predecessor ===
v2859 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2875  <|@  <|@
f <@*|@fixed>@ <|@
tid v2875 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2876 
=== Predecessor ===
v2857 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2876 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2875 v2891 v2915 
=== Succesors ===
next: a1651 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2875 v2891 v2915 #next: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1651 <|@
result v162|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2115 
=== Succesors ===
next: v997 
=== Usages ===
v3698 a996 
=== Predecessor ===
v2876 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2115 #next: v997  <|@  <|@
f <@~|@floating>@ <|@
tid a996 <|@
result v203|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: Compress
stamp: n! -
=== Inputs ===
value: a1651 
=== Succesors ===
=== Usages ===
v997 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v997 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
value: a996 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2142 
=== Usages ===
=== Predecessor ===
a1651 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3692 value: a996 stateAfter: - lastLocationAccess: - #next: j2142  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2142 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a792 
=== Succesors ===
next: v2146 
=== Usages ===
j2143 
=== Predecessor ===
v997 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a792 #next: v2146  <|@  <|@
f <@~|@floating>@ <|@
tid j2143 <|@
result v204|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2142 
y: i1757 
=== Succesors ===
=== Usages ===
v3768 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2142 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3768 <|@
result [v204|QWORD[*] + v12|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2143 
index: j1761 
=== Succesors ===
=== Usages ===
v2146 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2143 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2146 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3768 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3671 
=== Usages ===
=== Predecessor ===
j2142 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3768 value: i1763 stateAfter: - lastLocationAccess: - #next: i3671  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3671 <|@
result v205|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: v1013 
=== Usages ===
j1035 i262 v1007 v1026 
=== Predecessor ===
v2146 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: v1013  <|@  <|@
f <@~|@floating>@ <|@
tid v1007 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3671 
y: i82 
=== Succesors ===
=== Usages ===
v1013 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3671 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1013 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1007 
=== Succesors ===
trueSuccessor: v1012 
falseSuccessor: v1008 
=== Usages ===
=== Predecessor ===
i3671 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1007 #trueSuccessor: v1012 #falseSuccessor: v1008  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v203|DWORD[.] = COMPRESSPOINTER (input: v162|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 16], y: v203|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[*] = SHR v134|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v204|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v205|DWORD, y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557299800251034593
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1012 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1011 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1011  <|@  <|@
f <@*|@fixed>@ <|@
tid v1011 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
v1012 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B153" 
    xhandlers
    flags 
    probability 4586862020130142314
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1008 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1030 
=== Usages ===
=== Predecessor ===
v1013 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1030  <|@  <|@
f <@~|@floating>@ <|@
tid i1263 <|@
result v206|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i323 
y: i99 
=== Succesors ===
=== Usages ===
v1026 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i323 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v1026 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1263 
y: i3671 
=== Succesors ===
=== Usages ===
v1030 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i1263 y: i3671  <|@  <|@
f <@*|@fixed>@ <|@
tid v1030 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1026 
=== Succesors ===
trueSuccessor: v1029 
falseSuccessor: v1027 
=== Usages ===
=== Predecessor ===
v1008 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1026 #trueSuccessor: v1029 #falseSuccessor: v1027  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD = DEC v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|DWORD, y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557213158484966257
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1029 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1028 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1028  <|@  <|@
f <@*|@fixed>@ <|@
tid v1028 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1010 
=== Predecessor ===
v1029 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" 
    successors 
    xhandlers
    flags 
    probability 4561760078995370921
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1010 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1011 v1028 
=== Succesors ===
next: v1031 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1011 v1028 #next: v1031  <|@  <|@
tid ?328 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 127
stackSize: 0
=== Inputs ===
outerFrameState: ?331 
values: - - 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1031 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?331 values: - - virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1031 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?328 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1010 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?328  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -264033 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" "B163" 
    xhandlers
    flags 
    probability 4586795008139198835
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1027 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:134) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1046 
=== Usages ===
=== Predecessor ===
v1030 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1046  <|@  <|@
f <@~|@floating>@ <|@
tid j1035 <|@
result v207|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:185) [bci: 37]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i3671 
=== Succesors ===
=== Usages ===
v3698 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i3671  <|@  <|@
f <@~|@floating>@ <|@
tid v3698 <|@
result [v162|QWORD[.] + v207|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1651 
index: j1035 
=== Succesors ===
=== Usages ===
v1046 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1651 index: j1035  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1046 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.RawStoreNode.storeObject(Object, long, Object, JavaKind, LocationIdentity, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.unrolledArraycopyWork(ArrayCopySnippets.java:198) [bci: 134]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyUnrolledSnippet(ArrayCopySnippets.java:137) [bci: 51]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3698 
value: i1260 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1051 
=== Usages ===
=== Predecessor ===
v1027 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3698 value: i1260 stateAfter: - lastLocationAccess: - #next: v1051  <|@  <|@
f <@~|@floating>@ <|@
tid i262 <|@
result v208|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
stamp: i32
=== Inputs ===
x: i3671 
y: i71 
=== Succesors ===
=== Usages ===
v1051 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i3671 y: i71  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1051 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i262 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v1052 
=== Usages ===
=== Predecessor ===
v1046 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i262 stateAfter: - lastLocationAccess: - #next: v1052  <|@  <|@
f <@~|@floating>@ <|@
tid v3902 <|@
result [v1|DWORD * 8 + 464] <|@
d <@d|@=== Debug Properties ===
displacement: 464
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: v3650 
=== Succesors ===
=== Usages ===
v1052 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: v3650  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1052 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ANY_LOCATION
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: Method*!
=== Inputs ===
stateBefore: - 
guard: - 
address: v3902 
=== Succesors ===
next: v24 
=== Usages ===
v21 
=== Predecessor ===
v1051 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3902 #next: v24  <|@  <|@
f <@~|@floating>@ <|@
tid v21 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v1052 
y: v20 
=== Succesors ===
=== Usages ===
v24 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v1052 y: v20  <|@  <|@
f <@*|@fixed>@ <|@
tid v24 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v21 
=== Succesors ===
trueSuccessor: v22 
falseSuccessor: v23 
=== Usages ===
=== Predecessor ===
v1052 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v21 #trueSuccessor: v22 #falseSuccessor: v23  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOVSXD v205|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v162|QWORD[.] + v207|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = INC v205|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    probability 4586728666268164791
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v22 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: j1073 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j1073  <|@  <|@
f <@~|@floating>@ <|@
tid v3699 <|@
result [v0|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
j1073 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j1073 <|@
result v209|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: ANY_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObjectIntrinsic(Object, long, LocationIdentity, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.loadWordFromObject(HotSpotReplacementsUtil.java:752) [bci: 29]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:65) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3699 
=== Succesors ===
next: v1061 
=== Usages ===
j1057 j1062 
=== Predecessor ===
v22 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3699 #next: v1061  <|@  <|@
f <@~|@floating>@ <|@
tid j1057 <|@
result v210|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:68) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 7] ⇈0000000000000007
=== Inputs ===
x: j1073 
y: j980 
=== Succesors ===
=== Usages ===
v1058 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: j1073 y: j980  <|@  <|@
f <@~|@floating>@ <|@
tid v1058 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 38]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j1057 
y: j981 
=== Succesors ===
=== Usages ===
v1061 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: j1057 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v1061 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:69) [bci: 44]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.99
=== Inputs ===
condition: v1058 
=== Succesors ===
trueSuccessor: v1060 
falseSuccessor: v1059 
=== Usages ===
=== Predecessor ===
j1073 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1058 #trueSuccessor: v1060 #falseSuccessor: v1059  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = AND v209|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v210|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4586662987815841087
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1060 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 47]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1070 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1070  <|@  <|@
f <@~|@floating>@ <|@
tid j1062 <|@
result v211|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 54]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i64 [0 - 72057594037927935] ⇈00ffffffffffffff
=== Inputs ===
x: j1073 
y: i963 
=== Succesors ===
=== Usages ===
i1063 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j1073 y: i963  <|@  <|@
f <@~|@floating>@ <|@
tid i1063 <|@
result v212|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$65/490307730@2c67a154
getReverseOp: org.graalvm.compiler.nodes.calc.NarrowNode$$Lambda$66/674609170@4ba55d0a
inputBits: 64
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:70) [bci: 60]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
resultBits: 32
stamp: i32
=== Inputs ===
value: j1062 
=== Succesors ===
=== Usages ===
v1064 i1077 
=== Predecessor ===
- >@ <|@
instruction <@Narrow|@org.graalvm.compiler.nodes.calc.NarrowNode>@ value: j1062  <|@  <|@
f <@~|@floating>@ <|@
tid v1064 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 72]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i1063 
y: i82 
=== Succesors ===
=== Usages ===
v1070 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i1063 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1070 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:71) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v1064 
=== Succesors ===
trueSuccessor: v1069 
falseSuccessor: v1068 
=== Usages ===
=== Predecessor ===
v1060 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1064 #trueSuccessor: v1069 #falseSuccessor: v1068  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD = SHR v209|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOV v211|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v212|DWORD, y: v212|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B159" 
    xhandlers
    flags 
    probability 4556958397122660686
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1069 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1067 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1067  <|@  <|@
f <@*|@fixed>@ <|@
tid v1067 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
v1069 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B156 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4586597966148040620
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1068 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:72) [bci: 86]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1078 
=== Usages ===
=== Predecessor ===
v1070 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1078  <|@  <|@
f <@*|@fixed>@ <|@
tid v1078 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
v1068 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|DWORD] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B159" 
    xhandlers
    flags 
    probability 4557042465541635027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1059 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1065 
=== Usages ===
=== Predecessor ===
v1061 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1065  <|@  <|@
f <@*|@fixed>@ <|@
tid v1065 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1066 
=== Predecessor ===
v1059 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B160" 
    xhandlers
    flags 
    probability 4561504030959518352
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1066 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 88]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1065 v1067 
=== Succesors ===
next: i1071 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1065 v1067 #next: i1071  <|@  <|@
tid ?259 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 19]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?263 
values: a126 - i71 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i1071 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?263 values: a126 - i71 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i1071 <|@
result v213|DWORD <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: identity_hashcode(Object)int
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.identityHashCode(ForeignCallDescriptor, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.computeHashCode(HashCodeSnippets.java:75) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.HashCodeSnippets.identityHashCodeSnippet(HashCodeSnippets.java:61) [bci: 21]
at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
=== Inputs ===
stateAfter: - 
stateDuring: ?259 
arguments: a1 
=== Succesors ===
next: v1079 
=== Usages ===
i1077 
=== Predecessor ===
v1066 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?259 arguments: a1 #next: v1079  <|@  <|@
f <@*|@fixed>@ <|@
tid v1079 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1075 
=== Predecessor ===
i1071 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|DWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4586728666268164790
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1077 <|@
result v214|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v1075 
values: i1063 i1071 
=== Succesors ===
=== Usages ===
i511 i512 i520 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1075 values: i1063 i1071  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1075 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.IdentityHashCodeNode.identityHashCode(Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.ObjectSubstitutions.hashCode(ObjectSubstitutions.java:38) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1078 v1079 
=== Succesors ===
next: v523 
=== Usages ===
i1077 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1078 v1079 #next: v523  <|@  <|@
f <@~|@floating>@ <|@
tid i520 <|@
result v215|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i1077 
=== Succesors ===
=== Usages ===
i524 i528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i1077  <|@  <|@
f <@~|@floating>@ <|@
tid i528 <|@
result v217|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i520 
=== Succesors ===
=== Usages ===
i516 i515 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid i524 <|@
result v219|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i520 
=== Succesors ===
=== Usages ===
v525 i509 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i520  <|@  <|@
f <@~|@floating>@ <|@
tid v525 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i524 
y: i96 
=== Succesors ===
=== Usages ===
v523 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i524 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v523 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v525 
=== Succesors ===
trueSuccessor: v521 
falseSuccessor: v522 
=== Usages ===
=== Predecessor ===
v1075 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v525 #trueSuccessor: v521 #falseSuccessor: v522  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v214|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = LZCNT v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = SUB (x: v216|DWORD, ~y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = SUB (x: v218|DWORD, ~y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v219|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B168" 
    xhandlers
    flags 
    probability 4578169741069550642
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v521 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v529 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v529  <|@  <|@
f <@*|@fixed>@ <|@
tid v529 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v214|DWORD, v217|DWORD] destination: B161 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B167" 
    xhandlers
    flags 
    probability 4584974636446040490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v523 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v522 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|DWORD, v214|DWORD, v217|DWORD] destination: B162 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B164" 
    xhandlers
    flags 
    probability 4557127383136558603
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Object.toString(Object.java:236) [bci: 23]
stamp: void
=== Inputs ===
=== Succesors ===
next: v600 
=== Usages ===
=== Predecessor ===
v24 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v600  <|@  <|@
f <@*|@fixed>@ <|@
tid v600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
v23 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B100" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4576798227856352455
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v600 v602 
=== Succesors ===
next: i29 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v600 v602 #next: i29  <|@  <|@
tid v1083 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Virtual
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@537c397
stamp: void
targetMethod: HotSpotMethod<Object.hashCode()>
=== Inputs ===
arguments: a1 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a1  <|@  <|@
tid ?1470 <|@
d <@d|@=== Debug Properties ===
bci: 23
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a126 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
i29 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a126 virtualObjectMappings: ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i29 <|@
result v220|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 23
nodeSourcePosition: at java.lang.Object.hashCode() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 23]
polymorphic: false
stamp: i32
targetMethod: Direct#Object.hashCode
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v1083 
stateDuring: ?1470 
=== Succesors ===
next: v74 
=== Usages ===
i512 i69 i511 
=== Predecessor ===
v599 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v1083 stateDuring: ?1470 #next: v74  <|@  <|@
f <@~|@floating>@ <|@
tid i69 <|@
result v221|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.numberOfLeadingZeros(int) [bci: -1]
at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 3]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
value: i29 
=== Succesors ===
=== Usages ===
i70 i94 
=== Predecessor ===
- >@ <|@
instruction <@AMD64CountLeadingZeros|@org.graalvm.compiler.replacements.amd64.AMD64CountLeadingZerosNode>@ value: i29  <|@  <|@
f <@~|@floating>@ <|@
tid i70 <|@
result v223|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:311) [bci: 6]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 32] ⇈000000000000003f
=== Inputs ===
x: i68 
y: i69 
=== Succesors ===
=== Usages ===
i516 i515 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i68 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid i94 <|@
result v225|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 12]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [3 - 35] ⇈000000000000003f
=== Inputs ===
x: i93 
y: i69 
=== Succesors ===
=== Usages ===
i509 v97 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i93 y: i69  <|@  <|@
f <@~|@floating>@ <|@
tid v97 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i94 
y: i96 
=== Succesors ===
=== Usages ===
v74 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i94 y: i96  <|@  <|@
f <@*|@fixed>@ <|@
tid v74 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.26706320871864775
=== Inputs ===
condition: v97 
=== Succesors ===
trueSuccessor: v72 
falseSuccessor: v73 
=== Usages ===
=== Predecessor ===
i29 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v97 #trueSuccessor: v72 #falseSuccessor: v73  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 23]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = LZCNT v220|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SUB (x: v222|DWORD, ~y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = SUB (x: v224|DWORD, ~y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v225|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B168" 
    xhandlers
    flags 
    probability 4568176288968000960
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v72 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v72 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v220|DWORD, v223|DWORD] destination: B165 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4574924301083436718
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v73 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v74 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v505 
=== Predecessor ===
v73 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, v220|DWORD, v223|DWORD] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B162" "B99" 
    successors "B168" 
    xhandlers
    flags 
    probability 4604639499959146547
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i509 <|@
result v226|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [3 - 35] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v505 
values: i94 i524 i715 
=== Succesors ===
=== Usages ===
i95 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i94 i524 i715  <|@  <|@
f <@~|@floating>@ <|@
tid i512 <|@
result v227|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v505 
values: i29 i1077 i987 
=== Succesors ===
=== Usages ===
i511 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i29 i1077 i987  <|@  <|@
f <@~|@floating>@ <|@
tid i516 <|@
result v228|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 32] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v505 
values: i70 i528 i717 
=== Succesors ===
=== Usages ===
i515 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v505 values: i70 i528 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v506 v508 v719 
=== Succesors ===
next: v75 
=== Usages ===
i509 i512 i516 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v506 v508 v719 #next: v75  <|@  <|@
f <@~|@floating>@ <|@
tid i95 <|@
result v229|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 14]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 8] ⇈000000000000000f
=== Inputs ===
x: i509 
y: i92 
=== Succesors ===
=== Usages ===
i78 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i509 y: i92  <|@  <|@
f <@*|@fixed>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v76 
=== Predecessor ===
v505 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|DWORD, v227|DWORD, v228|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = SHR v226|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v227|DWORD, v228|DWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" "B161" "B98" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i78 <|@
result v230|DWORD <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 8] ⇈000000000000000f
valueDescription: i32
=== Inputs ===
merge: v76 
values: i95 i71 i71 i71 
=== Succesors ===
=== Usages ===
?513 a2171 i103 ?357 i267 ?270 j2269 i869 i277 ?279 v823 v2190 i2149 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i95 i71 i71 i71  <|@  <|@
f <@~|@floating>@ <|@
tid i511 <|@
result v231|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v76 
values: i512 i29 i1077 i987 
=== Succesors ===
=== Usages ===
i102 ?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i512 i29 i1077 i987  <|@  <|@
f <@~|@floating>@ <|@
tid i515 <|@
result v232|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [0 - 32] ⇈000000000000003f
valueDescription: i32
=== Inputs ===
merge: v76 
values: i516 i70 i528 i717 
=== Succesors ===
=== Usages ===
?514 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v76 values: i516 i70 i528 i717  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 10]
at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v75 v77 v529 v718 
=== Succesors ===
next: a3672 
=== Usages ===
i78 i511 i515 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v75 v77 v529 v718 #next: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a3672 <|@
result v233|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: n# [C
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
=== Succesors ===
next: v1361 
=== Usages ===
a837 v838 v3693 v3712 
=== Predecessor ===
v76 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3692 #next: v1361  <|@  <|@
f <@~|@floating>@ <|@
tid v838 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
v1361 
=== Predecessor ===
- >@ <|@
instruction <@IsNull|@org.graalvm.compiler.nodes.calc.IsNullNode>@ value: a3672  <|@  <|@
tid ?38 <|@
d <@d|@=== Debug Properties ===
bci: 26
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 1
=== Inputs ===
outerFrameState: - 
values: - a126 
=== Succesors ===
=== Usages ===
?98 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: - a126  <|@  <|@
tid ?98 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<Integer.toHexString(int)>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 233
stackSize: 0
=== Inputs ===
outerFrameState: ?38 
values: - 
=== Succesors ===
=== Usages ===
?514 ?124 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?38 values: -  <|@  <|@
f <@~|@floating>@ <|@
tid i35 <|@
result int[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.toHexString(Integer.java:233) [bci: 1]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: 4
stableDimension: 0
stamp: i32 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i32
value: int[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i110 ?514 ?104 ?109 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
tid ?514 <|@
d <@d|@=== Debug Properties ===
bci: 16
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Integer.java
sourceLine: 312
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: i511 i35 i515 - - 
=== Succesors ===
=== Usages ===
?513 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: i511 i35 i515 - -  <|@  <|@
tid ?513 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<Math.max(int, int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Math.java
sourceLine: 1252
stackSize: 1
=== Inputs ===
outerFrameState: ?514 
values: - - i78 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1359 a2171 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?514 values: - - i78 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1361 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v838 
=== Succesors ===
trueSuccessor: v1360 
falseSuccessor: v1358 
=== Usages ===
=== Predecessor ===
a3672 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v838 #trueSuccessor: v1360 #falseSuccessor: v1358  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD, v231|DWORD, v232|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD[.] = MOV [v134|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|DWORD[.], y: v233|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1360 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1359 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1359  <|@  <|@
f <@*|@fixed>@ <|@
tid v1359 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 839
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
reason: NullCheckException
speculation: Object[d.a@437821581]
stamp: void
=== Inputs ===
stateBefore: ?513 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1360 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?513  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -214795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v234|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v230|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: v231|DWORD int[4|0x4] v232|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:10, 16, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1358 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2151 
=== Usages ===
=== Predecessor ===
v1361 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2151  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2151 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2187 
=== Usages ===
v3769 v3770 
=== Predecessor ===
v1358 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2187  <|@  <|@
f <@~|@floating>@ <|@
tid v3769 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2151 
index: - 
=== Succesors ===
=== Usages ===
j2187 v2189 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2187 <|@
result v235|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
=== Succesors ===
next: j2188 
=== Usages ===
j2155 v3771 v3772 a2170 v3777 v3773 v3774 v3775 v3776 
=== Predecessor ===
j2151 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3769 #next: j2188  <|@  <|@
f <@~|@floating>@ <|@
tid v3770 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2151 
index: - 
=== Succesors ===
=== Usages ===
j2188 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2151 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2188 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3770 
=== Succesors ===
next: v2166 
=== Usages ===
v2160 
=== Predecessor ===
j2187 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3770 #next: v2166  <|@  <|@
f <@~|@floating>@ <|@
tid i2149 <|@
result v236|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 16] ⇈000000000000001e
=== Inputs ===
x: i78 
y: i71 
=== Succesors ===
=== Usages ===
i2178 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i78 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2178 <|@
result v237|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [23 - 39] ⇊0000000000000001 ⇈000000000000003f
=== Inputs ===
x: i2149 
y: i2048 
=== Succesors ===
=== Usages ===
i2150 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2149 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2150 <|@
result v238|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 56] ⇈0000000000000038
=== Inputs ===
x: i2178 
y: i2018 
=== Succesors ===
=== Usages ===
j2468 v3773 v3774 v3775 v3776 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2178 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2468 <|@
result v239|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
resultBits: 64
stamp: i64 [0 - 56] ⇈0000000000000038
=== Inputs ===
value: i2150 
=== Succesors ===
=== Usages ===
j2155 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i2150  <|@  <|@
f <@~|@floating>@ <|@
tid j2155 <|@
result v240|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i64
=== Inputs ===
x: j2187 
y: j2468 
=== Succesors ===
=== Usages ===
v2160 v2189 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2187 y: j2468  <|@  <|@
f <@~|@floating>@ <|@
tid v2160 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2188 
y: j2155 
=== Succesors ===
=== Usages ===
v2166 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2188 y: j2155  <|@  <|@
f <@*|@fixed>@ <|@
tid v2166 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2160 
=== Succesors ===
trueSuccessor: v2165 
falseSuccessor: v2164 
=== Usages ===
=== Predecessor ===
j2188 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2160 #trueSuccessor: v2165 #falseSuccessor: v2164  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = SHL v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = LEA [v236|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = AND v237|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = MOV v238|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = ADD (x: v235|QWORD, y: v239|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2165 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2171 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2171 <|@
result v241|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?513 
arguments: v1799 i78 i82 
=== Succesors ===
next: v2174 
=== Usages ===
a2175 
=== Predecessor ===
v2165 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?513 arguments: v1799 i78 i82 #next: v2174  <|@  <|@
f <@*|@fixed>@ <|@
tid v2174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
a2171 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v230|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v230|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: v231|DWORD int[4|0x4] v232|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26] <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD[.]] destination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2164 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2189 
=== Usages ===
=== Predecessor ===
v2166 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2189  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2189 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3769 
value: j2155 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2180 
=== Usages ===
=== Predecessor ===
v2164 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3769 value: j2155 stateAfter: - lastLocationAccess: - #next: v2180  <|@  <|@
f <@~|@floating>@ <|@
tid v3773 <|@
result [v235|QWORD + v238|DWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2180 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2180 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3773 
=== Succesors ===
next: v2182 
=== Usages ===
=== Predecessor ===
v2189 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3773 #next: v2182  <|@  <|@
f <@~|@floating>@ <|@
tid v3774 <|@
result [v235|QWORD + v238|DWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2182 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2182 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3774 
=== Succesors ===
next: v2184 
=== Usages ===
=== Predecessor ===
v2180 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3774 #next: v2184  <|@  <|@
f <@~|@floating>@ <|@
tid v3775 <|@
result [v235|QWORD + v238|DWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2184 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2184 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3775 
=== Succesors ===
next: v2186 
=== Usages ===
=== Predecessor ===
v2182 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3775 #next: v2186  <|@  <|@
f <@~|@floating>@ <|@
tid v3776 <|@
result [v235|QWORD + v238|DWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: i2150 
=== Succesors ===
=== Usages ===
v2186 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: i2150  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2186 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
address: v3776 
=== Succesors ===
next: v2190 
=== Usages ===
=== Predecessor ===
v2184 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3776 #next: v2190  <|@  <|@
f <@~|@floating>@ <|@
tid v3771 <|@
result [v235|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2190 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2190 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3771 
value: i78 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2191 
=== Usages ===
=== Predecessor ===
v2186 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3771 value: i78 stateAfter: - lastLocationAccess: - #next: v2191  <|@  <|@
f <@~|@floating>@ <|@
tid v3772 <|@
result [v235|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2191 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2191 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3772 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2194 
=== Usages ===
=== Predecessor ===
v2190 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3772 value: j981 stateAfter: - lastLocationAccess: - #next: v2194  <|@  <|@
f <@~|@floating>@ <|@
tid v3777 <|@
result [v235|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2187 
index: - 
=== Succesors ===
=== Usages ===
v2194 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2187 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2194 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3777 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2169 
=== Usages ===
=== Predecessor ===
v2191 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3777 value: v2413 stateAfter: - lastLocationAccess: - #next: v2169  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2169 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2170 
=== Usages ===
=== Predecessor ===
v2194 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2170  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2170 <|@
result v242|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2187 
=== Succesors ===
next: v2172 
=== Usages ===
a2175 
=== Predecessor ===
v2169 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2187 #next: v2172  <|@  <|@
f <@*|@fixed>@ <|@
tid v2172 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2173 
=== Predecessor ===
a2170 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v240|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v235|QWORD + 12], y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v235|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v235|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[.] = MOVE v235|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|QWORD[.]] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B171" 
    successors "B174" "B175" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2175 <|@
result v243|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2173 
values: a2170 a2171 
=== Succesors ===
=== Usages ===
v3717 a1659 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2173 values: a2170 a2171  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2172 v2174 
=== Succesors ===
next: v3059 
=== Usages ===
a2175 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2172 v2174 #next: v3059  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3059 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2507 
=== Usages ===
j3061 
=== Predecessor ===
v2173 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2507  <|@  <|@
f <@~|@floating>@ <|@
tid v3717 <|@
result [v243|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2175 
index: - 
=== Succesors ===
=== Usages ===
j3061 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2175 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3061 <|@
result v244|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3059 
address: v3717 
=== Succesors ===
=== Usages ===
v3838 v3839 v3840 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3059 address: v3717  <|@  <|@
f <@~|@floating>@ <|@
tid v3840 <|@
result [v244|QWORD[.]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j3061 
index: - 
=== Succesors ===
=== Usages ===
v3580 v3582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2269 <|@
result v245|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$16/887152589@6b9fc47b
getReverseOp: org.graalvm.compiler.nodes.calc.ZeroExtendNode$$Lambda$17/1263733897@4844aec9
inputAlwaysPositive: true
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [0 - 8] ⇈000000000000000f
=== Inputs ===
value: i78 
=== Succesors ===
=== Usages ===
v2270 j3097 j3085 j3089 j3093 
=== Predecessor ===
- >@ <|@
instruction <@ZeroExtend|@org.graalvm.compiler.nodes.calc.ZeroExtendNode>@ value: i78  <|@  <|@
f <@~|@floating>@ <|@
tid j3085 <|@
result v246|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-8 - 0]
=== Inputs ===
x: j2269 
y: j3084 
=== Succesors ===
=== Usages ===
v3086 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3086 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3085 
y: j964 
=== Succesors ===
=== Usages ===
v2507 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3085 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2507 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3086 
=== Succesors ===
trueSuccessor: v2506 
falseSuccessor: v2505 
=== Usages ===
=== Predecessor ===
v3059 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3086 #trueSuccessor: v2506 #falseSuccessor: v2505  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v243|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = LEA [v243|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = LEA [v245|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v246|QWORD, y: v246|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2506 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2510 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2510  <|@  <|@
f <@*|@fixed>@ <|@
tid v2510 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
v2506 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2505 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3582 
=== Usages ===
=== Predecessor ===
v2507 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3582  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3582 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3840 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2500 
=== Usages ===
=== Predecessor ===
v2505 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3840 value: v3647 stateAfter: - lastLocationAccess: - #next: v2500  <|@  <|@
f <@*|@fixed>@ <|@
tid v2500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2501 
=== Predecessor ===
v3582 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.]], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3075 <|@
result v247|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈0000000000000008
valueDescription: i64
=== Inputs ===
merge: v2501 
values: j1752 j964 
=== Succesors ===
=== Usages ===
v3090 j3069 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2501 values: j1752 j964  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2501 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2500 v2510 
=== Succesors ===
next: v2522 
=== Usages ===
j3075 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2500 v2510 #next: v2522  <|@  <|@
f <@~|@floating>@ <|@
tid j3089 <|@
result v248|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4 - 4]
=== Inputs ===
x: j2269 
y: j3088 
=== Succesors ===
=== Usages ===
v3090 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3090 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3089 
y: j3075 
=== Succesors ===
=== Usages ===
v2522 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3089 y: j3075  <|@  <|@
f <@*|@fixed>@ <|@
tid v2522 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3090 
=== Succesors ===
trueSuccessor: v2521 
falseSuccessor: v2520 
=== Usages ===
=== Predecessor ===
v2501 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3090 #trueSuccessor: v2521 #falseSuccessor: v2520  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v245|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v247|QWORD, y: v248|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2521 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2525 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2525  <|@  <|@
f <@*|@fixed>@ <|@
tid v2525 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
v2521 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v247|QWORD] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2520 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3580 
=== Usages ===
=== Predecessor ===
v2522 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3580  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3580 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3840 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2511 
=== Usages ===
=== Predecessor ===
v2520 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3840 value: v3646 stateAfter: - lastLocationAccess: - #next: v2511  <|@  <|@
f <@*|@fixed>@ <|@
tid v2511 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2512 
=== Predecessor ===
v3580 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.]], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" 
    successors "B180" "B181" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3069 <|@
result v249|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 8] ⇈000000000000000c
valueDescription: i64
=== Inputs ===
merge: v2512 
values: j3080 j3075 
=== Succesors ===
=== Usages ===
v3839 j3074 j3062 v3094 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2512 values: j3080 j3075  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2512 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2511 v2525 
=== Succesors ===
next: v2528 
=== Usages ===
j3069 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2511 v2525 #next: v2528  <|@  <|@
f <@~|@floating>@ <|@
tid j3093 <|@
result v250|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2 - 6]
=== Inputs ===
x: j2269 
y: j3092 
=== Succesors ===
=== Usages ===
v3094 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3094 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3093 
y: j3069 
=== Succesors ===
=== Usages ===
v2528 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3093 y: j3069  <|@  <|@
f <@*|@fixed>@ <|@
tid v2528 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3094 
=== Succesors ===
trueSuccessor: v2527 
falseSuccessor: v2526 
=== Usages ===
=== Predecessor ===
v2512 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3094 #trueSuccessor: v2527 #falseSuccessor: v2526  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v245|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2527 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2531 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2531  <|@  <|@
f <@*|@fixed>@ <|@
tid v2531 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v2527 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v249|QWORD] destination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2526 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3578 
=== Usages ===
=== Predecessor ===
v2528 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3578  <|@  <|@
f <@~|@floating>@ <|@
tid v3839 <|@
result [v244|QWORD[.] + v249|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3061 
index: j3069 
=== Succesors ===
=== Usages ===
v3578 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: j3069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3578 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3839 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2514 
=== Usages ===
=== Predecessor ===
v2526 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3839 value: v3645 stateAfter: - lastLocationAccess: - #next: v2514  <|@  <|@
f <@~|@floating>@ <|@
tid j3074 <|@
result v251|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [2 - 10] ⇊0000000000000002 ⇈000000000000000e
=== Inputs ===
x: j3069 
y: j3064 
=== Succesors ===
=== Usages ===
j3062 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3069 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2514 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2515 
=== Predecessor ===
v3578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v249|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = LEA [v249|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v251|QWORD] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B180" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3062 <|@
result v252|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64 [0 - 10] ⇈000000000000000e
valueDescription: i64
=== Inputs ===
merge: v2515 
values: j3074 j3069 
=== Succesors ===
=== Usages ===
v3838 v3098 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2515 values: j3074 j3069  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2515 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2514 v2531 
=== Succesors ===
next: v2534 
=== Usages ===
j3062 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2514 v2531 #next: v2534  <|@  <|@
f <@~|@floating>@ <|@
tid j3097 <|@
result v253|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-1 - 7]
=== Inputs ===
x: j2269 
y: j3096 
=== Succesors ===
=== Usages ===
v3098 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2269 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3098 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3097 
y: j3062 
=== Succesors ===
=== Usages ===
v2534 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3097 y: j3062  <|@  <|@
f <@*|@fixed>@ <|@
tid v2534 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3098 
=== Succesors ===
trueSuccessor: v2533 
falseSuccessor: v2532 
=== Usages ===
=== Predecessor ===
v2515 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3098 #trueSuccessor: v2533 #falseSuccessor: v2532  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = DEC v245|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|QWORD, y: v253|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2533 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2537 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2537  <|@  <|@
f <@*|@fixed>@ <|@
tid v2537 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
v2533 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2532 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3576 
=== Usages ===
=== Predecessor ===
v2534 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3576  <|@  <|@
f <@~|@floating>@ <|@
tid v3838 <|@
result [v244|QWORD[.] + v252|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3061 
index: j3062 
=== Succesors ===
=== Usages ===
v3576 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3061 index: j3062  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3576 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3838 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2517 
=== Usages ===
=== Predecessor ===
v2532 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3838 value: i3644 stateAfter: - lastLocationAccess: - #next: v2517  <|@  <|@
f <@*|@fixed>@ <|@
tid v2517 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2518 
=== Predecessor ===
v3576 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v244|QWORD[.] + v252|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2518 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2517 v2537 
=== Succesors ===
next: a1659 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2517 v2537 #next: a1659  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1659 <|@
result v243|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.toUnsignedString0(Integer.java:313) [bci: 21]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2175 
=== Succesors ===
next: v100 
=== Usages ===
?109 ?124 ?390 v3690 ?104 j2262 
=== Predecessor ===
v2518 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2175 #next: v100  <|@  <|@
tid ?124 <|@
d <@d|@=== Debug Properties ===
bci: 31
code: ResolvedJavaMethodBytecode<Integer.toUnsignedString0(int, int)>
duringCall: true
localsSize: 5
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 315
stackSize: 0
=== Inputs ===
outerFrameState: ?98 
values: - - - - a1659 
=== Succesors ===
=== Usages ===
?104 ?109 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?98 values: - - - - a1659  <|@  <|@
f <@~|@floating>@ <|@
tid a106 <|@
result v254|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 23]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rawvalue: char[36]{0, 1, 2, 3, 4, ...}
stableDimension: 0
stamp: a!# [C
stampKind: a -
value: Object[char[36]{0, 1, 2, 3, 4, ...}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v101 
=== Predecessor ===
a1659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|DWORD, v230|DWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B306" 
    successors "B187" "B307" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i102 <|@
result v255|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i511 i110 
=== Succesors ===
=== Usages ===
?104 ?109 i110 v122 i123 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i511 i110  <|@  <|@
f <@~|@floating>@ <|@
tid i103 <|@
result v256|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v101 
values: i78 i105 
=== Succesors ===
=== Usages ===
?104 i105 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v101 values: i78 i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: true
inversionCount: 0
loopFrequency: 2.1412951457789284
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v100 
=== Succesors ===
next: v1366 
=== Usages ===
i102 i103 v111 v118 v1382 v1365 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v100 #next: v1366  <|@  <|@
f <@~|@floating>@ <|@
tid i105 <|@
result v257|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 17]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32
=== Inputs ===
x: i103 
y: i99 
=== Succesors ===
=== Usages ===
i103 v3690 ?109 v116 v823 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i103 y: i99  <|@  <|@
f <@~|@floating>@ <|@
tid v823 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i78 
=== Succesors ===
=== Usages ===
v1366 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i105 y: i78  <|@  <|@
f <@*|@fixed>@ <|@
tid v1366 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v823 
=== Succesors ===
trueSuccessor: v1362 
falseSuccessor: v1365 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v823 #trueSuccessor: v1362 #falseSuccessor: v1365  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v255|DWORD, v256|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = DEC v256|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v230|DWORD, y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B304" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1362 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3673 
=== Usages ===
v831 
=== Predecessor ===
v1366 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3673  <|@  <|@
f <@~|@floating>@ <|@
tid i123 <|@
result v258|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 29]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 15] ⇈000000000000000f
=== Inputs ===
x: i102 
y: i120 
=== Succesors ===
=== Usages ===
v3689 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i102 y: i120  <|@  <|@
f <@~|@floating>@ <|@
tid v3689 <|@
result [v254|QWORD[.] + v258|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a106 
index: i123 
=== Succesors ===
=== Usages ===
i3673 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a106 index: i123  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3673 <|@
result v259|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: Array: char
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 30]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: - 
address: v3689 
=== Succesors ===
next: v831 
=== Usages ===
v831 
=== Predecessor ===
v1362 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3689 #next: v831  <|@  <|@
f <@~|@floating>@ <|@
tid v3690 <|@
result [v243|QWORD[.] + v257|DWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a1659 
index: i105 
=== Succesors ===
=== Usages ===
v831 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1659 index: i105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Array: char
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v1362 
address: v3690 
value: i3673 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v115 
=== Usages ===
=== Predecessor ===
i3673 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v1362 address: v3690 value: i3673 stateAfter: - lastLocationAccess: - #next: v115  <|@  <|@
f <@~|@floating>@ <|@
tid v122 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
x: i102 
y: i121 
=== Succesors ===
=== Usages ===
v115 
=== Predecessor ===
- >@ <|@
instruction <@IntegerTest|@org.graalvm.compiler.nodes.calc.IntegerTestNode>@ x: i102 y: i121  <|@  <|@
f <@*|@fixed>@ <|@
tid v115 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 37]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.4670070830596475
=== Inputs ===
condition: v122 
=== Succesors ===
trueSuccessor: v111 
falseSuccessor: v114 
=== Usages ===
=== Predecessor ===
v831 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v122 #trueSuccessor: v111 #falseSuccessor: v114  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = AND v255|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOVSX [v254|QWORD[.] + v258|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v243|QWORD[.] + v257|DWORD * 2 + 16], y: v259|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v255|DWORD y: -16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v111 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:339) [bci: 45]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: i3674 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: i3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3674 <|@
result v260|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 16]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: i3675 
=== Usages ===
i267 i553 
=== Predecessor ===
v111 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: i3675  <|@  <|@
f <@~|@floating>@ <|@
tid v3693 <|@
result [v233|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
i3675 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3675 <|@
result v261|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 5]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3693 
=== Succesors ===
next: v346 
=== Usages ===
i342 i1635 v1608 
=== Predecessor ===
i3674 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3693 #next: v346  <|@  <|@
f <@~|@floating>@ <|@
tid i267 <|@
result v262|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 20]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i78 
y: i3674 
=== Succesors ===
=== Usages ===
v897 i342 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i3674  <|@  <|@
f <@~|@floating>@ <|@
tid i342 <|@
result v263|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 6]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i267 
y: i3675 
=== Succesors ===
=== Usages ===
v343 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i267 y: i3675  <|@  <|@
f <@~|@floating>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i342 
y: i71 
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i342 y: i71  <|@  <|@
tid a130 <|@
d <@d|@=== Debug Properties ===
fields: [Ljdk.vm.ci.hotspot.HotSpotResolvedJavaField;@5a86b9fc
hasIdentity: true
objectId: -1
stamp: a!# Ljava/lang/String;
type: HotSpotType<Ljava/lang/String;, resolved>
=== Inputs ===
=== Succesors ===
=== Usages ===
?270 ?390 ?357 
=== Predecessor ===
- >@ <|@
instruction <@VirtualInstance|@org.graalvm.compiler.nodes.virtual.VirtualInstanceNode>@  <|@  <|@
tid ?390 <|@
d <@d|@=== Debug Properties ===
=== Inputs ===
object: a130 
values: a1659 - 
=== Succesors ===
=== Usages ===
?350 ?1471 ?270 
=== Predecessor ===
- >@ <|@
instruction <@VirtualObjectState|@org.graalvm.compiler.virtual.nodes.VirtualObjectState>@ object: a130 values: a1659 -  <|@  <|@
f <@~|@floating>@ <|@
tid a837 <|@
result v264|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 2]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: Uncompress
stamp: a# [C
=== Inputs ===
value: a3672 
=== Succesors ===
=== Usages ===
?1471 a552 ?350 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a3672  <|@  <|@
tid ?225 <|@
d <@d|@=== Debug Properties ===
bci: 29
code: ResolvedJavaMethodBytecode<Object.toString()>
duringCall: true
localsSize: 1
locksSize: 0
rethrowException: false
sourceFile: Object.java
sourceLine: 236
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: - 
=== Succesors ===
=== Usages ===
?281 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: -  <|@  <|@
tid ?281 <|@
d <@d|@=== Debug Properties ===
bci: 2
code: ResolvedJavaMethodBytecode<StringBuilder.append(String)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: StringBuilder.java
sourceLine: 136
stackSize: 0
=== Inputs ===
outerFrameState: ?225 
values: a126 - 
=== Succesors ===
=== Usages ===
?270 ?357 ?279 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?225 values: a126 -  <|@  <|@
f <@*|@fixed>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:123) [bci: 7]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.9529874218685634
=== Inputs ===
condition: v343 
=== Succesors ===
trueSuccessor: v344 
falseSuccessor: v345 
=== Usages ===
=== Predecessor ===
i3675 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v343 #trueSuccessor: v344 #falseSuccessor: v345  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v233|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = ADD (x: v260|DWORD, y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SUB (x: v262|DWORD, ~y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v264|QWORD[.] = UNCOMPRESSPOINTER (input: v233|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v263|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B238" 
    xhandlers
    flags 
    probability 4606580279843968346
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v344 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v540 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v540  <|@  <|@
f <@*|@fixed>@ <|@
tid v540 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
v344 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v264|QWORD[.], v260|DWORD] destination: B189 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 10]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i349 
=== Usages ===
=== Predecessor ===
v346 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i349  <|@  <|@
tid v897 <|@
d <@d|@=== Debug Properties ===
callType: JavaCall
invokeKind: Special
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
returnStamp: i32
signature: [Ljdk.vm.ci.meta.JavaType;@3f3eef9b
stamp: void
targetMethod: HotSpotMethod<AbstractStringBuilder.newCapacity(int)>
=== Inputs ===
arguments: a792 i267 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotDirectCallTarget|@org.graalvm.compiler.hotspot.nodes.HotSpotDirectCallTargetNode>@ arguments: a792 i267  <|@  <|@
tid ?357 <|@
d <@d|@=== Debug Properties ===
bci: 21
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 448
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 a130 i78 
=== Succesors ===
=== Usages ===
?350 ?1471 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 a130 i78  <|@  <|@
tid ?1471 <|@
d <@d|@=== Debug Properties ===
bci: 17
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 125
stackSize: 2
=== Inputs ===
outerFrameState: ?357 
values: - - a126 a837 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
i349 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?357 values: - - a126 a837 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i349 <|@
result v265|DWORD <|@
d <@d|@=== Debug Properties ===
bci: 17
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
polymorphic: false
stamp: i32
targetMethod: Direct#AbstractStringBuilder.newCapacity
useForInlining: true
=== Inputs ===
stateAfter: - 
classInit: - 
callTarget: v897 
stateDuring: ?1471 
=== Succesors ===
next: v1600 
=== Usages ===
?350 i2202 j2490 v2243 a2224 i1635 v2209 v1594 v1608 
=== Predecessor ===
v345 >@ <|@
instruction <@Invoke|@org.graalvm.compiler.nodes.InvokeNode>@ stateAfter: - classInit: - callTarget: v897 stateDuring: ?1471 #next: v1600  <|@  <|@
tid ?350 <|@
d <@d|@=== Debug Properties ===
bci: 20
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.ensureCapacityInternal(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 124
stackSize: 3
=== Inputs ===
outerFrameState: ?357 
values: - - a126 a837 i349 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
a2224 v1606 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?357 values: - - a126 a837 i349 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v1594 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i349 
y: i82 
=== Succesors ===
=== Usages ===
v1600 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i349 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1600 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v1594 
=== Succesors ===
trueSuccessor: v1599 
falseSuccessor: v1595 
=== Usages ===
=== Predecessor ===
i349 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v1594 #trueSuccessor: v1599 #falseSuccessor: v1595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v262|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v134|QWORD[.] v264|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v265|DWORD, y: v265|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1599 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1606 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1606  <|@  <|@
f <@*|@fixed>@ <|@
tid v1606 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 61]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?350 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1599 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?350  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -411233 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v264|QWORD[.] v265|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B196" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1595 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:100) [bci: 3]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2204 
=== Usages ===
=== Predecessor ===
v1600 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2204  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2204 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2240 
=== Usages ===
v3778 v3779 
=== Predecessor ===
v1595 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2240  <|@  <|@
f <@~|@floating>@ <|@
tid v3778 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: - 
=== Succesors ===
=== Usages ===
j2240 v2242 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2240 <|@
result v266|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
=== Succesors ===
next: j2241 
=== Usages ===
j2208 v3780 v3781 a2223 v3786 v3782 v3783 v3784 v3785 
=== Predecessor ===
j2204 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3778 #next: j2241  <|@  <|@
f <@~|@floating>@ <|@
tid v3779 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2204 
index: - 
=== Succesors ===
=== Usages ===
j2241 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2204 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2241 <|@
result v267|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3779 
=== Succesors ===
next: v2212 
=== Usages ===
v2213 
=== Predecessor ===
j2240 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3779 #next: v2212  <|@  <|@
f <@~|@floating>@ <|@
tid v2209 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i349 
y: i2025 
=== Succesors ===
=== Usages ===
v2212 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i349 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2212 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2209 
=== Succesors ===
trueSuccessor: v2211 
falseSuccessor: v2210 
=== Usages ===
=== Predecessor ===
j2241 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2209 #trueSuccessor: v2211 #falseSuccessor: v2210  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v265|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4586131589428858397
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2211 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2219 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2219  <|@  <|@
f <@~|@floating>@ <|@
tid i2202 <|@
result v268|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i349 
y: i71 
=== Succesors ===
=== Usages ===
i2231 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i349 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2231 <|@
result v269|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2202 
y: i2048 
=== Succesors ===
=== Usages ===
i2203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2202 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2203 <|@
result v270|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2231 
y: i2018 
=== Succesors ===
=== Usages ===
j2207 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2231 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2207 <|@
result v271|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2203 
=== Succesors ===
=== Usages ===
j2208 v3782 v3783 v3784 v3785 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2203  <|@  <|@
f <@~|@floating>@ <|@
tid j2208 <|@
result v272|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
x: j2207 
y: j2240 
=== Succesors ===
=== Usages ===
v2213 v2242 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2207 y: j2240  <|@  <|@
f <@~|@floating>@ <|@
tid v2213 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2241 
y: j2208 
=== Succesors ===
=== Usages ===
v2219 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2241 y: j2208  <|@  <|@
f <@*|@fixed>@ <|@
tid v2219 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2213 
=== Succesors ===
trueSuccessor: v2218 
falseSuccessor: v2217 
=== Usages ===
=== Predecessor ===
v2211 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2213 #trueSuccessor: v2218 #falseSuccessor: v2217  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = SHL v265|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = LEA [v268|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = AND v269|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOVSXD v270|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = ADD (x: v271|QWORD, y: v266|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v272|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B197" 
    xhandlers
    flags 
    probability 4556278207187322842
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2218 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2216 
=== Usages ===
=== Predecessor ===
v2219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2216  <|@  <|@
f <@*|@fixed>@ <|@
tid v2216 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2215 
=== Predecessor ===
v2218 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B194 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4586071881744927757
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2217 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2242 
=== Usages ===
=== Predecessor ===
v2219 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2242  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2242 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3778 
value: j2208 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2233 
=== Usages ===
=== Predecessor ===
v2217 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3778 value: j2208 stateAfter: - lastLocationAccess: - #next: v2233  <|@  <|@
f <@~|@floating>@ <|@
tid v3782 <|@
result [v271|QWORD + v266|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2233 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2233 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3782 
=== Succesors ===
next: v2235 
=== Usages ===
=== Predecessor ===
v2242 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3782 #next: v2235  <|@  <|@
f <@~|@floating>@ <|@
tid v3783 <|@
result [v271|QWORD + v266|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2235 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3783 
=== Succesors ===
next: v2237 
=== Usages ===
=== Predecessor ===
v2233 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3783 #next: v2237  <|@  <|@
f <@~|@floating>@ <|@
tid v3784 <|@
result [v271|QWORD + v266|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2237 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3784 
=== Succesors ===
next: v2239 
=== Usages ===
=== Predecessor ===
v2235 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3784 #next: v2239  <|@  <|@
f <@~|@floating>@ <|@
tid v3785 <|@
result [v271|QWORD + v266|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2207 
index: j2240 
=== Succesors ===
=== Usages ===
v2239 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2207 index: j2240  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
address: v3785 
=== Succesors ===
next: v2243 
=== Usages ===
=== Predecessor ===
v2237 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3785 #next: v2243  <|@  <|@
f <@~|@floating>@ <|@
tid v3780 <|@
result [v266|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2243 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2243 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3780 
value: i349 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2244 
=== Usages ===
=== Predecessor ===
v2239 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3780 value: i349 stateAfter: - lastLocationAccess: - #next: v2244  <|@  <|@
f <@~|@floating>@ <|@
tid v3781 <|@
result [v266|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2244 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2244 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3781 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2247 
=== Usages ===
=== Predecessor ===
v2243 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3781 value: j981 stateAfter: - lastLocationAccess: - #next: v2247  <|@  <|@
f <@~|@floating>@ <|@
tid v3786 <|@
result [v266|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2240 
index: - 
=== Succesors ===
=== Usages ===
v2247 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2240 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2247 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3786 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2222 
=== Usages ===
=== Predecessor ===
v2244 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3786 value: v2413 stateAfter: - lastLocationAccess: - #next: v2222  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2222 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2223 
=== Usages ===
=== Predecessor ===
v2247 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2223  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2223 <|@
result v273|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2240 
=== Succesors ===
next: v2225 
=== Usages ===
a2228 
=== Predecessor ===
v2222 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2240 #next: v2225  <|@  <|@
f <@*|@fixed>@ <|@
tid v2225 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
a2223 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v266|QWORD + 12], y: v265|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v266|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v266|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v273|QWORD[.] = MOVE v266|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD[.]] destination: B195 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B197" 
    xhandlers
    flags 
    probability 4571957371836406467
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2210 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2214 
=== Usages ===
=== Predecessor ===
v2212 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2214  <|@  <|@
f <@*|@fixed>@ <|@
tid v2214 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2215 
=== Predecessor ===
v2210 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B194" 
    successors "B198" 
    xhandlers
    flags 
    probability 4572435033307851585
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2215 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2214 v2216 
=== Succesors ===
next: a2224 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2214 v2216 #next: a2224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2224 <|@
result v274|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?350 
arguments: v1799 i349 i82 
=== Succesors ===
next: v2227 
=== Usages ===
a2228 
=== Predecessor ===
v2215 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?350 arguments: v1799 i349 i82 #next: v2227  <|@  <|@
f <@*|@fixed>@ <|@
tid v2227 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2226 
=== Predecessor ===
a2224 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v265|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v264|QWORD[.] v265|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|QWORD[.]] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2228 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2226 
values: a2223 a2224 
=== Succesors ===
=== Usages ===
v3837 a1655 v3716 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2226 values: a2223 a2224  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2226 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2225 v2227 
=== Succesors ===
next: v3441 
=== Usages ===
a2228 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2225 v2227 #next: v3441  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3441 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2922 
=== Usages ===
j3442 j3444 
=== Predecessor ===
v2226 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2922  <|@  <|@
f <@~|@floating>@ <|@
tid v1608 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3675 
y: i349 
=== Succesors ===
=== Usages ===
i1635 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3675 y: i349  <|@  <|@
f <@~|@floating>@ <|@
tid i1635 <|@
result v276|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1608 
trueValue: i3675 
falseValue: i349 
=== Succesors ===
=== Usages ===
j2491 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1608 trueValue: i3675 falseValue: i349  <|@  <|@
f <@~|@floating>@ <|@
tid j2491 <|@
result v277|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1635 
=== Succesors ===
=== Usages ===
j3499 v3837 j2495 v2919 v3056 j3485 j3490 j3493 j3496 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1635  <|@  <|@
f <@~|@floating>@ <|@
tid v2919 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2491 
y: j981 
=== Succesors ===
=== Usages ===
v2922 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2491 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2922 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2919 
=== Succesors ===
trueSuccessor: v2920 
falseSuccessor: v2921 
=== Usages ===
=== Predecessor ===
v3441 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2919 #trueSuccessor: v2920 #falseSuccessor: v2921  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v265|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v276|DWORD = CMOVE (falseValue: v265|DWORD, ~trueValue: v261|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = MOVSXD v276|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v277|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B217" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2920 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2938 
=== Usages ===
=== Predecessor ===
v2922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2938  <|@  <|@
f <@*|@fixed>@ <|@
tid v2938 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v2920 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B199 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2921 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2925 
=== Usages ===
=== Predecessor ===
v2922 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2925  <|@  <|@
f <@~|@floating>@ <|@
tid v3716 <|@
result [v275|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2228 
index: - 
=== Succesors ===
=== Usages ===
j3444 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2228 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3444 <|@
result v278|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3441 
address: v3716 
=== Succesors ===
=== Usages ===
v3886 v3888 v3890 v3892 v3894 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3441 address: v3716  <|@  <|@
f <@~|@floating>@ <|@
tid v3712 <|@
result [v233|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a3672 
=== Succesors ===
=== Usages ===
j3442 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a3672  <|@  <|@
f <@~|@floating>@ <|@
tid j3442 <|@
result v279|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3441 
address: v3712 
=== Succesors ===
=== Usages ===
v3887 v3889 v3891 v3893 v3895 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3441 address: v3712  <|@  <|@
f <@~|@floating>@ <|@
tid j3485 <|@
result v280|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2491 
y: j3145 
=== Succesors ===
=== Usages ===
v3486 v3488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3486 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3485 
y: j964 
=== Succesors ===
=== Usages ===
v2925 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3485 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2925 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3486 
=== Succesors ===
trueSuccessor: v2923 
falseSuccessor: v2924 
=== Usages ===
=== Predecessor ===
v2921 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3486 #trueSuccessor: v2923 #falseSuccessor: v2924  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|QWORD[.] = LEA [v275|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v279|QWORD[*] = LEA [v233|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = LEA [v277|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v280|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B205" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2923 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2934 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2934  <|@  <|@
f <@*|@fixed>@ <|@
tid v2934 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
v2923 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B201 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2924 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2926 
=== Usages ===
=== Predecessor ===
v2925 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2926  <|@  <|@
f <@*|@fixed>@ <|@
tid v2926 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2927 
=== Predecessor ===
v2924 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" "B303" 
    successors "B204" "B303" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3477 <|@
result v281|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2927 
values: j964 j3484 
=== Succesors ===
=== Usages ===
v3895 j3484 v3894 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2927 values: j964 j3484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2927 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2926 
=== Succesors ===
next: v3676 
=== Usages ===
v3676 v2930 v2931 j3477 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2926 #next: v3676  <|@  <|@
f <@~|@floating>@ <|@
tid v3895 <|@
result [v279|QWORD[*] + v281|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3477 
=== Succesors ===
=== Usages ===
v3676 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3676 <|@
result v282|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2927 
address: v3895 
=== Succesors ===
next: v3637 
=== Usages ===
v3637 
=== Predecessor ===
v2927 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2927 address: v3895 #next: v3637  <|@  <|@
f <@~|@floating>@ <|@
tid v3894 <|@
result [v278|QWORD[.] + v281|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3477 
=== Succesors ===
=== Usages ===
v3637 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3477  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3637 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3894 
value: v3676 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2933 
=== Usages ===
=== Predecessor ===
v3676 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3894 value: v3676 stateAfter: - lastLocationAccess: - #next: v2933  <|@  <|@
f <@~|@floating>@ <|@
tid j3484 <|@
result v283|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3477 
y: j818 
=== Succesors ===
=== Usages ===
j3469 j3477 v3488 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3477 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3488 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3485 
y: j3484 
=== Succesors ===
=== Usages ===
v2933 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3485 y: j3484  <|@  <|@
f <@*|@fixed>@ <|@
tid v2933 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3488 
=== Succesors ===
trueSuccessor: v2930 
falseSuccessor: v2932 
=== Usages ===
=== Predecessor ===
v3637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3488 #trueSuccessor: v2930 #falseSuccessor: v2932  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v281|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|V256_WORD = H [v279|QWORD[*] + v281|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v281|QWORD * 2], input: v282|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = LEA [v281|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v283|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B204 falseDestination: B203 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2930 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2927 
=== Succesors ===
next: v2936 
=== Usages ===
=== Predecessor ===
v2933 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2927 #next: v2936  <|@  <|@
f <@*|@fixed>@ <|@
tid v2936 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2935 
=== Predecessor ===
v2930 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B201" "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3469 <|@
result v284|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2935 
values: j964 j3484 
=== Succesors ===
=== Usages ===
v3893 j3476 j3461 v3491 v3892 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2935 values: j964 j3484  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2935 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2934 v2936 
=== Succesors ===
next: v2957 
=== Usages ===
j3469 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2934 v2936 #next: v2957  <|@  <|@
f <@~|@floating>@ <|@
tid j3490 <|@
result v285|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2491 
y: j3084 
=== Succesors ===
=== Usages ===
v3491 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3491 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3490 
y: j3469 
=== Succesors ===
=== Usages ===
v2957 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3490 y: j3469  <|@  <|@
f <@*|@fixed>@ <|@
tid v2957 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3491 
=== Succesors ===
trueSuccessor: v2956 
falseSuccessor: v2955 
=== Usages ===
=== Predecessor ===
v2935 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3491 #trueSuccessor: v2956 #falseSuccessor: v2955  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v277|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: v285|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2956 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2960 
=== Usages ===
=== Predecessor ===
v2957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2960  <|@  <|@
f <@*|@fixed>@ <|@
tid v2960 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
v2956 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v284|QWORD] destination: B206 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2955 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3677 
=== Usages ===
v3677 
=== Predecessor ===
v2957 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3677  <|@  <|@
f <@~|@floating>@ <|@
tid v3893 <|@
result [v279|QWORD[*] + v284|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3469 
=== Succesors ===
=== Usages ===
v3677 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3677 <|@
result v286|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2955 
address: v3893 
=== Succesors ===
next: v3635 
=== Usages ===
v3635 
=== Predecessor ===
v2955 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2955 address: v3893 #next: v3635  <|@  <|@
f <@~|@floating>@ <|@
tid v3892 <|@
result [v278|QWORD[.] + v284|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3469 
=== Succesors ===
=== Usages ===
v3635 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3635 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3892 
value: v3677 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2945 
=== Usages ===
=== Predecessor ===
v3677 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3892 value: v3677 stateAfter: - lastLocationAccess: - #next: v2945  <|@  <|@
f <@~|@floating>@ <|@
tid j3476 <|@
result v287|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3469 
y: j1752 
=== Succesors ===
=== Usages ===
j3461 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3469 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2945 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2946 
=== Predecessor ===
v3635 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|V128_WORD = H [v279|QWORD[*] + v284|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v284|QWORD * 2], input: v286|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = LEA [v284|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v287|QWORD] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B206" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3461 <|@
result v288|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2946 
values: j3476 j3469 
=== Succesors ===
=== Usages ===
v3891 j3468 j3453 v3494 v3890 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2946 values: j3476 j3469  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2946 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2945 v2960 
=== Succesors ===
next: v2963 
=== Usages ===
j3461 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2945 v2960 #next: v2963  <|@  <|@
f <@~|@floating>@ <|@
tid j3493 <|@
result v289|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2491 
y: j3088 
=== Succesors ===
=== Usages ===
v3494 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3494 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3493 
y: j3461 
=== Succesors ===
=== Usages ===
v2963 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3493 y: j3461  <|@  <|@
f <@*|@fixed>@ <|@
tid v2963 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3494 
=== Succesors ===
trueSuccessor: v2962 
falseSuccessor: v2961 
=== Usages ===
=== Predecessor ===
v2946 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3494 #trueSuccessor: v2962 #falseSuccessor: v2961  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v288|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = LEA [v277|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v288|QWORD, y: v289|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2962 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2966 
=== Usages ===
=== Predecessor ===
v2963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2966  <|@  <|@
f <@*|@fixed>@ <|@
tid v2966 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2949 
=== Predecessor ===
v2962 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v288|QWORD] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2961 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3678 
=== Usages ===
v3678 
=== Predecessor ===
v2963 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3678  <|@  <|@
f <@~|@floating>@ <|@
tid v3891 <|@
result [v279|QWORD[*] + v288|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3461 
=== Succesors ===
=== Usages ===
v3678 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3678 <|@
result v290|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2961 
address: v3891 
=== Succesors ===
next: v3633 
=== Usages ===
v3633 
=== Predecessor ===
v2961 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2961 address: v3891 #next: v3633  <|@  <|@
f <@~|@floating>@ <|@
tid v3890 <|@
result [v278|QWORD[.] + v288|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3461 
=== Succesors ===
=== Usages ===
v3633 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3633 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3890 
value: v3678 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2948 
=== Usages ===
=== Predecessor ===
v3678 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3890 value: v3678 stateAfter: - lastLocationAccess: - #next: v2948  <|@  <|@
f <@~|@floating>@ <|@
tid j3468 <|@
result v291|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3461 
y: j3080 
=== Succesors ===
=== Usages ===
j3453 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3461 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2948 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2949 
=== Predecessor ===
v3633 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v290|V64_WORD = H [v279|QWORD[*] + v288|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v288|QWORD * 2], input: v290|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = LEA [v288|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v291|QWORD] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors "B212" "B213" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3453 <|@
result v292|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2949 
values: j3468 j3461 
=== Succesors ===
=== Usages ===
v3889 j3460 j3445 v3497 v3888 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2949 values: j3468 j3461  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2949 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2948 v2966 
=== Succesors ===
next: v2969 
=== Usages ===
j3453 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2948 v2966 #next: v2969  <|@  <|@
f <@~|@floating>@ <|@
tid j3496 <|@
result v293|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2491 
y: j3092 
=== Succesors ===
=== Usages ===
v3497 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3497 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3496 
y: j3453 
=== Succesors ===
=== Usages ===
v2969 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3496 y: j3453  <|@  <|@
f <@*|@fixed>@ <|@
tid v2969 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3497 
=== Succesors ===
trueSuccessor: v2968 
falseSuccessor: v2967 
=== Usages ===
=== Predecessor ===
v2949 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3497 #trueSuccessor: v2968 #falseSuccessor: v2967  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v292|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = LEA [v277|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v292|QWORD, y: v293|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B212 falseDestination: B211 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2968 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2972 
=== Usages ===
=== Predecessor ===
v2969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2972  <|@  <|@
f <@*|@fixed>@ <|@
tid v2972 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
v2968 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v292|QWORD] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2967 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3679 
=== Usages ===
v3679 
=== Predecessor ===
v2969 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3679  <|@  <|@
f <@~|@floating>@ <|@
tid v3889 <|@
result [v279|QWORD[*] + v292|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3453 
=== Succesors ===
=== Usages ===
v3679 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3679 <|@
result v294|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2967 
address: v3889 
=== Succesors ===
next: v3631 
=== Usages ===
v3631 
=== Predecessor ===
v2967 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2967 address: v3889 #next: v3631  <|@  <|@
f <@~|@floating>@ <|@
tid v3888 <|@
result [v278|QWORD[.] + v292|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3453 
=== Succesors ===
=== Usages ===
v3631 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3631 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3888 
value: v3679 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2951 
=== Usages ===
=== Predecessor ===
v3679 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3888 value: v3679 stateAfter: - lastLocationAccess: - #next: v2951  <|@  <|@
f <@~|@floating>@ <|@
tid j3460 <|@
result v295|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3453 
y: j3064 
=== Succesors ===
=== Usages ===
j3445 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3453 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2951 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2952 
=== Predecessor ===
v3631 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v294|V32_WORD = H [v279|QWORD[*] + v292|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v292|QWORD * 2], input: v294|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = LEA [v292|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v295|QWORD] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3445 <|@
result v296|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2952 
values: j3460 j3453 
=== Succesors ===
=== Usages ===
v3887 v3500 v3886 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2952 values: j3460 j3453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2952 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2951 v2972 
=== Succesors ===
next: v2975 
=== Usages ===
j3445 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2951 v2972 #next: v2975  <|@  <|@
f <@~|@floating>@ <|@
tid j3499 <|@
result v297|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2491 
y: j3096 
=== Succesors ===
=== Usages ===
v3500 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2491 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3500 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3499 
y: j3445 
=== Succesors ===
=== Usages ===
v2975 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3499 y: j3445  <|@  <|@
f <@*|@fixed>@ <|@
tid v2975 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3500 
=== Succesors ===
trueSuccessor: v2974 
falseSuccessor: v2973 
=== Usages ===
=== Predecessor ===
v2952 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3500 #trueSuccessor: v2974 #falseSuccessor: v2973  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v296|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v297|QWORD = DEC v277|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v296|QWORD, y: v297|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2974 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2978 
=== Usages ===
=== Predecessor ===
v2975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2978  <|@  <|@
f <@*|@fixed>@ <|@
tid v2978 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v2974 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2973 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3680 
=== Usages ===
i3680 
=== Predecessor ===
v2975 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3680  <|@  <|@
f <@~|@floating>@ <|@
tid v3887 <|@
result [v279|QWORD[*] + v296|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3442 
index: j3445 
=== Succesors ===
=== Usages ===
i3680 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3442 index: j3445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3680 <|@
result v298|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2973 
address: v3887 
=== Succesors ===
next: v3629 
=== Usages ===
v3629 
=== Predecessor ===
v2973 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2973 address: v3887 #next: v3629  <|@  <|@
f <@~|@floating>@ <|@
tid v3886 <|@
result [v278|QWORD[.] + v296|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3444 
index: j3445 
=== Succesors ===
=== Usages ===
v3629 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3444 index: j3445  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3629 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3886 
value: i3680 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2954 
=== Usages ===
=== Predecessor ===
i3680 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3886 value: i3680 stateAfter: - lastLocationAccess: - #next: v2954  <|@  <|@
f <@*|@fixed>@ <|@
tid v2954 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2939 
=== Predecessor ===
v3629 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v298|DWORD = MOVSX [v279|QWORD[*] + v296|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v278|QWORD[.] + v296|QWORD * 2], y: v298|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B199" "B216" "B215" 
    successors "B218" "B236" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2939 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2938 v2954 v2978 
=== Succesors ===
next: v3503 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2938 v2954 v2978 #next: v3503  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3503 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2985 
=== Usages ===
j3505 
=== Predecessor ===
v2939 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2985  <|@  <|@
f <@~|@floating>@ <|@
tid j2490 <|@
result v299|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i349 
=== Succesors ===
=== Usages ===
j2495 v3056 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i349  <|@  <|@
f <@~|@floating>@ <|@
tid v3056 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2491 
y: j2490 
=== Succesors ===
=== Usages ===
v2985 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2491 y: j2490  <|@  <|@
f <@*|@fixed>@ <|@
tid v2985 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3056 
=== Succesors ===
trueSuccessor: v2984 
falseSuccessor: v2983 
=== Usages ===
=== Predecessor ===
v3503 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3056 #trueSuccessor: v2984 #falseSuccessor: v2983  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOVSXD v265|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v299|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2984 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2988 
=== Usages ===
=== Predecessor ===
v2985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2988  <|@  <|@
f <@~|@floating>@ <|@
tid v3837 <|@
result [v275|QWORD[.] + v277|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2228 
index: j2491 
=== Succesors ===
=== Usages ===
j3505 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2228 index: j2491  <|@  <|@
f <@~|@floating>@ <|@
tid j3505 <|@
result v300|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3503 
address: v3837 
=== Succesors ===
=== Usages ===
v3896 v3897 v3898 v3899 v3900 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3503 address: v3837  <|@  <|@
f <@~|@floating>@ <|@
tid j2495 <|@
result v301|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2490 
y: j2491 
=== Succesors ===
=== Usages ===
j3550 j3536 j3541 j3544 j3547 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2490 y: j2491  <|@  <|@
f <@~|@floating>@ <|@
tid j3536 <|@
result v302|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2495 
y: j3145 
=== Succesors ===
=== Usages ===
v3537 v3539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3537 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3536 
y: j964 
=== Succesors ===
=== Usages ===
v2988 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3536 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2988 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3537 
=== Succesors ===
trueSuccessor: v2986 
falseSuccessor: v2987 
=== Usages ===
=== Predecessor ===
v2984 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3537 #trueSuccessor: v2986 #falseSuccessor: v2987  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v300|QWORD[.] = LEA [v275|QWORD[.] + v277|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v301|QWORD = SUB (x: v299|QWORD, ~y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v302|QWORD = LEA [v301|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v302|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B223" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2986 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2997 
=== Usages ===
=== Predecessor ===
v2988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2997  <|@  <|@
f <@*|@fixed>@ <|@
tid v2997 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
v2986 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B219 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2987 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2989 
=== Usages ===
=== Predecessor ===
v2988 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2989  <|@  <|@
f <@*|@fixed>@ <|@
tid v2989 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2990 
=== Predecessor ===
v2987 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B235" 
    successors "B222" "B235" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3530 <|@
result v303|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2990 
values: j964 j3535 
=== Succesors ===
=== Usages ===
v3900 j3535 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2990 values: j964 j3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2990 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2989 
=== Succesors ===
next: v3642 
=== Usages ===
j3530 v2993 v2994 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2989 #next: v3642  <|@  <|@
f <@~|@floating>@ <|@
tid v3900 <|@
result [v300|QWORD[.] + v303|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3530 
=== Succesors ===
=== Usages ===
v3642 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3530  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3642 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3900 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2996 
=== Usages ===
=== Predecessor ===
v2990 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3900 value: v3643 stateAfter: - lastLocationAccess: - #next: v2996  <|@  <|@
f <@~|@floating>@ <|@
tid j3535 <|@
result v304|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3530 
y: j818 
=== Succesors ===
=== Usages ===
j3524 j3530 v3539 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3530 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3539 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3536 
y: j3535 
=== Succesors ===
=== Usages ===
v2996 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3536 y: j3535  <|@  <|@
f <@*|@fixed>@ <|@
tid v2996 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3539 
=== Succesors ===
trueSuccessor: v2993 
falseSuccessor: v2995 
=== Usages ===
=== Predecessor ===
v3642 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3539 #trueSuccessor: v2993 #falseSuccessor: v2995  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v303|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v303|QWORD * 2], input: v7|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v304|QWORD = LEA [v303|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v304|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B223" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2993 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2990 
=== Succesors ===
next: v2999 
=== Usages ===
=== Predecessor ===
v2996 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2990 #next: v2999  <|@  <|@
f <@*|@fixed>@ <|@
tid v2999 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2998 
=== Predecessor ===
v2993 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B222 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B219" "B222" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3524 <|@
result v305|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2998 
values: j964 j3535 
=== Succesors ===
=== Usages ===
v3899 j3529 j3518 v3542 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2998 values: j964 j3535  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2998 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2997 v2999 
=== Succesors ===
next: v3020 
=== Usages ===
j3524 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2997 v2999 #next: v3020  <|@  <|@
f <@~|@floating>@ <|@
tid j3541 <|@
result v306|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2495 
y: j3084 
=== Succesors ===
=== Usages ===
v3542 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3542 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3541 
y: j3524 
=== Succesors ===
=== Usages ===
v3020 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3541 y: j3524  <|@  <|@
f <@*|@fixed>@ <|@
tid v3020 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3542 
=== Succesors ===
trueSuccessor: v3019 
falseSuccessor: v3018 
=== Usages ===
=== Predecessor ===
v2998 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3542 #trueSuccessor: v3019 #falseSuccessor: v3018  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v305|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v301|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v305|QWORD, y: v306|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3019 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3023 
=== Usages ===
=== Predecessor ===
v3020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3023  <|@  <|@
f <@*|@fixed>@ <|@
tid v3023 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3009 
=== Predecessor ===
v3019 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v305|QWORD] destination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3018 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3641 
=== Usages ===
=== Predecessor ===
v3020 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3641  <|@  <|@
f <@~|@floating>@ <|@
tid v3899 <|@
result [v300|QWORD[.] + v305|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3524 
=== Succesors ===
=== Usages ===
v3641 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3641 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3899 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3008 
=== Usages ===
=== Predecessor ===
v3018 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3899 value: v3647 stateAfter: - lastLocationAccess: - #next: v3008  <|@  <|@
f <@~|@floating>@ <|@
tid j3529 <|@
result v307|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3524 
y: j1752 
=== Succesors ===
=== Usages ===
j3518 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3524 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v3008 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3009 
=== Predecessor ===
v3641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v305|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v307|QWORD = LEA [v305|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" "B224" 
    successors "B227" "B228" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3518 <|@
result v308|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3009 
values: j3529 j3524 
=== Succesors ===
=== Usages ===
v3898 j3523 j3512 v3545 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3009 values: j3529 j3524  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3009 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3008 v3023 
=== Succesors ===
next: v3026 
=== Usages ===
j3518 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3008 v3023 #next: v3026  <|@  <|@
f <@~|@floating>@ <|@
tid j3544 <|@
result v309|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2495 
y: j3088 
=== Succesors ===
=== Usages ===
v3545 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3545 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3544 
y: j3518 
=== Succesors ===
=== Usages ===
v3026 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3544 y: j3518  <|@  <|@
f <@*|@fixed>@ <|@
tid v3026 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3545 
=== Succesors ===
trueSuccessor: v3025 
falseSuccessor: v3024 
=== Usages ===
=== Predecessor ===
v3009 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3545 #trueSuccessor: v3025 #falseSuccessor: v3024  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|QWORD = LEA [v301|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v308|QWORD, y: v309|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B227 falseDestination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3025 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3029 
=== Usages ===
=== Predecessor ===
v3026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3029  <|@  <|@
f <@*|@fixed>@ <|@
tid v3029 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
v3025 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v308|QWORD] destination: B227 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3024 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3640 
=== Usages ===
=== Predecessor ===
v3026 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3640  <|@  <|@
f <@~|@floating>@ <|@
tid v3898 <|@
result [v300|QWORD[.] + v308|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3518 
=== Succesors ===
=== Usages ===
v3640 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3640 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3898 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3011 
=== Usages ===
=== Predecessor ===
v3024 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3898 value: v3646 stateAfter: - lastLocationAccess: - #next: v3011  <|@  <|@
f <@~|@floating>@ <|@
tid j3523 <|@
result v310|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3518 
y: j3080 
=== Succesors ===
=== Usages ===
j3512 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3518 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v3011 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3012 
=== Predecessor ===
v3640 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v308|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v310|QWORD = LEA [v308|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v310|QWORD] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" "B227" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3512 <|@
result v311|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3012 
values: j3523 j3518 
=== Succesors ===
=== Usages ===
v3897 j3517 j3506 v3548 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3012 values: j3523 j3518  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3012 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3011 v3029 
=== Succesors ===
next: v3032 
=== Usages ===
j3512 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3011 v3029 #next: v3032  <|@  <|@
f <@~|@floating>@ <|@
tid j3547 <|@
result v312|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2495 
y: j3092 
=== Succesors ===
=== Usages ===
v3548 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3548 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3547 
y: j3512 
=== Succesors ===
=== Usages ===
v3032 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3547 y: j3512  <|@  <|@
f <@*|@fixed>@ <|@
tid v3032 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3548 
=== Succesors ===
trueSuccessor: v3031 
falseSuccessor: v3030 
=== Usages ===
=== Predecessor ===
v3012 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3548 #trueSuccessor: v3031 #falseSuccessor: v3030  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = LEA [v301|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v311|QWORD, y: v312|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3031 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3035 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3035  <|@  <|@
f <@*|@fixed>@ <|@
tid v3035 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
v3031 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|QWORD] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3030 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3639 
=== Usages ===
=== Predecessor ===
v3032 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3639  <|@  <|@
f <@~|@floating>@ <|@
tid v3897 <|@
result [v300|QWORD[.] + v311|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3512 
=== Succesors ===
=== Usages ===
v3639 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3639 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3897 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3014 
=== Usages ===
=== Predecessor ===
v3030 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3897 value: v3645 stateAfter: - lastLocationAccess: - #next: v3014  <|@  <|@
f <@~|@floating>@ <|@
tid j3517 <|@
result v313|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3512 
y: j3064 
=== Succesors ===
=== Usages ===
j3506 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3512 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v3014 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3015 
=== Predecessor ===
v3639 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v311|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v313|QWORD = LEA [v311|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v313|QWORD] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3506 <|@
result v314|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v3015 
values: j3517 j3512 
=== Succesors ===
=== Usages ===
v3896 v3551 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v3015 values: j3517 j3512  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3015 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3014 v3035 
=== Succesors ===
next: v3038 
=== Usages ===
j3506 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3014 v3035 #next: v3038  <|@  <|@
f <@~|@floating>@ <|@
tid j3550 <|@
result v315|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2495 
y: j3096 
=== Succesors ===
=== Usages ===
v3551 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2495 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3551 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3550 
y: j3506 
=== Succesors ===
=== Usages ===
v3038 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3550 y: j3506  <|@  <|@
f <@*|@fixed>@ <|@
tid v3038 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3551 
=== Succesors ===
trueSuccessor: v3037 
falseSuccessor: v3036 
=== Usages ===
=== Predecessor ===
v3015 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3551 #trueSuccessor: v3037 #falseSuccessor: v3036  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v314|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v315|QWORD = DEC v301|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v314|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3037 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3041 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3041  <|@  <|@
f <@*|@fixed>@ <|@
tid v3041 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v3037 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B233 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3036 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3638 
=== Usages ===
=== Predecessor ===
v3038 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3638  <|@  <|@
f <@~|@floating>@ <|@
tid v3896 <|@
result [v300|QWORD[.] + v314|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3505 
index: j3506 
=== Succesors ===
=== Usages ===
v3638 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3505 index: j3506  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3638 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3896 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v3017 
=== Usages ===
=== Predecessor ===
v3036 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3896 value: i3644 stateAfter: - lastLocationAccess: - #next: v3017  <|@  <|@
f <@*|@fixed>@ <|@
tid v3017 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v3638 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v300|QWORD[.] + v314|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B234 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B221" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2995 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2994 
=== Usages ===
=== Predecessor ===
v2996 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2994  <|@  <|@
f <@*|@fixed>@ <|@
tid v2994 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2990 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2995 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2990  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B235 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B237" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2983 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3001 
=== Usages ===
=== Predecessor ===
v2985 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3001  <|@  <|@
f <@*|@fixed>@ <|@
tid v3001 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v3002 
=== Predecessor ===
v2983 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" "B234" "B233" 
    successors "B238" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v3002 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v3001 v3017 v3041 
=== Succesors ===
next: a1655 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v3001 v3017 v3041 #next: a1655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1655 <|@
result v275|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOf(char[], int) [bci: -1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2228 
=== Succesors ===
next: v900 
=== Usages ===
a552 a899 
=== Predecessor ===
v3002 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2228 #next: v900  <|@  <|@
f <@~|@floating>@ <|@
tid a899 <|@
result v316|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: Compress
stamp: n! -
=== Inputs ===
value: a1655 
=== Succesors ===
=== Usages ===
v900 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1655  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v900 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: AbstractStringBuilder.value
nodeSourcePosition: at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3692 
value: a899 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j2255 
=== Usages ===
=== Predecessor ===
a1655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3692 value: a899 stateAfter: - lastLocationAccess: - #next: j2255  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2255 <|@
result v134|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a792 
=== Succesors ===
next: v2259 
=== Usages ===
j2256 
=== Predecessor ===
v900 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a792 #next: v2259  <|@  <|@
f <@~|@floating>@ <|@
tid j2256 <|@
result v317|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j2255 
y: i1757 
=== Succesors ===
=== Usages ===
v3787 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j2255 y: i1757  <|@  <|@
f <@~|@floating>@ <|@
tid v3787 <|@
result [v317|QWORD[*] + v12|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2256 
index: j1761 
=== Succesors ===
=== Usages ===
v2259 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2256 index: j1761  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2259 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 23]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3787 
value: i1763 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i3681 
=== Usages ===
=== Predecessor ===
j2255 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3787 value: i1763 stateAfter: - lastLocationAccess: - #next: i3681  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3681 <|@
result v318|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 32]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
=== Succesors ===
next: v538 
=== Usages ===
i553 
=== Predecessor ===
v2259 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3691 #next: v538  <|@  <|@
f <@*|@fixed>@ <|@
tid v538 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v539 
=== Predecessor ===
i3681 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v316|DWORD[.] = COMPRESSPOINTER (input: v275|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 16], y: v316|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v317|QWORD[*] = SHR v134|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v317|QWORD[*] + v12|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v318|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD[.], v318|DWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B189" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a552 <|@
result v319|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# [C
valueDescription: a -
=== Inputs ===
merge: v539 
values: a1655 a837 
=== Succesors ===
=== Usages ===
j2264 v3709 v3694 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v539 values: a1655 a837  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v320|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v539 
values: i3681 i3674 
=== Succesors ===
=== Usages ===
i277 j2265 v851 v870 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v539 values: i3681 i3674  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v539 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v538 v540 
=== Succesors ===
next: v857 
=== Usages ===
a552 i553 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v538 v540 #next: v857  <|@  <|@
f <@~|@floating>@ <|@
tid v851 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i553 
y: i82 
=== Succesors ===
=== Usages ===
v857 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i553 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v857 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v851 
=== Succesors ===
trueSuccessor: v856 
falseSuccessor: v852 
=== Usages ===
=== Predecessor ===
v539 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v851 #trueSuccessor: v856 #falseSuccessor: v852  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v319|QWORD[.], v320|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v320|DWORD, y: v320|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v856 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1725 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1725  <|@  <|@
f <@*|@fixed>@ <|@
tid v1725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
v856 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B239 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" "B243" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v852 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: i3682 
=== Usages ===
=== Predecessor ===
v857 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3682  <|@  <|@
f <@~|@floating>@ <|@
tid v3694 <|@
result [v319|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a552 
index: - 
=== Succesors ===
=== Usages ===
i3682 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a552 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3682 <|@
result v321|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 52]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v3694 
=== Succesors ===
next: v874 
=== Usages ===
i185 i1632 i869 v1490 
=== Predecessor ===
v852 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3694 #next: v874  <|@  <|@
f <@~|@floating>@ <|@
tid i869 <|@
result v322|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32 [-8 - 2147483647]
=== Inputs ===
x: i3682 
y: i78 
=== Succesors ===
=== Usages ===
v870 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3682 y: i78  <|@  <|@
f <@~|@floating>@ <|@
tid v870 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i869 
y: i553 
=== Succesors ===
=== Usages ===
v874 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i869 y: i553  <|@  <|@
f <@*|@fixed>@ <|@
tid v874 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v870 
=== Succesors ===
trueSuccessor: v873 
falseSuccessor: v871 
=== Usages ===
=== Predecessor ===
i3682 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v870 #trueSuccessor: v873 #falseSuccessor: v871  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v321|DWORD = MOV [v319|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v322|DWORD = SUB (x: v321|DWORD, ~y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v320|DWORD, y: v322|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B241 falseDestination: B240 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576741781795599466
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1747 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1747  <|@  <|@
f <@*|@fixed>@ <|@
tid v1747 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1719 
=== Predecessor ===
v873 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B239" "B241" 
    successors 
    xhandlers
    flags 
    probability 4581273604453346457
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1725 v1747 
=== Succesors ===
next: v3901 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1725 v1747 #next: v3901  <|@  <|@
tid ?270 <|@
d <@d|@=== Debug Properties ===
bci: 24
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 449
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 a130 i78 
virtualObjectMappings: ?390 ?794 
=== Succesors ===
=== Usages ===
v3901 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 a130 i78 virtualObjectMappings: ?390 ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v3901 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 875
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?270 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1719 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?270  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:24, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" "B250" 
    xhandlers
    flags 
    probability 4606819404567777292
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v871 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2262 
=== Usages ===
=== Predecessor ===
v874 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2262  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2262 <|@
result v323|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
object: a1659 
=== Succesors ===
next: j2264 
=== Usages ===
v3788 
=== Predecessor ===
v871 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a1659 #next: j2264  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2264 <|@
result v324|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i64
=== Inputs ===
object: a552 
=== Succesors ===
next: v2270 
=== Usages ===
v3789 
=== Predecessor ===
j2262 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a552 #next: v2270  <|@  <|@
f <@~|@floating>@ <|@
tid v3788 <|@
result [v323|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2262 
index: - 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2262 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j2265 <|@
result v325|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i553 
=== Succesors ===
=== Usages ===
v3789 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i553  <|@  <|@
f <@~|@floating>@ <|@
tid v3789 <|@
result [v324|QWORD[*] + v325|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: j2264 
index: j2265 
=== Succesors ===
=== Usages ===
v2270 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2264 index: j2265  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2270 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: charArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.lang.String.getChars(String.java:826) [bci: 58]
at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v3788 v3789 j2269 
=== Succesors ===
next: v886 
=== Usages ===
=== Predecessor ===
j2264 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v3788 v3789 j2269 #next: v886  <|@  <|@
f <@~|@floating>@ <|@
tid i277 <|@
result v326|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 44]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
stamp: i32
=== Inputs ===
x: i78 
y: i553 
=== Succesors ===
=== Usages ===
v886 j2469 v172 v176 i185 a2336 v1490 i1632 v2355 i2314 v2321 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i78 y: i553  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v886 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractStringBuilder.count
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3691 
value: i277 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v175 
=== Usages ===
=== Predecessor ===
v2270 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3691 value: i277 stateAfter: - lastLocationAccess: - #next: v175  <|@  <|@
f <@~|@floating>@ <|@
tid v172 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i71 
=== Succesors ===
=== Usages ===
v175 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i277 y: i71  <|@  <|@
tid ?279 <|@
d <@d|@=== Debug Properties ===
bci: 48
code: ResolvedJavaMethodBytecode<AbstractStringBuilder.append(String)>
duringCall: false
localsSize: 3
locksSize: 0
nodeSourcePosition: at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:450) [bci: 45]
at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
at java.lang.StringBuilder.append(String) [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 29]
rethrowException: false
sourceFile: AbstractStringBuilder.java
sourceLine: 451
stackSize: 0
=== Inputs ===
outerFrameState: ?281 
values: a126 - i78 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1732 a2378 a2282 a2336 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?281 values: a126 - i78 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v2453 <|@
result meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v2307 v2402 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v2298 <|@
result v327|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<Ljava/lang/String;, resolved>}
stableDimension: 0
stamp: Klass*!
stampKind: Klass*
value: meta{HotSpotType<Ljava/lang/String;, resolved>}
=== Inputs ===
=== Succesors ===
=== Usages ===
j2394 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j2394 <|@
result v327|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
input: v2298 
=== Succesors ===
=== Usages ===
v3805 
=== Predecessor ===
- >@ <|@
instruction <@PointerCast|@org.graalvm.compiler.hotspot.word.PointerCastNode>@ input: v2298  <|@  <|@
f <@~|@floating>@ <|@
tid v3805 <|@
result [v327|QWORD + 168] <|@
d <@d|@=== Debug Properties ===
displacement: 168
scale: Times1
stamp: void*
=== Inputs ===
base: j2394 
index: - 
=== Succesors ===
=== Usages ===
j2398 j2303 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2394 index: -  <|@  <|@
f <@*|@fixed>@ <|@
tid v175 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:194) [bci: 18]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.09284041465770032
=== Inputs ===
condition: v172 
=== Succesors ===
trueSuccessor: v173 
falseSuccessor: v174 
=== Usages ===
=== Predecessor ===
v886 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v172 #trueSuccessor: v173 #falseSuccessor: v174  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v323|QWORD[*] = MOVE v243|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v324|QWORD[*] = MOVE v319|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = MOVSXD v320|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v323|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v324|QWORD[*] + v325|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v245|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v326|DWORD = ADD (x: v230|DWORD, y: v320|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v327|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v326|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v173 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 21]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1374 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1374  <|@  <|@
f <@~|@floating>@ <|@
tid v176 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i82 
=== Succesors ===
=== Usages ===
v1374 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i277 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v176 
=== Succesors ===
trueSuccessor: v1373 
falseSuccessor: v1371 
=== Usages ===
=== Predecessor ===
v173 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v176 #trueSuccessor: v1373 #falseSuccessor: v1371  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v326|DWORD, y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1373 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1728 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1728  <|@  <|@
f <@~|@floating>@ <|@
tid i1729 <|@
result int[-227091|0xfffffffffffc88ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -227091
stableDimension: 0
stamp: i32 [-227091] ⇊00000000fffc88ed ⇈00000000fffc88ed
stampKind: i32
value: int[-227091|0xfffffffffffc88ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1728 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1727 
=== Predecessor ===
v1373 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227091|0xfffffffffffc88ed]] destination: B245 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B248" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1371 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:195) [bci: 22]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2271 
=== Usages ===
=== Predecessor ===
v1374 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2271  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2271 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2286 
=== Usages ===
v3790 v3791 
=== Predecessor ===
v1371 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2286  <|@  <|@
f <@~|@floating>@ <|@
tid v3790 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: - 
=== Succesors ===
=== Usages ===
j2286 v2288 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2286 <|@
result v328|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
=== Succesors ===
next: j2287 
=== Usages ===
j2451 j2292 v3828 
=== Predecessor ===
j2271 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3790 #next: j2287  <|@  <|@
f <@~|@floating>@ <|@
tid v3791 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2271 
index: - 
=== Succesors ===
=== Usages ===
j2287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2271 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2287 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3791 
=== Succesors ===
next: v2279 
=== Usages ===
v2276 
=== Predecessor ===
j2286 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3791 #next: v2279  <|@  <|@
f <@~|@floating>@ <|@
tid j2451 <|@
result v329|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2286 
y: j1430 
=== Succesors ===
=== Usages ===
v2276 v2288 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2286 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2276 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2287 
y: j2451 
=== Succesors ===
=== Usages ===
v2279 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2287 y: j2451  <|@  <|@
f <@*|@fixed>@ <|@
tid v2279 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2276 
=== Succesors ===
trueSuccessor: v2277 
falseSuccessor: v2278 
=== Usages ===
=== Predecessor ===
j2287 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2276 #trueSuccessor: v2277 #falseSuccessor: v2278  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v328|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v329|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4561357127623488149
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2277 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2282 
=== Usages ===
=== Predecessor ===
v2279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2282 <|@
result v330|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1767 i92 i71 
=== Succesors ===
next: j2283 
=== Usages ===
j2283 
=== Predecessor ===
v2277 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1767 i92 i71 #next: j2283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2283 <|@
result v330|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2282 
=== Succesors ===
next: v2293 
=== Usages ===
j2292 
=== Predecessor ===
a2282 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2282 #next: v2293  <|@  <|@
f <@*|@fixed>@ <|@
tid v2293 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2290 
=== Predecessor ===
j2283 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v330|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v330|QWORD[.]] destination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4591020456060350490
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2278 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2288 
=== Usages ===
=== Predecessor ===
v2279 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2288  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2288 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3790 
value: j2451 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2285 
=== Usages ===
=== Predecessor ===
v2278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3790 value: j2451 stateAfter: - lastLocationAccess: - #next: v2285  <|@  <|@
f <@~|@floating>@ <|@
tid v3828 <|@
result [v328|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2286 
index: - 
=== Succesors ===
=== Usages ===
v2285 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2286 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2285 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3828 
=== Succesors ===
next: v2291 
=== Usages ===
=== Predecessor ===
v2288 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3828 #next: v2291  <|@  <|@
f <@*|@fixed>@ <|@
tid v2291 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2290 
=== Predecessor ===
v2285 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v328|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v328|QWORD] destination: B248 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" "B247" 
    successors 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2292 <|@
result v331|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2290 
values: j2286 j2283 
=== Succesors ===
=== Usages ===
v3793 v3792 a1446 v3829 v3830 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2290 values: j2286 j2283  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2290 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2291 v2293 
=== Succesors ===
next: a1446 
=== Usages ===
j2292 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2291 v2293 #next: a1446  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1446 <|@
result v332|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2292 
=== Succesors ===
next: j2303 
=== Usages ===
a1452 
=== Predecessor ===
v2290 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2292 #next: j2303  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2303 <|@
result v333|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3805 
=== Succesors ===
next: v2304 
=== Usages ===
v2304 
=== Predecessor ===
a1446 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3805 #next: v2304  <|@  <|@
f <@~|@floating>@ <|@
tid v3792 <|@
result [v331|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2304 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2304 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3792 
value: j2303 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2307 
=== Usages ===
=== Predecessor ===
j2303 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3792 value: j2303 stateAfter: - lastLocationAccess: - #next: v2307  <|@  <|@
f <@~|@floating>@ <|@
tid v3793 <|@
result [v331|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2307 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2307 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3793 
value: v2453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2311 
=== Usages ===
=== Predecessor ===
v2304 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3793 value: v2453 stateAfter: - lastLocationAccess: - #next: v2311  <|@  <|@
f <@~|@floating>@ <|@
tid v3829 <|@
result [v331|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1466 <|@
result NarrowOop[char[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: char[0]{}
stableDimension: 1
stamp: n!# [C
stampKind: n -
value: NarrowOop[char[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v2311 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2311 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3829 
value: a1466 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2313 
=== Usages ===
=== Predecessor ===
v2307 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3829 value: a1466 stateAfter: - lastLocationAccess: - #next: v2313  <|@  <|@
f <@~|@floating>@ <|@
tid v3830 <|@
result [v331|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2292 
index: - 
=== Succesors ===
=== Usages ===
v2313 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2292 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2313 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3830 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1452 
=== Usages ===
=== Predecessor ===
v2311 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3830 value: i82 stateAfter: - lastLocationAccess: - #next: a1452  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1452 <|@
result v332|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1446 
=== Succesors ===
next: v1453 
=== Usages ===
v198 
=== Predecessor ===
v2313 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1446 #next: v1453  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1453 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v198 
=== Usages ===
=== Predecessor ===
a1452 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v198  <|@  <|@
f <@*|@fixed>@ <|@
tid v198 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1452 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1453 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1452 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v331|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v332|QWORD[.] = MOVE v331|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v333|QWORD = MOV [v327|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v331|QWORD[*]], y: v333|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v331|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v331|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v331|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v332|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B251" "B253" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v174 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 50]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1378 
=== Usages ===
=== Predecessor ===
v175 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1378  <|@  <|@
f <@~|@floating>@ <|@
tid i185 <|@
result v334|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 54]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32
=== Inputs ===
x: i3682 
y: i277 
=== Succesors ===
=== Usages ===
v186 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i3682 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v186 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i185 
y: i82 
=== Succesors ===
=== Usages ===
v1378 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i185 y: i82  <|@  <|@
f <@*|@fixed>@ <|@
tid v1378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v186 
=== Succesors ===
trueSuccessor: v1377 
falseSuccessor: v1375 
=== Usages ===
=== Predecessor ===
v174 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v186 #trueSuccessor: v1377 #falseSuccessor: v1375  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v334|DWORD = SUB (x: v321|DWORD, ~y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v334|DWORD, y: v334|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1377 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1733 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1733  <|@  <|@
f <@~|@floating>@ <|@
tid i1734 <|@
result int[-229395|0xfffffffffffc7fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -229395
stableDimension: 0
stamp: i32 [-229395] ⇊00000000fffc7fed ⇈00000000fffc7fed
stampKind: i32
value: int[-229395|0xfffffffffffc7fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v1733 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v1727 
=== Predecessor ===
v1377 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229395|0xfffffffffffc7fed]] destination: B251 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B245" "B251" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i1730 <|@
result v335|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-229395 - -227091] ⇊00000000fffc08ed ⇈00000000fffcffed
valueDescription: i32
=== Inputs ===
merge: v1727 
values: i1729 i1734 
=== Succesors ===
=== Usages ===
v1732 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v1727 values: i1729 i1734  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1727 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v1728 v1733 
=== Succesors ===
next: v1732 
=== Usages ===
i1730 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v1728 v1733 #next: v1732  <|@  <|@
f <@*|@fixed>@ <|@
tid v1732 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?279 
actionAndReason: i1730 
speculation: a1705 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1727 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?279 actionAndReason: i1730 speculation: a1705  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v335|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v335|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction DEOPT info [bci:48, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B254" "B257" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.String.<init>(String.java:204) [bci: 55]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: j2316 
=== Usages ===
=== Predecessor ===
v1378 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j2316  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2316 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2352 
=== Usages ===
v3794 v3795 
=== Predecessor ===
v1375 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2352  <|@  <|@
f <@~|@floating>@ <|@
tid v3794 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
j2352 v2354 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2352 <|@
result v336|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
=== Succesors ===
next: j2353 
=== Usages ===
j2320 v3796 v3797 a2335 v3802 v3798 v3799 v3800 v3801 
=== Predecessor ===
j2316 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3794 #next: j2353  <|@  <|@
f <@~|@floating>@ <|@
tid v3795 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2316 
index: - 
=== Succesors ===
=== Usages ===
j2353 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2316 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2353 <|@
result v337|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3795 
=== Succesors ===
next: v2324 
=== Usages ===
v2325 
=== Predecessor ===
j2352 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3795 #next: v2324  <|@  <|@
f <@~|@floating>@ <|@
tid v2321 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.core.common.calc.UnsignedMath.belowThan(int, int) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 50]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i277 
y: i2025 
=== Succesors ===
=== Usages ===
v2324 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i277 y: i2025  <|@  <|@
f <@*|@fixed>@ <|@
tid v2324 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 64]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.9
=== Inputs ===
condition: v2321 
=== Succesors ===
trueSuccessor: v2323 
falseSuccessor: v2322 
=== Usages ===
=== Predecessor ===
j2353 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2321 #trueSuccessor: v2323 #falseSuccessor: v2322  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v336|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v337|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v326|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" "B256" 
    xhandlers
    flags 
    probability 4605232709315847027
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2323 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:323) [bci: 67]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2331 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2331  <|@  <|@
f <@~|@floating>@ <|@
tid i2314 <|@
result v338|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483648 - 2147483646] ⇈00000000fffffffe
=== Inputs ===
x: i277 
y: i71 
=== Succesors ===
=== Usages ===
i2343 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i277 y: i71  <|@  <|@
f <@~|@floating>@ <|@
tid i2343 <|@
result v339|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483647 - 2147483647] ⇊0000000000000001
=== Inputs ===
x: i2314 
y: i2048 
=== Succesors ===
=== Usages ===
i2315 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i2314 y: i2048  <|@  <|@
f <@~|@floating>@ <|@
tid i2315 <|@
result v340|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i2343 
y: i2018 
=== Succesors ===
=== Usages ===
j2319 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i2343 y: i2018  <|@  <|@
f <@~|@floating>@ <|@
tid j2319 <|@
result v341|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i2315 
=== Succesors ===
=== Usages ===
j2320 v3798 v3799 v3800 v3801 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i2315  <|@  <|@
f <@~|@floating>@ <|@
tid j2320 <|@
result v342|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: i64
=== Inputs ===
x: j2319 
y: j2352 
=== Succesors ===
=== Usages ===
v2325 v2354 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2319 y: j2352  <|@  <|@
f <@~|@floating>@ <|@
tid v2325 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2353 
y: j2320 
=== Succesors ===
=== Usages ===
v2331 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2353 y: j2320  <|@  <|@
f <@*|@fixed>@ <|@
tid v2331 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2325 
=== Succesors ===
trueSuccessor: v2330 
falseSuccessor: v2329 
=== Usages ===
=== Predecessor ===
v2323 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2325 #trueSuccessor: v2330 #falseSuccessor: v2329  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v338|DWORD = SHL v326|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v339|DWORD = LEA [v338|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v340|DWORD = AND v339|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD = MOVSXD v340|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v342|QWORD = ADD (x: v341|QWORD, y: v336|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v342|QWORD, y: v337|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B255 falseDestination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B258" 
    xhandlers
    flags 
    probability 4575670415234218635
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2330 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2328 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2328  <|@  <|@
f <@*|@fixed>@ <|@
tid v2328 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2327 
=== Predecessor ===
v2330 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B255 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4605162134418141321
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2329 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2354 
=== Usages ===
=== Predecessor ===
v2331 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2354  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2354 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3794 
value: j2320 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2345 
=== Usages ===
=== Predecessor ===
v2329 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3794 value: j2320 stateAfter: - lastLocationAccess: - #next: v2345  <|@  <|@
f <@~|@floating>@ <|@
tid v3798 <|@
result [v341|QWORD + v336|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2345 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2345 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3798 
=== Succesors ===
next: v2347 
=== Usages ===
=== Predecessor ===
v2354 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3798 #next: v2347  <|@  <|@
f <@~|@floating>@ <|@
tid v3799 <|@
result [v341|QWORD + v336|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2347 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2347 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3799 
=== Succesors ===
next: v2349 
=== Usages ===
=== Predecessor ===
v2345 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3799 #next: v2349  <|@  <|@
f <@~|@floating>@ <|@
tid v3800 <|@
result [v341|QWORD + v336|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2349 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2349 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3800 
=== Succesors ===
next: v2351 
=== Usages ===
=== Predecessor ===
v2347 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3800 #next: v2351  <|@  <|@
f <@~|@floating>@ <|@
tid v3801 <|@
result [v341|QWORD + v336|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j2319 
index: j2352 
=== Succesors ===
=== Usages ===
v2351 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2319 index: j2352  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2351 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
address: v3801 
=== Succesors ===
next: v2355 
=== Usages ===
=== Predecessor ===
v2349 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3801 #next: v2355  <|@  <|@
f <@~|@floating>@ <|@
tid v3796 <|@
result [v336|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2355 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2355 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3796 
value: i277 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2356 
=== Usages ===
=== Predecessor ===
v2351 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3796 value: i277 stateAfter: - lastLocationAccess: - #next: v2356  <|@  <|@
f <@~|@floating>@ <|@
tid v3797 <|@
result [v336|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2356 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2356 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3797 
value: j981 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2359 
=== Usages ===
=== Predecessor ===
v2355 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3797 value: j981 stateAfter: - lastLocationAccess: - #next: v2359  <|@  <|@
f <@~|@floating>@ <|@
tid v3802 <|@
result [v336|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2352 
index: - 
=== Succesors ===
=== Usages ===
v2359 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2352 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2359 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3802 
value: v2413 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2334 
=== Usages ===
=== Predecessor ===
v2356 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3802 value: v2413 stateAfter: - lastLocationAccess: - #next: v2334  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2334 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: a2335 
=== Usages ===
=== Predecessor ===
v2359 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a2335  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2335 <|@
result v343|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j2352 
=== Succesors ===
next: v2337 
=== Usages ===
a2340 
=== Predecessor ===
v2334 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2352 #next: v2337  <|@  <|@
f <@*|@fixed>@ <|@
tid v2337 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
a2335 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v342|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v336|QWORD + 12], y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v336|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v336|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v343|QWORD[.] = MOVE v336|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v343|QWORD[.]] destination: B256 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590937744903672136
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2322 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
next: v2326 
=== Usages ===
=== Predecessor ===
v2324 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2326  <|@  <|@
f <@*|@fixed>@ <|@
tid v2326 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2327 
=== Predecessor ===
v2322 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B255" 
    successors "B259" 
    xhandlers
    flags 
    probability 4591502344085317785
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2327 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2326 v2328 
=== Succesors ===
next: a2336 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2326 v2328 #next: a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2336 <|@
result v344|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1799 i277 i82 
=== Succesors ===
next: v2339 
=== Usages ===
a2340 
=== Predecessor ===
v2327 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1799 i277 i82 #next: v2339  <|@  <|@
f <@*|@fixed>@ <|@
tid v2339 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2338 
=== Predecessor ===
a2336 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v8|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v326|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v344|QWORD[.]] destination: B258 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B256" "B258" 
    successors "B260" "B261" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a2340 <|@
result v345|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v2338 
values: a2335 a2336 
=== Succesors ===
=== Usages ===
v3834 a1643 v3713 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2338 values: a2335 a2336  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2338 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArray(NewObjectSnippets.java:311) [bci: 19]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2337 v2339 
=== Succesors ===
next: v3101 
=== Usages ===
a2340 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2337 v2339 #next: v3101  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3101 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2544 
=== Usages ===
j3102 j3104 
=== Predecessor ===
v2338 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2544  <|@  <|@
f <@~|@floating>@ <|@
tid v1490 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:102) [bci: 9]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i3682 
y: i277 
=== Succesors ===
=== Usages ===
i1632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i3682 y: i277  <|@  <|@
f <@~|@floating>@ <|@
tid i1632 <|@
result v346|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v1490 
trueValue: i3682 
falseValue: i277 
=== Succesors ===
=== Usages ===
j2470 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v1490 trueValue: i3682 falseValue: i277  <|@  <|@
f <@~|@floating>@ <|@
tid j2470 <|@
result v347|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i1632 
=== Succesors ===
=== Usages ===
j3160 v3834 j2474 v2541 v3050 j3146 j3151 j3154 j3157 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i1632  <|@  <|@
f <@~|@floating>@ <|@
tid v2541 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2470 
y: j981 
=== Succesors ===
=== Usages ===
v2544 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2470 y: j981  <|@  <|@
f <@*|@fixed>@ <|@
tid v2544 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v2541 
=== Succesors ===
trueSuccessor: v2542 
falseSuccessor: v2543 
=== Usages ===
=== Predecessor ===
v3101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2541 #trueSuccessor: v2542 #falseSuccessor: v2543  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v345|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v326|DWORD, y: v321|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v346|DWORD = CMOVE (falseValue: v326|DWORD, ~trueValue: v321|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v347|QWORD = MOVSXD v346|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v347|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B278" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2542 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2560 
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2560  <|@  <|@
f <@*|@fixed>@ <|@
tid v2560 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2542 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2543 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2547 
=== Usages ===
=== Predecessor ===
v2544 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2547  <|@  <|@
f <@~|@floating>@ <|@
tid v3713 <|@
result [v345|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a2340 
index: - 
=== Succesors ===
=== Usages ===
j3104 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2340 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3104 <|@
result v348|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3101 
address: v3713 
=== Succesors ===
=== Usages ===
v3841 v3843 v3845 v3847 v3849 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3101 address: v3713  <|@  <|@
f <@~|@floating>@ <|@
tid v3709 <|@
result [v319|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a552 
index: - 
=== Succesors ===
=== Usages ===
j3102 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a552 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid j3102 <|@
result v349|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3101 
address: v3709 
=== Succesors ===
=== Usages ===
v3842 v3844 v3846 v3848 v3850 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3101 address: v3709  <|@  <|@
f <@~|@floating>@ <|@
tid j3146 <|@
result v350|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483664 - 2147483631]
=== Inputs ===
x: j2470 
y: j3145 
=== Succesors ===
=== Usages ===
v3147 v3149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3147 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3146 
y: j964 
=== Succesors ===
=== Usages ===
v2547 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3146 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2547 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3147 
=== Succesors ===
trueSuccessor: v2545 
falseSuccessor: v2546 
=== Usages ===
=== Predecessor ===
v2543 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3147 #trueSuccessor: v2545 #falseSuccessor: v2546  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v348|QWORD[.] = LEA [v345|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v349|QWORD[.] = LEA [v319|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v350|QWORD = LEA [v347|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v350|QWORD, y: v350|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B266" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2545 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2556 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2556  <|@  <|@
f <@*|@fixed>@ <|@
tid v2556 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
v2545 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B262 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2546 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2548 
=== Usages ===
=== Predecessor ===
v2547 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2548  <|@  <|@
f <@*|@fixed>@ <|@
tid v2548 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2549 
=== Predecessor ===
v2546 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B302" 
    successors "B265" "B302" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3137 <|@
result v351|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2549 
values: j964 j3144 
=== Succesors ===
=== Usages ===
v3850 j3144 v3849 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2549 values: j964 j3144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2549 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2548 
=== Succesors ===
next: v3683 
=== Usages ===
v3683 v2552 v2553 j3137 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2548 #next: v3683  <|@  <|@
f <@~|@floating>@ <|@
tid v3850 <|@
result [v349|QWORD[.] + v351|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3137 
=== Succesors ===
=== Usages ===
v3683 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3683 <|@
result v352|V256_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2549 
address: v3850 
=== Succesors ===
next: v3592 
=== Usages ===
v3592 
=== Predecessor ===
v2549 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2549 address: v3850 #next: v3592  <|@  <|@
f <@~|@floating>@ <|@
tid v3849 <|@
result [v348|QWORD[.] + v351|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3137 
=== Succesors ===
=== Usages ===
v3592 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3137  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3592 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3849 
value: v3683 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2555 
=== Usages ===
=== Predecessor ===
v3683 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3849 value: v3683 stateAfter: - lastLocationAccess: - #next: v2555  <|@  <|@
f <@~|@floating>@ <|@
tid j3144 <|@
result v353|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3137 
y: j818 
=== Succesors ===
=== Usages ===
j3129 j3137 v3149 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3137 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3149 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3146 
y: j3144 
=== Succesors ===
=== Usages ===
v2555 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3146 y: j3144  <|@  <|@
f <@*|@fixed>@ <|@
tid v2555 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3149 
=== Succesors ===
trueSuccessor: v2552 
falseSuccessor: v2554 
=== Usages ===
=== Predecessor ===
v3592 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3149 #trueSuccessor: v2552 #falseSuccessor: v2554  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v351|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v352|V256_WORD = H [v349|QWORD[.] + v351|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v351|QWORD * 2], input: v352|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v353|QWORD = LEA [v351|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v353|QWORD, y: v350|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2552 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2549 
=== Succesors ===
next: v2558 
=== Usages ===
=== Predecessor ===
v2555 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2549 #next: v2558  <|@  <|@
f <@*|@fixed>@ <|@
tid v2558 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2557 
=== Predecessor ===
v2552 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v353|QWORD] destination: B265 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B262" "B265" 
    successors "B267" "B268" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3129 <|@
result v354|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2557 
values: j964 j3144 
=== Succesors ===
=== Usages ===
v3848 j3136 j3121 v3152 v3847 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2557 values: j964 j3144  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2557 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2556 v2558 
=== Succesors ===
next: v2579 
=== Usages ===
j3129 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2556 v2558 #next: v2579  <|@  <|@
f <@~|@floating>@ <|@
tid j3151 <|@
result v355|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j2470 
y: j3084 
=== Succesors ===
=== Usages ===
v3152 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3152 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3151 
y: j3129 
=== Succesors ===
=== Usages ===
v2579 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3151 y: j3129  <|@  <|@
f <@*|@fixed>@ <|@
tid v2579 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3152 
=== Succesors ===
trueSuccessor: v2578 
falseSuccessor: v2577 
=== Usages ===
=== Predecessor ===
v2557 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3152 #trueSuccessor: v2578 #falseSuccessor: v2577  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v354|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v355|QWORD = LEA [v347|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v354|QWORD, y: v355|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B267 falseDestination: B266 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2578 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2582 
=== Usages ===
=== Predecessor ===
v2579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2582  <|@  <|@
f <@*|@fixed>@ <|@
tid v2582 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
v2578 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v354|QWORD] destination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2577 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3684 
=== Usages ===
v3684 
=== Predecessor ===
v2579 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3684  <|@  <|@
f <@~|@floating>@ <|@
tid v3848 <|@
result [v349|QWORD[.] + v354|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3129 
=== Succesors ===
=== Usages ===
v3684 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3684 <|@
result v356|V128_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16,i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2577 
address: v3848 
=== Succesors ===
next: v3590 
=== Usages ===
v3590 
=== Predecessor ===
v2577 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2577 address: v3848 #next: v3590  <|@  <|@
f <@~|@floating>@ <|@
tid v3847 <|@
result [v348|QWORD[.] + v354|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3129 
=== Succesors ===
=== Usages ===
v3590 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3590 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3847 
value: v3684 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2567 
=== Usages ===
=== Predecessor ===
v3684 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3847 value: v3684 stateAfter: - lastLocationAccess: - #next: v2567  <|@  <|@
f <@~|@floating>@ <|@
tid j3136 <|@
result v357|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3129 
y: j1752 
=== Succesors ===
=== Usages ===
j3121 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3129 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2567 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2568 
=== Predecessor ===
v3590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v356|V128_WORD = H [v349|QWORD[.] + v354|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v354|QWORD * 2], input: v356|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v357|QWORD = LEA [v354|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v357|QWORD] destination: B268 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" "B267" 
    successors "B270" "B271" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3121 <|@
result v358|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2568 
values: j3136 j3129 
=== Succesors ===
=== Usages ===
v3846 j3128 j3113 v3155 v3845 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2568 values: j3136 j3129  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2568 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2567 v2582 
=== Succesors ===
next: v2585 
=== Usages ===
j3121 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2567 v2582 #next: v2585  <|@  <|@
f <@~|@floating>@ <|@
tid j3154 <|@
result v359|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j2470 
y: j3088 
=== Succesors ===
=== Usages ===
v3155 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3155 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3154 
y: j3121 
=== Succesors ===
=== Usages ===
v2585 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3154 y: j3121  <|@  <|@
f <@*|@fixed>@ <|@
tid v2585 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3155 
=== Succesors ===
trueSuccessor: v2584 
falseSuccessor: v2583 
=== Usages ===
=== Predecessor ===
v2568 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3155 #trueSuccessor: v2584 #falseSuccessor: v2583  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v358|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v359|QWORD = LEA [v347|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v358|QWORD, y: v359|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B270 falseDestination: B269 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2584 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2588 
=== Usages ===
=== Predecessor ===
v2585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2588  <|@  <|@
f <@*|@fixed>@ <|@
tid v2588 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
v2584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v358|QWORD] destination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2583 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3685 
=== Usages ===
v3685 
=== Predecessor ===
v2585 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3685  <|@  <|@
f <@~|@floating>@ <|@
tid v3846 <|@
result [v349|QWORD[.] + v358|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3121 
=== Succesors ===
=== Usages ===
v3685 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3685 <|@
result v360|V64_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16,i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2583 
address: v3846 
=== Succesors ===
next: v3588 
=== Usages ===
v3588 
=== Predecessor ===
v2583 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2583 address: v3846 #next: v3588  <|@  <|@
f <@~|@floating>@ <|@
tid v3845 <|@
result [v348|QWORD[.] + v358|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3121 
=== Succesors ===
=== Usages ===
v3588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3588 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3845 
value: v3685 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2570 
=== Usages ===
=== Predecessor ===
v3685 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3845 value: v3685 stateAfter: - lastLocationAccess: - #next: v2570  <|@  <|@
f <@~|@floating>@ <|@
tid j3128 <|@
result v361|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3121 
y: j3080 
=== Succesors ===
=== Usages ===
j3113 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3121 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2570 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2571 
=== Predecessor ===
v3588 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v360|V64_WORD = H [v349|QWORD[.] + v358|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v358|QWORD * 2], input: v360|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v361|QWORD = LEA [v358|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v361|QWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B270" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3113 <|@
result v362|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2571 
values: j3128 j3121 
=== Succesors ===
=== Usages ===
v3844 j3120 j3105 v3158 v3843 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2571 values: j3128 j3121  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2571 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2570 v2588 
=== Succesors ===
next: v2591 
=== Usages ===
j3113 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2570 v2588 #next: v2591  <|@  <|@
f <@~|@floating>@ <|@
tid j3157 <|@
result v363|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j2470 
y: j3092 
=== Succesors ===
=== Usages ===
v3158 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3158 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3157 
y: j3113 
=== Succesors ===
=== Usages ===
v2591 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3157 y: j3113  <|@  <|@
f <@*|@fixed>@ <|@
tid v2591 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3158 
=== Succesors ===
trueSuccessor: v2590 
falseSuccessor: v2589 
=== Usages ===
=== Predecessor ===
v2571 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3158 #trueSuccessor: v2590 #falseSuccessor: v2589  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v362|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v363|QWORD = LEA [v347|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v362|QWORD, y: v363|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2590 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2594 
=== Usages ===
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2594  <|@  <|@
f <@*|@fixed>@ <|@
tid v2594 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2574 
=== Predecessor ===
v2590 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v362|QWORD] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2589 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3686 
=== Usages ===
v3686 
=== Predecessor ===
v2591 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3686  <|@  <|@
f <@~|@floating>@ <|@
tid v3844 <|@
result [v349|QWORD[.] + v362|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3113 
=== Succesors ===
=== Usages ===
v3686 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3686 <|@
result v364|V32_WORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: <i16,i16>
=== Inputs ===
stateBefore: - 
guard: v2589 
address: v3844 
=== Succesors ===
next: v3586 
=== Usages ===
v3586 
=== Predecessor ===
v2589 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2589 address: v3844 #next: v3586  <|@  <|@
f <@~|@floating>@ <|@
tid v3843 <|@
result [v348|QWORD[.] + v362|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3113 
=== Succesors ===
=== Usages ===
v3586 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3586 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3843 
value: v3686 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2573 
=== Usages ===
=== Predecessor ===
v3686 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3843 value: v3686 stateAfter: - lastLocationAccess: - #next: v2573  <|@  <|@
f <@~|@floating>@ <|@
tid j3120 <|@
result v365|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3113 
y: j3064 
=== Succesors ===
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3113 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2573 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2574 
=== Predecessor ===
v3586 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v364|V32_WORD = H [v349|QWORD[.] + v362|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v362|QWORD * 2], input: v364|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v365|QWORD = LEA [v362|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v365|QWORD] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3105 <|@
result v366|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2574 
values: j3120 j3113 
=== Succesors ===
=== Usages ===
v3842 v3161 v3841 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2574 values: j3120 j3113  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2574 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2573 v2594 
=== Succesors ===
next: v2597 
=== Usages ===
j3105 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2573 v2594 #next: v2597  <|@  <|@
f <@~|@floating>@ <|@
tid j3160 <|@
result v367|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j2470 
y: j3096 
=== Succesors ===
=== Usages ===
v3161 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2470 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3161 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3160 
y: j3105 
=== Succesors ===
=== Usages ===
v2597 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3160 y: j3105  <|@  <|@
f <@*|@fixed>@ <|@
tid v2597 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3161 
=== Succesors ===
trueSuccessor: v2596 
falseSuccessor: v2595 
=== Usages ===
=== Predecessor ===
v2574 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3161 #trueSuccessor: v2596 #falseSuccessor: v2595  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v366|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v367|QWORD = DEC v347|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v366|QWORD, y: v367|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2596 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2600 
=== Usages ===
=== Predecessor ===
v2597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2600  <|@  <|@
f <@*|@fixed>@ <|@
tid v2600 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v2596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2595 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: i3687 
=== Usages ===
i3687 
=== Predecessor ===
v2597 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i3687  <|@  <|@
f <@~|@floating>@ <|@
tid v3842 <|@
result [v349|QWORD[.] + v366|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3102 
index: j3105 
=== Succesors ===
=== Usages ===
i3687 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3102 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i3687 <|@
result v368|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: char
nullCheck: false
stamp: i16
=== Inputs ===
stateBefore: - 
guard: v2595 
address: v3842 
=== Succesors ===
next: v3584 
=== Usages ===
v3584 
=== Predecessor ===
v2595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v2595 address: v3842 #next: v3584  <|@  <|@
f <@~|@floating>@ <|@
tid v3841 <|@
result [v348|QWORD[.] + v366|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3104 
index: j3105 
=== Succesors ===
=== Usages ===
v3584 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3104 index: j3105  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3584 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3841 
value: i3687 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2576 
=== Usages ===
=== Predecessor ===
i3687 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3841 value: i3687 stateAfter: - lastLocationAccess: - #next: v2576  <|@  <|@
f <@*|@fixed>@ <|@
tid v2576 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2561 
=== Predecessor ===
v3584 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v368|DWORD = MOVSX [v349|QWORD[.] + v366|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v348|QWORD[.] + v366|QWORD * 2], y: v368|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B260" "B277" "B276" 
    successors "B279" "B297" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2561 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2560 v2576 v2600 
=== Succesors ===
next: v3164 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2560 v2576 v2600 #next: v3164  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3164 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v2607 
=== Usages ===
j3166 
=== Predecessor ===
v2561 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v2607  <|@  <|@
f <@~|@floating>@ <|@
tid j2469 <|@
result v369|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i277 
=== Succesors ===
=== Usages ===
j2474 v3050 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i277  <|@  <|@
f <@~|@floating>@ <|@
tid v3050 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2470 
y: j2469 
=== Succesors ===
=== Usages ===
v2607 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j2470 y: j2469  <|@  <|@
f <@*|@fixed>@ <|@
tid v2607 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v3050 
=== Succesors ===
trueSuccessor: v2606 
falseSuccessor: v2605 
=== Usages ===
=== Predecessor ===
v3164 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3050 #trueSuccessor: v2606 #falseSuccessor: v2605  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v369|QWORD = MOVSXD v326|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v369|QWORD, y: v347|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" "B281" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2606 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2610 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2610  <|@  <|@
f <@~|@floating>@ <|@
tid v3834 <|@
result [v345|QWORD[.] + v347|QWORD * 2 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times2
stamp: void*
=== Inputs ===
base: a2340 
index: j2470 
=== Succesors ===
=== Usages ===
j3166 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a2340 index: j2470  <|@  <|@
f <@~|@floating>@ <|@
tid j3166 <|@
result v370|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v3164 
address: v3834 
=== Succesors ===
=== Usages ===
v3851 v3852 v3853 v3854 v3855 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v3164 address: v3834  <|@  <|@
f <@~|@floating>@ <|@
tid j2474 <|@
result v371|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j2469 
y: j2470 
=== Succesors ===
=== Usages ===
j3211 j3197 j3202 j3205 j3208 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j2469 y: j2470  <|@  <|@
f <@~|@floating>@ <|@
tid j3197 <|@
result v372|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967311 - 4294967279]
=== Inputs ===
x: j2474 
y: j3145 
=== Succesors ===
=== Usages ===
v3198 v3200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3145  <|@  <|@
f <@~|@floating>@ <|@
tid v3198 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3197 
y: j964 
=== Succesors ===
=== Usages ===
v2610 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3197 y: j964  <|@  <|@
f <@*|@fixed>@ <|@
tid v2610 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v3198 
=== Succesors ===
trueSuccessor: v2608 
falseSuccessor: v2609 
=== Usages ===
=== Predecessor ===
v2606 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3198 #trueSuccessor: v2608 #falseSuccessor: v2609  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v370|QWORD[.] = LEA [v345|QWORD[.] + v347|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v371|QWORD = SUB (x: v369|QWORD, ~y: v347|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v372|QWORD = LEA [v371|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v372|QWORD, y: v372|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2608 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2619 
=== Usages ===
=== Predecessor ===
v2610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2619  <|@  <|@
f <@*|@fixed>@ <|@
tid v2619 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
v2608 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B280 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B282" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2609 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2611 
=== Usages ===
=== Predecessor ===
v2610 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2611  <|@  <|@
f <@*|@fixed>@ <|@
tid v2611 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2612 
=== Predecessor ===
v2609 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B281 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" "B296" 
    successors "B283" "B296" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3191 <|@
result v373|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2612 
values: j964 j3196 
=== Succesors ===
=== Usages ===
v3855 j3196 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2612 values: j964 j3196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2612 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v2611 
=== Succesors ===
next: v3597 
=== Usages ===
j3191 v2615 v2616 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v2611 #next: v3597  <|@  <|@
f <@~|@floating>@ <|@
tid v3855 <|@
result [v370|QWORD[.] + v373|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3191 
=== Succesors ===
=== Usages ===
v3597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3191  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3855 
value: v3643 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2618 
=== Usages ===
=== Predecessor ===
v2612 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3855 value: v3643 stateAfter: - lastLocationAccess: - #next: v2618  <|@  <|@
f <@~|@floating>@ <|@
tid j3196 <|@
result v374|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3191 
y: j818 
=== Succesors ===
=== Usages ===
j3185 j3191 v3200 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3191 y: j818  <|@  <|@
f <@~|@floating>@ <|@
tid v3200 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3197 
y: j3196 
=== Succesors ===
=== Usages ===
v2618 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3197 y: j3196  <|@  <|@
f <@*|@fixed>@ <|@
tid v2618 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3200 
=== Succesors ===
trueSuccessor: v2615 
falseSuccessor: v2617 
=== Usages ===
=== Predecessor ===
v3597 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3200 #trueSuccessor: v2615 #falseSuccessor: v2617  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v373|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v373|QWORD * 2], input: v7|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v374|QWORD = LEA [v373|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v374|QWORD, y: v372|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B283 falseDestination: B282 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2615 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v2612 
=== Succesors ===
next: v2621 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v2612 #next: v2621  <|@  <|@
f <@*|@fixed>@ <|@
tid v2621 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2620 
=== Predecessor ===
v2615 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v374|QWORD] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B280" "B283" 
    successors "B285" "B286" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3185 <|@
result v375|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2620 
values: j964 j3196 
=== Succesors ===
=== Usages ===
v3854 j3190 j3179 v3203 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2620 values: j964 j3196  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2620 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2619 v2621 
=== Succesors ===
next: v2642 
=== Usages ===
j3185 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2619 v2621 #next: v2642  <|@  <|@
f <@~|@floating>@ <|@
tid j3202 <|@
result v376|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j2474 
y: j3084 
=== Succesors ===
=== Usages ===
v3203 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3084  <|@  <|@
f <@~|@floating>@ <|@
tid v3203 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3202 
y: j3185 
=== Succesors ===
=== Usages ===
v2642 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3202 y: j3185  <|@  <|@
f <@*|@fixed>@ <|@
tid v2642 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3203 
=== Succesors ===
trueSuccessor: v2641 
falseSuccessor: v2640 
=== Usages ===
=== Predecessor ===
v2620 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3203 #trueSuccessor: v2641 #falseSuccessor: v2640  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v375|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v376|QWORD = LEA [v371|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v375|QWORD, y: v376|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B285 falseDestination: B284 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2641 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2645 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2645  <|@  <|@
f <@*|@fixed>@ <|@
tid v2645 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
v2641 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v375|QWORD] destination: B285 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2640 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3596 
=== Usages ===
=== Predecessor ===
v2642 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3596  <|@  <|@
f <@~|@floating>@ <|@
tid v3854 <|@
result [v370|QWORD[.] + v375|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3185 
=== Succesors ===
=== Usages ===
v3596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3854 
value: v3647 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2630 
=== Usages ===
=== Predecessor ===
v2640 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3854 value: v3647 stateAfter: - lastLocationAccess: - #next: v2630  <|@  <|@
f <@~|@floating>@ <|@
tid j3190 <|@
result v377|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3185 
y: j1752 
=== Succesors ===
=== Usages ===
j3179 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3185 y: j1752  <|@  <|@
f <@*|@fixed>@ <|@
tid v2630 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2631 
=== Predecessor ===
v3596 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v375|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v377|QWORD = LEA [v375|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v377|QWORD] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" "B285" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3179 <|@
result v378|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2631 
values: j3190 j3185 
=== Succesors ===
=== Usages ===
v3853 j3184 j3173 v3206 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2631 values: j3190 j3185  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2631 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2630 v2645 
=== Succesors ===
next: v2648 
=== Usages ===
j3179 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2630 v2645 #next: v2648  <|@  <|@
f <@~|@floating>@ <|@
tid j3205 <|@
result v379|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j2474 
y: j3088 
=== Succesors ===
=== Usages ===
v3206 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3088  <|@  <|@
f <@~|@floating>@ <|@
tid v3206 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3205 
y: j3179 
=== Succesors ===
=== Usages ===
v2648 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3205 y: j3179  <|@  <|@
f <@*|@fixed>@ <|@
tid v2648 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3206 
=== Succesors ===
trueSuccessor: v2647 
falseSuccessor: v2646 
=== Usages ===
=== Predecessor ===
v2631 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3206 #trueSuccessor: v2647 #falseSuccessor: v2646  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v378|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v379|QWORD = LEA [v371|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v378|QWORD, y: v379|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2647 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2651 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2651  <|@  <|@
f <@*|@fixed>@ <|@
tid v2651 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2634 
=== Predecessor ===
v2647 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v378|QWORD] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2646 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3595 
=== Usages ===
=== Predecessor ===
v2648 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3595  <|@  <|@
f <@~|@floating>@ <|@
tid v3853 <|@
result [v370|QWORD[.] + v378|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3179 
=== Succesors ===
=== Usages ===
v3595 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3853 
value: v3646 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2633 
=== Usages ===
=== Predecessor ===
v2646 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3853 value: v3646 stateAfter: - lastLocationAccess: - #next: v2633  <|@  <|@
f <@~|@floating>@ <|@
tid j3184 <|@
result v380|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3179 
y: j3080 
=== Succesors ===
=== Usages ===
j3173 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3179 y: j3080  <|@  <|@
f <@*|@fixed>@ <|@
tid v2633 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2634 
=== Predecessor ===
v3595 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v378|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v380|QWORD = LEA [v378|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v380|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3173 <|@
result v381|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2634 
values: j3184 j3179 
=== Succesors ===
=== Usages ===
v3852 j3178 j3167 v3209 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2634 values: j3184 j3179  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2634 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2633 v2651 
=== Succesors ===
next: v2654 
=== Usages ===
j3173 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2633 v2651 #next: v2654  <|@  <|@
f <@~|@floating>@ <|@
tid j3208 <|@
result v382|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j2474 
y: j3092 
=== Succesors ===
=== Usages ===
v3209 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3092  <|@  <|@
f <@~|@floating>@ <|@
tid v3209 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3208 
y: j3173 
=== Succesors ===
=== Usages ===
v2654 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3208 y: j3173  <|@  <|@
f <@*|@fixed>@ <|@
tid v2654 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3209 
=== Succesors ===
trueSuccessor: v2653 
falseSuccessor: v2652 
=== Usages ===
=== Predecessor ===
v2634 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3209 #trueSuccessor: v2653 #falseSuccessor: v2652  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v381|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v382|QWORD = LEA [v371|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v381|QWORD, y: v382|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2653 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2657 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2657  <|@  <|@
f <@*|@fixed>@ <|@
tid v2657 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2637 
=== Predecessor ===
v2653 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v381|QWORD] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2652 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3594 
=== Usages ===
=== Predecessor ===
v2654 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3594  <|@  <|@
f <@~|@floating>@ <|@
tid v3852 <|@
result [v370|QWORD[.] + v381|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3173 
=== Succesors ===
=== Usages ===
v3594 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3594 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3852 
value: v3645 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2636 
=== Usages ===
=== Predecessor ===
v2652 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3852 value: v3645 stateAfter: - lastLocationAccess: - #next: v2636  <|@  <|@
f <@~|@floating>@ <|@
tid j3178 <|@
result v383|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j3173 
y: j3064 
=== Succesors ===
=== Usages ===
j3167 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j3173 y: j3064  <|@  <|@
f <@*|@fixed>@ <|@
tid v2636 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2637 
=== Predecessor ===
v3594 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v381|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v383|QWORD = LEA [v381|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v383|QWORD] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j3167 <|@
result v384|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2637 
values: j3178 j3173 
=== Succesors ===
=== Usages ===
v3851 v3212 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2637 values: j3178 j3173  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2637 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2636 v2657 
=== Succesors ===
next: v2660 
=== Usages ===
j3167 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2636 v2657 #next: v2660  <|@  <|@
f <@~|@floating>@ <|@
tid j3211 <|@
result v385|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j2474 
y: j3096 
=== Succesors ===
=== Usages ===
v3212 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2474 y: j3096  <|@  <|@
f <@~|@floating>@ <|@
tid v3212 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j3211 
y: j3167 
=== Succesors ===
=== Usages ===
v2660 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j3211 y: j3167  <|@  <|@
f <@*|@fixed>@ <|@
tid v2660 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v3212 
=== Succesors ===
trueSuccessor: v2659 
falseSuccessor: v2658 
=== Usages ===
=== Predecessor ===
v2637 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v3212 #trueSuccessor: v2659 #falseSuccessor: v2658  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v384|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v385|QWORD = DEC v371|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v384|QWORD, y: v385|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2659 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2663 
=== Usages ===
=== Predecessor ===
v2660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2663  <|@  <|@
f <@*|@fixed>@ <|@
tid v2663 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v2659 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2658 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v3593 
=== Usages ===
=== Predecessor ===
v2660 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v3593  <|@  <|@
f <@~|@floating>@ <|@
tid v3851 <|@
result [v370|QWORD[.] + v384|QWORD * 2] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times2
stamp: void*
=== Inputs ===
base: j3166 
index: j3167 
=== Succesors ===
=== Usages ===
v3593 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j3166 index: j3167  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v3593 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3851 
value: i3644 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2639 
=== Usages ===
=== Predecessor ===
v2658 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3851 value: i3644 stateAfter: - lastLocationAccess: - #next: v2639  <|@  <|@
f <@*|@fixed>@ <|@
tid v2639 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v3593 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v370|QWORD[.] + v384|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B282" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2617 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2616 
=== Usages ===
=== Predecessor ===
v2618 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2616  <|@  <|@
f <@*|@fixed>@ <|@
tid v2616 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2612 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2617 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v374|QWORD] destination: B296 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B298" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2605 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2623 
=== Usages ===
=== Predecessor ===
v2607 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2623  <|@  <|@
f <@*|@fixed>@ <|@
tid v2623 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2624 
=== Predecessor ===
v2605 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2624 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2623 v2639 v2663 
=== Succesors ===
next: a1643 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2623 v2639 v2663 #next: a1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1643 <|@
result v345|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$c, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:58) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfChar(stripped:109) [bci: 58]
at java.util.Arrays.copyOfRange(char[], int, int) [bci: -1]
at java.lang.String.<init>(String.java:207) [bci: 75]
at java.lang.StringBuilder.toString(StringBuilder.java:407) [bci: 13]
at java.lang.StringBuilder.toString() [bci: -1]
at java.lang.Object.toString(Object.java:236) [bci: 32]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a2340 
=== Succesors ===
next: j2367 
=== Usages ===
a1459 
=== Predecessor ===
v2624 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a2340 #next: j2367  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2367 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j2382 
=== Usages ===
v3803 v3804 
=== Predecessor ===
a1643 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j2382  <|@  <|@
f <@~|@floating>@ <|@
tid v3803 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j2367 
index: - 
=== Succesors ===
=== Usages ===
j2382 v2384 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2382 <|@
result v386|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3803 
=== Succesors ===
next: j2383 
=== Usages ===
j2456 j2388 v3831 
=== Predecessor ===
j2367 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3803 #next: j2383  <|@  <|@
f <@~|@floating>@ <|@
tid v3804 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j2367 
index: - 
=== Succesors ===
=== Usages ===
j2383 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2367 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2383 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3804 
=== Succesors ===
next: v2375 
=== Usages ===
v2372 
=== Predecessor ===
j2382 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3804 #next: v2375  <|@  <|@
f <@~|@floating>@ <|@
tid j2456 <|@
result v387|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j2382 
y: j1430 
=== Succesors ===
=== Usages ===
v2372 v2384 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j2382 y: j1430  <|@  <|@
f <@~|@floating>@ <|@
tid v2372 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j2383 
y: j2456 
=== Succesors ===
=== Usages ===
v2375 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j2383 y: j2456  <|@  <|@
f <@*|@fixed>@ <|@
tid v2375 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v2372 
=== Succesors ===
trueSuccessor: v2373 
falseSuccessor: v2374 
=== Usages ===
=== Predecessor ===
j2383 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v2372 #trueSuccessor: v2373 #falseSuccessor: v2374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v386|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v387|QWORD = LEA [v386|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v387|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4576172281173459212
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2373 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a2378 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a2378  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a2378 <|@
result v388|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?279 
arguments: v1767 i92 i71 
=== Succesors ===
next: j2379 
=== Usages ===
j2379 
=== Predecessor ===
v2373 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?279 arguments: v1767 i92 i71 #next: j2379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2379 <|@
result v388|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
trackedPointer: true
=== Inputs ===
input: a2378 
=== Succesors ===
next: v2389 
=== Usages ===
j2388 
=== Predecessor ===
a2378 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a2378 #next: v2389  <|@  <|@
f <@*|@fixed>@ <|@
tid v2389 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
j2379 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v11|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v388|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v388|QWORD[.]] destination: B299 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4605938458292904088
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2374 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2384 
=== Usages ===
=== Predecessor ===
v2375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2384  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2384 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3803 
value: j2456 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2381 
=== Usages ===
=== Predecessor ===
v2374 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3803 value: j2456 stateAfter: - lastLocationAccess: - #next: v2381  <|@  <|@
f <@~|@floating>@ <|@
tid v3831 <|@
result [v386|QWORD + 216] <|@
d <@d|@=== Debug Properties ===
displacement: 216
scale: Times1
stamp: void*
=== Inputs ===
base: j2382 
index: - 
=== Succesors ===
=== Usages ===
v2381 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2382 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2381 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
address: v3831 
=== Succesors ===
next: v2387 
=== Usages ===
=== Predecessor ===
v2384 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v3831 #next: v2387  <|@  <|@
f <@*|@fixed>@ <|@
tid v2387 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v2386 
=== Predecessor ===
v2381 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v387|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v386|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v386|QWORD] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B299" 
    successors 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j2388 <|@
result v389|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v2386 
values: j2382 j2379 
=== Succesors ===
=== Usages ===
v3807 v3806 a1456 v3832 v3833 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v2386 values: j2382 j2379  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v2387 v2389 
=== Succesors ===
next: a1456 
=== Usages ===
j2388 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v2387 v2389 #next: a1456  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1456 <|@
result v390|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a -
trackedPointer: true
=== Inputs ===
input: j2388 
=== Succesors ===
next: j2398 
=== Usages ===
a1462 
=== Predecessor ===
v2386 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j2388 #next: j2398  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j2398 <|@
result v391|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: PrototypeMarkWord
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v3805 
=== Succesors ===
next: v2399 
=== Usages ===
v2399 
=== Predecessor ===
a1456 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v3805 #next: v2399  <|@  <|@
f <@~|@floating>@ <|@
tid v3806 <|@
result [v389|QWORD[*]] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2399 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2399 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3806 
value: j2398 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2402 
=== Usages ===
=== Predecessor ===
j2398 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3806 value: j2398 stateAfter: - lastLocationAccess: - #next: v2402  <|@  <|@
f <@~|@floating>@ <|@
tid v3807 <|@
result [v389|QWORD[*] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2402 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2402 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3807 
value: v2453 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2406 
=== Usages ===
=== Predecessor ===
v2399 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3807 value: v2453 stateAfter: - lastLocationAccess: - #next: v2406  <|@  <|@
f <@~|@floating>@ <|@
tid v3832 <|@
result [v389|QWORD[*] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid a1459 <|@
result v392|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
op: Compress
stamp: n! -
=== Inputs ===
value: a1643 
=== Succesors ===
=== Usages ===
v2406 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a1643  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2406 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3832 
value: a1459 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v2408 
=== Usages ===
=== Predecessor ===
v2402 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3832 value: a1459 stateAfter: - lastLocationAccess: - #next: v2408  <|@  <|@
f <@~|@floating>@ <|@
tid v3833 <|@
result [v389|QWORD[*] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: j2388 
index: - 
=== Succesors ===
=== Usages ===
v2408 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j2388 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v2408 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v3833 
value: i82 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: a1462 
=== Usages ===
=== Predecessor ===
v2406 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v3833 value: i82 stateAfter: - lastLocationAccess: - #next: a1462  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a1462 <|@
result v390|QWORD[.] <|@
d <@d|@=== Debug Properties ===
predefinedStamp: [null]
stamp: a -
=== Inputs ===
object: a1456 
=== Succesors ===
next: v1463 
=== Usages ===
v199 
=== Predecessor ===
v2408 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a1456 #next: v1463  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1463 <|@
d <@d|@=== Debug Properties ===
barriers: 10
location: INIT_LOCATION
stamp: void
=== Inputs ===
=== Succesors ===
next: v199 
=== Usages ===
=== Predecessor ===
a1462 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: v199  <|@  <|@
f <@*|@fixed>@ <|@
tid v199 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
result: a1462 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1463 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: a1462 memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v389|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v390|QWORD[.] = MOVE v389|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v391|QWORD = MOV [v327|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*]], y: v391|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v389|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v392|DWORD[.] = COMPRESSPOINTER (input: v345|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*] + 12], y: v392|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v390|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B264" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2554 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2553 
=== Usages ===
=== Predecessor ===
v2555 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2553  <|@  <|@
f <@*|@fixed>@ <|@
tid v2553 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2549 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2554 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2549  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v353|QWORD] destination: B302 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B203" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2932 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2931 
=== Usages ===
=== Predecessor ===
v2933 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2931  <|@  <|@
f <@*|@fixed>@ <|@
tid v2931 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2927 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2932 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2927  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B303 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B305" "B306" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v114 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 40]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1383 
=== Usages ===
=== Predecessor ===
v115 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1383  <|@  <|@
tid ?109 <|@
d <@d|@=== Debug Properties ===
bci: 32
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, char[], int, int)>
duringCall: false
localsSize: 8
locksSize: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
rethrowException: false
sourceFile: Integer.java
sourceLine: 336
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: i102 i35 a1659 i82 - i105 - i120 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1332 v1380 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: i102 i35 a1659 i82 - i105 - i120 virtualObjectMappings: ?794  <|@  <|@
f <@~|@floating>@ <|@
tid v116 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i105 
y: i71 
=== Succesors ===
=== Usages ===
v1383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i105 y: i71  <|@  <|@
f <@*|@fixed>@ <|@
tid v1383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v116 
=== Succesors ===
trueSuccessor: v1382 
falseSuccessor: v1379 
=== Usages ===
=== Predecessor ===
v114 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v116 #trueSuccessor: v1382 #falseSuccessor: v1379  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v257|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: v1380 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: v1380  <|@  <|@
f <@*|@fixed>@ <|@
tid v1380 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 902
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
reason: UnreachedCode
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1382 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?109  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -230931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v257|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:32, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B186" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:337) [bci: 42]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
=== Succesors ===
next: v1332 
=== Usages ===
=== Predecessor ===
v1383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v1332  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v1332 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?109 
=== Succesors ===
next: v118 
=== Usages ===
=== Predecessor ===
v1379 >@ <|@
instruction <@Safepoint|@org.graalvm.compiler.nodes.SafepointNode>@ stateBefore: ?109 #next: v118  <|@  <|@
f <@~|@floating>@ <|@
tid i110 <|@
result v393|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 34]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: i32 [0 - 268435455] ⇈000000000fffffff
=== Inputs ===
x: i102 
y: i35 
=== Succesors ===
=== Usages ===
i102 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i102 y: i35  <|@  <|@
f <@*|@fixed>@ <|@
tid v118 <|@
d <@d|@=== Debug Properties ===
canSafepoint: true
endIndex: 0
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
loopBegin: v101 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1332 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v257|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26] <|@ <|@
      nr   -1  <|@ instruction v393|DWORD = SHR v255|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v393|DWORD, v257|DWORD] destination: B306 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v1365 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v101 
=== Succesors ===
next: v1363 
=== Usages ===
=== Predecessor ===
v1366 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v101 #next: v1363  <|@  <|@
tid ?104 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<Integer.formatUnsignedInt(int, int, char[], int, int)>
duringCall: false
localsSize: 8
locksSize: 0
rethrowException: false
sourceFile: Integer.java
sourceLine: 335
stackSize: 0
=== Inputs ===
outerFrameState: ?124 
values: i102 i35 a1659 i82 - i103 - i120 
virtualObjectMappings: ?794 
=== Succesors ===
=== Usages ===
v1363 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?124 values: i102 i35 a1659 i82 - i103 - i120 virtualObjectMappings: ?794  <|@  <|@
f <@*|@fixed>@ <|@
tid v1363 <|@
d <@d|@=== Debug Properties ===
action: InvalidateReprofile
debugId: 824
nodeSourcePosition: at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 31]
at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
at java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
at java.lang.Object.toString(Object.java:236) [bci: 26]
reason: BoundsCheckException
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?104 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v1365 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?104  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -210971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v256|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B114" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2806 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2805 
=== Usages ===
=== Predecessor ===
v2807 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2805  <|@  <|@
f <@*|@fixed>@ <|@
tid v2805 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2801 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2806 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2801  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B308 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v2680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v2679 
=== Usages ===
=== Predecessor ===
v2681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v2679  <|@  <|@
f <@*|@fixed>@ <|@
tid v2679 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v2675 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v2680 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v2675  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B309 -> B44 <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|DWORD = MOV [v0|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v2|QWORD[.] = MOV [v1|DWORD * 8 + 104] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v3|DWORD[.] = MOV [v2|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v4|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   -1  <|@ instruction v5|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v6|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction v9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   -1  <|@ instruction v10|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction TEST (x: v3|DWORD[.], y: v3|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4607155558376912941
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v36|DWORD[.] = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction v37|DWORD = MOV [v36|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = LEA [v37|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v38|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = LEA [v39|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v39|QWORD] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr   -1  <|@ instruction [v42|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE v42|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v42|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v42|QWORD[*] + 16], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v37|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v44|QWORD[.] = UNCOMPRESSPOINTER (input: v36|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v45|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v46|QWORD[*] = MOVE v43|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v47|QWORD = MOV v37|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v45|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v46|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v47|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v48|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v48|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v49|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v48|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v48|QWORD] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr   -1  <|@ instruction [v51|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v52|QWORD[.] = MOVE v51|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v53|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*]], y: v53|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v51|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*] + 12], y: v37|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v54|DWORD[.] = COMPRESSPOINTER (input: v43|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v51|QWORD[*] + 16], y: v54|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v43|QWORD[.], v37|DWORD, v37|DWORD, v52|QWORD[.]] destination: B22 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B83" 
    successors "B85" "B101" 
    xhandlers
    flags 
    probability 4607173992112009100
    begin_IR
      LIR
      nr   -1  <|@ instruction [v130|DWORD, v131|QWORD[.], v132|DWORD, v133|DWORD, v134|QWORD[.]] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v135|DWORD = MOV [v131|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v136|DWORD = INC v132|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v137|DWORD = SUB (x: v136|DWORD, ~y: v130|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v138|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr   -1  <|@ instruction CMP v137|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606750936613628552
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v132|DWORD, y: v132|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4606665179442945031
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v139|DWORD = DEC v135|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v132|DWORD, y: v139|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B100" 
    xhandlers
    flags 
    probability 4606580279843968345
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v140|QWORD = MOVSXD v132|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v131|QWORD[.] + v140|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v136|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v141|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v142|QWORD = AND v141|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v142|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4606413019144024376
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v143|QWORD = SHR v141|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v144|DWORD = MOV v143|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v144|DWORD, y: v144|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606330641148036896
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v144|DWORD] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr   -1  <|@ instruction [v146|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v147|DWORD = LZCNT v146|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v148|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v149|DWORD = SUB (x: v148|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v150|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v151|DWORD = SUB (x: v150|DWORD, ~y: v147|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v151|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B167" 
    xhandlers
    flags 
    probability 4604273993691867467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v151|DWORD, v146|DWORD, v149|DWORD] destination: B99 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B162" "B99" 
    successors "B168" 
    xhandlers
    flags 
    probability 4604639499959146547
    begin_IR
      LIR
      nr   -1  <|@ instruction [v226|DWORD, v227|DWORD, v228|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v229|DWORD = SHR v226|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v229|DWORD, v227|DWORD, v228|DWORD] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" "B161" "B98" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v230|DWORD, v231|DWORD, v232|DWORD] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v233|DWORD[.] = MOV [v134|QWORD[.] + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v233|DWORD[.], y: v233|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v235|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v236|DWORD = SHL v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v237|DWORD = LEA [v236|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v238|DWORD = AND v237|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v239|QWORD = MOV v238|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v240|QWORD = ADD (x: v235|QWORD, y: v239|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v240|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v240|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v235|QWORD + v238|DWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v235|QWORD + 12], y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v235|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v235|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v242|QWORD[.] = MOVE v235|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v242|QWORD[.]] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B171" 
    successors "B174" "B175" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v243|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v244|QWORD[.] = LEA [v243|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v245|QWORD = MOV v230|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v246|QWORD = LEA [v245|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v246|QWORD, y: v246|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.]], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[8|0x8]] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v247|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v248|QWORD = LEA [v245|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v247|QWORD, y: v248|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.]], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[4|0x4]] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" 
    successors "B180" "B181" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v249|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v250|QWORD = LEA [v245|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v249|QWORD, y: v250|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v244|QWORD[.] + v249|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v251|QWORD = LEA [v249|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v251|QWORD] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B180" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v252|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v253|QWORD = DEC v245|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v252|QWORD, y: v253|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v244|QWORD[.] + v252|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v254|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v231|DWORD, v230|DWORD] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B304" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v258|DWORD = AND v255|DWORD y: 15 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v259|DWORD = MOVSX [v254|QWORD[.] + v258|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v243|QWORD[.] + v257|DWORD * 2 + 16], y: v259|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction TEST v255|DWORD y: -16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B305" "B306" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v257|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B186" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v257|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26] <|@ <|@
      nr   -1  <|@ instruction v393|DWORD = SHR v255|DWORD y: 4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v393|DWORD, v257|DWORD] destination: B306 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B306" 
    successors "B187" "B307" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr   -1  <|@ instruction [v255|DWORD, v256|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v257|DWORD = DEC v256|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v230|DWORD, y: v257|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v260|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v261|DWORD = MOV [v233|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v262|DWORD = ADD (x: v260|DWORD, y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v263|DWORD = SUB (x: v262|DWORD, ~y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v264|QWORD[.] = UNCOMPRESSPOINTER (input: v233|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction CMP v263|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B238" 
    xhandlers
    flags 
    probability 4606580279843968346
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v264|QWORD[.], v260|DWORD] destination: B189 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B189" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr   -1  <|@ instruction [v319|QWORD[.], v320|DWORD] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v320|DWORD, y: v320|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" "B243" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v321|DWORD = MOV [v319|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v322|DWORD = SUB (x: v321|DWORD, ~y: v230|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v320|DWORD, y: v322|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B241 falseDestination: B240 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" "B250" 
    xhandlers
    flags 
    probability 4606819404567777292
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v323|QWORD[*] = MOVE v243|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v324|QWORD[*] = MOVE v319|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v325|QWORD = MOVSXD v320|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v323|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v324|QWORD[*] + v325|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v245|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v326|DWORD = ADD (x: v230|DWORD, y: v320|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v327|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr   -1  <|@ instruction CMP v326|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B251" "B253" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v334|DWORD = SUB (x: v321|DWORD, ~y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v334|DWORD, y: v334|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B254" "B257" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v336|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v337|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v326|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" "B256" 
    xhandlers
    flags 
    probability 4605232709315847027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v338|DWORD = SHL v326|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v339|DWORD = LEA [v338|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v340|DWORD = AND v339|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v341|QWORD = MOVSXD v340|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v342|QWORD = ADD (x: v341|QWORD, y: v336|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v342|QWORD, y: v337|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B255 falseDestination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4605162134418141321
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v342|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v341|QWORD + v336|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v336|QWORD + 12], y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v336|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v336|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v343|QWORD[.] = MOVE v336|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v343|QWORD[.]] destination: B256 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B256" "B258" 
    successors "B260" "B261" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v345|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v326|DWORD, y: v321|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v346|DWORD = CMOVE (falseValue: v326|DWORD, ~trueValue: v321|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v347|QWORD = MOVSXD v346|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v347|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v348|QWORD[.] = LEA [v345|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v349|QWORD[.] = LEA [v319|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v350|QWORD = LEA [v347|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v350|QWORD, y: v350|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B266" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B262 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B262" "B265" 
    successors "B267" "B268" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v354|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v355|QWORD = LEA [v347|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v354|QWORD, y: v355|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B267 falseDestination: B266 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v356|V128_WORD = H [v349|QWORD[.] + v354|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v354|QWORD * 2], input: v356|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v357|QWORD = LEA [v354|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v357|QWORD] destination: B268 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" "B267" 
    successors "B270" "B271" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v358|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v359|QWORD = LEA [v347|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v358|QWORD, y: v359|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B270 falseDestination: B269 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v360|V64_WORD = H [v349|QWORD[.] + v358|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v358|QWORD * 2], input: v360|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v361|QWORD = LEA [v358|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v361|QWORD] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B270" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v362|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v363|QWORD = LEA [v347|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v362|QWORD, y: v363|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v364|V32_WORD = H [v349|QWORD[.] + v362|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v362|QWORD * 2], input: v364|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v365|QWORD = LEA [v362|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v365|QWORD] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v366|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v367|QWORD = DEC v347|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v366|QWORD, y: v367|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v368|DWORD = MOVSX [v349|QWORD[.] + v366|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v348|QWORD[.] + v366|QWORD * 2], y: v368|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B260" "B277" "B276" 
    successors "B279" "B297" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v369|QWORD = MOVSXD v326|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v369|QWORD, y: v347|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B298" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v386|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v387|QWORD = LEA [v386|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v387|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4605938458292904088
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v387|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v386|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v386|QWORD] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B299" 
    successors 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr   -1  <|@ instruction [v389|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v390|QWORD[.] = MOVE v389|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v391|QWORD = MOV [v327|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*]], y: v391|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v389|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v392|DWORD[.] = COMPRESSPOINTER (input: v345|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*] + 12], y: v392|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v389|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v390|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B278" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B260 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" "B281" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v370|QWORD[.] = LEA [v345|QWORD[.] + v347|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v371|QWORD = SUB (x: v369|QWORD, ~y: v347|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v372|QWORD = LEA [v371|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v372|QWORD, y: v372|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B280 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B280" "B283" 
    successors "B285" "B286" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v375|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v376|QWORD = LEA [v371|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v375|QWORD, y: v376|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B285 falseDestination: B284 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v375|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v377|QWORD = LEA [v375|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v377|QWORD] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" "B285" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v378|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v379|QWORD = LEA [v371|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v378|QWORD, y: v379|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v378|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v380|QWORD = LEA [v378|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v380|QWORD] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v381|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v382|QWORD = LEA [v371|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v381|QWORD, y: v382|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v381|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v383|QWORD = LEA [v381|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v383|QWORD] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v384|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v385|QWORD = DEC v371|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v384|QWORD, y: v385|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v370|QWORD[.] + v384|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4598056962486991259
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v146|DWORD, v149|DWORD] destination: B98 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v247|QWORD] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v249|QWORD] destination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v354|QWORD] destination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v358|QWORD] destination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B264" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v353|QWORD] destination: B302 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B302" 
    successors "B265" "B302" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v351|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v352|V256_WORD = H [v349|QWORD[.] + v351|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v348|QWORD[.] + v351|QWORD * 2], input: v352|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v353|QWORD = LEA [v351|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v353|QWORD, y: v350|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B282" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v394|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B281 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B282" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v374|QWORD] destination: B296 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" "B296" 
    successors "B283" "B296" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [v373|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v370|QWORD[.] + v373|QWORD * 2], input: v394|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v374|QWORD = LEA [v373|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v374|QWORD, y: v372|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B283 falseDestination: B282 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v353|QWORD] destination: B265 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v374|QWORD] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v378|QWORD] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v381|QWORD] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v362|QWORD] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v375|QWORD] destination: B285 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v326|DWORD, y: v326|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B248" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v328|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v329|QWORD = LEA [v328|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v329|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4591020456060350490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v329|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v328|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v328|QWORD] destination: B248 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" "B247" 
    successors 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr   -1  <|@ instruction [v331|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v332|QWORD[.] = MOVE v331|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v333|QWORD = MOV [v327|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v331|QWORD[*]], y: v333|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v331|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV [v331|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v331|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction rax|QWORD[.] = MOVE v332|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590937744903672136
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B255" 
    successors "B259" 
    xhandlers
    flags 
    probability 4591502344085317785
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v398|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v398|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v326|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v344|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v344|QWORD[.]] destination: B258 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v136|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v134|QWORD[.] v131|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v152|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v152|DWORD, y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v153|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v154|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v152|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4586252820212474326
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v155|DWORD = SHL v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v156|DWORD = LEA [v155|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v157|DWORD = AND v156|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v158|QWORD = MOVSXD v157|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v159|QWORD = ADD (x: v158|QWORD, y: v153|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v159|QWORD, y: v154|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4586191900220707527
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v159|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v158|QWORD + v153|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v153|QWORD + 12], y: v152|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v153|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v153|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v160|QWORD[.] = MOVE v153|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v160|QWORD[.]] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr   -1  <|@ instruction [v162|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v152|DWORD, y: v135|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v163|DWORD = CMOVE (falseValue: v152|DWORD, ~trueValue: v135|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v164|QWORD = MOVSXD v163|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v164|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v165|QWORD[.] = LEA [v162|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v166|QWORD[.] = LEA [v131|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v167|QWORD = LEA [v164|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v167|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B116" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [v171|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v172|QWORD = LEA [v164|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v171|QWORD, y: v172|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v173|V128_WORD = H [v166|QWORD[.] + v171|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v171|QWORD * 2], input: v173|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v174|QWORD = LEA [v171|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v174|QWORD] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [v175|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v176|QWORD = LEA [v164|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v175|QWORD, y: v176|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v177|V64_WORD = H [v166|QWORD[.] + v175|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v175|QWORD * 2], input: v177|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v178|QWORD = LEA [v175|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v178|QWORD] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [v179|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v180|QWORD = LEA [v164|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v179|QWORD, y: v180|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v181|V32_WORD = H [v166|QWORD[.] + v179|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v179|QWORD * 2], input: v181|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v182|QWORD = LEA [v179|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v182|QWORD] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [v183|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v184|QWORD = DEC v164|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v183|QWORD, y: v184|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v185|DWORD = MOVSX [v166|QWORD[.] + v183|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v165|QWORD[.] + v183|QWORD * 2], y: v185|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B110" "B127" "B126" 
    successors "B129" "B147" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v186|QWORD = MOVSXD v152|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v186|QWORD, y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B148" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v411|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v203|DWORD[.] = COMPRESSPOINTER (input: v162|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 16], y: v203|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v204|QWORD[*] = SHR v134|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v204|QWORD[*] + v411|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v205|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v205|DWORD, y: v205|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B153" 
    xhandlers
    flags 
    probability 4586862020130142314
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v206|DWORD = DEC v152|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v205|DWORD, y: v206|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" "B163" 
    xhandlers
    flags 
    probability 4586795008139198835
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v207|QWORD = MOVSXD v205|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v162|QWORD[.] + v207|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr   -1  <|@ instruction v208|DWORD = INC v205|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 12], y: v208|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v138|QWORD, y: [v1|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    probability 4586728666268164791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v209|QWORD = MOV [v0|QWORD[.]] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v210|QWORD = AND v209|QWORD y: 7 size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v210|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4586662987815841087
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v211|QWORD = SHR v209|QWORD y: 8 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v212|DWORD = MOV v211|QWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v212|DWORD, y: v212|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4586597966148040620
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v212|DWORD] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4586728666268164790
    begin_IR
      LIR
      nr   -1  <|@ instruction [v214|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v215|DWORD = LZCNT v214|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v216|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v217|DWORD = SUB (x: v216|DWORD, ~y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v218|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v219|DWORD = SUB (x: v218|DWORD, ~y: v215|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v219|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B167" 
    xhandlers
    flags 
    probability 4584974636446040490
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v219|DWORD, v214|DWORD, v217|DWORD] destination: B162 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B25" 
    xhandlers
    flags 
    probability 4586915843131299805
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v37|DWORD, v55|QWORD[.]] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr   -1  <|@ instruction [v56|DWORD, v57|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v59|QWORD = LEA [v58|QWORD + 72] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v59|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4586868295309743851
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v59|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 264] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 328] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 392] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v58|QWORD + 456] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v58|QWORD] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD[.] = MOVE v61|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v63|QWORD[*] = LEA [v61|QWORD[*] + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v64|QWORD[.] = MOVE v63|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v65|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*]], y: v65|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v66|DWORD[.] = COMPRESSPOINTER (input: v64|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v61|QWORD[*] + 16], y: v66|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 36] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 24] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v61|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v61|QWORD[*] + 40], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v62|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v56|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v62|QWORD[.] v64|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v67|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v68|DWORD[.] = MOV [v57|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction CMP (x: v56|DWORD, y: [v68|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B33" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|DWORD, y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v71|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4586258524921202995
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|DWORD = SHL v67|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v73|DWORD = LEA [v72|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v74|DWORD = AND v73|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v75|QWORD = MOVSXD v74|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = ADD (x: v75|QWORD, y: v70|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v76|QWORD, y: v71|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586197547882348909
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v75|QWORD + v70|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v70|QWORD + 12], y: v67|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v70|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v77|QWORD[.] = MOVE v70|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v77|QWORD[.]] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v67|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v80|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: v67|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v81|QWORD = MOVSXD v80|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v81|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v82|QWORD[.] = LEA [v79|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD[.] = LEA [v64|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD = LEA [v81|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v84|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v88|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v89|QWORD = LEA [v81|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v88|QWORD, y: v89|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v90|V128_WORD = H [v83|QWORD[.] + v88|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v88|QWORD * 2], input: v90|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v91|QWORD = LEA [v88|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v91|QWORD] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v92|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v93|QWORD = LEA [v81|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v92|QWORD, y: v93|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|V64_WORD = H [v83|QWORD[.] + v92|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v92|QWORD * 2], input: v94|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v95|QWORD = LEA [v92|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v95|QWORD] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v96|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = LEA [v81|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v96|QWORD, y: v97|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v98|V32_WORD = H [v83|QWORD[.] + v96|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v96|QWORD * 2], input: v98|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = LEA [v96|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v99|QWORD] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v100|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v101|QWORD = DEC v81|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v100|QWORD, y: v101|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v102|DWORD = MOVSX [v83|QWORD[.] + v100|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v82|QWORD[.] + v100|QWORD * 2], y: v102|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" "B56" 
    successors "B59" "B77" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD = MOVSXD v67|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v103|QWORD, y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B75" "B74" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v412|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v120|DWORD[.] = COMPRESSPOINTER (input: v79|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 16], y: v120|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v121|QWORD[*] = SHR v62|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v121|QWORD[*] + v412|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v122|DWORD = MOV [v62|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v122|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B83" 
    xhandlers
    flags 
    probability 4586868295309743850
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v123|DWORD = SUB (x: v67|DWORD, ~y: v56|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v122|DWORD, y: v123|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4586801220567004356
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v124|QWORD[.] = UNCOMPRESSPOINTER (input: v68|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v125|QWORD[*] = MOVE v124|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v126|QWORD[*] = MOVE v79|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v127|QWORD = MOVSXD v122|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v128|QWORD = MOV v56|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v125|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v126|QWORD[*] + v127|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v128|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v129|DWORD = ADD (x: v56|DWORD, y: v122|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v62|QWORD[.] + 12], y: v129|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v67|DWORD, v79|QWORD[.], v129|DWORD, v56|DWORD, v62|QWORD[.]] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v134|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v262|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: v134|QWORD[.] v264|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v265|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v265|DWORD, y: v265|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B196" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v266|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v267|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v265|DWORD y: 16777215 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4586131589428858397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v268|DWORD = SHL v265|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v269|DWORD = LEA [v268|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v270|DWORD = AND v269|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v271|QWORD = MOVSXD v270|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v272|QWORD = ADD (x: v271|QWORD, y: v266|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v272|QWORD, y: v267|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4586071881744927757
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v272|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v271|QWORD + v266|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v266|QWORD + 12], y: v265|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v266|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v266|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction v273|QWORD[.] = MOVE v266|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v273|QWORD[.]] destination: B195 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr   -1  <|@ instruction [v275|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v265|DWORD, y: v261|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v276|DWORD = CMOVE (falseValue: v265|DWORD, ~trueValue: v261|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v277|QWORD = MOVSXD v276|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v277|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v278|QWORD[.] = LEA [v275|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v279|QWORD[*] = LEA [v233|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v280|QWORD = LEA [v277|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v280|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B205" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B201 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B201" "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v284|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v285|QWORD = LEA [v277|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v284|QWORD, y: v285|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v286|V128_WORD = H [v279|QWORD[*] + v284|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v284|QWORD * 2], input: v286|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v287|QWORD = LEA [v284|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v287|QWORD] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B206" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v288|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v289|QWORD = LEA [v277|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v288|QWORD, y: v289|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v290|V64_WORD = H [v279|QWORD[*] + v288|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v288|QWORD * 2], input: v290|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v291|QWORD = LEA [v288|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v291|QWORD] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors "B212" "B213" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v292|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v293|QWORD = LEA [v277|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v292|QWORD, y: v293|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B212 falseDestination: B211 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v294|V32_WORD = H [v279|QWORD[*] + v292|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v292|QWORD * 2], input: v294|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v295|QWORD = LEA [v292|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v295|QWORD] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v296|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v297|QWORD = DEC v277|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v296|QWORD, y: v297|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v298|DWORD = MOVSX [v279|QWORD[*] + v296|QWORD * 2] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v278|QWORD[.] + v296|QWORD * 2], y: v298|DWORD) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B199" "B216" "B215" 
    successors "B218" "B236" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v299|QWORD = MOVSXD v265|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v299|QWORD, y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B237" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" "B234" "B233" 
    successors "B238" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v410|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v316|DWORD[.] = COMPRESSPOINTER (input: v275|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v134|QWORD[.] + 16], y: v316|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v317|QWORD[*] = SHR v134|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v317|QWORD[*] + v410|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v318|DWORD = MOV [v134|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v275|QWORD[.], v318|DWORD] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[.] = LEA [v79|QWORD[.] + v81|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD = SUB (x: v103|QWORD, ~y: v81|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v106|QWORD = LEA [v105|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v106|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v109|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD = LEA [v105|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v109|QWORD, y: v110|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v109|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v111|QWORD = LEA [v109|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v111|QWORD] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v112|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v113|QWORD = LEA [v105|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v112|QWORD, y: v113|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v112|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v114|QWORD = LEA [v112|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v114|QWORD] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v115|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v116|QWORD = LEA [v105|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v115|QWORD, y: v116|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v115|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v117|QWORD = LEA [v115|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v117|QWORD] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v118|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v119|QWORD = DEC v105|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v118|QWORD, y: v119|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v104|QWORD[.] + v118|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B40 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B128" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B110 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v187|QWORD[.] = LEA [v162|QWORD[.] + v164|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v188|QWORD = SUB (x: v186|QWORD, ~y: v164|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v189|QWORD = LEA [v188|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v189|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [v192|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v193|QWORD = LEA [v188|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v192|QWORD, y: v193|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v192|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v194|QWORD = LEA [v192|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v194|QWORD] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [v195|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v196|QWORD = LEA [v188|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v195|QWORD, y: v196|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v195|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v197|QWORD = LEA [v195|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v197|QWORD] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [v198|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v199|QWORD = LEA [v188|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v198|QWORD, y: v199|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v198|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v200|QWORD = LEA [v198|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v200|QWORD] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [v201|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v202|QWORD = DEC v188|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v201|QWORD, y: v202|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v187|QWORD[.] + v201|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v300|QWORD[.] = LEA [v275|QWORD[.] + v277|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v301|QWORD = SUB (x: v299|QWORD, ~y: v277|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v302|QWORD = LEA [v301|QWORD - 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v302|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B223" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B219 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B219" "B222" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v305|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v306|QWORD = LEA [v301|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v305|QWORD, y: v306|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v305|QWORD * 2], input: v6|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v307|QWORD = LEA [v305|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v307|QWORD] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" "B224" 
    successors "B227" "B228" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v308|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v309|QWORD = LEA [v301|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v308|QWORD, y: v309|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B227 falseDestination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v308|QWORD * 2], input: v5|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v310|QWORD = LEA [v308|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v310|QWORD] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" "B227" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v311|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v312|QWORD = LEA [v301|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v311|QWORD, y: v312|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v311|QWORD * 2], input: v4|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr   -1  <|@ instruction v313|QWORD = LEA [v311|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v313|QWORD] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v314|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v315|QWORD = DEC v301|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v314|QWORD, y: v315|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v300|QWORD[.] + v314|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B234 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B217" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B199 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B168" 
    xhandlers
    flags 
    probability 4578169741069550642
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v214|DWORD, v217|DWORD] destination: B161 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v400|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v400|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v230|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v230|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: v231|DWORD int[4|0x4] v232|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26] <|@ <|@
      nr   -1  <|@ instruction v241|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v241|QWORD[.]] destination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B239 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B239" "B241" 
    successors 
    xhandlers
    flags 
    probability 4581273604453346457
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:24, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576741781795599466
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576642080704798812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 4581118238037550581
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -239457 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v133|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v407|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v407|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v41|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v41|QWORD[.]] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v406|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v406|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} - v37|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=v43|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] v43|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v50|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v50|QWORD[.]] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576587196115561358
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B164" 
    xhandlers
    flags 
    probability 4576532860372216279
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B100 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B100" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4576798227856352455
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 23]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr   -1  <|@ instruction v220|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction v221|DWORD = LZCNT v220|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v222|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr   -1  <|@ instruction v223|DWORD = SUB (x: v222|DWORD, ~y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v224|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr   -1  <|@ instruction v225|DWORD = SUB (x: v224|DWORD, ~y: v221|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST v225|DWORD y: -4 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4574924301083436718
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v225|DWORD, v220|DWORD, v223|DWORD] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576479067986304651
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4580956040382648891
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v145|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v145|DWORD] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576425813524252139
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4576172281173459212
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v403|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v403|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v388|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v388|QWORD[.]] destination: B299 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B258" 
    xhandlers
    flags 
    probability 4575670415234218635
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B255 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v112|QWORD] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v115|QWORD] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v397|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B76 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B76" 
    successors "B63" "B76" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v107|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v104|QWORD[.] + v107|QWORD * 2], input: v397|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v108|QWORD = LEA [v107|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v108|QWORD, y: v106|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v109|QWORD] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v108|QWORD] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v92|QWORD] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v96|QWORD] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v88|QWORD] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B309 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B309" 
    successors "B45" "B309" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [v85|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v86|V256_WORD = H [v83|QWORD[.] + v85|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v82|QWORD[.] + v85|QWORD * 2], input: v86|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v87|QWORD = LEA [v85|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v87|QWORD, y: v84|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v87|QWORD] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v175|QWORD] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v171|QWORD] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B114" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B308 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B308" 
    successors "B115" "B308" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [v168|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v169|V256_WORD = H [v166|QWORD[.] + v168|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v165|QWORD[.] + v168|QWORD * 2], input: v169|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v170|QWORD = LEA [v168|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v170|QWORD, y: v167|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v179|QWORD] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v170|QWORD] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v192|QWORD] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v198|QWORD] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v396|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B132" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B146 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B146" 
    successors "B133" "B146" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [v190|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v187|QWORD[.] + v190|QWORD * 2], input: v396|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v191|QWORD = LEA [v190|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v191|QWORD, y: v189|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v195|QWORD] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v191|QWORD] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v288|QWORD] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v292|QWORD] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v284|QWORD] destination: B206 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v395|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B221" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B235 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B235" 
    successors "B222" "B235" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v303|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v300|QWORD[.] + v303|QWORD * 2], input: v395|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v304|QWORD = LEA [v303|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v304|QWORD, y: v302|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B203" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B303 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" "B303" 
    successors "B204" "B303" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [v281|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v282|V256_WORD = H [v279|QWORD[*] + v281|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v278|QWORD[.] + v281|QWORD * 2], input: v282|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v283|QWORD = LEA [v281|QWORD + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v283|QWORD, y: v280|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B204 falseDestination: B203 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v311|QWORD] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B223" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v304|QWORD] destination: B222 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v283|QWORD] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v305|QWORD] destination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v308|QWORD] destination: B227 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B233 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572070203385157221
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572558019695989906
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v402|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v402|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v67|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v78|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD[.]] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4572065132532953960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4572552492467088352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v401|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v401|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v152|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v131|QWORD[.] v152|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v161|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v161|QWORD[.]] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B197" 
    xhandlers
    flags 
    probability 4571957371836406467
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B194" 
    successors "B198" 
    xhandlers
    flags 
    probability 4572435033307851585
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v399|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v399|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v265|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v264|QWORD[.] v265|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v274|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v274|QWORD[.]] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v2|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 11]
stack: v2|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11] <|@ <|@
      nr   -1  <|@ instruction v13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 14]
stack: v2|QWORD[.] v13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction v14|DWORD[.] = MOV [v13|QWORD[.] + 12] size: DWORD state [bci:14, 11] <|@ <|@
      nr   -1  <|@ instruction TEST (x: v14|DWORD[.], y: v14|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B13" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v413|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction v15|DWORD = MOV [v14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v16|DWORD[.] = COMPRESSPOINTER (input: v13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|QWORD[.] + 20], y: v16|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|QWORD[*] = SHR v2|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v17|QWORD[*] + v413|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction v18|DWORD = LEA [v15|DWORD - 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v18|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v20|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v21|QWORD = LEA [v19|QWORD + 48] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v21|QWORD, y: v20|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v21|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v19|QWORD + 240] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v19|QWORD] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   -1  <|@ instruction [v23|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v24|QWORD[.] = MOVE v23|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v23|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction J (address: [v23|QWORD[*] + 16], input: v10|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction CMP v15|DWORD y: 17 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v25|QWORD[.] = UNCOMPRESSPOINTER (input: v14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v26|QWORD[*] = MOVE v25|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v27|QWORD[*] = MOVE v24|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD = MOV v15|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v26|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v27|QWORD[*] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v28|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v29|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v30|QWORD = LEA [v29|QWORD + 24] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v30|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v30|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v29|QWORD + 216] instr: 0 <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v29|QWORD] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B84" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   -1  <|@ instruction [v32|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v33|QWORD[.] = MOVE v32|QWORD[*] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v34|QWORD = MOV [v9|QWORD + 168] size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*]], y: v34|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v32|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*] + 12], y: v15|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v35|DWORD[.] = COMPRESSPOINTER (input: v24|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v32|QWORD[*] + 16], y: v35|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[16|0x10], v24|QWORD[.], v15|DWORD, v15|DWORD, v33|QWORD[.]] destination: B11 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B168" 
    xhandlers
    flags 
    probability 4568176288968000960
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[1|0x1], v220|DWORD, v223|DWORD] destination: B165 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4561357127623488149
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v404|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v404|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr   -1  <|@ instruction v330|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v330|QWORD[.]] destination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4557307913614559813
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v405|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v405|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[14|0xe] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 14]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} v57|QWORD[.] 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14] <|@ <|@
      nr   -1  <|@ instruction v60|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD[.]] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557307913614559812
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4561768151792078514
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -317281 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557299800251034593
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B149 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" 
    successors 
    xhandlers
    flags 
    probability 4561760078995370921
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -264033 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557221190714856223
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557213158484966257
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B164" 
    xhandlers
    flags 
    probability 4557127383136558603
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B159" 
    xhandlers
    flags 
    probability 4557042465541635027
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B160" 
    xhandlers
    flags 
    probability 4561504030959518352
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD[.] = MOVE v0|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr   -1  <|@ instruction v213|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v213|DWORD] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B159" 
    xhandlers
    flags 
    probability 4556958397122660686
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B156 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4556440684617523928
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4556433382590351231
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B197" 
    xhandlers
    flags 
    probability 4556278207187322842
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B194 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B25" 
    xhandlers
    flags 
    probability 4549304361639224109
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v15|DWORD, v13|QWORD[.]] destination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v409|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v409|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - v13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11] <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v22|QWORD[.]] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v408|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v408|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} - v15|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=v24|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] v24|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr   -1  <|@ instruction v31|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v31|QWORD[.]] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -288865 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - v13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:19, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-229395|0xfffffffffffc7fed]] destination: B251 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B245" "B251" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v335|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v335|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: v134|QWORD[.] - v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction DEOPT info [bci:48, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -210971 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v256|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -279563 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Class.getName(Class.java:642) [bci: 14]
stack: v2|QWORD[.] v13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: v0|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:14, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -230931 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: v255|DWORD int[4|0x4] v243|QWORD[.] int[0|0x0] - v257|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - v243|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:32, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-391265|0xfffffffffffa079f]] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v69|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v62|QWORD[.] v64|QWORD[.] v67|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v62|QWORD[.] v57|QWORD[.] v56|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v62|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v234|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581] <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -214795 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v234|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Math.max(Math.java:1252) [bci: 10]
stack: v230|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: v231|DWORD int[4|0x4] v232|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: v134|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:10, 16, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-227091|0xfffffffffffc88ed]] destination: B245 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -411233 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v264|QWORD[.] v265|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} v230|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=v243|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; v243|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -302177 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.Object.toString(Object.java:236) [bci: 0]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -401249 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: v134|QWORD[.] v131|QWORD[.] v152|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: v134|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: v134|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: v0|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-308755|0xfffffffffffb49ed]] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #1          // java.lang.StringBuilder
     3: dup           
     4: invokespecial #0          // java.lang.StringBuilder.<init>:()void
     7: aload_0       
     8: invokevirtual #1          // getClass:()java.lang.Class
    11: invokevirtual #2          // java.lang.Class.getName:()java.lang.String
    14: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    17: ldc           #6          // "@"
    19: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    22: aload_0       
    23: invokevirtual #4          // hashCode:()int
    26: invokestatic  #5          // java.lang.Integer.toHexString:(int)java.lang.String
    29: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    32: invokevirtual #6          // java.lang.StringBuilder.toString:()java.lang.String
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD[.] = MOV [r10|DWORD * 8 + 104] size: QWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   18  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   20  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   22  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   24  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4607155558376912941
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r13|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rsi:0, r8:0, r13:0, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  254  <|@ instruction rdi|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r8|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  324  <|@ instruction CMP r11|DWORD y: 17 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  332  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  384  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  390  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rdi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B22 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B83" 
    successors "B85" "B101" 
    xhandlers
    flags 
    probability 4607173992112009100
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1070  <|@ instruction rcx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr 1076  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B86" "B87" 
    xhandlers
    flags 
    probability 4606750936613628552
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B86 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B88" "B90" 
    xhandlers
    flags 
    probability 4606665179442945031
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B88 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B100" 
    xhandlers
    flags 
    probability 4606580279843968345
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r10|QWORD[.] + rdi|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP (x: rbx|QWORD, y: [r11|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B100 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B95" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction rdi|QWORD = MOV [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = AND rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr 1132  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B95 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B93" "B94" 
    xhandlers
    flags 
    probability 4606413019144024376
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 8 size: QWORD <|@ <|@
      nr 1140  <|@ instruction rdi|DWORD = MOV rdi|QWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B93 falseDestination: B92 -> B94 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B94"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4606330641148036896
    begin_IR
      LIR
      nr 1150  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1152  <|@ instruction JUMP ~[] destination: B94 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B94" "B96" 
    successors "B98" "B99" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|DWORD = LZCNT rdi|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1176  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1180  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1182  <|@ instruction TEST r10|DWORD y: -4 size: DWORD <|@ <|@
      nr 1184  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B99 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B99"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B167" 
    xhandlers
    flags 
    probability 4604273993691867467
    begin_IR
      LIR
      nr 1196  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1198  <|@ instruction JUMP ~[] destination: B99 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B162" "B99" 
    successors "B168" 
    xhandlers
    flags 
    probability 4604639499959146547
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction r10|DWORD = SHR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr 1828  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" "B161" "B98" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r11|DWORD[.] = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1838  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1858  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr 1862  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr 1864  <|@ instruction rdx|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 1866  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1868  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1870  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1900  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1902  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1904  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1906  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1908  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1912  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1914  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction r9|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B171" 
    successors "B174" "B175" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction rdi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1924  <|@ instruction rcx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr 1926  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1928  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1942  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1944  <|@ instruction J (address: [rdi|QWORD[.]], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1946  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" "B174" 
    successors "B177" "B178" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 1954  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B177 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1966  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1968  <|@ instruction J (address: [rdi|QWORD[.]], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1970  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B177" 
    successors "B180" "B181" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B180 falseDestination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1990  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1992  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1994  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B180" 
    successors "B183" "B184" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2002  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B183 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2014  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B183" 
    successors "B186" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr 2020  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2022  <|@ instruction rbx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2024  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B304" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr 2034  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = AND rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr 2038  <|@ instruction rdx|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 2040  <|@ instruction MOV (x: [r9|QWORD[.] + rsi|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr 2042  <|@ instruction TEST rbx|DWORD y: -16 size: DWORD <|@ <|@
      nr 2044  <|@ instruction BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B305" "B306" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr 3128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3130  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 3132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B186" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr 3144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3146  <|@ st <@st|@reference-map: [rdi:0, r8:0, r9:0, r11:0, stack:56]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: rbx|DWORD int[4|0x4] r9|QWORD[.] int[0|0x0] - rsi|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - r9|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26] <|@ <|@
      nr 3148  <|@ instruction rbx|DWORD = SHR rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr 3150  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 3152  <|@ instruction JUMP ~[] destination: B306 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B306" 
    successors "B187" "B307" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr 2026  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2028  <|@ instruction rsi|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 2030  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2032  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B189" "B190" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2050  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2052  <|@ instruction rdx|DWORD = ADD (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 2058  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 2060  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B189 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B189"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B238" 
    xhandlers
    flags 
    probability 4606580279843968346
    begin_IR
      LIR
      nr 2062  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2064  <|@ instruction JUMP ~[] destination: B189 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B189" 
    successors "B239" "B240" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2520  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2522  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2524  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B239 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B241" "B243" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr 2534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2536  <|@ instruction r11|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2538  <|@ instruction rsi|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 2540  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B241 falseDestination: B240 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" "B250" 
    xhandlers
    flags 
    probability 4606819404567777292
    begin_IR
      LIR
      nr 2560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2562  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2564  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2566  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2568  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2570  <|@ instruction rdx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2572  <|@ instruction stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2574  <|@ instruction rdi|QWORD = LEA [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2576  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2578  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2580  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2582  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2584  <|@ instruction r13|DWORD = ADD (x: stack:80|DWORD, y: stack:100|DWORD) size: DWORD <|@ <|@
      nr 2586  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2588  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2590  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2592  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 2594  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B251" "B253" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2668  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2670  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 2672  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B254" "B257" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2692  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2694  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2696  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2698  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B257 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B255" "B256" 
    xhandlers
    flags 
    probability 4605232709315847027
    begin_IR
      LIR
      nr 2700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2702  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 2704  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 2706  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2708  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2710  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2712  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2714  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B255 falseDestination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4605162134418141321
    begin_IR
      LIR
      nr 2720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2722  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2724  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2726  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2728  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2730  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2732  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2734  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2736  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2738  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2740  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2742  <|@ instruction JUMP ~[] destination: B256 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B256" "B258" 
    successors "B260" "B261" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2764  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2766  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 2768  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2770  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2772  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B260 falseDestination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B262" "B263" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2780  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2782  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2784  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2786  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2788  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2790  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B262 falseDestination: B261 -> B263 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B262"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B266" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2792  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2794  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2796  <|@ instruction JUMP ~[] destination: B262 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B262" "B265" 
    successors "B267" "B268" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2822  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2824  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B267 falseDestination: B266 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2834  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2836  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2838  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2840  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2842  <|@ instruction JUMP ~[] destination: B268 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" "B267" 
    successors "B270" "B271" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2846  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2848  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2850  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B270 falseDestination: B269 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2858  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2860  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2862  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2864  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2866  <|@ instruction JUMP ~[] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B270" 
    successors "B273" "B274" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2868  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2870  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2872  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2874  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B273 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2882  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2884  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2886  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2888  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2890  <|@ instruction JUMP ~[] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B273" 
    successors "B276" "B277" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2894  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2896  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2898  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B276 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2906  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 2908  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 2910  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B260" "B277" "B276" 
    successors "B279" "B297" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2914  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2916  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2918  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B297 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B297"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B298" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 3054  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3056  <|@ instruction JUMP ~[] destination: B297 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B297" "B295" "B294" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 3058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3060  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 3062  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 3064  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 3066  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4605938458292904088
    begin_IR
      LIR
      nr 3088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3090  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3092  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 3094  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3096  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 3098  <|@ instruction JUMP ~[] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B299" 
    successors 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 3100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3102  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 3104  <|@ instruction r10|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 3106  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 3108  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3110  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 3112  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 3114  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 3116  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3118  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B260"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B278" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2776  <|@ instruction JUMP ~[] destination: B260 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" "B281" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2922  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2924  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2926  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2928  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2930  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2936  <|@ instruction JUMP ~[] destination: B280 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B280" "B283" 
    successors "B285" "B286" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2962  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2964  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2966  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B285 falseDestination: B284 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2974  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2976  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2978  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2980  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2982  <|@ instruction JUMP ~[] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" "B285" 
    successors "B288" "B289" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2984  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2986  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2988  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2990  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B288 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2998  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 3000  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 3002  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 3004  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3006  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B288" 
    successors "B291" "B292" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 3008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3010  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 3012  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3014  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B291 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 3024  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 3026  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 3028  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3030  <|@ instruction JUMP ~[] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B291" 
    successors "B294" "B295" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 3032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3034  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 3036  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3038  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B294 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3046  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 3048  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4598056962486991259
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B98 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1936  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1938  <|@ instruction JUMP ~[] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B177"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr 1958  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1960  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1962  <|@ instruction JUMP ~[] destination: B177 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B183"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr 2006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2008  <|@ instruction JUMP ~[] destination: B183 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B180"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr 1982  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1984  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1986  <|@ instruction JUMP ~[] destination: B180 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B267"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2828  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2830  <|@ instruction JUMP ~[] destination: B267 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B270"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2852  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2854  <|@ instruction JUMP ~[] destination: B270 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B263"
    from_bci -1
    to_bci -1
    predecessors "B261" 
    successors "B264" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2800  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2802  <|@ instruction JUMP ~[] destination: B263 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B302"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B264" 
    xhandlers
    flags "lle" 
    loop_index 7
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3120  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3122  <|@ instruction JUMP ~[] destination: B302 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B263" "B302" 
    successors "B265" "B302" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2804  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2806  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2808  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2810  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2812  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2814  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B265 falseDestination: B264 -> B302 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B282" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2942  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B281 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B296"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B282" 
    xhandlers
    flags "lle" 
    loop_index 8
    loop_depth 1
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3050  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3052  <|@ instruction JUMP ~[] destination: B296 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" "B296" 
    successors "B283" "B296" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2946  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2948  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2950  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2952  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2954  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B283 falseDestination: B282 -> B296 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B265"
    from_bci -1
    to_bci -1
    predecessors "B264" 
    successors "B266" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2816  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2818  <|@ instruction JUMP ~[] destination: B265 -> B266 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B283"
    from_bci -1
    to_bci -1
    predecessors "B282" 
    successors "B284" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2956  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2958  <|@ instruction JUMP ~[] destination: B283 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B288"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2994  <|@ instruction JUMP ~[] destination: B288 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B294"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 3040  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3042  <|@ instruction JUMP ~[] destination: B294 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B291"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 3016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3018  <|@ instruction JUMP ~[] destination: B291 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B273"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2876  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2878  <|@ instruction JUMP ~[] destination: B273 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B285"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2968  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2970  <|@ instruction JUMP ~[] destination: B285 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B276"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2900  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2902  <|@ instruction JUMP ~[] destination: B276 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2598  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2600  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B248" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2610  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2612  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2614  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2616  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4591020456060350490
    begin_IR
      LIR
      nr 2638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2640  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2644  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2646  <|@ instruction JUMP ~[] destination: B248 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" "B247" 
    successors 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2650  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2652  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 2654  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2656  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2658  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 2660  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2662  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B257"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" 
    xhandlers
    flags 
    probability 4590937744903672136
    begin_IR
      LIR
      nr 2744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2746  <|@ instruction JUMP ~[] destination: B257 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B257" "B255" 
    successors "B259" 
    xhandlers
    flags 
    probability 4591502344085317785
    begin_IR
      LIR
      nr 2748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2750  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2752  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2754  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2756  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2758  <|@ st <@st|@reference-map: [stack:32, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 2760  <|@ instruction JUMP ~[] destination: B258 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:72|QWORD[.] stack:96|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19] <|@ <|@
      nr 1216  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B107" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1240  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1242  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B107 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B105" "B106" 
    xhandlers
    flags 
    probability 4586252820212474326
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1248  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 1250  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 1252  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1256  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B105 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4586191900220707527
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1270  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1272  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1274  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1276  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1280  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" "B108" 
    successors "B110" "B111" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1310  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1316  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B110 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B112" "B113" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1330  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1332  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B112 falseDestination: B111 -> B113 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B112"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B116" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1340  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1342  <|@ instruction JUMP ~[] destination: B112 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B112" "B115" 
    successors "B117" "B118" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1368  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B117 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1382  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1384  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1386  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B117" 
    successors "B120" "B121" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1394  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B120 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1406  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1408  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B120" 
    successors "B123" "B124" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1416  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1418  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B123 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1430  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1432  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1434  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B123" 
    successors "B126" "B127" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1442  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B126 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B110" "B127" "B126" 
    successors "B129" "B147" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B148" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1616  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1618  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1620  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" "B144" 
    successors "B149" "B150" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1626  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 1628  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1630  <|@ instruction rdx|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1632  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1634  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1636  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B149 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B151" "B153" 
    xhandlers
    flags 
    probability 4586862020130142314
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1648  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B151 falseDestination: B150 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" "B163" 
    xhandlers
    flags 
    probability 4586795008139198835
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1670  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr 1672  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV [rax|QWORD[.] + rdx|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr 1678  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1682  <|@ instruction CMP (x: rbx|QWORD, y: [r10|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr 1684  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B163 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B158" 
    xhandlers
    flags 
    probability 4586728666268164791
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction rdx|QWORD = MOV [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr 1692  <|@ instruction rcx|QWORD = AND rdx|QWORD y: 7 size: QWORD <|@ <|@
      nr 1694  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1696  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B158 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B156" "B157" 
    xhandlers
    flags 
    probability 4586662987815841087
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1700  <|@ instruction rdx|QWORD = SHR rdx|QWORD y: 8 size: QWORD <|@ <|@
      nr 1702  <|@ instruction rdx|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr 1704  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B156 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4586597966148040620
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4586728666268164790
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1746  <|@ instruction rsi|DWORD = LZCNT r13|DWORD size: DWORD <|@ <|@
      nr 1748  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1750  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rcx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1754  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1756  <|@ instruction TEST rcx|DWORD y: -4 size: DWORD <|@ <|@
      nr 1758  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B167" 
    xhandlers
    flags 
    probability 4584974636446040490
    begin_IR
      LIR
      nr 1768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1770  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1772  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1774  <|@ instruction JUMP ~[] destination: B162 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B25" 
    xhandlers
    flags 
    probability 4586915843131299805
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  438  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4586868295309743851
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 264] instr: 0 <|@ <|@
      nr  480  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 328] instr: 0 <|@ <|@
      nr  482  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 392] instr: 0 <|@ <|@
      nr  484  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 456] instr: 0 <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  508  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV [rsi|QWORD[*] + 36] y: 16 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV [rsi|QWORD[*] + 24] y: 1 size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  518  <|@ instruction J (address: [rsi|QWORD[*] + 40], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:72|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:64|QWORD[.] stack:72|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14] <|@ <|@
      nr  528  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:72|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] r13|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14] <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B33" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B37" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B37 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B35" "B36" 
    xhandlers
    flags 
    probability 4586258524921202995
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  592  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  596  <|@ instruction r8|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B35 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586197547882348909
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  618  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  620  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  624  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B40" "B41" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction CMP r13|DWORD y: 17 size: DWORD <|@ <|@
      nr  664  <|@ instruction rdi|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  666  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B40 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  686  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B46" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  692  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  694  <|@ instruction JUMP ~[] destination: B42 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B42" "B45" 
    successors "B47" "B48" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B47 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  734  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  736  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B47" 
    successors "B50" "B51" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B50 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  758  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  760  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  762  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B50" 
    successors "B53" "B54" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B53 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  782  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  784  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B53" 
    successors "B56" "B57" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  794  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B56 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B40" "B57" "B56" 
    successors "B59" "B77" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  814  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  968  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  970  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B75" "B74" 
    successors "B79" "B80" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  978  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  980  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  988  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B79 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B81" "B83" 
    xhandlers
    flags 
    probability 4586868295309743850
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B81 falseDestination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4586801220567004356
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1034  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr 1036  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1048  <|@ instruction r11|DWORD = ADD (x: stack:52|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2068  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2070  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2072  <|@ instruction stack:112|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2074  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2076  <|@ instruction stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2078  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2082  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:44, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:72|QWORD[.] stack:96|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29] <|@ <|@
      nr 2084  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2086  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B196" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2110  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2112  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2114  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B196 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B194" "B195" 
    xhandlers
    flags 
    probability 4586131589428858397
    begin_IR
      LIR
      nr 2116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2118  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 2120  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 2122  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2124  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2126  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B194 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4586071881744927757
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2142  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2144  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2146  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2148  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2150  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2152  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2154  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2156  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2158  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2160  <|@ instruction rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2162  <|@ instruction r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2164  <|@ instruction JUMP ~[] destination: B195 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors "B199" "B200" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction CMP (x: r13|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr 2194  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2196  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2198  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B199 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B201" "B202" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2208  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2210  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2212  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2214  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2216  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B201 falseDestination: B200 -> B202 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B201"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B205" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2218  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2220  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2222  <|@ instruction JUMP ~[] destination: B201 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B201" "B204" 
    successors "B206" "B207" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2250  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B206 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2260  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2262  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2264  <|@ instruction r8|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 2266  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B206" 
    successors "B209" "B210" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2274  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B209 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2286  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2288  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 2290  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2292  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B209" 
    successors "B212" "B213" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2296  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2298  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B212 falseDestination: B211 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2308  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2310  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2312  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 2314  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2316  <|@ instruction JUMP ~[] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B212" 
    successors "B215" "B216" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction r8|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2322  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B215 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + r9|QWORD * 2] size: DWORD <|@ <|@
      nr 2334  <|@ instruction MOV (x: [r10|QWORD[.] + r9|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B199" "B216" "B215" 
    successors "B218" "B236" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B237" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2490  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2492  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2494  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" "B234" "B233" 
    successors "B238" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 2500  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 2502  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 2504  <|@ instruction r8|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2506  <|@ instruction MOVB (x: [r8|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2508  <|@ instruction rdi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2510  <|@ instruction rcx|QWORD = MOVE stack:112|QWORD moveKind: QWORD <|@ <|@
      nr 2512  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2514  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2516  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2518  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" "B63" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  874  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  876  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  878  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B65" 
    successors "B68" "B69" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  888  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B68 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  900  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  902  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  904  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  906  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B68" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  914  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  926  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  928  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  930  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  932  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B71" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  940  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  954  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B58" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  672  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  674  <|@ instruction JUMP ~[] destination: B40 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B110"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B128" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1320  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1322  <|@ instruction JUMP ~[] destination: B110 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1474  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" "B133" 
    successors "B135" "B136" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1510  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B135 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1522  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1524  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1526  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B135" 
    successors "B138" "B139" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B138 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1548  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1550  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1552  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1554  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B138" 
    successors "B141" "B142" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1562  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B141 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1574  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B141" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1602  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2350  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2352  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 2354  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B223" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2362  <|@ instruction JUMP ~[] destination: B219 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B219" "B222" 
    successors "B224" "B225" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 2390  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2392  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B224 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2402  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2404  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2406  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2408  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2410  <|@ instruction JUMP ~[] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" "B224" 
    successors "B227" "B228" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 2416  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2418  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B227 falseDestination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2428  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2430  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2432  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2434  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction JUMP ~[] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" "B227" 
    successors "B230" "B231" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2440  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 2442  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B230 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2454  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2456  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2458  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2460  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2462  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B230" 
    successors "B233" "B234" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 2468  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B233 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2480  <|@ instruction JUMP ~[] destination: B234 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B199"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B217" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2202  <|@ instruction JUMP ~[] destination: B199 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B168" 
    xhandlers
    flags 
    probability 4578169741069550642
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1766  <|@ instruction JUMP ~[] destination: B161 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1880  <|@ instruction rdx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1884  <|@ st <@st|@reference-map: [stack:44, stack:56]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:80|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: r13|DWORD int[4|0x4] r14|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: stack:72|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26] <|@ <|@
      nr 1886  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1888  <|@ instruction r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1890  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction JUMP ~[] destination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B239"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      LIR
      nr 2526  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2528  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2530  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2532  <|@ instruction JUMP ~[] destination: B239 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B239" "B241" 
    successors 
    xhandlers
    flags 
    probability 4581273604453346457
    begin_IR
      LIR
      nr 2552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2554  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr 2556  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2558  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: stack:72|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:24, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B241"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B242" 
    xhandlers
    flags 
    probability 4576741781795599466
    begin_IR
      LIR
      nr 2544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2546  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2548  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2550  <|@ instruction JUMP ~[] destination: B241 -> B242 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576642080704798812
    begin_IR
      LIR
      nr 1086  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1088  <|@ instruction JUMP ~[] destination: B86 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B86" "B88" 
    successors 
    xhandlers
    flags 
    probability 4581118238037550581
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction MOV [r15|QWORD + 668] y: -239457 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  288  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  290  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  292  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  294  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  296  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  366  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  374  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B88"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B89" 
    xhandlers
    flags 
    probability 4576587196115561358
    begin_IR
      LIR
      nr 1098  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1100  <|@ instruction JUMP ~[] destination: B88 -> B89 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B100"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B164" 
    xhandlers
    flags 
    probability 4576532860372216279
    begin_IR
      LIR
      nr 1200  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1202  <|@ instruction JUMP ~[] destination: B100 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B163" "B100" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4576798227856352455
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1782  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 23]
stack: stack:72|QWORD[.] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr 1786  <|@ instruction rsi|DWORD = LZCNT rax|DWORD size: DWORD <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1792  <|@ instruction r11|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1794  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1796  <|@ instruction TEST r11|DWORD y: -4 size: DWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4574924301083436718
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1814  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1816  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1818  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1820  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1822  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B95"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576479067986304651
    begin_IR
      LIR
      nr 1154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1156  <|@ instruction JUMP ~[] destination: B95 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B95" "B93" 
    successors "B97" 
    xhandlers
    flags 
    probability 4580956040382648891
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr 1164  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B93"
    from_bci -1
    to_bci -1
    predecessors "B92" 
    successors "B96" 
    xhandlers
    flags 
    probability 4576425813524252139
    begin_IR
      LIR
      nr 1146  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1148  <|@ instruction JUMP ~[] destination: B93 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4576172281173459212
    begin_IR
      LIR
      nr 3068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3070  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3072  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr 3074  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 3076  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 3078  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 3080  <|@ st <@st|@reference-map: [r13:0, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 3082  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3084  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3086  <|@ instruction JUMP ~[] destination: B299 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B255"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B258" 
    xhandlers
    flags 
    probability 4575670415234218635
    begin_IR
      LIR
      nr 2716  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2718  <|@ instruction JUMP ~[] destination: B255 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  892  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  894  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  896  <|@ instruction JUMP ~[] destination: B68 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  918  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  920  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  922  <|@ instruction JUMP ~[] destination: B71 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  840  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B62" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      LIR
      nr  958  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  960  <|@ instruction JUMP ~[] destination: B76 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B76" 
    successors "B63" "B76" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr  844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  846  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  848  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  850  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B63 falseDestination: B62 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  866  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  868  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  870  <|@ instruction JUMP ~[] destination: B65 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  798  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  800  <|@ instruction JUMP ~[] destination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B62" 
    successors "B64" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  856  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction JUMP ~[] destination: B50 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  774  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  776  <|@ instruction JUMP ~[] destination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  728  <|@ instruction JUMP ~[] destination: B47 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  696  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  698  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  700  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B309"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B44" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4580738641312931071
    begin_IR
      LIR
      nr 3170  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3172  <|@ instruction JUMP ~[] destination: B309 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B309" 
    successors "B45" "B309" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr  702  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  704  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  706  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  708  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B309 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B46" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  716  <|@ instruction JUMP ~[] destination: B45 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B120"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1398  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1400  <|@ instruction JUMP ~[] destination: B120 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B117"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1374  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1376  <|@ instruction JUMP ~[] destination: B117 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B126"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1448  <|@ instruction JUMP ~[] destination: B126 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B113"
    from_bci -1
    to_bci -1
    predecessors "B111" 
    successors "B114" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1344  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1346  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1348  <|@ instruction JUMP ~[] destination: B113 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B308"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B114" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      LIR
      nr 3166  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3168  <|@ instruction JUMP ~[] destination: B308 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B113" "B308" 
    successors "B115" "B308" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1350  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1352  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1354  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1356  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1358  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B115 falseDestination: B114 -> B308 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B123"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1424  <|@ instruction JUMP ~[] destination: B123 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B115"
    from_bci -1
    to_bci -1
    predecessors "B114" 
    successors "B116" 
    xhandlers
    flags 
    probability 4573418910127771715
    begin_IR
      LIR
      nr 1362  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1364  <|@ instruction JUMP ~[] destination: B115 -> B116 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B135"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1514  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1516  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1518  <|@ instruction JUMP ~[] destination: B135 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B141"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1566  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1568  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1570  <|@ instruction JUMP ~[] destination: B141 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1488  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1490  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B146"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B132" 
    xhandlers
    flags "lle" 
    loop_index 3
    loop_depth 1
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1606  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1608  <|@ instruction JUMP ~[] destination: B146 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B146" 
    successors "B133" "B146" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1492  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1494  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1496  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1498  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B133 falseDestination: B132 -> B146 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B138"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1540  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1542  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1544  <|@ instruction JUMP ~[] destination: B138 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B133"
    from_bci -1
    to_bci -1
    predecessors "B132" 
    successors "B134" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1502  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1504  <|@ instruction JUMP ~[] destination: B133 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B209"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2278  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2280  <|@ instruction JUMP ~[] destination: B209 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B212"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2304  <|@ instruction JUMP ~[] destination: B212 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B206"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2254  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2256  <|@ instruction JUMP ~[] destination: B206 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2366  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2368  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2370  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B235"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B221" 
    xhandlers
    flags "lle" 
    loop_index 6
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2482  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2484  <|@ instruction JUMP ~[] destination: B235 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B235" 
    successors "B222" "B235" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2372  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2374  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2376  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2378  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2380  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B222 falseDestination: B221 -> B235 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B202"
    from_bci -1
    to_bci -1
    predecessors "B200" 
    successors "B203" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2224  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2226  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2228  <|@ instruction JUMP ~[] destination: B202 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B303"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B203" 
    xhandlers
    flags "lle" 
    loop_index 5
    loop_depth 1
    probability 4580632861735977240
    begin_IR
      LIR
      nr 3124  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 3126  <|@ instruction JUMP ~[] destination: B303 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B202" "B303" 
    successors "B204" "B303" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2230  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2232  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2234  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2236  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 2238  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B204 falseDestination: B203 -> B303 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B230"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2446  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2448  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2450  <|@ instruction JUMP ~[] destination: B230 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B222"
    from_bci -1
    to_bci -1
    predecessors "B221" 
    successors "B223" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2382  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2384  <|@ instruction JUMP ~[] destination: B222 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B204"
    from_bci -1
    to_bci -1
    predecessors "B203" 
    successors "B205" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2242  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2244  <|@ instruction JUMP ~[] destination: B204 -> B205 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B215"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2326  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2328  <|@ instruction JUMP ~[] destination: B215 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B224"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2394  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2396  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2398  <|@ instruction JUMP ~[] destination: B224 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B227"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2420  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2422  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2424  <|@ instruction JUMP ~[] destination: B227 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B233"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2472  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2474  <|@ instruction JUMP ~[] destination: B233 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4572070203385157221
    begin_IR
      LIR
      nr  638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  642  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B37" "B35" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572558019695989906
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  652  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14] <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B107"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" 
    xhandlers
    flags 
    probability 4572065132532953960
    begin_IR
      LIR
      nr 1290  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1292  <|@ instruction JUMP ~[] destination: B107 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B107" "B105" 
    successors "B109" 
    xhandlers
    flags 
    probability 4572552492467088352
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1298  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1302  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:72|QWORD[.] stack:96|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19] <|@ <|@
      nr 1304  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1306  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B196"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B197" 
    xhandlers
    flags 
    probability 4571957371836406467
    begin_IR
      LIR
      nr 2166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2170  <|@ instruction JUMP ~[] destination: B196 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B196" "B194" 
    successors "B198" 
    xhandlers
    flags 
    probability 4572435033307851585
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2174  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2176  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2180  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2182  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:32, stack:44, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:96|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29] <|@ <|@
      nr 2184  <|@ instruction rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2186  <|@ instruction JUMP ~[] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [stack:80, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:48|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11] <|@ <|@
      nr   38  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r13:0, stack:80, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 14]
stack: stack:48|QWORD[.] r13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:14, 11] <|@ <|@
      nr   42  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B13" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   58  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = LEA [r10|DWORD - 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  116  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  118  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  124  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  132  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  134  <|@ instruction CMP r10|DWORD y: 17 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B84" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  210  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdi|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B11 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B168" 
    xhandlers
    flags 
    probability 4568176288968000960
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1806  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1808  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction JUMP ~[] destination: B165 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4561357127623488149
    begin_IR
      LIR
      nr 2618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2620  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr 2622  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2624  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2626  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2628  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2630  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r14|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 2632  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2634  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr 2636  <|@ instruction JUMP ~[] destination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4557307913614559813
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: int[14|0xe] <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [stack:80, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 14]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} stack:48|QWORD[.] 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14] <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  470  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557307913614559812
    begin_IR
      LIR
      nr  992  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  996  <|@ instruction JUMP ~[] destination: B79 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B79" "B81" 
    successors 
    xhandlers
    flags 
    probability 4561768151792078514
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 668] y: -317281 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [r8:0, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] stack:48|QWORD[.] stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B149"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557299800251034593
    begin_IR
      LIR
      nr 1640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1644  <|@ instruction JUMP ~[] destination: B149 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B149" "B151" 
    successors 
    xhandlers
    flags 
    probability 4561760078995370921
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1662  <|@ instruction MOV [r15|QWORD + 668] y: -264033 size: DWORD <|@ <|@
      nr 1664  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1666  <|@ st <@st|@reference-map: [r14:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B82" 
    xhandlers
    flags 
    probability 4557221190714856223
    begin_IR
      LIR
      nr 1006  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1008  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1010  <|@ instruction JUMP ~[] destination: B81 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B151"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B152" 
    xhandlers
    flags 
    probability 4557213158484966257
    begin_IR
      LIR
      nr 1654  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1656  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1658  <|@ instruction JUMP ~[] destination: B151 -> B152 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B163"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B164" 
    xhandlers
    flags 
    probability 4557127383136558603
    begin_IR
      LIR
      nr 1776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1778  <|@ instruction JUMP ~[] destination: B163 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B158"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B159" 
    xhandlers
    flags 
    probability 4557042465541635027
    begin_IR
      LIR
      nr 1720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1724  <|@ instruction JUMP ~[] destination: B158 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B158" "B156" 
    successors "B160" 
    xhandlers
    flags 
    probability 4561504030959518352
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1728  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [r14:0, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r14|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr 1732  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1738  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1740  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1742  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B156"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B159" 
    xhandlers
    flags 
    probability 4556958397122660686
    begin_IR
      LIR
      nr 1708  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1710  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1712  <|@ instruction JUMP ~[] destination: B156 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B38" 
    xhandlers
    flags 
    probability 4556440684617523928
    begin_IR
      LIR
      nr  602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  604  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  606  <|@ instruction JUMP ~[] destination: B35 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B105"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B108" 
    xhandlers
    flags 
    probability 4556433382590351231
    begin_IR
      LIR
      nr 1260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1262  <|@ instruction JUMP ~[] destination: B105 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B194"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B197" 
    xhandlers
    flags 
    probability 4556278207187322842
    begin_IR
      LIR
      nr 2132  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2134  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2136  <|@ instruction JUMP ~[] destination: B194 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B25" 
    xhandlers
    flags 
    probability 4549304361639224109
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  244  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   96  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - r13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11] <|@ <|@
      nr  102  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  106  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  178  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  180  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV [r15|QWORD + 668] y: -288865 size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - r13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:19, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2678  <|@ instruction r10|DWORD = MOVE input: int[-229395|0xfffffffffffc7fed] <|@ <|@
      nr 2680  <|@ instruction JUMP ~[] destination: B251 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B245" "B251" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2682  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2684  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2686  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2688  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r8|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction DEOPT info [bci:48, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3156  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3158  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3160  <|@ instruction MOV [r15|QWORD + 668] y: -210971 size: DWORD <|@ <|@
      nr 3162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3164  <|@ st <@st|@reference-map: [r14:0, stack:8]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
locals: rbx|DWORD int[4|0x4] stack:120|QWORD[.] int[0|0x0] - rdx|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - stack:120|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r14|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -279563 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 14]
stack: r11|QWORD[.] r13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:14, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3136  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3138  <|@ instruction MOV [r15|QWORD + 668] y: -230931 size: DWORD <|@ <|@
      nr 3140  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3142  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: rbx|DWORD int[4|0x4] stack:120|QWORD[.] int[0|0x0] - rsi|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - stack:120|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:32, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction r10|DWORD = MOVE input: int[-391265|0xfffffffffffa079f] <|@ <|@
      nr  560  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  562  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  564  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  570  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] rdx|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] r13|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1846  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581] <|@ <|@
      nr 1848  <|@ instruction MOV [r15|QWORD + 668] y: -214795 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:80|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: r13|DWORD int[4|0x4] r14|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:10, 16, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2604  <|@ instruction r10|DWORD = MOVE input: int[-227091|0xfffffffffffc88ed] <|@ <|@
      nr 2606  <|@ instruction JUMP ~[] destination: B245 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2096  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2098  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction MOV [r15|QWORD + 668] y: -411233 size: DWORD <|@ <|@
      nr 2102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2104  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] rax|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]} r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r9|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOV [r15|QWORD + 668] y: -302177 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction MOV [r15|QWORD + 668] y: -401249 size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1232  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] r10|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-308755|0xfffffffffffb49ed] <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #1          // java.lang.StringBuilder
     3: dup           
     4: invokespecial #0          // java.lang.StringBuilder.<init>:()void
     7: aload_0       
     8: invokevirtual #1          // getClass:()java.lang.Class
    11: invokevirtual #2          // java.lang.Class.getName:()java.lang.String
    14: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    17: ldc           #6          // "@"
    19: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    22: aload_0       
    23: invokevirtual #4          // hashCode:()int
    26: invokestatic  #5          // java.lang.Integer.toHexString:(int)java.lang.String
    29: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    32: invokevirtual #6          // java.lang.StringBuilder.toString:()java.lang.String
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B14" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD <|@ <|@
      nr   10  <|@ instruction stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   12  <|@ instruction r11|QWORD[.] = MOV [r10|DWORD * 8 + 104] size: QWORD <|@ <|@
      nr   14  <|@ instruction r8|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD <|@ <|@
      nr   16  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr   18  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   20  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr   22  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr   24  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr   26  <|@ instruction TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr   28  <|@ instruction BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B15" "B24" 
    xhandlers
    flags 
    probability 4607155558376912941
    begin_IR
      LIR
      nr  248  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  250  <|@ instruction r13|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  252  <|@ st <@st|@reference-map: [rsi:0, r8:0, r13:0, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: rsi|QWORD[.] 
>@ <|@ instruction r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr  254  <|@ instruction rdi|DWORD = LEA [r11|DWORD - 16] size: DWORD <|@ <|@
      nr  256  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr  258  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  260  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  262  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  264  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr  266  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  268  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr  302  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  304  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  306  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  308  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  310  <|@ instruction JUMP ~[] destination: B17 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" "B16" 
    successors "B19" "B23" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  312  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  314  <|@ instruction r8|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  316  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  318  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  320  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  322  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  324  <|@ instruction CMP r11|DWORD y: 17 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  332  <|@ instruction r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  334  <|@ instruction rdx|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  336  <|@ instruction rcx|QWORD = MOV r11|DWORD size: DWORD <|@ <|@
      nr  338  <|@ instruction rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  340  <|@ instruction rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  342  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  344  <|@ instruction stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  348  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  350  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  352  <|@ instruction rsi|QWORD = LEA [rdi|QWORD + 24] size: QWORD <|@ <|@
      nr  354  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  356  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4606647787996437181
    begin_IR
      LIR
      nr  378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  380  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr  382  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0 <|@ <|@
      nr  384  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  386  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  388  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  392  <|@ instruction JUMP ~[] destination: B21 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B21" "B20" 
    successors "B84" 
    xhandlers
    flags 
    probability 4606733369495943855
    begin_IR
      LIR
      nr  394  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  390  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  396  <|@ instruction rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  398  <|@ instruction rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  400  <|@ instruction MOV (x: [rdi|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  402  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  404  <|@ instruction MOV (x: [rdi|QWORD[*] + 12], y: r14|DWORD) size: DWORD <|@ <|@
      nr  406  <|@ instruction r8|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  408  <|@ instruction MOV (x: [rdi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD <|@ <|@
      nr  410  <|@ instruction r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  412  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  414  <|@ instruction rsi|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  416  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  418  <|@ instruction rdi|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  420  <|@ instruction JUMP ~[] destination: B22 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B11" "B22" "B83" 
    successors "B85" "B101" 
    xhandlers
    flags 
    probability 4607173992112009100
    begin_IR
      LIR
      nr 1064  <|@ instruction [] = LABEL numbPhis: 5 align: false label: ? <|@ <|@
      nr 1066  <|@ instruction stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1068  <|@ instruction r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1070  <|@ instruction rcx|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1072  <|@ instruction rdx|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1074  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr 1076  <|@ instruction CMP rdx|DWORD y: 1 size: DWORD <|@ <|@
      nr 1078  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B89" "B87" 
    xhandlers
    flags 
    probability 4606750936613628552
    begin_IR
      LIR
      nr 1080  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1082  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1084  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B85" 
    successors "B89" "B90" 
    xhandlers
    flags 
    probability 4606665179442945031
    begin_IR
      LIR
      nr 1090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1092  <|@ instruction r9|DWORD = DEC r9|DWORD size: DWORD <|@ <|@
      nr 1094  <|@ instruction CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1096  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B90 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B90"
    from_bci -1
    to_bci -1
    predecessors "B87" 
    successors "B91" "B164" 
    xhandlers
    flags 
    probability 4606580279843968345
    begin_IR
      LIR
      nr 1110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1112  <|@ instruction r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1114  <|@ instruction rdi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1116  <|@ instruction MOV [r10|QWORD[.] + rdi|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr 1118  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: rcx|DWORD) size: DWORD <|@ <|@
      nr 1120  <|@ instruction CMP (x: rbx|QWORD, y: [r11|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr 1122  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B91"
    from_bci -1
    to_bci -1
    predecessors "B90" 
    successors "B92" "B96" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr 1124  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1126  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1128  <|@ instruction rdi|QWORD = MOV [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr 1130  <|@ instruction rdx|QWORD = AND rdi|QWORD y: 7 size: QWORD <|@ <|@
      nr 1132  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1134  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B96 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B92"
    from_bci -1
    to_bci -1
    predecessors "B91" 
    successors "B96" "B97" 
    xhandlers
    flags 
    probability 4606413019144024376
    begin_IR
      LIR
      nr 1136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1138  <|@ instruction rdi|QWORD = SHR rdi|QWORD y: 8 size: QWORD <|@ <|@
      nr 1140  <|@ instruction rdi|DWORD = MOV rdi|QWORD size: DWORD <|@ <|@
      nr 1142  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1144  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B96 falseDestination: B92 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B97"
    from_bci -1
    to_bci -1
    predecessors "B92" "B96" 
    successors "B98" "B167" 
    xhandlers
    flags 
    probability 4606496229240981426
    begin_IR
      LIR
      nr 1170  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1172  <|@ instruction rsi|DWORD = LZCNT rdi|DWORD size: DWORD <|@ <|@
      nr 1174  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1176  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1178  <|@ instruction r10|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1180  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1182  <|@ instruction TEST r10|DWORD y: -4 size: DWORD <|@ <|@
      nr 1184  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B167"
    from_bci -1
    to_bci -1
    predecessors "B166" "B162" "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4604639499959146547
    begin_IR
      LIR
      nr 1824  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1826  <|@ instruction r10|DWORD = SHR r10|DWORD y: 2 size: DWORD <|@ <|@
      nr 1828  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1830  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1832  <|@ instruction JUMP ~[] destination: B167 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B168"
    from_bci -1
    to_bci -1
    predecessors "B167" "B165" "B161" "B98" 
    successors "B169" "B170" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1834  <|@ instruction [] = LABEL numbPhis: 3 align: false label: ? <|@ <|@
      nr 1836  <|@ instruction r11|DWORD[.] = MOV [r8|QWORD[.] + 16] size: DWORD <|@ <|@
      nr 1838  <|@ instruction TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr 1840  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B170"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors "B171" "B172" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1854  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1856  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1858  <|@ instruction rsi|DWORD = SHL r10|DWORD size: DWORD <|@ <|@
      nr 1860  <|@ instruction rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD <|@ <|@
      nr 1862  <|@ instruction rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD <|@ <|@
      nr 1864  <|@ instruction rdx|QWORD = MOV rsi|DWORD size: DWORD <|@ <|@
      nr 1866  <|@ instruction rdx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1868  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 1870  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B172"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr 1896  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1898  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1900  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1902  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1904  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1906  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1908  <|@ instruction MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr 1910  <|@ instruction MOV [rdi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1912  <|@ instruction MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1914  <|@ instruction rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr 1916  <|@ instruction r9|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1918  <|@ instruction JUMP ~[] destination: B172 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B173"
    from_bci -1
    to_bci -1
    predecessors "B172" "B171" 
    successors "B174" "B175" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1920  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1922  <|@ instruction rdi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1924  <|@ instruction rcx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr 1926  <|@ instruction rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr 1928  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1930  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B175"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1940  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1942  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1944  <|@ instruction J (address: [rdi|QWORD[.]], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1946  <|@ instruction rsi|QWORD = MOVE input: long[8|0x8] <|@ <|@
      nr 1948  <|@ instruction JUMP ~[] destination: B175 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B176"
    from_bci -1
    to_bci -1
    predecessors "B175" "B174" 
    successors "B179" "B178" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1950  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1952  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr 1954  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1960  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1956  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B179 falseDestination: B176 -> B178 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B178"
    from_bci -1
    to_bci -1
    predecessors "B176" 
    successors "B179" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1964  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1968  <|@ instruction J (address: [rdi|QWORD[.]], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1970  <|@ instruction rsi|QWORD = MOVE input: long[4|0x4] <|@ <|@
      nr 1972  <|@ instruction JUMP ~[] destination: B178 -> B179 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B179"
    from_bci -1
    to_bci -1
    predecessors "B178" "B176" 
    successors "B182" "B181" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1974  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1976  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr 1978  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1984  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1980  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B182 falseDestination: B179 -> B181 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B181"
    from_bci -1
    to_bci -1
    predecessors "B179" 
    successors "B182" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 1988  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1992  <|@ instruction J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1994  <|@ instruction rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD <|@ <|@
      nr 1996  <|@ instruction JUMP ~[] destination: B181 -> B182 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B182"
    from_bci -1
    to_bci -1
    predecessors "B181" "B179" 
    successors "B185" "B184" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 1998  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2000  <|@ instruction rdx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr 2002  <|@ instruction CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2004  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B185 falseDestination: B182 -> B184 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B184"
    from_bci -1
    to_bci -1
    predecessors "B182" 
    successors "B185" 
    xhandlers
    flags 
    probability 4604789992289767445
    begin_IR
      LIR
      nr 2010  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2012  <|@ instruction MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2014  <|@ instruction JUMP ~[] destination: B184 -> B185 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B185"
    from_bci -1
    to_bci -1
    predecessors "B184" "B182" 
    successors "B186" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2016  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2018  <|@ instruction rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}] <|@ <|@
      nr 2020  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2022  <|@ instruction rbx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2024  <|@ instruction JUMP ~[] destination: B185 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B187"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors "B188" "B304" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr 2034  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2036  <|@ instruction rdx|DWORD = AND rbx|DWORD y: 15 size: DWORD <|@ <|@
      nr 2038  <|@ instruction rdx|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD <|@ <|@
      nr 2040  <|@ instruction MOV (x: [r9|QWORD[.] + rsi|DWORD * 2 + 16], y: rdx|DWORD) size: WORD <|@ <|@
      nr 2042  <|@ instruction TEST rbx|DWORD y: -16 size: DWORD <|@ <|@
      nr 2044  <|@ instruction BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B304"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B305" "B306" 
    xhandlers
    flags 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr 3128  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3130  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 3132  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B306"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors "B186" 
    xhandlers
    flags "lle" 
    loop_index 4
    loop_depth 1
    probability 4607711757855125825
    begin_IR
      LIR
      nr 3144  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3146  <|@ st <@st|@reference-map: [rdi:0, r8:0, r9:0, r11:0, stack:56]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: rbx|DWORD int[4|0x4] r9|QWORD[.] int[0|0x0] - rsi|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - r9|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26] <|@ <|@
      nr 3148  <|@ instruction rbx|DWORD = SHR rbx|DWORD y: 4 size: DWORD <|@ <|@
      nr 3150  <|@ instruction rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD <|@ <|@
      nr 3152  <|@ instruction JUMP ~[] destination: B306 -> B186 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B186"
    from_bci -1
    to_bci -1
    predecessors "B185" "B306" 
    successors "B187" "B307" 
    xhandlers
    flags "llh" 
    loop_index 4
    loop_depth 1
    probability 4611903812389420541
    begin_IR
      LIR
      nr 2026  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2028  <|@ instruction rsi|DWORD = DEC rdx|DWORD size: DWORD <|@ <|@
      nr 2030  <|@ instruction CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2032  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B188"
    from_bci -1
    to_bci -1
    predecessors "B187" 
    successors "B238" "B190" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2046  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2048  <|@ instruction rdi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2050  <|@ instruction rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr 2052  <|@ instruction rdx|DWORD = ADD (x: rdi|DWORD, y: r10|DWORD) size: DWORD <|@ <|@
      nr 2054  <|@ instruction rsi|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2056  <|@ instruction rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 2058  <|@ instruction CMP rsi|DWORD y: 1 size: DWORD <|@ <|@
      nr 2060  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B238 falseDestination: B188 -> B190 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B238"
    from_bci -1
    to_bci -1
    predecessors "B237" "B188" 
    successors "B242" "B240" 
    xhandlers
    flags 
    probability 4606994916537931121
    begin_IR
      LIR
      nr 2520  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr 2522  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 2524  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B242 falseDestination: B238 -> B240 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B240"
    from_bci -1
    to_bci -1
    predecessors "B238" 
    successors "B242" "B243" 
    xhandlers
    flags 
    probability 4606906719568004574
    begin_IR
      LIR
      nr 2534  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2536  <|@ instruction r11|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2538  <|@ instruction rsi|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD <|@ <|@
      nr 2540  <|@ instruction CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 2542  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B242 falseDestination: B240 -> B243 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B243"
    from_bci -1
    to_bci -1
    predecessors "B240" 
    successors "B244" "B250" 
    xhandlers
    flags 
    probability 4606819404567777292
    begin_IR
      LIR
      nr 2560  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2562  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2564  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2566  <|@ instruction r9|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2568  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2570  <|@ instruction rdx|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr 2572  <|@ instruction stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 2574  <|@ instruction rdi|QWORD = LEA [r9|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 2576  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2578  <|@ instruction rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2580  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2582  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 2584  <|@ instruction r13|DWORD = ADD (x: stack:80|DWORD, y: stack:100|DWORD) size: DWORD <|@ <|@
      nr 2586  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2588  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2590  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 2592  <|@ instruction CMP r13|DWORD y: 1 size: DWORD <|@ <|@
      nr 2594  <|@ instruction BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B250"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B251" "B253" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2666  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2668  <|@ instruction r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD <|@ <|@
      nr 2670  <|@ instruction rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD <|@ <|@
      nr 2672  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr 2674  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B253"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B254" "B258" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2690  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2692  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2694  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2696  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2698  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B258 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B254"
    from_bci -1
    to_bci -1
    predecessors "B253" 
    successors "B258" "B256" 
    xhandlers
    flags 
    probability 4605232709315847027
    begin_IR
      LIR
      nr 2700  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2702  <|@ instruction rdx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 2704  <|@ instruction rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD <|@ <|@
      nr 2706  <|@ instruction rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2708  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr 2710  <|@ instruction rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr 2712  <|@ instruction CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2714  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B258 falseDestination: B254 -> B256 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B256"
    from_bci -1
    to_bci -1
    predecessors "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4605162134418141321
    begin_IR
      LIR
      nr 2720  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2722  <|@ instruction MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD <|@ <|@
      nr 2724  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2726  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2728  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2730  <|@ instruction AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2732  <|@ instruction MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2734  <|@ instruction MOV [rax|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2736  <|@ instruction MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2738  <|@ instruction rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2740  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2742  <|@ instruction JUMP ~[] destination: B256 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B259"
    from_bci -1
    to_bci -1
    predecessors "B256" "B258" 
    successors "B278" "B261" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2762  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2764  <|@ instruction CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD <|@ <|@
      nr 2766  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: > <|@ <|@
      nr 2768  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2770  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2772  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B278 falseDestination: B259 -> B261 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B261"
    from_bci -1
    to_bci -1
    predecessors "B259" 
    successors "B266" "B264" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2780  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2782  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2784  <|@ instruction r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2786  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2788  <|@ instruction TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2794  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2790  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B266 falseDestination: B261 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B266"
    from_bci -1
    to_bci -1
    predecessors "B261" "B264" 
    successors "B269" "B268" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2820  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2822  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2824  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2826  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B269 falseDestination: B266 -> B268 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B268"
    from_bci -1
    to_bci -1
    predecessors "B266" 
    successors "B269" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2832  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2834  <|@ instruction xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2836  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2838  <|@ instruction r11|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2840  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2842  <|@ instruction JUMP ~[] destination: B268 -> B269 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B269"
    from_bci -1
    to_bci -1
    predecessors "B268" "B266" 
    successors "B272" "B271" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2844  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2846  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2848  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2850  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B272 falseDestination: B269 -> B271 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B271"
    from_bci -1
    to_bci -1
    predecessors "B269" 
    successors "B272" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2856  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2858  <|@ instruction xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2860  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2862  <|@ instruction r11|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2864  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2866  <|@ instruction JUMP ~[] destination: B271 -> B272 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B272"
    from_bci -1
    to_bci -1
    predecessors "B271" "B269" 
    successors "B275" "B274" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2868  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2870  <|@ instruction r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2872  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2874  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B274"
    from_bci -1
    to_bci -1
    predecessors "B272" 
    successors "B275" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2880  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2882  <|@ instruction xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2884  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2886  <|@ instruction r11|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2888  <|@ instruction r8|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr 2890  <|@ instruction JUMP ~[] destination: B274 -> B275 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B275"
    from_bci -1
    to_bci -1
    predecessors "B274" "B272" 
    successors "B278" "B277" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2892  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2894  <|@ instruction r11|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2896  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2898  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B277"
    from_bci -1
    to_bci -1
    predecessors "B275" 
    successors "B278" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2904  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2906  <|@ instruction r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD <|@ <|@
      nr 2908  <|@ instruction MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD <|@ <|@
      nr 2910  <|@ instruction JUMP ~[] destination: B277 -> B278 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B278"
    from_bci -1
    to_bci -1
    predecessors "B259" "B277" "B275" 
    successors "B279" "B298" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 2912  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2914  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2916  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2918  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B298"
    from_bci -1
    to_bci -1
    predecessors "B278" "B295" "B293" 
    successors "B299" "B300" 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 3058  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3060  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 3062  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr 3064  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 3066  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B300"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4605938458292904088
    begin_IR
      LIR
      nr 3088  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3090  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3092  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr 3094  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3096  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} <|@ <|@
      nr 3098  <|@ instruction JUMP ~[] destination: B300 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B301"
    from_bci -1
    to_bci -1
    predecessors "B300" "B299" 
    successors 
    xhandlers
    flags 
    probability 4606016874845910428
    begin_IR
      LIR
      nr 3100  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3102  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr 3104  <|@ instruction r10|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 3106  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD <|@ <|@
      nr 3108  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 3110  <|@ instruction rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 3112  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD <|@ <|@
      nr 3114  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 3116  <|@ instruction rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3118  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B279"
    from_bci -1
    to_bci -1
    predecessors "B278" 
    successors "B280" "B281" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2920  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2922  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2924  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2926  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 2928  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2930  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B280"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B284" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2934  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2936  <|@ instruction JUMP ~[] destination: B280 -> B284 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B284"
    from_bci -1
    to_bci -1
    predecessors "B280" "B282" 
    successors "B287" "B286" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2960  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2962  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 2964  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2966  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B287 falseDestination: B284 -> B286 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B286"
    from_bci -1
    to_bci -1
    predecessors "B284" 
    successors "B287" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2972  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2974  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2976  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2978  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 2980  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2982  <|@ instruction JUMP ~[] destination: B286 -> B287 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B287"
    from_bci -1
    to_bci -1
    predecessors "B286" "B284" 
    successors "B290" "B289" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 2984  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2986  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 2988  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2990  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B289"
    from_bci -1
    to_bci -1
    predecessors "B287" 
    successors "B290" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 2996  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2998  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 3000  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 3002  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 3004  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3006  <|@ instruction JUMP ~[] destination: B289 -> B290 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B290"
    from_bci -1
    to_bci -1
    predecessors "B289" "B287" 
    successors "B293" "B292" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 3008  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3010  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 3012  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 3014  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B292"
    from_bci -1
    to_bci -1
    predecessors "B290" 
    successors "B293" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3022  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 3024  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 3026  <|@ instruction rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 3028  <|@ instruction r11|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 3030  <|@ instruction JUMP ~[] destination: B292 -> B293 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B293"
    from_bci -1
    to_bci -1
    predecessors "B292" "B290" 
    successors "B298" "B295" 
    xhandlers
    flags 
    probability 4601513275218539932
    begin_IR
      LIR
      nr 3032  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 3034  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 3036  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 3038  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B295"
    from_bci -1
    to_bci -1
    predecessors "B293" 
    successors "B298" 
    xhandlers
    flags 
    probability 4599552861393381429
    begin_IR
      LIR
      nr 3044  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3046  <|@ instruction MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 3048  <|@ instruction JUMP ~[] destination: B295 -> B298 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B98"
    from_bci -1
    to_bci -1
    predecessors "B97" 
    successors "B168" 
    xhandlers
    flags 
    probability 4598056962486991259
    begin_IR
      LIR
      nr 1186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1188  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1190  <|@ instruction r13|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr 1192  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1194  <|@ instruction JUMP ~[] destination: B98 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B174"
    from_bci -1
    to_bci -1
    predecessors "B173" 
    successors "B176" 
    xhandlers
    flags 
    probability 4597987717283190129
    begin_IR
      LIR
      nr 1932  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1934  <|@ instruction rsi|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1936  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1938  <|@ instruction JUMP ~[] destination: B174 -> B176 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B264"
    from_bci -1
    to_bci -1
    predecessors "B261" "B264" 
    successors "B266" "B264" 
    xhandlers
    flags "llh" 
    loop_index 7
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2806  <|@ instruction xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2808  <|@ instruction J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2810  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2812  <|@ instruction CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD <|@ <|@
      nr 2814  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B266 falseDestination: B264 -> B264 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B281"
    from_bci -1
    to_bci -1
    predecessors "B279" 
    successors "B282" 
    xhandlers
    flags 
    probability 4592506075963798940
    begin_IR
      LIR
      nr 2938  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2940  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2942  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2944  <|@ instruction JUMP ~[] destination: B281 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B282"
    from_bci -1
    to_bci -1
    predecessors "B281" "B282" 
    successors "B284" "B282" 
    xhandlers
    flags "llh" 
    loop_index 8
    loop_depth 1
    probability 4601513275218539932
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2948  <|@ instruction J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2950  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 2952  <|@ instruction CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2954  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B284 falseDestination: B282 -> B282 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B244"
    from_bci -1
    to_bci -1
    predecessors "B243" 
    successors "B245" "B246" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2596  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2598  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2600  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B246"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B247" "B248" 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2610  <|@ instruction rax|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2612  <|@ instruction rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD <|@ <|@
      nr 2614  <|@ instruction CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr 2616  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B248"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4591020456060350490
    begin_IR
      LIR
      nr 2638  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2640  <|@ instruction MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2642  <|@ instruction AMD64PREFETCH ~[rax|QWORD + 216] instr: 0 <|@ <|@
      nr 2644  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr 2646  <|@ instruction JUMP ~[] destination: B248 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B249"
    from_bci -1
    to_bci -1
    predecessors "B248" "B247" 
    successors 
    xhandlers
    flags 
    probability 4591084658438099839
    begin_IR
      LIR
      nr 2648  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2650  <|@ instruction rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD <|@ <|@
      nr 2652  <|@ instruction rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD <|@ <|@
      nr 2654  <|@ instruction MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2656  <|@ instruction MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed} <|@ <|@
      nr 2658  <|@ instruction MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}] <|@ <|@
      nr 2660  <|@ instruction MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr 2662  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2664  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B258"
    from_bci -1
    to_bci -1
    predecessors "B253" "B254" 
    successors "B259" 
    xhandlers
    flags 
    probability 4591502344085317785
    begin_IR
      LIR
      nr 2748  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2750  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2752  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2754  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2756  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 2758  <|@ st <@st|@reference-map: [stack:32, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 2760  <|@ instruction JUMP ~[] destination: B258 -> B259 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B101"
    from_bci -1
    to_bci -1
    predecessors "B84" 
    successors "B102" "B103" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1206  <|@ instruction stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr 1208  <|@ instruction stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1210  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1212  <|@ instruction rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1214  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:72|QWORD[.] stack:96|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19] <|@ <|@
      nr 1216  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1218  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1220  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B103"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors "B104" "B108" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1234  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1236  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 1238  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 1240  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 1242  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B108 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B104"
    from_bci -1
    to_bci -1
    predecessors "B103" 
    successors "B108" "B106" 
    xhandlers
    flags 
    probability 4586252820212474326
    begin_IR
      LIR
      nr 1244  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1246  <|@ instruction r10|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 1248  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr 1250  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr 1252  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr 1254  <|@ instruction r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1256  <|@ instruction CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1258  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B108 falseDestination: B104 -> B106 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B106"
    from_bci -1
    to_bci -1
    predecessors "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4586191900220707527
    begin_IR
      LIR
      nr 1264  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1266  <|@ instruction MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD <|@ <|@
      nr 1268  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 1270  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 1272  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 1274  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 1276  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 1278  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 1280  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 1282  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1284  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1288  <|@ instruction JUMP ~[] destination: B106 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B109"
    from_bci -1
    to_bci -1
    predecessors "B106" "B108" 
    successors "B128" "B111" 
    xhandlers
    flags 
    probability 4586929709009883203
    begin_IR
      LIR
      nr 1308  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1286  <|@ instruction r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1310  <|@ instruction CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr 1312  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: > <|@ <|@
      nr 1314  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1316  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 1318  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B128 falseDestination: B109 -> B111 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B111"
    from_bci -1
    to_bci -1
    predecessors "B109" 
    successors "B116" "B114" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1324  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1326  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1328  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1330  <|@ instruction rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 1332  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 1334  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1340  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1336  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B116 falseDestination: B111 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B116"
    from_bci -1
    to_bci -1
    predecessors "B111" "B114" 
    successors "B119" "B118" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1366  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1368  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 1370  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1372  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B119 falseDestination: B116 -> B118 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B118"
    from_bci -1
    to_bci -1
    predecessors "B116" 
    successors "B119" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1378  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1380  <|@ instruction xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1382  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1384  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr 1386  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1388  <|@ instruction JUMP ~[] destination: B118 -> B119 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B119"
    from_bci -1
    to_bci -1
    predecessors "B118" "B116" 
    successors "B122" "B121" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1390  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1392  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 1394  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1396  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B122 falseDestination: B119 -> B121 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B121"
    from_bci -1
    to_bci -1
    predecessors "B119" 
    successors "B122" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1402  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1404  <|@ instruction xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 1406  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1408  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr 1410  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1412  <|@ instruction JUMP ~[] destination: B121 -> B122 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B122"
    from_bci -1
    to_bci -1
    predecessors "B121" "B119" 
    successors "B125" "B124" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1414  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1416  <|@ instruction r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 1418  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1420  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B125 falseDestination: B122 -> B124 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B124"
    from_bci -1
    to_bci -1
    predecessors "B122" 
    successors "B125" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1428  <|@ instruction xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 1430  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1432  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr 1434  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1436  <|@ instruction JUMP ~[] destination: B124 -> B125 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B125"
    from_bci -1
    to_bci -1
    predecessors "B124" "B122" 
    successors "B128" "B127" 
    xhandlers
    flags 
    probability 4582426109382512707
    begin_IR
      LIR
      nr 1438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1440  <|@ instruction r10|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 1442  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B128 falseDestination: B125 -> B127 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B127"
    from_bci -1
    to_bci -1
    predecessors "B125" 
    successors "B128" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1450  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1452  <|@ instruction rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr 1454  <|@ instruction MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD <|@ <|@
      nr 1456  <|@ instruction JUMP ~[] destination: B127 -> B128 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B128"
    from_bci -1
    to_bci -1
    predecessors "B109" "B127" "B125" 
    successors "B129" "B147" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr 1458  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1460  <|@ instruction rdx|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 1462  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1464  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B147"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B148" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1610  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1612  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1614  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1616  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1618  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1620  <|@ instruction JUMP ~[] destination: B147 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B148"
    from_bci -1
    to_bci -1
    predecessors "B147" "B145" "B144" 
    successors "B152" "B150" 
    xhandlers
    flags 
    probability 4586929709009883202
    begin_IR
      LIR
      nr 1622  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1624  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 1626  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 1628  <|@ instruction MOV (x: [r8|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr 1630  <|@ instruction rdx|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 1632  <|@ instruction MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 1634  <|@ instruction rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 1636  <|@ instruction TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1638  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B152 falseDestination: B148 -> B150 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B150"
    from_bci -1
    to_bci -1
    predecessors "B148" 
    successors "B152" "B153" 
    xhandlers
    flags 
    probability 4586862020130142314
    begin_IR
      LIR
      nr 1646  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1648  <|@ instruction r13|DWORD = DEC r13|DWORD size: DWORD <|@ <|@
      nr 1650  <|@ instruction CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 1652  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B153 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B153"
    from_bci -1
    to_bci -1
    predecessors "B150" 
    successors "B154" "B164" 
    xhandlers
    flags 
    probability 4586795008139198835
    begin_IR
      LIR
      nr 1668  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1670  <|@ instruction rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>} <|@ <|@
      nr 1672  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr 1674  <|@ instruction rdx|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 1676  <|@ instruction MOV [rax|QWORD[.] + rdx|QWORD * 2 + 16] y: 64 size: WORD <|@ <|@
      nr 1678  <|@ instruction rsi|DWORD = INC rsi|DWORD size: DWORD <|@ <|@
      nr 1680  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1682  <|@ instruction CMP (x: rbx|QWORD, y: [r10|DWORD * 8 + 464]) size: QWORD <|@ <|@
      nr 1684  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B164 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B154"
    from_bci -1
    to_bci -1
    predecessors "B153" 
    successors "B155" "B159" 
    xhandlers
    flags 
    probability 4586728666268164791
    begin_IR
      LIR
      nr 1686  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1688  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1690  <|@ instruction rdx|QWORD = MOV [rsi|QWORD[.]] size: QWORD <|@ <|@
      nr 1692  <|@ instruction rcx|QWORD = AND rdx|QWORD y: 7 size: QWORD <|@ <|@
      nr 1694  <|@ instruction CMP rcx|QWORD y: 1 size: QWORD <|@ <|@
      nr 1696  <|@ instruction BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B159 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B155"
    from_bci -1
    to_bci -1
    predecessors "B154" 
    successors "B159" "B157" 
    xhandlers
    flags 
    probability 4586662987815841087
    begin_IR
      LIR
      nr 1698  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1700  <|@ instruction rdx|QWORD = SHR rdx|QWORD y: 8 size: QWORD <|@ <|@
      nr 1702  <|@ instruction rdx|DWORD = MOV rdx|QWORD size: DWORD <|@ <|@
      nr 1704  <|@ instruction TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD <|@ <|@
      nr 1706  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B159 falseDestination: B155 -> B157 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B157"
    from_bci -1
    to_bci -1
    predecessors "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4586597966148040620
    begin_IR
      LIR
      nr 1714  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1716  <|@ instruction r13|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1718  <|@ instruction JUMP ~[] destination: B157 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B160"
    from_bci -1
    to_bci -1
    predecessors "B157" "B159" 
    successors "B161" "B162" 
    xhandlers
    flags 
    probability 4586728666268164790
    begin_IR
      LIR
      nr 1744  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1746  <|@ instruction rsi|DWORD = LZCNT r13|DWORD size: DWORD <|@ <|@
      nr 1748  <|@ instruction rdx|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1750  <|@ instruction rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1752  <|@ instruction rcx|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1754  <|@ instruction rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1756  <|@ instruction TEST rcx|DWORD y: -4 size: DWORD <|@ <|@
      nr 1758  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B162"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B167" 
    xhandlers
    flags 
    probability 4584974636446040490
    begin_IR
      LIR
      nr 1768  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1770  <|@ instruction rdi|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1772  <|@ instruction r10|DWORD = MOVE rcx|DWORD moveKind: DWORD <|@ <|@
      nr 1774  <|@ instruction JUMP ~[] destination: B162 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B14" 
    successors "B25" 
    xhandlers
    flags 
    probability 4586915843131299805
    begin_IR
      LIR
      nr  430  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  432  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  434  <|@ instruction r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  436  <|@ instruction stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr  440  <|@ instruction JUMP ~[] destination: B24 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B13" "B24" 
    successors "B26" "B27" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  442  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  444  <|@ instruction stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  446  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  448  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 72] size: QWORD <|@ <|@
      nr  450  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  452  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4586868295309743851
    begin_IR
      LIR
      nr  474  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  476  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  478  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 264] instr: 0 <|@ <|@
      nr  480  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 328] instr: 0 <|@ <|@
      nr  482  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 392] instr: 0 <|@ <|@
      nr  484  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 456] instr: 0 <|@ <|@
      nr  486  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  488  <|@ instruction JUMP ~[] destination: B27 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B27" "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  490  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  492  <|@ instruction r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  494  <|@ instruction stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  496  <|@ instruction rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD <|@ <|@
      nr  498  <|@ instruction rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD <|@ <|@
      nr  500  <|@ instruction r9|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  502  <|@ instruction MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD <|@ <|@
      nr  504  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  506  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  508  <|@ instruction r9|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  510  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD <|@ <|@
      nr  512  <|@ instruction MOV [rsi|QWORD[*] + 36] y: 16 size: DWORD <|@ <|@
      nr  514  <|@ instruction MOV [rsi|QWORD[*] + 24] y: 1 size: QWORD <|@ <|@
      nr  516  <|@ instruction MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  518  <|@ instruction J (address: [rsi|QWORD[*] + 40], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  520  <|@ instruction rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr  522  <|@ instruction stack:72|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  524  <|@ instruction rdx|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  526  <|@ st <@st|@reference-map: [stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:64|QWORD[.] stack:72|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14] <|@ <|@
      nr  528  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  530  <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  532  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  534  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:72|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] r13|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction CMP (x: r11|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14] <|@ <|@
      nr  536  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" "B33" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  550  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  552  <|@ instruction TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD <|@ <|@
      nr  554  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B34" "B38" 
    xhandlers
    flags 
    probability 4586936047575137280
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  580  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr  582  <|@ instruction CMP rax|DWORD y: 16777215 size: DWORD <|@ <|@
      nr  584  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" "B36" 
    xhandlers
    flags 
    probability 4586258524921202995
    begin_IR
      LIR
      nr  586  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  588  <|@ instruction r10|DWORD = SHL rax|DWORD size: DWORD <|@ <|@
      nr  590  <|@ instruction r10|DWORD = LEA [r10|DWORD + 23] size: DWORD <|@ <|@
      nr  592  <|@ instruction r10|DWORD = AND r10|DWORD y: -8 size: DWORD <|@ <|@
      nr  594  <|@ instruction r10|QWORD = MOVSXD r10|DWORD size: QWORD <|@ <|@
      nr  596  <|@ instruction r8|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  600  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4586197547882348909
    begin_IR
      LIR
      nr  608  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  610  <|@ instruction MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD <|@ <|@
      nr  612  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  614  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  616  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  618  <|@ instruction AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  620  <|@ instruction MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD <|@ <|@
      nr  622  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr  624  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  626  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  628  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  630  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  632  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  634  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr  636  <|@ instruction JUMP ~[] destination: B36 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B36" "B38" 
    successors "B58" "B41" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  662  <|@ instruction CMP r13|DWORD y: 17 size: DWORD <|@ <|@
      nr  664  <|@ instruction rdi|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: r13|DWORD) condition: < <|@ <|@
      nr  666  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  668  <|@ instruction CMP rdi|QWORD y: 1 size: QWORD <|@ <|@
      nr  670  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B58 falseDestination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B39" 
    successors "B46" "B44" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  678  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  680  <|@ instruction rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  682  <|@ instruction rdx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  684  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD <|@ <|@
      nr  686  <|@ instruction TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  692  <|@ instruction r11|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  688  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B46 falseDestination: B41 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" 
    successors "B49" "B48" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  720  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD <|@ <|@
      nr  722  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  724  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B46" 
    successors "B49" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  730  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  732  <|@ instruction xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  734  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  736  <|@ instruction r10|QWORD = LEA [r11|QWORD + 8] size: QWORD <|@ <|@
      nr  738  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  740  <|@ instruction JUMP ~[] destination: B48 -> B49 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" "B46" 
    successors "B52" "B51" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  742  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  744  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD <|@ <|@
      nr  746  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  748  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B49" 
    successors "B52" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  754  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  756  <|@ instruction xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr  758  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  760  <|@ instruction r10|QWORD = LEA [r11|QWORD + 4] size: QWORD <|@ <|@
      nr  762  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  764  <|@ instruction JUMP ~[] destination: B51 -> B52 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" "B49" 
    successors "B55" "B54" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  766  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  768  <|@ instruction r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD <|@ <|@
      nr  770  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  772  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B52" 
    successors "B55" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  778  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  780  <|@ instruction xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr  782  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  784  <|@ instruction r10|QWORD = LEA [r11|QWORD + 2] size: QWORD <|@ <|@
      nr  786  <|@ instruction r11|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr  788  <|@ instruction JUMP ~[] destination: B54 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B54" "B52" 
    successors "B58" "B57" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  790  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  792  <|@ instruction r10|QWORD = DEC rdi|QWORD size: QWORD <|@ <|@
      nr  794  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  796  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B55" 
    successors "B58" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  802  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  804  <|@ instruction rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD <|@ <|@
      nr  806  <|@ instruction MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD <|@ <|@
      nr  808  <|@ instruction JUMP ~[] destination: B57 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B39" "B57" "B55" 
    successors "B59" "B77" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  810  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr  814  <|@ instruction CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  816  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B78" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  962  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  964  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  966  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  968  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  970  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  972  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B77" "B75" "B74" 
    successors "B82" "B80" 
    xhandlers
    flags 
    probability 4586936047575137279
    begin_IR
      LIR
      nr  974  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  976  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  978  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  980  <|@ instruction MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr  982  <|@ instruction rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  984  <|@ instruction MOVB (x: [rsi|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  986  <|@ instruction r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD <|@ <|@
      nr  988  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  990  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B82 falseDestination: B78 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B78" 
    successors "B82" "B83" 
    xhandlers
    flags 
    probability 4586868295309743850
    begin_IR
      LIR
      nr  998  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1000  <|@ instruction rdi|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD <|@ <|@
      nr 1002  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr 1004  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B82 falseDestination: B80 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B80" 
    successors "B84" 
    xhandlers
    flags 
    probability 4586801220567004356
    begin_IR
      LIR
      nr 1020  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1022  <|@ instruction stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1024  <|@ instruction r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD // MoveResolver resolve mapping <|@ <|@
      nr 1026  <|@ instruction rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 1028  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1030  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1032  <|@ instruction rdx|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr 1034  <|@ instruction r10|QWORD = MOV r14|DWORD size: DWORD <|@ <|@
      nr 1036  <|@ instruction rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr 1038  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1040  <|@ instruction rdx|QWORD = MOVE r10|QWORD moveKind: QWORD <|@ <|@
      nr 1042  <|@ instruction stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1044  <|@ instruction stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1046  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr 1048  <|@ instruction r11|DWORD = ADD (x: stack:52|DWORD, y: stack:84|DWORD) size: DWORD <|@ <|@
      nr 1050  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1052  <|@ instruction MOV (x: [r8|QWORD[.] + 12], y: r11|DWORD) size: DWORD <|@ <|@
      nr 1054  <|@ instruction rsi|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1056  <|@ instruction r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1058  <|@ instruction rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1060  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr 1062  <|@ instruction JUMP ~[] destination: B83 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B190"
    from_bci -1
    to_bci -1
    predecessors "B188" 
    successors "B191" "B192" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2066  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2068  <|@ instruction stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2070  <|@ instruction stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr 2072  <|@ instruction stack:112|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr 2074  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2076  <|@ instruction stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2078  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2080  <|@ instruction rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2082  <|@ st <@st|@reference-map: [stack:8, stack:32, stack:44, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17]
stack: stack:72|QWORD[.] stack:96|QWORD[.] 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29] <|@ <|@
      nr 2084  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 2086  <|@ instruction TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD <|@ <|@
      nr 2088  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B192"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors "B193" "B197" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2106  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2108  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr 2110  <|@ instruction rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr 2112  <|@ instruction CMP r13|DWORD y: 16777215 size: DWORD <|@ <|@
      nr 2114  <|@ instruction BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B197 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B193"
    from_bci -1
    to_bci -1
    predecessors "B192" 
    successors "B197" "B195" 
    xhandlers
    flags 
    probability 4586131589428858397
    begin_IR
      LIR
      nr 2116  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2118  <|@ instruction rcx|DWORD = SHL r13|DWORD size: DWORD <|@ <|@
      nr 2120  <|@ instruction rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD <|@ <|@
      nr 2122  <|@ instruction rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD <|@ <|@
      nr 2124  <|@ instruction rcx|QWORD = MOVSXD rcx|DWORD size: QWORD <|@ <|@
      nr 2126  <|@ instruction r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2128  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 2130  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B197 falseDestination: B193 -> B195 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B195"
    from_bci -1
    to_bci -1
    predecessors "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4586071881744927757
    begin_IR
      LIR
      nr 2138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2140  <|@ instruction MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD <|@ <|@
      nr 2142  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr 2144  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr 2146  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr 2148  <|@ instruction AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr 2150  <|@ instruction MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD <|@ <|@
      nr 2152  <|@ instruction MOV [rsi|QWORD] y: 1 size: QWORD <|@ <|@
      nr 2154  <|@ instruction MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr 2156  <|@ instruction rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2158  <|@ instruction rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2160  <|@ instruction rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2162  <|@ instruction r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2164  <|@ instruction JUMP ~[] destination: B195 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B198"
    from_bci -1
    to_bci -1
    predecessors "B195" "B197" 
    successors "B217" "B200" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2188  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2190  <|@ instruction CMP (x: r13|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr 2192  <|@ instruction rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr 2194  <|@ instruction rsi|QWORD = MOVSXD rsi|DWORD size: QWORD <|@ <|@
      nr 2196  <|@ instruction CMP rsi|QWORD y: 1 size: QWORD <|@ <|@
      nr 2198  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B217 falseDestination: B198 -> B200 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B200"
    from_bci -1
    to_bci -1
    predecessors "B198" 
    successors "B205" "B203" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2206  <|@ instruction r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 2208  <|@ instruction r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD <|@ <|@
      nr 2210  <|@ instruction r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr 2212  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr 2214  <|@ instruction TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2220  <|@ instruction r9|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2216  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B205 falseDestination: B200 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B205"
    from_bci -1
    to_bci -1
    predecessors "B200" "B203" 
    successors "B208" "B207" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2246  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2248  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr 2250  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2252  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B208 falseDestination: B205 -> B207 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B207"
    from_bci -1
    to_bci -1
    predecessors "B205" 
    successors "B208" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2258  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2260  <|@ instruction xmm0|V128_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2262  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2264  <|@ instruction r8|QWORD = LEA [r9|QWORD + 8] size: QWORD <|@ <|@
      nr 2266  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2268  <|@ instruction JUMP ~[] destination: B207 -> B208 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B208"
    from_bci -1
    to_bci -1
    predecessors "B207" "B205" 
    successors "B211" "B210" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2270  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2272  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr 2274  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2276  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B211 falseDestination: B208 -> B210 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B210"
    from_bci -1
    to_bci -1
    predecessors "B208" 
    successors "B211" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2282  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2284  <|@ instruction xmm0|V64_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVQ <|@ <|@
      nr 2286  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2288  <|@ instruction r8|QWORD = LEA [r9|QWORD + 4] size: QWORD <|@ <|@
      nr 2290  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2292  <|@ instruction JUMP ~[] destination: B210 -> B211 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B211"
    from_bci -1
    to_bci -1
    predecessors "B210" "B208" 
    successors "B214" "B213" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2294  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2296  <|@ instruction r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr 2298  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2300  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B214 falseDestination: B211 -> B213 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B213"
    from_bci -1
    to_bci -1
    predecessors "B211" 
    successors "B214" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2306  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2308  <|@ instruction xmm0|V32_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVD <|@ <|@
      nr 2310  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2312  <|@ instruction r8|QWORD = LEA [r9|QWORD + 2] size: QWORD <|@ <|@
      nr 2314  <|@ instruction r9|QWORD = MOVE r8|QWORD moveKind: QWORD <|@ <|@
      nr 2316  <|@ instruction JUMP ~[] destination: B213 -> B214 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B214"
    from_bci -1
    to_bci -1
    predecessors "B213" "B211" 
    successors "B217" "B216" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2318  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2320  <|@ instruction r8|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr 2322  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2324  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B217 falseDestination: B214 -> B216 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B216"
    from_bci -1
    to_bci -1
    predecessors "B214" 
    successors "B217" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2330  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2332  <|@ instruction r11|DWORD = MOVSX [r11|QWORD[*] + r9|QWORD * 2] size: DWORD <|@ <|@
      nr 2334  <|@ instruction MOV (x: [r10|QWORD[.] + r9|QWORD * 2], y: r11|DWORD) size: WORD <|@ <|@
      nr 2336  <|@ instruction JUMP ~[] destination: B216 -> B217 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B217"
    from_bci -1
    to_bci -1
    predecessors "B198" "B216" "B214" 
    successors "B218" "B236" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2338  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2340  <|@ instruction r10|QWORD = MOVSXD r13|DWORD size: QWORD <|@ <|@
      nr 2342  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2344  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B236"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B237" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2486  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2488  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2490  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2492  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2494  <|@ instruction JUMP ~[] destination: B236 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B237"
    from_bci -1
    to_bci -1
    predecessors "B236" "B234" "B232" 
    successors "B238" 
    xhandlers
    flags 
    probability 4586795008139198837
    begin_IR
      LIR
      nr 2496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2498  <|@ instruction rsi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr 2500  <|@ instruction r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr 2502  <|@ instruction MOV (x: [r14|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD <|@ <|@
      nr 2504  <|@ instruction r8|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr 2506  <|@ instruction MOVB (x: [r8|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr 2508  <|@ instruction rdi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD <|@ <|@
      nr 2510  <|@ instruction rcx|QWORD = MOVE stack:112|QWORD moveKind: QWORD <|@ <|@
      nr 2512  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2514  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2516  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2518  <|@ instruction JUMP ~[] destination: B237 -> B238 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  818  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  820  <|@ instruction rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr  822  <|@ instruction rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD <|@ <|@
      nr  824  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD <|@ <|@
      nr  826  <|@ instruction TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  828  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  830  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  832  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  834  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B60" "B62" 
    successors "B67" "B66" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  860  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD <|@ <|@
      nr  862  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  868  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  864  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  876  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  878  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr  880  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  882  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B64" 
    successors "B70" "B69" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  884  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  886  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD <|@ <|@
      nr  888  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  894  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  890  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B70" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  898  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  902  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr  904  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr  906  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction JUMP ~[] destination: B69 -> B70 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" "B67" 
    successors "B73" "B72" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  910  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  912  <|@ instruction rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD <|@ <|@
      nr  914  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  920  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  916  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  924  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  928  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr  930  <|@ instruction rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr  932  <|@ instruction r10|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  934  <|@ instruction JUMP ~[] destination: B72 -> B73 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" "B70" 
    successors "B74" "B75" 
    xhandlers
    flags 
    probability 4582432447947766783
    begin_IR
      LIR
      nr  936  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  938  <|@ instruction rsi|QWORD = DEC rsi|QWORD size: QWORD <|@ <|@
      nr  940  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr  942  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4580738641312931071
    begin_IR
      LIR
      nr  950  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  952  <|@ instruction MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr  954  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  956  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B129"
    from_bci -1
    to_bci -1
    predecessors "B128" 
    successors "B130" "B131" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1468  <|@ instruction rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 1470  <|@ instruction rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1472  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD <|@ <|@
      nr 1474  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1476  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B130"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B134" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1478  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1480  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1482  <|@ instruction JUMP ~[] destination: B130 -> B134 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B134"
    from_bci -1
    to_bci -1
    predecessors "B130" "B132" 
    successors "B137" "B136" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1506  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1508  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr 1510  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1516  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1512  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B136"
    from_bci -1
    to_bci -1
    predecessors "B134" 
    successors "B137" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1524  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 1526  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD <|@ <|@
      nr 1528  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1530  <|@ instruction JUMP ~[] destination: B136 -> B137 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B137"
    from_bci -1
    to_bci -1
    predecessors "B136" "B134" 
    successors "B140" "B139" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1532  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1534  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr 1536  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1542  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1538  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B139"
    from_bci -1
    to_bci -1
    predecessors "B137" 
    successors "B140" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1546  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1550  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 1552  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD <|@ <|@
      nr 1554  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1556  <|@ instruction JUMP ~[] destination: B139 -> B140 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B140"
    from_bci -1
    to_bci -1
    predecessors "B139" "B137" 
    successors "B143" "B142" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1558  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1560  <|@ instruction rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr 1562  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1568  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1564  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B142"
    from_bci -1
    to_bci -1
    predecessors "B140" 
    successors "B143" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1572  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1576  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 1578  <|@ instruction rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD <|@ <|@
      nr 1580  <|@ instruction r10|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 1582  <|@ instruction JUMP ~[] destination: B142 -> B143 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B143"
    from_bci -1
    to_bci -1
    predecessors "B142" "B140" 
    successors "B144" "B145" 
    xhandlers
    flags 
    probability 4582426109382512706
    begin_IR
      LIR
      nr 1584  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 1586  <|@ instruction rdx|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr 1588  <|@ instruction CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr 1590  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B145"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4580733887388990514
    begin_IR
      LIR
      nr 1598  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1600  <|@ instruction MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 1602  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1604  <|@ instruction JUMP ~[] destination: B145 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B218"
    from_bci -1
    to_bci -1
    predecessors "B217" 
    successors "B219" "B220" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2346  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2348  <|@ instruction r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD <|@ <|@
      nr 2350  <|@ instruction r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2352  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD <|@ <|@
      nr 2354  <|@ instruction TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2356  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B219"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B223" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2360  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2362  <|@ instruction JUMP ~[] destination: B219 -> B223 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B223"
    from_bci -1
    to_bci -1
    predecessors "B219" "B221" 
    successors "B226" "B225" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2386  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2388  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD <|@ <|@
      nr 2390  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2396  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 2392  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B226 falseDestination: B223 -> B225 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B225"
    from_bci -1
    to_bci -1
    predecessors "B223" 
    successors "B226" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2400  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2404  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU <|@ <|@
      nr 2406  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD <|@ <|@
      nr 2408  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2410  <|@ instruction JUMP ~[] destination: B225 -> B226 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B226"
    from_bci -1
    to_bci -1
    predecessors "B225" "B223" 
    successors "B229" "B228" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2412  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2414  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD <|@ <|@
      nr 2416  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2422  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 2418  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B229 falseDestination: B226 -> B228 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B228"
    from_bci -1
    to_bci -1
    predecessors "B226" 
    successors "B229" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2426  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2430  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ <|@ <|@
      nr 2432  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD <|@ <|@
      nr 2434  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2436  <|@ instruction JUMP ~[] destination: B228 -> B229 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B229"
    from_bci -1
    to_bci -1
    predecessors "B228" "B226" 
    successors "B232" "B231" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2438  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2440  <|@ instruction rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD <|@ <|@
      nr 2442  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2448  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 2444  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B231"
    from_bci -1
    to_bci -1
    predecessors "B229" 
    successors "B232" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2452  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2456  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD <|@ <|@
      nr 2458  <|@ instruction rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD <|@ <|@
      nr 2460  <|@ instruction r8|QWORD = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr 2462  <|@ instruction JUMP ~[] destination: B231 -> B232 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B232"
    from_bci -1
    to_bci -1
    predecessors "B231" "B229" 
    successors "B237" "B234" 
    xhandlers
    flags 
    probability 4582291408511828341
    begin_IR
      LIR
      nr 2464  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2466  <|@ instruction r10|QWORD = DEC r10|QWORD size: QWORD <|@ <|@
      nr 2468  <|@ instruction CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 2470  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B237 falseDestination: B232 -> B234 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B234"
    from_bci -1
    to_bci -1
    predecessors "B232" 
    successors "B237" 
    xhandlers
    flags 
    probability 4580632861735977240
    begin_IR
      LIR
      nr 2476  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2478  <|@ instruction MOV (x: [r11|QWORD[.] + r8|QWORD * 2], y: r12|ILLEGAL) size: WORD <|@ <|@
      nr 2480  <|@ instruction JUMP ~[] destination: B234 -> B237 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B161"
    from_bci -1
    to_bci -1
    predecessors "B160" 
    successors "B168" 
    xhandlers
    flags 
    probability 4578169741069550642
    begin_IR
      LIR
      nr 1760  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1762  <|@ instruction r14|DWORD = MOVE rdx|DWORD moveKind: DWORD <|@ <|@
      nr 1764  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1766  <|@ instruction JUMP ~[] destination: B161 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B171"
    from_bci -1
    to_bci -1
    predecessors "B170" 
    successors "B173" 
    xhandlers
    flags 
    probability 4576798227856352456
    begin_IR
      LIR
      nr 1872  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1874  <|@ instruction stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1876  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1878  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1880  <|@ instruction rdx|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1882  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1884  <|@ st <@st|@reference-map: [stack:44, stack:56]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:80|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: r13|DWORD int[4|0x4] r14|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: stack:72|QWORD[.] 
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26] <|@ <|@
      nr 1886  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1888  <|@ instruction r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD <|@ <|@
      nr 1890  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 1892  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1894  <|@ instruction JUMP ~[] destination: B171 -> B173 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B242"
    from_bci -1
    to_bci -1
    predecessors "B238" "B240" 
    successors 
    xhandlers
    flags 
    probability 4581273604453346457
    begin_IR
      LIR
      nr 2552  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2528  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2530  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 2554  <|@ instruction MOV [r15|QWORD + 668] y: -224097 size: DWORD <|@ <|@
      nr 2556  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2558  <|@ st <@st|@reference-map: [stack:8, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24]
locals: stack:72|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:24, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B89"
    from_bci -1
    to_bci -1
    predecessors "B85" "B87" 
    successors 
    xhandlers
    flags 
    probability 4581118238037550581
    begin_IR
      LIR
      nr 1102  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1104  <|@ instruction MOV [r15|QWORD + 668] y: -239457 size: DWORD <|@ <|@
      nr 1106  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1108  <|@ st <@st|@reference-map: [stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:48, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr  270  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  272  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  274  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  276  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr  278  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  280  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0] <|@ <|@
      nr  282  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  284  <|@ instruction r11|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr  286  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  288  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  290  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr  292  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  294  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr  296  <|@ instruction r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD <|@ <|@
      nr  298  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  300  <|@ instruction JUMP ~[] destination: B16 -> B18 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B22" 
    xhandlers
    flags 
    probability 4576630837749480606
    begin_IR
      LIR
      nr  358  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  360  <|@ instruction r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  362  <|@ instruction r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  364  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  366  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  368  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  370  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr  372  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  376  <|@ instruction JUMP ~[] destination: B20 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B164"
    from_bci -1
    to_bci -1
    predecessors "B153" "B90" 
    successors "B165" "B166" 
    xhandlers
    flags 
    probability 4576798227856352455
    begin_IR
      LIR
      nr 1780  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1782  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1784  <|@ st <@st|@reference-map: [stack:56]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 23]
stack: stack:72|QWORD[.] 
locals: - 
>@ <|@ instruction rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23] <|@ <|@
      nr 1786  <|@ instruction rsi|DWORD = LZCNT rax|DWORD size: DWORD <|@ <|@
      nr 1788  <|@ instruction r10|DWORD = MOVE input: int[32|0x20] <|@ <|@
      nr 1790  <|@ instruction r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1792  <|@ instruction r11|DWORD = MOVE input: int[35|0x23] <|@ <|@
      nr 1794  <|@ instruction r11|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD <|@ <|@
      nr 1796  <|@ instruction TEST r11|DWORD y: -4 size: DWORD <|@ <|@
      nr 1798  <|@ instruction BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B166"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B167" 
    xhandlers
    flags 
    probability 4574924301083436718
    begin_IR
      LIR
      nr 1812  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1814  <|@ instruction rdx|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1816  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1818  <|@ instruction r10|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr 1820  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1822  <|@ instruction JUMP ~[] destination: B166 -> B167 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B96"
    from_bci -1
    to_bci -1
    predecessors "B91" "B92" 
    successors "B97" 
    xhandlers
    flags 
    probability 4580956040382648891
    begin_IR
      LIR
      nr 1158  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1160  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1162  <|@ st <@st|@reference-map: [stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr 1164  <|@ instruction rdi|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1166  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1168  <|@ instruction JUMP ~[] destination: B96 -> B97 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B299"
    from_bci -1
    to_bci -1
    predecessors "B298" 
    successors "B301" 
    xhandlers
    flags 
    probability 4576172281173459212
    begin_IR
      LIR
      nr 3068  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3070  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3072  <|@ instruction r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>} // MoveResolver resolve mapping <|@ <|@
      nr 3074  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 3076  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 3078  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 3080  <|@ st <@st|@reference-map: [r13:0, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: stack:72|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 3082  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3084  <|@ instruction rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3086  <|@ instruction JUMP ~[] destination: B299 -> B301 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B62" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  836  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  838  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr  840  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  842  <|@ instruction JUMP ~[] destination: B61 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B61" "B62" 
    successors "B64" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  846  <|@ instruction J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  848  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr  850  <|@ instruction CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD <|@ <|@
      nr  852  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B64 falseDestination: B62 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B41" "B44" 
    successors "B46" "B44" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4582432447947766783
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  704  <|@ instruction xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  706  <|@ instruction J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  708  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr  710  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr  712  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B73" 
    successors "B78" 
    xhandlers
    flags 
    probability 4573425248693025791
    begin_IR
      LIR
      nr  944  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  946  <|@ instruction r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  948  <|@ instruction JUMP ~[] destination: B74 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B114"
    from_bci -1
    to_bci -1
    predecessors "B111" "B114" 
    successors "B116" "B114" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4582426109382512707
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1352  <|@ instruction xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1354  <|@ instruction J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1356  <|@ instruction r11|QWORD = LEA [r11|QWORD + 16] size: QWORD <|@ <|@
      nr 1358  <|@ instruction CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD <|@ <|@
      nr 1360  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B114 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B131"
    from_bci -1
    to_bci -1
    predecessors "B129" 
    successors "B132" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1486  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 1488  <|@ instruction r10|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 1490  <|@ instruction JUMP ~[] destination: B131 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B132"
    from_bci -1
    to_bci -1
    predecessors "B131" "B132" 
    successors "B134" "B132" 
    xhandlers
    flags "llh" 
    loop_index 3
    loop_depth 1
    probability 4582426109382512706
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 1494  <|@ instruction J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 1496  <|@ instruction r10|QWORD = LEA [r10|QWORD + 16] size: QWORD <|@ <|@
      nr 1498  <|@ instruction CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 1500  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B134 falseDestination: B132 -> B132 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B144"
    from_bci -1
    to_bci -1
    predecessors "B143" 
    successors "B148" 
    xhandlers
    flags 
    probability 4573418910127771714
    begin_IR
      LIR
      nr 1592  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1594  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1596  <|@ instruction JUMP ~[] destination: B144 -> B148 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B220"
    from_bci -1
    to_bci -1
    predecessors "B218" 
    successors "B221" 
    xhandlers
    flags 
    probability 4573284209257087349
    begin_IR
      LIR
      nr 2364  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2366  <|@ instruction xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0> <|@ <|@
      nr 2368  <|@ instruction r8|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr 2370  <|@ instruction JUMP ~[] destination: B220 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B221"
    from_bci -1
    to_bci -1
    predecessors "B220" "B221" 
    successors "B223" "B221" 
    xhandlers
    flags "llh" 
    loop_index 6
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2374  <|@ instruction J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2376  <|@ instruction r8|QWORD = LEA [r8|QWORD + 16] size: QWORD <|@ <|@
      nr 2378  <|@ instruction CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr 2380  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B223 falseDestination: B221 -> B221 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B203"
    from_bci -1
    to_bci -1
    predecessors "B200" "B203" 
    successors "B205" "B203" 
    xhandlers
    flags "llh" 
    loop_index 5
    loop_depth 1
    probability 4582291408511828341
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr 2232  <|@ instruction xmm0|V256_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2234  <|@ instruction J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr 2236  <|@ instruction r9|QWORD = LEA [r9|QWORD + 16] size: QWORD <|@ <|@
      nr 2238  <|@ instruction CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD <|@ <|@
      nr 2240  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B205 falseDestination: B203 -> B203 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B34" 
    successors "B39" 
    xhandlers
    flags 
    probability 4572558019695989906
    begin_IR
      LIR
      nr  644  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  640  <|@ instruction stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD <|@ <|@
      nr  646  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr  648  <|@ instruction rdx|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  650  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  652  <|@ instruction r14|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr  654  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr  656  <|@ st <@st|@reference-map: [stack:52, stack:56, stack:64, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:64|QWORD[.] stack:72|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:64|QWORD[.] stack:48|QWORD[.] r14|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:64|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14] <|@ <|@
      nr  658  <|@ instruction JUMP ~[] destination: B38 -> B39 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B108"
    from_bci -1
    to_bci -1
    predecessors "B103" "B104" 
    successors "B109" 
    xhandlers
    flags 
    probability 4572552492467088352
    begin_IR
      LIR
      nr 1294  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1296  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 1298  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 1300  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 1302  <|@ st <@st|@reference-map: [stack:32, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: stack:72|QWORD[.] stack:96|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: stack:72|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: stack:72|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19] <|@ <|@
      nr 1306  <|@ instruction JUMP ~[] destination: B108 -> B109 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B197"
    from_bci -1
    to_bci -1
    predecessors "B192" "B193" 
    successors "B198" 
    xhandlers
    flags 
    probability 4572435033307851585
    begin_IR
      LIR
      nr 2172  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2168  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2174  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>} <|@ <|@
      nr 2176  <|@ instruction rdx|DWORD = MOVE r13|DWORD moveKind: DWORD <|@ <|@
      nr 2178  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr 2180  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2182  <|@ st <@st|@reference-map: [r14:0, stack:8, stack:32, stack:44, stack:56]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r14|QWORD[.] stack:96|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; stack:120|QWORD[.] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29] <|@ <|@
      nr 2184  <|@ instruction rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr 2186  <|@ instruction JUMP ~[] destination: B197 -> B198 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   30  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   32  <|@ instruction rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   34  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr   36  <|@ st <@st|@reference-map: [stack:80, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 11]
stack: stack:48|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11] <|@ <|@
      nr   38  <|@ instruction r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   40  <|@ st <@st|@reference-map: [r13:0, stack:80, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 14]
stack: stack:48|QWORD[.] r13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:14, 11] <|@ <|@
      nr   42  <|@ instruction TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD <|@ <|@
      nr   48  <|@ instruction r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B13" 
    xhandlers
    flags 
    probability 4569022690841056000
    begin_IR
      LIR
      nr   56  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   60  <|@ instruction rdi|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   62  <|@ instruction r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   64  <|@ instruction rsi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr   66  <|@ instruction MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD <|@ <|@
      nr   68  <|@ instruction r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   70  <|@ instruction MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   72  <|@ instruction rdi|DWORD = LEA [r10|DWORD - 16] size: DWORD <|@ <|@
      nr   74  <|@ instruction CMP rdi|DWORD y: 1 size: DWORD <|@ <|@
      nr   76  <|@ instruction BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B5" "B6" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr   78  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   80  <|@ instruction stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr   82  <|@ instruction rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   84  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD <|@ <|@
      nr   86  <|@ instruction rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD <|@ <|@
      nr   88  <|@ instruction CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD <|@ <|@
      nr   90  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr  110  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  112  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  114  <|@ instruction AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0 <|@ <|@
      nr  116  <|@ instruction rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  120  <|@ instruction JUMP ~[] destination: B6 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" "B5" 
    successors "B8" "B12" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  122  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  118  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  124  <|@ instruction r11|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD <|@ <|@
      nr  128  <|@ instruction MOV [rdi|QWORD[*]] y: 1 size: QWORD <|@ <|@
      nr  130  <|@ instruction MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed} <|@ <|@
      nr  132  <|@ instruction J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  134  <|@ instruction CMP r10|DWORD y: 17 size: DWORD <|@ <|@
      nr  136  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors "B9" "B10" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  138  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  140  <|@ instruction r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  142  <|@ instruction r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr  144  <|@ instruction rsi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  146  <|@ instruction rdx|QWORD = MOV r10|DWORD size: DWORD <|@ <|@
      nr  148  <|@ instruction rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  150  <|@ instruction rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD <|@ <|@
      nr  152  <|@ instruction stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  156  <|@ instruction rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  158  <|@ instruction rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD <|@ <|@
      nr  160  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  162  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4568633889767522957
    begin_IR
      LIR
      nr  184  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  186  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  188  <|@ instruction AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0 <|@ <|@
      nr  190  <|@ instruction rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  198  <|@ instruction JUMP ~[] destination: B10 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" "B9" 
    successors "B84" 
    xhandlers
    flags 
    probability 4568699419739656397
    begin_IR
      LIR
      nr  200  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  194  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  196  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  202  <|@ instruction rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD <|@ <|@
      nr  204  <|@ instruction rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD <|@ <|@
      nr  206  <|@ instruction MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD <|@ <|@
      nr  208  <|@ instruction MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed} <|@ <|@
      nr  210  <|@ instruction MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD <|@ <|@
      nr  212  <|@ instruction r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3 <|@ <|@
      nr  214  <|@ instruction MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD <|@ <|@
      nr  216  <|@ instruction r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  218  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  220  <|@ instruction rsi|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  222  <|@ instruction r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rdi|DWORD = MOVE input: int[16|0x10] <|@ <|@
      nr  226  <|@ instruction JUMP ~[] destination: B11 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B165"
    from_bci -1
    to_bci -1
    predecessors "B164" 
    successors "B168" 
    xhandlers
    flags 
    probability 4568176288968000960
    begin_IR
      LIR
      nr 1800  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1802  <|@ instruction r14|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1804  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1806  <|@ instruction r10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 1808  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1810  <|@ instruction JUMP ~[] destination: B165 -> B168 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B247"
    from_bci -1
    to_bci -1
    predecessors "B246" 
    successors "B249" 
    xhandlers
    flags 
    probability 4561357127623488149
    begin_IR
      LIR
      nr 2618  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2620  <|@ instruction r13|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr 2622  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2624  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr 2626  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr 2628  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr 2630  <|@ st <@st|@reference-map: [r14:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r14|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29] <|@ <|@
      nr 2632  <|@ instruction rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2634  <|@ instruction r14|QWORD = MOVE r13|QWORD moveKind: QWORD <|@ <|@
      nr 2636  <|@ instruction JUMP ~[] destination: B247 -> B249 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B28" 
    xhandlers
    flags 
    probability 4557307913614559813
    begin_IR
      LIR
      nr  454  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  456  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  458  <|@ instruction rdx|DWORD = MOVE input: int[14|0xe] <|@ <|@
      nr  460  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  462  <|@ st <@st|@reference-map: [stack:80, stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 14]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} stack:48|QWORD[.] 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14] <|@ <|@
      nr  464  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  466  <|@ instruction r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  468  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  470  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  472  <|@ instruction JUMP ~[] destination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B78" "B80" 
    successors 
    xhandlers
    flags 
    probability 4561768151792078514
    begin_IR
      LIR
      nr 1012  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  994  <|@ instruction r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1014  <|@ instruction MOV [r15|QWORD + 668] y: -317281 size: DWORD <|@ <|@
      nr 1016  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1018  <|@ st <@st|@reference-map: [r8:0, stack:80, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] stack:48|QWORD[.] stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B152"
    from_bci -1
    to_bci -1
    predecessors "B148" "B150" 
    successors 
    xhandlers
    flags 
    probability 4561760078995370921
    begin_IR
      LIR
      nr 1660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1642  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1662  <|@ instruction MOV [r15|QWORD + 668] y: -264033 size: DWORD <|@ <|@
      nr 1664  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1666  <|@ st <@st|@reference-map: [r14:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26]
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r14|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:26, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B159"
    from_bci -1
    to_bci -1
    predecessors "B154" "B155" 
    successors "B160" 
    xhandlers
    flags 
    probability 4561504030959518352
    begin_IR
      LIR
      nr 1726  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1722  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1730  <|@ st <@st|@reference-map: [r14:0, stack:56, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r14|QWORD[.] - int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r14|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19] <|@ <|@
      nr 1732  <|@ instruction r13|DWORD = MOVE rax|DWORD moveKind: DWORD <|@ <|@
      nr 1734  <|@ instruction r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1736  <|@ instruction xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0> <|@ <|@
      nr 1738  <|@ instruction xmm1|V64_WORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr 1740  <|@ instruction xmm0|V32_WORD = L oc: SIMD<0,0> <|@ <|@
      nr 1742  <|@ instruction JUMP ~[] destination: B159 -> B160 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B25" 
    xhandlers
    flags 
    probability 4549304361639224109
    begin_IR
      LIR
      nr  236  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  238  <|@ instruction stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction r11|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr  242  <|@ instruction xmm3|V256_QWORD = L oc: SIMD<0,0,0,0> <|@ <|@
      nr  244  <|@ instruction r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>} <|@ <|@
      nr  246  <|@ instruction JUMP ~[] destination: B13 -> B25 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B4" 
    successors "B7" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr   92  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   94  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr   96  <|@ instruction rdx|DWORD = MOVE input: int[8|0x8] <|@ <|@
      nr   98  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - r13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11] <|@ <|@
      nr  102  <|@ instruction rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  104  <|@ instruction r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  108  <|@ instruction JUMP ~[] destination: B5 -> B7 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B8" 
    successors "B11" 
    xhandlers
    flags 
    probability 4539009061567799238
    begin_IR
      LIR
      nr  164  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  166  <|@ instruction r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD <|@ <|@
      nr  168  <|@ instruction rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>} <|@ <|@
      nr  170  <|@ instruction rdx|DWORD = MOVE input: int[2|0x2] <|@ <|@
      nr  172  <|@ instruction rcx|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  174  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.String.getChars(String.java:827) [bci: 61]
locals: - - - - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - stack:52|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]} Ljava/lang/StringBuilder; int[0|0x0] r13|QWORD[.] 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14] <|@ <|@
      nr  176  <|@ instruction rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  182  <|@ instruction JUMP ~[] destination: B9 -> B11 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B7" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  228  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  230  <|@ instruction MOV [r15|QWORD + 668] y: -288865 size: DWORD <|@ <|@
      nr  232  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  234  <|@ st <@st|@reference-map: [r13:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:643) [bci: 19]
locals: - r13|QWORD[.] 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:19, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B251"
    from_bci -1
    to_bci -1
    predecessors "B250" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2676  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2678  <|@ instruction r10|DWORD = MOVE input: int[-229395|0xfffffffffffc7fed] <|@ <|@
      nr 2680  <|@ instruction JUMP ~[] destination: B251 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B252"
    from_bci -1
    to_bci -1
    predecessors "B245" "B251" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr 2682  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr 2684  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr 2686  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2688  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48]
locals: r8|QWORD[.] - stack:80|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
>@ <|@ instruction DEOPT info [bci:48, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B307"
    from_bci -1
    to_bci -1
    predecessors "B186" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3154  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3156  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3158  <|@ instruction r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3160  <|@ instruction MOV [r15|QWORD + 668] y: -210971 size: DWORD <|@ <|@
      nr 3162  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3164  <|@ st <@st|@reference-map: [r14:0, stack:8]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15]
locals: rbx|DWORD int[4|0x4] stack:120|QWORD[.] int[0|0x0] - rdx|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - stack:120|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r14|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:15, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   50  <|@ instruction MOV [r15|QWORD + 668] y: -279563 size: DWORD <|@ <|@
      nr   52  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   54  <|@ st <@st|@reference-map: [r11:0, r13:0, stack:96]
live-base-pointers: []
java.lang.Class.getName(Class.java:642) [bci: 14]
stack: r11|QWORD[.] r13|QWORD[.] 
locals: - - 
java.lang.Object.toString(Object.java:236) [bci: 11]
stack: vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} 
locals: stack:32|QWORD[.] 
vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}} Ljava/lang/StringBuilder; int[0|0x0] vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} 
vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]} [C int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:14, 11] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B305"
    from_bci -1
    to_bci -1
    predecessors "B304" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 3134  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 3136  <|@ instruction stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr 3138  <|@ instruction MOV [r15|QWORD + 668] y: -230931 size: DWORD <|@ <|@
      nr 3140  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 3142  <|@ st <@st|@reference-map: [r8:0, stack:8]
live-base-pointers: []
java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32]
locals: rbx|DWORD int[4|0x4] stack:120|QWORD[.] int[0|0x0] - rsi|DWORD - int[15|0xf] 
java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31]
locals: - - - - stack:120|QWORD[.] 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:32, 31, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction r10|DWORD = MOVE input: int[-391265|0xfffffffffffa079f] <|@ <|@
      nr  566  <|@ instruction JUMP ~[] destination: B31 -> B32 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B29" "B31" 
    successors 
    xhandlers
    flags 
    probability 2359886204742139904
    begin_IR
      LIR
      nr  568  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  542  <|@ instruction rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  544  <|@ instruction r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD <|@ <|@
      nr  546  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  570  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  572  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  574  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r8:0, r13:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] rdx|QWORD[.] rax|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] r13|QWORD[.] r11|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 14]
locals: rsi|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 14] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B169"
    from_bci -1
    to_bci -1
    predecessors "B168" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1842  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1844  <|@ instruction stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD <|@ <|@
      nr 1846  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581] <|@ <|@
      nr 1848  <|@ instruction MOV [r15|QWORD + 668] y: -214795 size: DWORD <|@ <|@
      nr 1850  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr 1852  <|@ st <@st|@reference-map: [r8:0]
live-base-pointers: []
java.lang.Math.max(Math.java:1252) [bci: 10]
stack: stack:80|DWORD 
locals: - - 
java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16]
locals: r13|DWORD int[4|0x4] r14|DWORD - - 
java.lang.Integer.toHexString(Integer.java:233) [bci: 2]
locals: - 
java.lang.Object.toString(Object.java:236) [bci: 26]
stack: r8|QWORD[.] 
locals: - 
>@ <|@ instruction DEOPT info [bci:10, 16, 2, 26] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B245"
    from_bci -1
    to_bci -1
    predecessors "B244" 
    successors "B252" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2602  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2604  <|@ instruction r10|DWORD = MOVE input: int[-227091|0xfffffffffffc88ed] <|@ <|@
      nr 2606  <|@ instruction JUMP ~[] destination: B245 -> B252 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B191"
    from_bci -1
    to_bci -1
    predecessors "B190" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 2090  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 2092  <|@ instruction rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2094  <|@ instruction r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2096  <|@ instruction r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD <|@ <|@
      nr 2098  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 2100  <|@ instruction MOV [r15|QWORD + 668] y: -411233 size: DWORD <|@ <|@
      nr 2102  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 2104  <|@ st <@st|@reference-map: [rax:0, r8:0, r9:0]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] rax|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]} r10|DWORD 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 29]
locals: - 
vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]} Ljava/lang/String; r9|QWORD[.] int[0|0x0] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 29] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B18" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  422  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  424  <|@ instruction MOV [r15|QWORD + 668] y: -302177 size: DWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  428  <|@ st <@st|@reference-map: [stack:96]
live-base-pointers: []
java.lang.Object.toString(Object.java:236) [bci: 0]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B102"
    from_bci -1
    to_bci -1
    predecessors "B101" 
    successors 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr 1222  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr 1224  <|@ instruction r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1226  <|@ instruction r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr 1228  <|@ instruction MOV [r15|QWORD + 668] y: -401249 size: DWORD <|@ <|@
      nr 1230  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr 1232  <|@ st <@st|@reference-map: [r8:0, r10:0, stack:96]
live-base-pointers: []
java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20]
stack: r8|QWORD[.] r10|QWORD[.] r13|DWORD 
locals: - - 
java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21]
locals: r8|QWORD[.] Object[String:"@"] int[1|0x1] 
java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2]
locals: r8|QWORD[.] - 
java.lang.Object.toString(Object.java:236) [bci: 19]
locals: stack:32|QWORD[.] 
>@ <|@ instruction DEOPT info [bci:20, 21, 2, 19] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B32" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  538  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  540  <|@ instruction r10|DWORD = MOVE input: int[-308755|0xfffffffffffb49ed] <|@ <|@
      nr  548  <|@ instruction JUMP ~[] destination: B29 -> B32 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: new           #1          // java.lang.StringBuilder
     3: dup           
     4: invokespecial #0          // java.lang.StringBuilder.<init>:()void
     7: aload_0       
     8: invokevirtual #1          // getClass:()java.lang.Class
    11: invokevirtual #2          // java.lang.Class.getName:()java.lang.String
    14: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    17: ldc           #6          // "@"
    19: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    22: aload_0       
    23: invokevirtual #4          // hashCode:()int
    26: invokestatic  #5          // java.lang.Integer.toHexString:(int)java.lang.String
    29: invokevirtual #3          // java.lang.StringBuilder.append:(java.lang.String)java.lang.StringBuilder
    32: invokevirtual #6          // java.lang.StringBuilder.toString:()java.lang.String
    35: areturn       
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec7848896c24704889742460448b5608448954245c4e8b1cd568000000458b4314c5f9efc0c5f1efc9c5e9efd249b9addeaddeaddeaddec5e1efdb4585c00f848a110000468b2cc50c000000468b1ced0c000000418d7bf083ff010f8d6d080000498b7f60488d5730493b57700f87e80e0000498957600f1887f00000004c8bc7c7470c1000000048c70701000000c74708addeaddec5fe7f5f104183fb110f839514000049c1e503498bd0418bcb498d7d10488d7210488bd14c8944244044895c244ce80000000090498b7f60488d7718493b77700f87cb0e0000498977600f1887d80000004c8b6c2440448b74244c49b9addeaddeaddeadde488bf7498b91a8000000488917c74708addeadde4489770c4d8bc549c1e803448947104c8bc6458bde418bf64d8bd5bf100000004c89442438458b4a0c8bceffc18bd12bd748bbaddeaddeaddeadde83fa010f8d5305000085f60f8ce80d000041ffc9413bf10f8fdc0d0000448b5c245c4863fe6641c7447a1040004189480c4a3b1cddd00100000f854a0e0000488b742460488b3e488bd74883e2074883fa010f857f0e000048c1ef088bff85ff0f84710e0000f30fbdf7ba200000002bd641ba23000000442bd641f7c2fcffffff0f84e803000041c1ea02448bf2448bef458b58104585db0f84f4120000498b7f60418bf2d1e68d761783e6f88bd64803d7493b57700f87e10c0000498957600f188437c00000000f188437000100000f188437400100000f188437800100004489570c48c70701000000c74708addeadde4c8bcf498d7910418bca488d71f84885f60f8c77030000c5e9efd2c5fa7f1748c7c608000000488d51fc483bf2c5f1efc90f8f0c000000c4e1f97e0f48c7c604000000488d51fe483bf2c5f9efc00f8f09000000c5f97e0477488d7602488bd148ffca483bf20f8f05000000664489247748bfaddeaddeaddeadde418bd2418bdde9350000000f1f4400008bd383e20f0fbf545710664189547110f7c3f0ffffff0f842200000083fe010f8caa110000850500000000c1eb048bd68bf2ffce443bd677c7e959110000418b780c428b1cdd0c0000008bd74103d28bf22bf3418bc348c1e00383fe010f8d4d08000085ff0f8cef0b0000448b580c418bf3412bf23bfe0f8fdd0b000044895c242c4489542430488bf04863d7897c241c498d7910488d745610488bd14889442420e80000000090448b6c243044036c241c4c8b4424384589680c49beaddeaddeaddeadde4183fd010f8c95020000448b5c242c418bc3412bc585c00f8c9b100000498b4760498b77704181fdffffff000f83c8020000418bd5d1e28d521783e2f84863d2488bca4803c8483bce0f87ab02000049894f600f188402c00000000f188402000100000f188402400100000f188402800100004489680c48c70001000000c74008addeadde458bf3453bee418bf5410f4ff64863f64883fe010f8c9a0000004c8b542420488d50104d8d52104c8d5ef04d85db49c7c0000000000f8d9b0100004c8d5ef84d3bc30f8f13000000c4817a6f0442c4a17a7f04424d8d58084d8bc34c8d5efc4d3bc30f8f13000000c481f96e0442c4a1f97e04424d8d58044d8bc34c8d5efe4d3bc30f8f13000000c481796e0442c4a1797e04424d8d58024d8bc34c8bde49ffcb4d3bc30f8f0a000000470fbf144266468914424963d5483bd60f8f5c000000498b7760488d5618493b57700f87550b0000498957600f1886d800000049beaddeaddeaddeadde488bd64d8b96a80000004c8916c74608addeadde48c1e80389460c44896610488bc2488b6c24704883c478850500000000c5f877c34c8d547010482bd6488d72f04885f60f8dbf00000049c7c300000000488d72f84c3bde0f8f11000000c5e9efd2c4817a7f145a498d73084c8bde488d72fc4c3bde0f8f11000000c5f1efc9c481f97e0c5a498d73044c8bde488d72fe4c3bde0f8f11000000c5f9efc0c481797e045a498d73024c8bde48ffca4c3bda0f8f22ffffff664789245ae918ffffff448bf2448bef41ba01000000e911fcffff48c7c600000000c5e9efd2e988fcffff0f1f8000000000660f1f440000c4817e6f0442c4a17e7f04424d8d40104d3bc37eebe94bfeffffc5f9efc049c7c3000000006666660f1f840000000000c4817e7f045a4d8d5b104c3bde7ef1e91effffff4585ed0f8ccf0e0000498b4760488d7018493b77700f87ca0c0000498977600f1880d8000000488bf0498b96a8000000488910c74008addeaddec7400caddeadde44896010488bc6488b6c24704883c478850500000000c5f877c348beaddeaddeaddeadde418bd5b900000000458bf3e80000000090e96efdffff44894c24304c89542420488b7424388bd10f1f8000000000e80000000090448be84585ed0f8c820e0000498b7760498b57704181fdffffff000f83a30a0000458bd541d1e2458d52174183e2f84d63d24d8bda4c03de4c3bda0f87830a00004d895f60410f188432c0000000410f18843200010000410f18843240010000410f1884328001000044896e0c48c70601000000c74608addeadde488bc6448b4c2430453be9418bf5410f4ff14863f64883fe010f8c9a0000004c8b542420488d5010498d4a104c8d56f04d85d249c7c3000000000f8d480900004c8d56f84d3bda0f8f13000000c4a17a6f0459c4a17a7f045a4d8d53084d8bda4c8d56fc4d3bda0f8f13000000c4a1f96e0459c4a1f97e045a4d8d53044d8bda4c8d56fe4d3bda0f8f13000000c4a1796e0459c4a1797e045a4d8d53024d8bda4c8bd649ffca4d3bda0f8f0a000000420fbf0c596642890c5a4963d5483bd60f8fb80500004c8b442438c5e9efd2c5f1efc9c5f9efc048be00e01b1701000000488bd048c1ea0341895010498bd048c1ea0944882432418b700c85f60f8c470b000041ffcd413bf50f8f3b0b000048bbaddeaddeaddeadde448b54245c4863d666c74450104000ffc64189700c4a3b1cd5d00100000f8559070000488b742460488b16488bca4883e1074883f9010f85100b000048c1ea088bd285d20f84020b0000448beaf3410fbdf5ba200000002bd6b9230000002bcef7c1fcffffff0f8416060000418bfd448bd1e903f9ffff458bf349c1e0034c8944245044895c244c498b7760488d5648493b57700f87470a0000498957600f1886080100000f1886480100000f1886880100000f1886c80100004c8bd64c89542440488d56184d8b89a80000004c890ec74608addeadde4489660c4c8bca49c1e90344894e10c746241000000048c7461801000000c74620addeaddec5fe7f5e28498bf24889542438418bd3666690e800000000904c8b6c2450458b750c448b5c244c463b1cf50c0000000f87ec0b000085c00f8c230b0000498b7760498b577081f8ffffff000f83bd070000448bd041d1e2458d52174183e2f84d63d24d8bc24c03c64c3bc20f879d0700004d894760410f188432c0000000410f18843200010000410f18843240010000410f1884328001000089460c48c70601000000c74608addeadde4489742434458bf3448be8488bc64183fd11bf10000000410f4cfd4863ff4883ff010f8c9a000000488b542438488d7010488d52104c8d57f04d85d249c7c3000000000f8d510600004c8d57f84d3bda0f8f13000000c4a17a6f045ac4a17a7f045e4d8d53084d8bda4c8d57fc4d3bda0f8f13000000c4a1f96e045ac4a1f97e045e4d8d53044d8bda4c8d57fe4d3bda0f8f13000000c4a1796e045ac4a1797e045e4d8d53024d8bda4c8bd749ffca4d3bda0f8f0a000000420fbf145a664289145e4963f5483bf70f8f600200004c8b542440c5e9efd2c5f1efc9c5f9efc048bf00e01b1701000000488bf048c1ee0341897210498bf248c1ee094488243e458b5a0c4585db0f8c64080000418bfd412bfe443bdf0f8f5508000044896c2430448b542434418bfa48c1e703488bf04963d3458bd6488d7f10488d745610498bd2488944243844895c242ce80000000090448b5c244c44035c242c4c8b4424404589580c418bf34c8b5424388b7c2430448b5c244ce9b8f5ffff4889442420895c241c48894c24104c894c240844895c242c4489542430488b7424380f1f440000e80000000090448be84585ed0f8c5e090000498b7760498b57704181fdffffff000f83e0050000418bcdd1e18d491783e1f84863c94c8bd14c03d64c3bd20f87c30500004d8957600f188431c00000000f188431000100000f188431400100000f1884318001000044896e0c48c70601000000c74608addeadde488bc68b5c241c4c8b742438443beb418bf50f4ff34863f64883fe010f8c9e000000448b5c242c4c8d50104e8d1cdd100000004c8d46f04d85c049c7c1000000000f8de80400004c8d46f84d3bc80f8f13000000c4817a6f044bc4817a7f044a4d8d41084d8bc84c8d46fc4d3bc80f8f13000000c481f96e044bc481f97e044a4d8d41044d8bc84c8d46fe4d3bc80f8f13000000c481796e044bc481797e044a4d8d41024d8bc84c8bc649ffc84d3bc80f8f0a000000470fbf1c4b6647891c4a4d63d54c3bd60f8f69010000c5e9efd2c5f1efc9c5f9efc048be00e01b17010000004c8bd049c1ea03458956104d8bc649c1e80945882430418b7e0c488b4c24104c8b4c2408448b5424304d8bc6e9fff5ffff488d547810482bf7488d7ef04885ff0f8d2a03000049c7c200000000488d7ef84c3bd7c5e9efd20f8f0d000000c4a17a7f1452498d7a084c8bd7488d7efc4c3bd7c5f1efc90f8f0d000000c4a1f97e0c52498d7a044c8bd7488d7efe4c3bd7c5f9efc00f8f0d000000c4a1797e0452498d7a024c8bd748ffce4c3bd60f8f0403000066468924524c8b542440e920fdffff488d4c7010482bd6488d72f04885f60f8d1003000049c7c200000000488d72f84c3bd6c5e9efd20f8f0d000000c4a17a7f1451498d72084c8bd6488d72fc4c3bd6c5f1efc90f8f0d000000c4a1f97e0c51498d72044c8bd6488d72fe4c3bd6c5f9efc00f8f0d000000c4a1797e0451498d72024c8bd648ffca4c3bd20f8fcd02000066468924514c8b442438e9c8f9ffff4c8d5c70104c2bd6498d72f04885f60f8db302000049c7c000000000498d72f84c3bc6c5e9efd20f8f0d000000c4817a7f1443498d70084c8bc6498d72fc4c3bc6c5f1efc90f8f0d000000c481f97e0c43498d70044c8bc6498d72fe4c3bc6c5f9efc00f8f0d000000c481797e0443498d70024c8bc649ffca4d3bc20f8f21feffff6647892443e917feffff448bf241ba01000000e9f4f2ffff44895c242c448954243048beaddeaddeaddeadde8b542430b900000000e800000000904c8bc8448b5c242c448b5424304c8b442438e91ef3ffff4c894c2408448954243041c7879c0200009f94fcff4d89a7a8020000e8000000009041c7879c0200009f58fcff4d89a7a8020000e80000000090458bf348beaddeaddeaddeaddeba08000000b901000000e80000000090488bf8458bdec5e1efdb49b9addeaddeaddeaddec5e9efd2c5f1efc9c5f9efc0448b54245c488b742460e9d7f0ffff4c8b6c2440448b74244c48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf8e91ef1ffff488b74246048b8ffffffffffffffff0f1f4000e80000000090f30fbdf041ba20000000442bd641bb23000000442bde41f7c3fcffffff0f84eb020000418bd28bf8458bd34c8b442438e9b0f1ffff488b742460e800000000908bf84c8b442438e978f1ffff4c8be849beaddeaddeaddeadde48beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0498bc5e98ef4ffffc5f9efc049c7c2000000006690c4a17e7f04524d8d52104c3bd77ef1e9bcfcffff660f1f440000660f1f440000c4a17e6f045ac4a17e7f045e4d8d5b104d3bda7eebe995f9ffff4c8b542440e921faffff660f1f440000660f1f440000c4a17e6f0459c4a17e7f045a4d8d5b104d3bda7eebe99ef6ffffc5f9efc049c7c2000000006666660f1f840000000000c4a17e7f04514d8d52104c3bd67ef1e9cdfcffff4c8b442438e900f7ffffc5f9efc049c7c0000000000f1f8000000000c4817e7f04434d8d40104c3bc67ef1e92efdffff660f1f440000660f1f440000c4817e6f044bc4817e7f044a4d8d49104d3bc87eebe9fefaffff448974243448beaddeaddeaddeadde8bd0b900000000458bf3448be8e80000000090e983f8ffff48beaddeaddeaddeadde418bd5b900000000e80000000090e99df5ffff4c8b44243848beaddeaddeaddeadde418bd5b9000000004d8bf0e800000000908b5c241ce956faffff498bf34c895c2450e800000000904c8be8458b750c4585f64c8b5c24500f848d02000048bf00e01b1701000000468b14f50c000000498bf548c1ee034189731449c1eb094588243b418d7af083ff010f8da0010000448954244c498b7f60498b7770488d5730483bd60f87a1010000498957600f1887f0000000c5e1efdb4c8bdfc7470c1000000048c70701000000c74708addeaddec5fe7f5f104183fa110f83b901000049c1e603498bf3418bd2498d7e10488d76104c895c2450e80000000090498b7760488d5618493b57700f8763010000498957600f1886d80000004c8b6c2450448b54244c49b9addeaddeaddeadde488bd6498b89a800000048890ec74608addeadde4489560c4d8bdd49c1eb0344895e104c8bc2458bda418bf24d8bd5bf10000000e935eeffff458bf2448be841ba010000004c8b442438e9cbeeffff4d8bee4d8bf048beaddeaddeaddeaddeba02000000b901000000e800000000904d8bf5e919f3ffff48beaddeaddeaddeaddeba0e000000b901000000e80000000090488bf0448b5c244cc5e1efdb49b9addeaddeaddeaddee9a4f5ffff4d8bc241c7879c0200009f28fbff4d89a7a8020000e800000000904d8bf041c7879c0200009ff8fbff4d89a7a8020000e800000000904d8bf0e80000000090448be84d8bc6c5e9efd2c5f1efc9c5f9efc0e9e1f4ffff4c896c2450458bdac5e1efdb49b9addeaddeaddeaddee9fcf4ffff48beaddeaddeaddeaddeba08000000b901000000e80000000090488bf8448b54244ce943feffff4c8b6c245048beaddeaddeaddeaddeba02000000b901000000e80000000090488bf0e986feffff41c7879c0200009f97fbff4d89a7a8020000e8000000009041baed7ffcff4589979c0200004d89a7a8020000e800000000904c894c24084d8bf041c7879c020000e5c7fcff4d89a7a8020000e8000000009041c7879c020000f5bbfbff4d89a7a8020000e800000000904c894c240841c7879c020000ed79fcff4d89a7a8020000e8000000009041ba9f07faff488b5424384c8b442440488b7424604589979c0200004d89a7a8020000e80000000090448954243049baaddeaddeaddeadde41c7879c020000f5b8fcff4d8997a8020000e8000000009041baed88fcffe93cffffff488b4424204c8b4c2408448b5424304c8b44243841c7879c0200009fb9f9ff4d89a7a8020000e8000000009041c7879c0200009f63fbff4d89a7a8020000e800000000904c8b4424384c8b54242041c7879c0200009fe0f9ff4d89a7a8020000e8000000009041baed49fbffe93affffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 57 10 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 62 12 r11|QWORD[.] = MOV [r10|DWORD * 8 + 104] size: QWORD  <||@
  Comment 70 14 r8|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 74 16 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 78 18 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 82 20 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 86 22 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 96 24 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 100 26 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 103 28 BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 109 block B14 null  <||@
  Comment 109 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 250 r13|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 117 252 r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 117 [rsi:0, r8:0, r13:0, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 254 rdi|DWORD = LEA [r11|DWORD - 16] size: DWORD  <||@
  Comment 129 256 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 132 258 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24  <||@
  Comment 138 block B15 null  <||@
  Comment 138 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 262 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 142 264 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 146 266 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 150 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 156 block B17 null  <||@
  Comment 156 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 304 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 160 306 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 167 308 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 167 310 JUMP ~[] destination: B17 -> B18  <||@
  Comment 167 block B18 null  <||@
  Comment 167 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 167 314 r8|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 170 316 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 177 318 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 184 320 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 184 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 191 322 J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 196 324 CMP r11|DWORD y: 17 size: DWORD  <||@
  Comment 200 326 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23  <||@
  Comment 206 block B19 null  <||@
  Comment 206 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 330 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 210 332 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 210 334 rdx|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 213 336 rcx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 216 338 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 220 340 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 224 342 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 227 344 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 232 346 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 237 348 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 237 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 243 350 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 247 352 rsi|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 251 354 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 255 356 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 261 block B21 null  <||@
  Comment 261 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 380 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 265 382 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 272 384 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 272 386 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 277 388 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 282 392 JUMP ~[] destination: B21 -> B22  <||@
  Comment 282 block B22 null  <||@
  Comment 282 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 282 390 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 282 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 292 396 rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 295 398 rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 302 400 MOV (x: [rdi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 305 402 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 305 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 312 404 MOV (x: [rdi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 316 406 r8|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 323 408 MOV (x: [rdi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 327 410 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 330 412 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 333 414 rsi|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 336 416 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 339 418 rdi|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 344 420 JUMP ~[] destination: B22 -> B84  <||@
  Comment 344 block B84 null  <||@
  Comment 344 1064 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 344 1066 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 349 1068 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 353 1070 rcx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 357 1072 rdx|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 361 1074 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 361 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 371 1076 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 374 1078 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101  <||@
  Comment 380 block B85 null  <||@
  Comment 380 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1082 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 382 1084 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87  <||@
  Comment 388 block B87 null  <||@
  Comment 388 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 1092 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 391 1094 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 394 1096 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B90  <||@
  Comment 400 block B90 null  <||@
  Comment 400 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 1112 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 405 1114 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 408 1116 MOV [r10|QWORD[.] + rdi|QWORD * 2 + 16] y: 64 size: WORD  <||@
  Comment 416 1118 MOV (x: [r8|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 420 1120 CMP (x: rbx|QWORD, y: [r11|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 428 1122 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B164  <||@
  Comment 434 block B91 null  <||@
  Comment 434 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 1126 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 439 1128 rdi|QWORD = MOV [rsi|QWORD[.]] size: QWORD  <||@
  Comment 442 1130 rdx|QWORD = AND rdi|QWORD y: 7 size: QWORD  <||@
  Comment 449 1132 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 453 1134 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B96  <||@
  Comment 459 block B92 null  <||@
  Comment 459 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1138 rdi|QWORD = SHR rdi|QWORD y: 8 size: QWORD  <||@
  Comment 463 1140 rdi|DWORD = MOV rdi|QWORD size: DWORD  <||@
  Comment 465 1142 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 467 1144 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B96 falseDestination: B92 -> B97  <||@
  Comment 473 block B97 null  <||@
  Comment 473 1170 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 473 1172 rsi|DWORD = LZCNT rdi|DWORD size: DWORD  <||@
  Comment 477 1174 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 482 1176 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 1178 r10|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 490 1180 r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 493 1182 TEST r10|DWORD y: -4 size: DWORD  <||@
  Comment 500 1184 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B167  <||@
  Comment 506 block B167 null  <||@
  Comment 506 1824 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 506 1826 r10|DWORD = SHR r10|DWORD y: 2 size: DWORD  <||@
  Comment 510 1828 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 513 1830 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 516 1832 JUMP ~[] destination: B167 -> B168  <||@
  Comment 516 block B168 null  <||@
  Comment 516 1834 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 516 1836 r11|DWORD[.] = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 520 1838 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 523 1840 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 529 block B170 null  <||@
  Comment 529 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 1856 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 533 1858 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 538 1860 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 541 1862 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 544 1864 rdx|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 546 1866 rdx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 549 1868 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 553 1870 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172  <||@
  Comment 559 block B172 null  <||@
  Comment 559 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 1898 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 563 1900 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 192] instr: 0  <||@
  Comment 571 1902 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 256] instr: 0  <||@
  Comment 579 1904 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 320] instr: 0  <||@
  Comment 587 1906 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 384] instr: 0  <||@
  Comment 595 1908 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 599 1910 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 606 1912 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 606 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 613 1914 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 613 1916 r9|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 616 1918 JUMP ~[] destination: B172 -> B173  <||@
  Comment 616 block B173 null  <||@
  Comment 616 1920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 616 1922 rdi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 620 1924 rcx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 623 1926 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 627 1928 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 630 1930 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175  <||@
  Comment 636 block B175 null  <||@
  Comment 636 1940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 1942 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 640 1944 J (address: [rdi|QWORD[.]], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 644 1946 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 651 1948 JUMP ~[] destination: B175 -> B176  <||@
  Comment 651 block B176 null  <||@
  Comment 651 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 651 1952 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 655 1954 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 658 1960 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 662 1956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B179 falseDestination: B176 -> B178  <||@
  Comment 668 block B178 null  <||@
  Comment 668 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 1968 J (address: [rdi|QWORD[.]], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 673 1970 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 680 1972 JUMP ~[] destination: B178 -> B179  <||@
  Comment 680 block B179 null  <||@
  Comment 680 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 680 1976 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 684 1978 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 687 1984 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 691 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B182 falseDestination: B179 -> B181  <||@
  Comment 697 block B181 null  <||@
  Comment 697 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 697 1992 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 702 1994 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 706 1996 JUMP ~[] destination: B181 -> B182  <||@
  Comment 706 block B182 null  <||@
  Comment 706 1998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 706 2000 rdx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 712 2002 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 715 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B185 falseDestination: B182 -> B184  <||@
  Comment 721 block B184 null  <||@
  Comment 721 2010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 2012 MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 726 2014 JUMP ~[] destination: B184 -> B185  <||@
  Comment 726 block B185 null  <||@
  Comment 726 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 2018 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 726 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 736 2020 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 739 2022 rbx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 742 2024 JUMP ~[] destination: B185 -> B186  <||@
  Comment 747 block B187 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 747 2034 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 2036 rdx|DWORD = AND rbx|DWORD y: 15 size: DWORD  <||@
  Comment 757 2038 rdx|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 762 2040 MOV (x: [r9|QWORD[.] + rsi|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 768 2042 TEST rbx|DWORD y: -16 size: DWORD  <||@
  Comment 774 2044 BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304  <||@
  Comment 780 block B304 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 780 3128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 3130 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 783 3132 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306  <||@
  Comment 789 block B306 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 789 3144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 3146 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26]  <||@
  Comment 789 [rdi:0, r8:0, r9:0, r11:0, stack:56]at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32, duringCall: false, rethrow: false]
              |0          |1           |2            |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |r9|QWORD[.]  |int[0|0x0]  |-  |rsi|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4           
     locals:  |-  |-  |-  |-  |r9|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 789 {infopoint: SAFEPOINT}  <||@
  Comment 789 11  <||@
  Comment 795 3148 rbx|DWORD = SHR rbx|DWORD y: 4 size: DWORD  <||@
  Comment 798 3150 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 800 3152 JUMP ~[] destination: B306 -> B186  <||@
  Comment 800 block B186 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 800 2026 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 800 2028 rsi|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 804 2030 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 807 2032 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307  <||@
  Comment 814 block B188 null  <||@
  Comment 814 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 814 2048 rdi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 818 2050 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 826 2052 rdx|DWORD = ADD (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 831 2054 rsi|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 835 2056 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 842 2058 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 845 2060 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B238 falseDestination: B188 -> B190  <||@
  Comment 851 block B238 null  <||@
  Comment 851 2520 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 851 2522 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 853 2524 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B242 falseDestination: B238 -> B240  <||@
  Comment 859 block B240 null  <||@
  Comment 859 2534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 2536 r11|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 863 2538 rsi|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 869 2540 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 871 2542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B242 falseDestination: B240 -> B243  <||@
  Comment 877 block B243 null  <||@
  Comment 877 2560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 2562 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 882 2564 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 887 2566 r9|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 887 2568 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 890 2570 rdx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 893 2572 stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 897 2574 rdi|QWORD = LEA [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 901 2576 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 906 2578 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 909 2580 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 914 2582 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 914 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 920 2584 r13|DWORD = ADD (x: stack:80|DWORD, y: stack:100|DWORD) size: DWORD  <||@
  Comment 930 2586 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 935 2588 MOV (x: [r8|QWORD[.] + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 939 2590 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 939 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 949 2592 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 953 2594 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250  <||@
  Comment 959 block B250 null  <||@
  Comment 959 2666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 959 2668 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 964 2670 rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 970 2672 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 972 2674 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253  <||@
  Comment 978 block B253 null  <||@
  Comment 978 2690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 2692 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 982 2694 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 986 2696 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 993 2698 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B258  <||@
  Comment 999 block B254 null  <||@
  Comment 999 2700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 2702 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1004 2704 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1007 2706 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1010 2708 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1013 2710 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1019 2712 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1022 2714 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B258 falseDestination: B254 -> B256  <||@
  Comment 1028 block B256 null  <||@
  Comment 1028 2720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 2722 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1032 2724 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1040 2726 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1048 2728 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1056 2730 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1064 2732 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1068 2734 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1075 2736 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1075 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1082 2738 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1082 2740 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1085 2742 JUMP ~[] destination: B256 -> B259  <||@
  Comment 1085 block B259 null  <||@
  Comment 1085 2762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1085 2764 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1088 2766 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1095 2768 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1098 2770 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1102 2772 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B278 falseDestination: B259 -> B261  <||@
  Comment 1108 block B261 null  <||@
  Comment 1108 2778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 2780 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1113 2782 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1117 2784 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1121 2786 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1125 2788 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1128 2794 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1135 2790 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B266 falseDestination: B261 -> B264  <||@
  Comment 1141 block B266 null  <||@
  Comment 1141 2820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1141 2822 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1145 2824 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1148 2826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B269 falseDestination: B266 -> B268  <||@
  Comment 1154 block B268 null  <||@
  Comment 1154 2832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1154 2834 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1160 2836 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1166 2838 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1170 2840 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1173 2842 JUMP ~[] destination: B268 -> B269  <||@
  Comment 1173 block B269 null  <||@
  Comment 1173 2844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 2846 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1177 2848 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1180 2850 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B272 falseDestination: B269 -> B271  <||@
  Comment 1186 block B271 null  <||@
  Comment 1186 2856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 2858 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1192 2860 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1198 2862 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1202 2864 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1205 2866 JUMP ~[] destination: B271 -> B272  <||@
  Comment 1205 block B272 null  <||@
  Comment 1205 2868 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1205 2870 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1209 2872 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1212 2874 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274  <||@
  Comment 1218 block B274 null  <||@
  Comment 1218 2880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 2882 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1224 2884 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1230 2886 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1234 2888 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1237 2890 JUMP ~[] destination: B274 -> B275  <||@
  Comment 1237 block B275 null  <||@
  Comment 1237 2892 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1237 2894 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1243 2896 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1246 2898 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277  <||@
  Comment 1252 block B277 null  <||@
  Comment 1252 2904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 2906 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1257 2908 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 1262 2910 JUMP ~[] destination: B277 -> B278  <||@
  Comment 1262 block B278 null  <||@
  Comment 1262 2912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 2914 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1265 2916 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1268 2918 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B298  <||@
  Comment 1274 block B298 null  <||@
  Comment 1274 3058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 3060 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1278 3062 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1282 3064 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1286 3066 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300  <||@
  Comment 1292 block B300 null  <||@
  Comment 1292 3088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1292 3090 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1296 3092 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1303 3094 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1303 3096 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1303 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1313 3098 JUMP ~[] destination: B300 -> B301  <||@
  Comment 1313 block B301 null  <||@
  Comment 1313 3100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1313 3102 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1316 3104 r10|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1323 3106 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 1326 3108 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1326 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1333 3110 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 1337 3112 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1340 3114 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1344 3116 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1347 3118 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1356 12  <||@
  Comment 1366 block B279 null  <||@
  Comment 1366 2920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 2922 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1371 2924 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1374 2926 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1378 2928 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1381 2930 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281  <||@
  Comment 1387 block B280 null  <||@
  Comment 1387 2932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 2934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1394 2936 JUMP ~[] destination: B280 -> B284  <||@
  Comment 1394 block B284 null  <||@
  Comment 1394 2960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1394 2962 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1398 2964 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1401 2966 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B287 falseDestination: B284 -> B286  <||@
  Comment 1407 block B286 null  <||@
  Comment 1407 2972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 2974 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1411 2976 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1417 2978 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1421 2980 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1424 2982 JUMP ~[] destination: B286 -> B287  <||@
  Comment 1424 block B287 null  <||@
  Comment 1424 2984 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1424 2986 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1428 2988 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1431 2990 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289  <||@
  Comment 1437 block B289 null  <||@
  Comment 1437 2996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1437 2998 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1441 3000 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1447 3002 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1451 3004 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1454 3006 JUMP ~[] destination: B289 -> B290  <||@
  Comment 1454 block B290 null  <||@
  Comment 1454 3008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1454 3010 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1458 3012 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1461 3014 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292  <||@
  Comment 1467 block B292 null  <||@
  Comment 1467 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1467 3022 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1471 3024 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1477 3026 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1481 3028 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1484 3030 JUMP ~[] destination: B292 -> B293  <||@
  Comment 1484 block B293 null  <||@
  Comment 1484 3032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1484 3034 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1487 3036 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1490 3038 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295  <||@
  Comment 1496 block B295 null  <||@
  Comment 1496 3044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 3046 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1501 3048 JUMP ~[] destination: B295 -> B298  <||@
  Comment 1506 block B98 null  <||@
  Comment 1506 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 1188 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1509 1190 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1512 1192 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1518 1194 JUMP ~[] destination: B98 -> B168  <||@
  Comment 1523 block B174 null  <||@
  Comment 1523 1932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 1934 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1530 1936 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1534 1938 JUMP ~[] destination: B174 -> B176  <||@
  Comment 1539 block B264 loop 7 depth 1 header:2549|LoopBegin  <||@
  Comment 1539 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1552 2806 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1558 2808 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1564 2810 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1568 2812 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1571 2814 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B266 falseDestination: B264 -> B264  <||@
  Comment 1578 block B281 null  <||@
  Comment 1578 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1578 2940 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1582 2942 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1589 2944 JUMP ~[] destination: B281 -> B282  <||@
  Comment 1589 block B282 loop 8 depth 1 header:2612|LoopBegin  <||@
  Comment 1589 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 2948 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1606 2950 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1610 2952 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1613 2954 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B284 falseDestination: B282 -> B282  <||@
  Comment 1620 block B244 null  <||@
  Comment 1620 2596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1620 2598 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1623 2600 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246  <||@
  Comment 1629 block B246 null  <||@
  Comment 1629 2608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 2610 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1633 2612 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1637 2614 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1641 2616 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248  <||@
  Comment 1647 block B248 null  <||@
  Comment 1647 2638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 2640 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1651 2642 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1658 2644 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1658 2646 JUMP ~[] destination: B248 -> B249  <||@
  Comment 1658 block B249 null  <||@
  Comment 1658 2648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1658 2650 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1661 2652 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1668 2654 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1671 2656 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1671 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1678 2658 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1678 {NarrowOop[char[0]{}]}  <||@
  Comment 1685 2660 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1689 2662 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1692 2664 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1701 12  <||@
  Comment 1711 block B258 null  <||@
  Comment 1711 2748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1711 2750 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1711 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1721 2752 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1724 2754 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1729 2756 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1732 2758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 1732 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1737 [stack:32, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:72|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1738 2760 JUMP ~[] destination: B258 -> B259  <||@
  Comment 1743 block B101 null  <||@
  Comment 1743 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1743 1206 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1748 1208 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 1210 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1758 1212 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1760 1214 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19]  <||@
  Comment 1760 9  <||@
  Comment 1767 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1772 [stack:32, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:72|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 1773 1216 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1776 1218 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1779 1220 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1785 block B103 null  <||@
  Comment 1785 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1785 1236 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1789 1238 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1793 1240 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 1800 1242 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B108  <||@
  Comment 1806 block B104 null  <||@
  Comment 1806 1244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 1246 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1812 1248 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 1816 1250 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1820 1252 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1823 1254 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1829 1256 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1832 1258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B108 falseDestination: B104 -> B106  <||@
  Comment 1838 block B106 null  <||@
  Comment 1838 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 1266 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1842 1268 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1851 1270 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1860 1272 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1869 1274 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1878 1276 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1882 1278 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1889 1280 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1889 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1896 1282 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1896 1284 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 1288 JUMP ~[] destination: B106 -> B109  <||@
  Comment 1899 block B109 null  <||@
  Comment 1899 1308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1899 1286 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1904 1310 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1907 1312 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 1914 1314 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1917 1316 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1921 1318 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B128 falseDestination: B109 -> B111  <||@
  Comment 1927 block B111 null  <||@
  Comment 1927 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 1326 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 1328 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1936 1330 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1940 1332 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1944 1334 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1947 1340 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1954 1336 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B116 falseDestination: B111 -> B114  <||@
  Comment 1960 block B116 null  <||@
  Comment 1960 1366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1960 1368 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1964 1370 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1967 1372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B119 falseDestination: B116 -> B118  <||@
  Comment 1973 block B118 null  <||@
  Comment 1973 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1973 1380 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1979 1382 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1985 1384 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1989 1386 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1992 1388 JUMP ~[] destination: B118 -> B119  <||@
  Comment 1992 block B119 null  <||@
  Comment 1992 1390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1992 1392 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1996 1394 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1999 1396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B122 falseDestination: B119 -> B121  <||@
  Comment 2005 block B121 null  <||@
  Comment 2005 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1404 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2011 1406 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2017 1408 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2021 1410 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2024 1412 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2024 block B122 null  <||@
  Comment 2024 1414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2024 1416 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2028 1418 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2031 1420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B125 falseDestination: B122 -> B124  <||@
  Comment 2037 block B124 null  <||@
  Comment 2037 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 1428 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2043 1430 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2049 1432 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2053 1434 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2056 1436 JUMP ~[] destination: B124 -> B125  <||@
  Comment 2056 block B125 null  <||@
  Comment 2056 1438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2056 1440 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2062 1442 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2065 1444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B128 falseDestination: B125 -> B127  <||@
  Comment 2071 block B127 null  <||@
  Comment 2071 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 1452 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2076 1454 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 2081 1456 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2081 block B128 null  <||@
  Comment 2081 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2081 1460 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2084 1462 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2087 1464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147  <||@
  Comment 2093 block B147 null  <||@
  Comment 2093 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2093 1612 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1614 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2102 1616 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2106 1618 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2110 1620 JUMP ~[] destination: B147 -> B148  <||@
  Comment 2110 block B148 null  <||@
  Comment 2110 1622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2110 1624 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2120 1626 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2127 1628 MOV (x: [r8|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2131 1630 rdx|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2138 1632 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2142 1634 rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2146 1636 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2148 1638 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B152 falseDestination: B148 -> B150  <||@
  Comment 2154 block B150 null  <||@
  Comment 2154 1646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 1648 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2157 1650 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2160 1652 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B153  <||@
  Comment 2166 block B153 null  <||@
  Comment 2166 1668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 1670 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 2166 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 2176 1672 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2181 1674 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2184 1676 MOV [rax|QWORD[.] + rdx|QWORD * 2 + 16] y: 64 size: WORD  <||@
  Comment 2191 1678 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 2193 1680 MOV (x: [r8|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 2197 1682 CMP (x: rbx|QWORD, y: [r10|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 2205 1684 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B164  <||@
  Comment 2211 block B154 null  <||@
  Comment 2211 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 1688 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2216 1690 rdx|QWORD = MOV [rsi|QWORD[.]] size: QWORD  <||@
  Comment 2219 1692 rcx|QWORD = AND rdx|QWORD y: 7 size: QWORD  <||@
  Comment 2226 1694 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 2230 1696 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B159  <||@
  Comment 2236 block B155 null  <||@
  Comment 2236 1698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2236 1700 rdx|QWORD = SHR rdx|QWORD y: 8 size: QWORD  <||@
  Comment 2240 1702 rdx|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 2242 1704 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2244 1706 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B159 falseDestination: B155 -> B157  <||@
  Comment 2250 block B157 null  <||@
  Comment 2250 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1716 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2253 1718 JUMP ~[] destination: B157 -> B160  <||@
  Comment 2253 block B160 null  <||@
  Comment 2253 1744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2253 1746 rsi|DWORD = LZCNT r13|DWORD size: DWORD  <||@
  Comment 2258 1748 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 2263 1750 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2265 1752 rcx|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 2270 1754 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2272 1756 TEST rcx|DWORD y: -4 size: DWORD  <||@
  Comment 2278 1758 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2284 block B162 null  <||@
  Comment 2284 1768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2284 1770 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2287 1772 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2290 1774 JUMP ~[] destination: B162 -> B167  <||@
  Comment 2295 block B24 null  <||@
  Comment 2295 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2295 432 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2298 434 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2302 436 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2307 440 JUMP ~[] destination: B24 -> B25  <||@
  Comment 2307 block B25 null  <||@
  Comment 2307 442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2307 444 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2312 446 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2316 448 rdx|QWORD = LEA [rsi|QWORD + 72] size: QWORD  <||@
  Comment 2320 450 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2324 452 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 2330 block B27 null  <||@
  Comment 2330 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2330 476 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2334 478 AMD64PREFETCH ~[rsi|QWORD + 264] instr: 0  <||@
  Comment 2341 480 AMD64PREFETCH ~[rsi|QWORD + 328] instr: 0  <||@
  Comment 2348 482 AMD64PREFETCH ~[rsi|QWORD + 392] instr: 0  <||@
  Comment 2355 484 AMD64PREFETCH ~[rsi|QWORD + 456] instr: 0  <||@
  Comment 2362 486 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2362 488 JUMP ~[] destination: B27 -> B28  <||@
  Comment 2362 block B28 null  <||@
  Comment 2362 490 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2362 492 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2365 494 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2370 496 rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 2374 498 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 2374 500 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 2381 502 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 2384 504 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 2384 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 2391 506 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2395 508 r9|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2402 510 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 2406 512 MOV [rsi|QWORD[*] + 36] y: 16 size: DWORD  <||@
  Comment 2413 514 MOV [rsi|QWORD[*] + 24] y: 1 size: QWORD  <||@
  Comment 2421 516 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2421 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2428 518 J (address: [rsi|QWORD[*] + 40], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2433 520 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2436 522 stack:72|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 524 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2444 526 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14]  <||@
  Comment 2444 9  <||@
  Comment 2447 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2452 [stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 2453 528 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 530 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2462 532 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2467 534 CMP (x: r11|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14]  <||@
  Comment 2467 [r13:0, r14:0, stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1             |2         
     locals:  |stack:64|QWORD[.]  |r13|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 2467 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2475 536 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 2481 block B30 null  <||@
  Comment 2481 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2481 552 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2483 554 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33  <||@
  Comment 2489 block B33 null  <||@
  Comment 2489 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2489 578 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2493 580 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2497 582 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 2503 584 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 2509 block B34 null  <||@
  Comment 2509 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2509 588 r10|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 2515 590 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2519 592 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2523 594 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2526 596 r8|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2532 598 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2535 600 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36  <||@
  Comment 2541 block B36 null  <||@
  Comment 2541 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 610 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2545 612 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2554 614 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2563 616 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2572 618 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2581 620 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 2584 622 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2591 624 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2591 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2598 626 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2598 628 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 2603 630 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2606 632 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2609 634 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2612 636 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2612 block B39 null  <||@
  Comment 2612 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2612 662 CMP r13|DWORD y: 17 size: DWORD  <||@
  Comment 2616 664 rdi|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 2625 666 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 2628 668 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 2632 670 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B58 falseDestination: B39 -> B41  <||@
  Comment 2638 block B41 null  <||@
  Comment 2638 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2638 678 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2643 680 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2647 682 rdx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 2651 684 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 2655 686 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2658 692 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2665 688 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B46 falseDestination: B41 -> B44  <||@
  Comment 2671 block B46 null  <||@
  Comment 2671 718 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2671 720 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 2675 722 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2678 724 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 2684 block B48 null  <||@
  Comment 2684 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 732 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2690 734 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2696 736 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2700 738 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2703 740 JUMP ~[] destination: B48 -> B49  <||@
  Comment 2703 block B49 null  <||@
  Comment 2703 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2703 744 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 2707 746 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2710 748 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 2716 block B51 null  <||@
  Comment 2716 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 756 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2722 758 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2728 760 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2732 762 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2735 764 JUMP ~[] destination: B51 -> B52  <||@
  Comment 2735 block B52 null  <||@
  Comment 2735 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2735 768 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 2739 770 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2742 772 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 2748 block B54 null  <||@
  Comment 2748 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2748 780 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2754 782 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2760 784 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2764 786 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2767 788 JUMP ~[] destination: B54 -> B55  <||@
  Comment 2767 block B55 null  <||@
  Comment 2767 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2767 792 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 2773 794 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2776 796 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 2782 block B57 null  <||@
  Comment 2782 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2782 804 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2787 806 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 2792 808 JUMP ~[] destination: B57 -> B58  <||@
  Comment 2792 block B58 null  <||@
  Comment 2792 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2792 812 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2795 814 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2798 816 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77  <||@
  Comment 2804 block B77 null  <||@
  Comment 2804 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2804 964 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 966 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2813 968 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2817 970 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2821 972 JUMP ~[] destination: B77 -> B78  <||@
  Comment 2821 block B78 null  <||@
  Comment 2821 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 976 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2831 978 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2838 980 MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2842 982 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2849 984 MOVB (x: [rsi|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2853 986 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2857 988 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2860 990 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B82 falseDestination: B78 -> B80  <||@
  Comment 2866 block B80 null  <||@
  Comment 2866 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2866 1000 rdi|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2872 1002 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2875 1004 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B82 falseDestination: B80 -> B83  <||@
  Comment 2881 block B83 null  <||@
  Comment 2881 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2881 1022 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2886 1024 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2891 1026 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2898 1028 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2898 1030 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2901 1032 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2904 1034 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 2907 1036 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2911 1038 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2916 1040 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2919 1042 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2924 1044 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2929 1046 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2929 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2935 1048 r11|DWORD = ADD (x: stack:52|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 2945 1050 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2950 1052 MOV (x: [r8|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 2954 1054 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2957 1056 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2962 1058 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2966 1060 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2971 1062 JUMP ~[] destination: B83 -> B84  <||@
  Comment 2976 block B190 null  <||@
  Comment 2976 2066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2976 2068 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2981 2070 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2985 2072 stack:112|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2990 2074 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2995 2076 stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3000 2078 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3005 2080 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3010 2082 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29]  <||@
  Comment 3010 9  <||@
  Comment 3015 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 3020 [stack:8, stack:32, stack:44, stack:56]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                                                           |2              
     locals:  |stack:72|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3021 2084 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3024 2086 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3027 2088 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3033 block B192 null  <||@
  Comment 3033 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3033 2108 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3037 2110 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3041 2112 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 3048 2114 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B197  <||@
  Comment 3054 block B193 null  <||@
  Comment 3054 2116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3054 2118 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 3059 2120 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 3062 2122 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 3065 2124 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 3068 2126 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3074 2128 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3077 2130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B197 falseDestination: B193 -> B195  <||@
  Comment 3083 block B195 null  <||@
  Comment 3083 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 2140 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 3087 2142 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3095 2144 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3103 2146 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3111 2148 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3119 2150 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 3123 2152 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3130 2154 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 3130 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 3137 2156 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3137 2158 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3140 2160 rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 3144 2162 r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3149 2164 JUMP ~[] destination: B195 -> B198  <||@
  Comment 3149 block B198 null  <||@
  Comment 3149 2188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3149 2190 CMP (x: r13|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3152 2192 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 3158 2194 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 3161 2196 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 3165 2198 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B217 falseDestination: B198 -> B200  <||@
  Comment 3171 block B200 null  <||@
  Comment 3171 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3171 2206 r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3176 2208 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3180 2210 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 3188 2212 r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3192 2214 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3195 2220 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3202 2216 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B205 falseDestination: B200 -> B203  <||@
  Comment 3208 block B205 null  <||@
  Comment 3208 2246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3208 2248 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3212 2250 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3215 2252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B208 falseDestination: B205 -> B207  <||@
  Comment 3221 block B207 null  <||@
  Comment 3221 2258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3221 2260 xmm0|V128_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 3227 2262 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3233 2264 r8|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 3237 2266 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3240 2268 JUMP ~[] destination: B207 -> B208  <||@
  Comment 3240 block B208 null  <||@
  Comment 3240 2270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3240 2272 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3244 2274 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3247 2276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B211 falseDestination: B208 -> B210  <||@
  Comment 3253 block B210 null  <||@
  Comment 3253 2282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3253 2284 xmm0|V64_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 3259 2286 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3265 2288 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 3269 2290 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3272 2292 JUMP ~[] destination: B210 -> B211  <||@
  Comment 3272 block B211 null  <||@
  Comment 3272 2294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3272 2296 r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3276 2298 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3279 2300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B214 falseDestination: B211 -> B213  <||@
  Comment 3285 block B213 null  <||@
  Comment 3285 2306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3285 2308 xmm0|V32_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 3291 2310 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3297 2312 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 3301 2314 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3304 2316 JUMP ~[] destination: B213 -> B214  <||@
  Comment 3304 block B214 null  <||@
  Comment 3304 2318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3304 2320 r8|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3310 2322 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3313 2324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B217 falseDestination: B214 -> B216  <||@
  Comment 3319 block B216 null  <||@
  Comment 3319 2330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3319 2332 r11|DWORD = MOVSX [r11|QWORD[*] + r9|QWORD * 2] size: DWORD  <||@
  Comment 3324 2334 MOV (x: [r10|QWORD[.] + r9|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 3329 2336 JUMP ~[] destination: B216 -> B217  <||@
  Comment 3329 block B217 null  <||@
  Comment 3329 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3329 2340 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 3332 2342 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3335 2344 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236  <||@
  Comment 3341 block B236 null  <||@
  Comment 3341 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3341 2488 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3345 2490 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3349 2492 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3353 2494 JUMP ~[] destination: B236 -> B237  <||@
  Comment 3353 block B237 null  <||@
  Comment 3353 2496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3353 2498 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 3363 2500 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 3370 2502 MOV (x: [r14|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3374 2504 r8|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3381 2506 MOVB (x: [r8|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3385 2508 rdi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 3389 2510 rcx|QWORD = MOVE stack:112|QWORD moveKind: QWORD  <||@
  Comment 3394 2512 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3399 2514 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3404 2516 r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3407 2518 JUMP ~[] destination: B237 -> B238  <||@
  Comment 3412 block B59 null  <||@
  Comment 3412 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3412 820 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3417 822 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 3420 824 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3424 826 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3427 828 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 3433 block B60 null  <||@
  Comment 3433 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3433 832 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3440 834 JUMP ~[] destination: B60 -> B64  <||@
  Comment 3440 block B64 null  <||@
  Comment 3440 858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3440 860 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3444 862 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3447 868 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3451 864 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 3457 block B66 null  <||@
  Comment 3457 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3457 876 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3463 878 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3467 880 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3470 882 JUMP ~[] destination: B66 -> B67  <||@
  Comment 3470 block B67 null  <||@
  Comment 3470 884 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3470 886 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3474 888 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3477 894 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3481 890 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 3487 block B69 null  <||@
  Comment 3487 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3487 902 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3493 904 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3497 906 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3500 908 JUMP ~[] destination: B69 -> B70  <||@
  Comment 3500 block B70 null  <||@
  Comment 3500 910 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3500 912 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3504 914 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3507 920 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3511 916 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 3517 block B72 null  <||@
  Comment 3517 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3517 928 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3523 930 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3527 932 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3530 934 JUMP ~[] destination: B72 -> B73  <||@
  Comment 3530 block B73 null  <||@
  Comment 3530 936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3530 938 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3533 940 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3536 942 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 3542 block B75 null  <||@
  Comment 3542 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3542 952 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3547 954 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3552 956 JUMP ~[] destination: B75 -> B78  <||@
  Comment 3557 block B129 null  <||@
  Comment 3557 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3557 1468 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3562 1470 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3565 1472 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 3569 1474 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3572 1476 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3578 block B130 null  <||@
  Comment 3578 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3578 1480 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3585 1482 JUMP ~[] destination: B130 -> B134  <||@
  Comment 3585 block B134 null  <||@
  Comment 3585 1506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3585 1508 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 3589 1510 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3592 1516 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3596 1512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136  <||@
  Comment 3602 block B136 null  <||@
  Comment 3602 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3602 1524 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3608 1526 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3612 1528 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3615 1530 JUMP ~[] destination: B136 -> B137  <||@
  Comment 3615 block B137 null  <||@
  Comment 3615 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3615 1534 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 3619 1536 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3622 1542 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3626 1538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 3632 block B139 null  <||@
  Comment 3632 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 1550 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3638 1552 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3642 1554 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3645 1556 JUMP ~[] destination: B139 -> B140  <||@
  Comment 3645 block B140 null  <||@
  Comment 3645 1558 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3645 1560 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 3649 1562 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3652 1568 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3656 1564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142  <||@
  Comment 3662 block B142 null  <||@
  Comment 3662 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3662 1576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3668 1578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3672 1580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3675 1582 JUMP ~[] destination: B142 -> B143  <||@
  Comment 3675 block B143 null  <||@
  Comment 3675 1584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3675 1586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 3678 1588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3681 1590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 3687 block B145 null  <||@
  Comment 3687 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3687 1600 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3692 1602 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3697 1604 JUMP ~[] destination: B145 -> B148  <||@
  Comment 3702 block B218 null  <||@
  Comment 3702 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3702 2348 r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3707 2350 r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3710 2352 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 3714 2354 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3717 2356 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220  <||@
  Comment 3723 block B219 null  <||@
  Comment 3723 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3723 2360 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3730 2362 JUMP ~[] destination: B219 -> B223  <||@
  Comment 3730 block B223 null  <||@
  Comment 3730 2386 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3730 2388 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 3734 2390 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3737 2396 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3741 2392 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B226 falseDestination: B223 -> B225  <||@
  Comment 3747 block B225 null  <||@
  Comment 3747 2400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3747 2404 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3753 2406 rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 3757 2408 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3760 2410 JUMP ~[] destination: B225 -> B226  <||@
  Comment 3760 block B226 null  <||@
  Comment 3760 2412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3760 2414 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 3764 2416 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3767 2422 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3771 2418 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B229 falseDestination: B226 -> B228  <||@
  Comment 3777 block B228 null  <||@
  Comment 3777 2426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3777 2430 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3783 2432 rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 3787 2434 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3790 2436 JUMP ~[] destination: B228 -> B229  <||@
  Comment 3790 block B229 null  <||@
  Comment 3790 2438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3790 2440 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 3794 2442 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3797 2448 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3801 2444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231  <||@
  Comment 3807 block B231 null  <||@
  Comment 3807 2452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3807 2456 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3813 2458 rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 3817 2460 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3820 2462 JUMP ~[] destination: B231 -> B232  <||@
  Comment 3820 block B232 null  <||@
  Comment 3820 2464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3820 2466 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 3823 2468 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3826 2470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B237 falseDestination: B232 -> B234  <||@
  Comment 3832 block B234 null  <||@
  Comment 3832 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3832 2478 MOV (x: [r11|QWORD[.] + r8|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3837 2480 JUMP ~[] destination: B234 -> B237  <||@
  Comment 3842 block B161 null  <||@
  Comment 3842 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3842 1762 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3845 1764 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3851 1766 JUMP ~[] destination: B161 -> B168  <||@
  Comment 3856 block B171 null  <||@
  Comment 3856 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 1874 stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3861 1876 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3866 1878 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3866 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3876 1880 rdx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3880 1882 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3885 1884 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26]  <||@
  Comment 3885 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3890 [stack:44, stack:56]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:80|DWORD  |  
  at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16, duringCall: true, rethrow: false]
              |0          |1           |2          |3  |4 
     locals:  |r13|DWORD  |int[4|0x4]  |r14|DWORD  |-  |- 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:72|QWORD[.]   <||@
  Comment 3891 1886 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3894 1888 r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3899 1890 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3904 1892 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3909 1894 JUMP ~[] destination: B171 -> B173  <||@
  Comment 3914 block B242 null  <||@
  Comment 3914 2552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3914 2528 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3919 2530 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3924 2554 MOV [r15|QWORD + 668] y: -224097 size: DWORD  <||@
  Comment 3935 2556 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3942 2558 DEOPT info [bci:24, 2, 29]  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3947 [stack:8, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                                                           |2              
     locals:  |stack:72|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3948 block B89 null  <||@
  Comment 3948 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3948 1104 MOV [r15|QWORD + 668] y: -239457 size: DWORD  <||@
  Comment 3959 1106 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3966 1108 DEOPT info [bci:48, 2, 14]  <||@
  Comment 3966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3971 [stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:72|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 3972 block B16 null  <||@
  Comment 3972 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 272 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3975 274 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3975 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3985 276 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3990 278 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3995 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3995 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4000 [r13:0, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4001 282 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4004 284 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4007 286 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4011 288 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4011 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 4021 290 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 4025 292 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4029 294 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 4033 296 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4038 298 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4043 300 JUMP ~[] destination: B16 -> B18  <||@
  Comment 4048 block B20 null  <||@
  Comment 4048 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4048 360 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 362 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4058 364 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4058 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4068 366 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4073 368 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4078 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14]  <||@
  Comment 4078 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4083 [r13:0, stack:96]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                             |1  |2         
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |-  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                             |1 
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4084 372 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4087 376 JUMP ~[] destination: B20 -> B22  <||@
  Comment 4092 block B164 null  <||@
  Comment 4092 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4092 1782 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4097 1784 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23]  <||@
  Comment 4097 7  <||@
  Comment 4111 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 4116 [stack:56]at java.lang.Object.toString(Object.java:236) [bci: 23, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:72|QWORD[.]   <||@
  Comment 4117 1786 rsi|DWORD = LZCNT rax|DWORD size: DWORD  <||@
  Comment 4121 1788 r10|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 4127 1790 r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 4130 1792 r11|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 4136 1794 r11|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 4139 1796 TEST r11|DWORD y: -4 size: DWORD  <||@
  Comment 4146 1798 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 4152 block B166 null  <||@
  Comment 4152 1812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4152 1814 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4155 1816 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4157 1818 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4160 1820 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4165 1822 JUMP ~[] destination: B166 -> B167  <||@
  Comment 4170 block B96 null  <||@
  Comment 4170 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4170 1160 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4175 1162 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19]  <||@
  Comment 4175 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4180 [stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2          
     locals:  |stack:72|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4181 1164 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4183 1166 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4188 1168 JUMP ~[] destination: B96 -> B97  <||@
  Comment 4193 block B299 null  <||@
  Comment 4193 3068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4193 3070 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4196 3072 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4196 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4206 3074 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4206 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4216 3076 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4221 3078 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4226 3080 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 4226 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4231 [r13:0, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:72|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4232 3082 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4235 3084 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4238 3086 JUMP ~[] destination: B299 -> B301  <||@
  Comment 4243 block B61 null  <||@
  Comment 4243 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4243 838 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4247 840 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4254 842 JUMP ~[] destination: B61 -> B62  <||@
  Comment 4254 block B62 loop 1 depth 1 header:2738|LoopBegin  <||@
  Comment 4254 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4256 846 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4262 848 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 4266 850 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 4269 852 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B64 falseDestination: B62 -> B62  <||@
  Comment 4276 block B44 loop 0 depth 1 header:2675|LoopBegin  <||@
  Comment 4276 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4288 704 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4294 706 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4300 708 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 4304 710 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4307 712 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44  <||@
  Comment 4314 block B74 null  <||@
  Comment 4314 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4314 946 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 948 JUMP ~[] destination: B74 -> B78  <||@
  Comment 4324 block B114 loop 2 depth 1 header:2801|LoopBegin  <||@
  Comment 4324 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4336 1352 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4342 1354 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4348 1356 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 4352 1358 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4355 1360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B114  <||@
  Comment 4362 block B131 null  <||@
  Comment 4362 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4362 1486 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4366 1488 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4373 1490 JUMP ~[] destination: B131 -> B132  <||@
  Comment 4373 block B132 loop 3 depth 1 header:2864|LoopBegin  <||@
  Comment 4373 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4384 1494 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4390 1496 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 4394 1498 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4397 1500 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B134 falseDestination: B132 -> B132  <||@
  Comment 4404 block B144 null  <||@
  Comment 4404 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4404 1594 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4409 1596 JUMP ~[] destination: B144 -> B148  <||@
  Comment 4414 block B220 null  <||@
  Comment 4414 2364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4414 2366 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4418 2368 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4425 2370 JUMP ~[] destination: B220 -> B221  <||@
  Comment 4425 block B221 loop 6 depth 1 header:2990|LoopBegin  <||@
  Comment 4425 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4432 2374 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4438 2376 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 4442 2378 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4445 2380 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B223 falseDestination: B221 -> B221  <||@
  Comment 4452 block B203 loop 5 depth 1 header:2927|LoopBegin  <||@
  Comment 4452 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4464 2232 xmm0|V256_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4470 2234 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4476 2236 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 4480 2238 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 4483 2240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B205 falseDestination: B203 -> B203  <||@
  Comment 4490 block B38 null  <||@
  Comment 4490 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4490 640 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 4495 646 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4495 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4505 648 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4507 650 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4512 652 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4515 654 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4518 656 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14]  <||@
  Comment 4518 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4523 [stack:52, stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4524 658 JUMP ~[] destination: B38 -> B39  <||@
  Comment 4529 block B108 null  <||@
  Comment 4529 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 1296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4529 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4539 1298 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4542 1300 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4547 1302 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19]  <||@
  Comment 4547 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4552 [stack:32, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:72|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4553 1306 JUMP ~[] destination: B108 -> B109  <||@
  Comment 4558 block B197 null  <||@
  Comment 4558 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4558 2168 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4563 2174 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4563 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4573 2176 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4576 2178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4581 2180 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4584 2182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29]  <||@
  Comment 4584 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4589 [r14:0, stack:8, stack:32, stack:44, stack:56]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:96|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                                                           |2              
     locals:  |r14|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4590 2184 rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4594 2186 JUMP ~[] destination: B197 -> B198  <||@
  Comment 4599 block B1 null  <||@
  Comment 4599 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4599 32 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4602 34 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4607 36 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11]  <||@
  Comment 4607 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 4607 9  <||@
  Comment 4612 [stack:80, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 4613 38 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4616 40 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:14, 11]  <||@
  Comment 4616 [r13:0, stack:80, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 14, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |-            
     stack:   |stack:48|QWORD[.]  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 4616 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4620 42 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 4623 48 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4628 44 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 4634 block B3 null  <||@
  Comment 4634 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4634 60 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 4644 62 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4652 64 rsi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4659 66 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 4663 68 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4667 70 MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4671 72 rdi|DWORD = LEA [r10|DWORD - 16] size: DWORD  <||@
  Comment 4675 74 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 4678 76 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13  <||@
  Comment 4684 block B4 null  <||@
  Comment 4684 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4684 80 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4689 82 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4693 84 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 4697 86 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 4701 88 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4704 90 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 4710 block B6 null  <||@
  Comment 4710 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4710 112 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 4714 114 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 4721 116 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 4721 120 JUMP ~[] destination: B6 -> B7  <||@
  Comment 4721 block B7 null  <||@
  Comment 4721 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4721 118 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4725 124 r11|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 4728 126 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 4735 128 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 4742 130 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 4742 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 4749 132 J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4754 134 CMP r10|DWORD y: 17 size: DWORD  <||@
  Comment 4758 136 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 4764 block B8 null  <||@
  Comment 4764 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4764 140 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4768 142 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4768 144 rsi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4771 146 rdx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 4774 148 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 4778 150 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 4782 152 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4787 154 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 4787 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 4793 156 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4797 158 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 4801 160 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4805 162 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 4811 block B10 null  <||@
  Comment 4811 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4811 186 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 4815 188 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 4822 190 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 4822 192 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4827 198 JUMP ~[] destination: B10 -> B11  <||@
  Comment 4827 block B11 null  <||@
  Comment 4827 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4827 194 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4832 196 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4832 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 4842 202 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 4845 204 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 4852 206 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 4855 208 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 4855 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 4862 210 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 4866 212 r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4873 214 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 4877 216 r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4880 218 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4883 220 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4886 222 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4889 224 rdi|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 4894 226 JUMP ~[] destination: B11 -> B84  <||@
  Comment 4899 block B165 null  <||@
  Comment 4899 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4899 1802 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4902 1804 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4905 1806 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4911 1808 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4916 1810 JUMP ~[] destination: B165 -> B168  <||@
  Comment 4921 block B247 null  <||@
  Comment 4921 2618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4921 2620 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4924 2622 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4927 2624 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4927 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4937 2626 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4942 2628 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4947 2630 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 4947 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4952 [r14:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2              
     locals:  |r14|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4953 2632 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4953 2634 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4956 2636 JUMP ~[] destination: B247 -> B249  <||@
  Comment 4961 block B26 null  <||@
  Comment 4961 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4961 456 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4961 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4971 458 rdx|DWORD = MOVE input: int[14|0xe]  <||@
  Comment 4976 460 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4981 462 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14]  <||@
  Comment 4981 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4986 [stack:80, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                        |1                 
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                        |                  
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}  |stack:48|QWORD[.]   <||@
  Comment 4987 464 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4990 466 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4995 468 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4999 470 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4999 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 5009 472 JUMP ~[] destination: B26 -> B28  <||@
  Comment 5014 block B82 null  <||@
  Comment 5014 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5014 994 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5017 1014 MOV [r15|QWORD + 668] y: -317281 size: DWORD  <||@
  Comment 5028 1016 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5035 1018 DEOPT info [bci:26, 21, 2, 14]  <||@
  Comment 5035 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5040 [r8:0, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                  |2              
     locals:  |r8|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5041 block B152 null  <||@
  Comment 5041 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5041 1642 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5044 1662 MOV [r15|QWORD + 668] y: -264033 size: DWORD  <||@
  Comment 5055 1664 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5062 1666 DEOPT info [bci:26, 21, 2, 19]  <||@
  Comment 5062 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5067 [r14:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5068 block B159 null  <||@
  Comment 5068 1726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5068 1722 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5071 1730 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19]  <||@
  Comment 5071 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5076 [r14:0, stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2          
     locals:  |r14|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5077 1732 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 5080 1734 r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 5083 1736 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 5087 1738 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 5091 1740 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 5095 1742 JUMP ~[] destination: B159 -> B160  <||@
  Comment 5100 block B13 null  <||@
  Comment 5100 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5100 238 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5105 240 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5108 242 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 5112 244 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 5112 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 5122 246 JUMP ~[] destination: B13 -> B25  <||@
  Comment 5127 block B5 null  <||@
  Comment 5127 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5127 94 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 5127 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 5137 96 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 5142 98 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 5147 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11]  <||@
  Comment 5147 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 5152 [r13:0, r14:0, stack:96]at java.lang.Class.getName(Class.java:643) [bci: 19, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5153 102 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5156 104 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 5161 108 JUMP ~[] destination: B5 -> B7  <||@
  Comment 5166 block B9 null  <||@
  Comment 5166 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5166 166 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 5171 168 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 5171 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 5181 170 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 5186 172 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 5191 174 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14]  <||@
  Comment 5191 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 5196 [r13:0, stack:96]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                             |1  |2              
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                             |1 
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5197 176 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5200 182 JUMP ~[] destination: B9 -> B11  <||@
  Comment 5205 block B12 null  <||@
  Comment 5205 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5205 230 MOV [r15|QWORD + 668] y: -288865 size: DWORD  <||@
  Comment 5216 232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5223 234 DEOPT info [bci:19, 11]  <||@
  Comment 5223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5228 [r13:0, stack:96]at java.lang.Class.getName(Class.java:643) [bci: 19, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5229 block B251 null  <||@
  Comment 5229 2676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5229 2678 r10|DWORD = MOVE input: int[-229395|0xfffffffffffc7fed]  <||@
  Comment 5235 2680 JUMP ~[] destination: B251 -> B252  <||@
  Comment 5235 block B252 null  <||@
  Comment 5235 2682 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5235 2684 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5242 2686 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5249 2688 DEOPT info [bci:48, 2, 29]  <||@
  Comment 5249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5254 [r8:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0            |1  |2              
     locals:  |r8|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5255 block B307 null  <||@
  Comment 5255 3154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5255 3156 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 5260 3158 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5263 3160 MOV [r15|QWORD + 668] y: -210971 size: DWORD  <||@
  Comment 5274 3162 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5281 3164 DEOPT info [bci:15, 31, 2, 26]  <||@
  Comment 5281 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5286 [r14:0, stack:8]at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15, duringCall: false, rethrow: false]
              |0          |1           |2                   |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |stack:120|QWORD[.]  |int[0|0x0]  |-  |rdx|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                  
     locals:  |-  |-  |-  |-  |stack:120|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r14|QWORD[.]   <||@
  Comment 5287 block B2 null  <||@
  Comment 5287 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5287 50 MOV [r15|QWORD + 668] y: -279563 size: DWORD  <||@
  Comment 5298 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5305 54 DEOPT info [bci:14, 11]  <||@
  Comment 5305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5310 [r11:0, r13:0, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 14, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |-             |-            
     stack:   |r11|QWORD[.]  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5311 block B305 null  <||@
  Comment 5311 3134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5311 3136 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 5316 3138 MOV [r15|QWORD + 668] y: -230931 size: DWORD  <||@
  Comment 5327 3140 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5334 3142 DEOPT info [bci:32, 31, 2, 26]  <||@
  Comment 5334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5339 [r8:0, stack:8]at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32, duringCall: false, rethrow: false]
              |0          |1           |2                   |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |stack:120|QWORD[.]  |int[0|0x0]  |-  |rsi|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                  
     locals:  |-  |-  |-  |-  |stack:120|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 5340 block B31 null  <||@
  Comment 5340 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5340 558 r10|DWORD = MOVE input: int[-391265|0xfffffffffffa079f]  <||@
  Comment 5346 566 JUMP ~[] destination: B31 -> B32  <||@
  Comment 5346 block B32 null  <||@
  Comment 5346 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5346 542 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5351 544 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5356 546 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5361 570 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5368 572 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5375 574 DEOPT info [bci:20, 21, 2, 14]  <||@
  Comment 5375 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5380 [rdx:0, rsi:0, r8:0, r13:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1             |2         
     locals:  |r8|QWORD[.]  |r13|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 5381 block B169 null  <||@
  Comment 5381 1842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5381 1844 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5386 1846 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581]  <||@
  Comment 5386 {Object[d.a@437821581]}  <||@
  Comment 5396 1848 MOV [r15|QWORD + 668] y: -214795 size: DWORD  <||@
  Comment 5407 1850 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 5414 1852 DEOPT info [bci:10, 16, 2, 26]  <||@
  Comment 5414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5419 [r8:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:80|DWORD  |  
  at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16, duringCall: true, rethrow: false]
              |0          |1           |2          |3  |4 
     locals:  |r13|DWORD  |int[4|0x4]  |r14|DWORD  |-  |- 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 5420 block B245 null  <||@
  Comment 5420 2602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5420 2604 r10|DWORD = MOVE input: int[-227091|0xfffffffffffc88ed]  <||@
  Comment 5426 2606 JUMP ~[] destination: B245 -> B252  <||@
  Comment 5431 block B191 null  <||@
  Comment 5431 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5431 2092 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 5436 2094 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5441 2096 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 5446 2098 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5451 2100 MOV [r15|QWORD + 668] y: -411233 size: DWORD  <||@
  Comment 5462 2102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5469 2104 DEOPT info [bci:20, 21, 2, 29]  <||@
  Comment 5469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5474 [rax:0, r8:0, r9:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |rax|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                                                    |2         
     locals:  |r8|QWORD[.]  |vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]}  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5475 block B23 null  <||@
  Comment 5475 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5475 424 MOV [r15|QWORD + 668] y: -302177 size: DWORD  <||@
  Comment 5486 426 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5493 428 DEOPT info [bci:0]  <||@
  Comment 5493 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5498 [stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5499 block B102 null  <||@
  Comment 5499 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5499 1224 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5504 1226 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 5509 1228 MOV [r15|QWORD + 668] y: -401249 size: DWORD  <||@
  Comment 5520 1230 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5527 1232 DEOPT info [bci:20, 21, 2, 19]  <||@
  Comment 5527 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5532 [r8:0, r10:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |r10|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                   |2          
     locals:  |r8|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5533 block B29 null  <||@
  Comment 5533 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5533 540 r10|DWORD = MOVE input: int[-308755|0xfffffffffffb49ed]  <||@
  Comment 5539 548 JUMP ~[] destination: B29 -> B32  <||@
  Comment 5544 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5544 4  <||@
  Comment 5550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 5550 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9291[java.lang.Object.toString()]"
  method "HotSpotCompilation-9291[java.lang.Object.toString()]"
  date 1527005205287
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107b84280   <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@19cccbb9 slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 r10|DWORD = MOV [rsi|QWORD[.] + 8] size: DWORD  <||@
  Comment 57 10 stack:36|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 62 12 r11|QWORD[.] = MOV [r10|DWORD * 8 + 104] size: QWORD  <||@
  Comment 70 14 r8|DWORD[.] = MOV [r11|QWORD[.] + 20] size: DWORD  <||@
  Comment 74 16 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 78 18 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 82 20 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 86 22 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 86 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 96 24 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 100 26 TEST (x: r8|DWORD[.], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 103 28 BRANCH trueDestinationProbability: 0.002982106018175279 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B14  <||@
  Comment 109 block B14 null  <||@
  Comment 109 248 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 109 250 r13|DWORD[.] = MOV [r8|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 117 252 r11|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 117 [rsi:0, r8:0, r13:0, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 117 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 125 254 rdi|DWORD = LEA [r11|DWORD - 16] size: DWORD  <||@
  Comment 129 256 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 132 258 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B14 -> B15 falseDestination: B14 -> B24  <||@
  Comment 138 block B15 null  <||@
  Comment 138 260 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 138 262 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 142 264 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 146 266 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 150 268 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 156 block B17 null  <||@
  Comment 156 302 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 156 304 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 160 306 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 167 308 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 167 310 JUMP ~[] destination: B17 -> B18  <||@
  Comment 167 block B18 null  <||@
  Comment 167 312 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 167 314 r8|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 170 316 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 177 318 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 184 320 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 184 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 191 322 J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 196 324 CMP r11|DWORD y: 17 size: DWORD  <||@
  Comment 200 326 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B18 -> B19 falseDestination: B18 -> B23  <||@
  Comment 206 block B19 null  <||@
  Comment 206 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 206 330 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 210 332 r13|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 210 334 rdx|QWORD[*] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 213 336 rcx|QWORD = MOV r11|DWORD size: DWORD  <||@
  Comment 216 338 rdi|QWORD = LEA [r13|QWORD[*] + 16] size: QWORD  <||@
  Comment 220 340 rsi|QWORD = LEA [rdx|QWORD[*] + 16] size: QWORD  <||@
  Comment 224 342 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 227 344 stack:64|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 232 346 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 237 348 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 237 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 243 350 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 247 352 rsi|QWORD = LEA [rdi|QWORD + 24] size: QWORD  <||@
  Comment 251 354 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 255 356 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 261 block B21 null  <||@
  Comment 261 378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 380 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 265 382 AMD64PREFETCH ~[rdi|QWORD + 216] instr: 0  <||@
  Comment 272 384 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 272 386 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 277 388 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 282 392 JUMP ~[] destination: B21 -> B22  <||@
  Comment 282 block B22 null  <||@
  Comment 282 394 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 282 390 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 282 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 292 396 rsi|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 295 398 rdx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 302 400 MOV (x: [rdi|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 305 402 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 305 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 312 404 MOV (x: [rdi|QWORD[*] + 12], y: r14|DWORD) size: DWORD  <||@
  Comment 316 406 r8|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 323 408 MOV (x: [rdi|QWORD[*] + 16], y: r8|DWORD[.]) size: DWORD  <||@
  Comment 327 410 r8|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 330 412 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 333 414 rsi|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 336 416 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 339 418 rdi|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 344 420 JUMP ~[] destination: B22 -> B84  <||@
  Comment 344 block B84 null  <||@
  Comment 344 1064 [] = LABEL numbPhis: 5 align: false label: ?  <||@
  Comment 344 1066 stack:72|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 349 1068 r9|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 353 1070 rcx|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 357 1072 rdx|DWORD = SUB (x: rcx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 361 1074 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 361 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 371 1076 CMP rdx|DWORD y: 1 size: DWORD  <||@
  Comment 374 1078 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B84 -> B85 falseDestination: B84 -> B101  <||@
  Comment 380 block B85 null  <||@
  Comment 380 1080 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 380 1082 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 382 1084 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B85 -> B89 falseDestination: B85 -> B87  <||@
  Comment 388 block B87 null  <||@
  Comment 388 1090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 388 1092 r9|DWORD = DEC r9|DWORD size: DWORD  <||@
  Comment 391 1094 CMP (x: rsi|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 394 1096 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B87 -> B89 falseDestination: B87 -> B90  <||@
  Comment 400 block B90 null  <||@
  Comment 400 1110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 400 1112 r11|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 405 1114 rdi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 408 1116 MOV [r10|QWORD[.] + rdi|QWORD * 2 + 16] y: 64 size: WORD  <||@
  Comment 416 1118 MOV (x: [r8|QWORD[.] + 12], y: rcx|DWORD) size: DWORD  <||@
  Comment 420 1120 CMP (x: rbx|QWORD, y: [r11|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 428 1122 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B90 -> B91 falseDestination: B90 -> B164  <||@
  Comment 434 block B91 null  <||@
  Comment 434 1124 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 434 1126 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 439 1128 rdi|QWORD = MOV [rsi|QWORD[.]] size: QWORD  <||@
  Comment 442 1130 rdx|QWORD = AND rdi|QWORD y: 7 size: QWORD  <||@
  Comment 449 1132 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 453 1134 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B91 -> B92 falseDestination: B91 -> B96  <||@
  Comment 459 block B92 null  <||@
  Comment 459 1136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 459 1138 rdi|QWORD = SHR rdi|QWORD y: 8 size: QWORD  <||@
  Comment 463 1140 rdi|DWORD = MOV rdi|QWORD size: DWORD  <||@
  Comment 465 1142 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 467 1144 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B92 -> B96 falseDestination: B92 -> B97  <||@
  Comment 473 block B97 null  <||@
  Comment 473 1170 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 473 1172 rsi|DWORD = LZCNT rdi|DWORD size: DWORD  <||@
  Comment 477 1174 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 482 1176 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 484 1178 r10|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 490 1180 r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 493 1182 TEST r10|DWORD y: -4 size: DWORD  <||@
  Comment 500 1184 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B97 -> B98 falseDestination: B97 -> B167  <||@
  Comment 506 block B167 null  <||@
  Comment 506 1824 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 506 1826 r10|DWORD = SHR r10|DWORD y: 2 size: DWORD  <||@
  Comment 510 1828 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 513 1830 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 516 1832 JUMP ~[] destination: B167 -> B168  <||@
  Comment 516 block B168 null  <||@
  Comment 516 1834 [] = LABEL numbPhis: 3 align: false label: ?  <||@
  Comment 516 1836 r11|DWORD[.] = MOV [r8|QWORD[.] + 16] size: DWORD  <||@
  Comment 520 1838 TEST (x: r11|DWORD[.], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 523 1840 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B168 -> B169 falseDestination: B168 -> B170  <||@
  Comment 529 block B170 null  <||@
  Comment 529 1854 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 529 1856 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 533 1858 rsi|DWORD = SHL r10|DWORD size: DWORD  <||@
  Comment 538 1860 rsi|DWORD = LEA [rsi|DWORD + 23] size: DWORD  <||@
  Comment 541 1862 rsi|DWORD = AND rsi|DWORD y: -8 size: DWORD  <||@
  Comment 544 1864 rdx|QWORD = MOV rsi|DWORD size: DWORD  <||@
  Comment 546 1866 rdx|QWORD = ADD (x: rdi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 549 1868 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 553 1870 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B170 -> B171 falseDestination: B170 -> B172  <||@
  Comment 559 block B172 null  <||@
  Comment 559 1896 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 559 1898 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 563 1900 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 192] instr: 0  <||@
  Comment 571 1902 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 256] instr: 0  <||@
  Comment 579 1904 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 320] instr: 0  <||@
  Comment 587 1906 AMD64PREFETCH ~[rdi|QWORD + rsi|DWORD * 1 + 384] instr: 0  <||@
  Comment 595 1908 MOV (x: [rdi|QWORD + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 599 1910 MOV [rdi|QWORD] y: 1 size: QWORD  <||@
  Comment 606 1912 MOV [rdi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 606 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 613 1914 rdi|QWORD[.] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 613 1916 r9|QWORD[.] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 616 1918 JUMP ~[] destination: B172 -> B173  <||@
  Comment 616 block B173 null  <||@
  Comment 616 1920 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 616 1922 rdi|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 620 1924 rcx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 623 1926 rsi|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 627 1928 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 630 1930 BRANCH trueDestinationProbability: 0.25 condition: < trueDestination: B173 -> B174 falseDestination: B173 -> B175  <||@
  Comment 636 block B175 null  <||@
  Comment 636 1940 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 636 1942 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 640 1944 J (address: [rdi|QWORD[.]], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 644 1946 rsi|QWORD = MOVE input: long[8|0x8]  <||@
  Comment 651 1948 JUMP ~[] destination: B175 -> B176  <||@
  Comment 651 block B176 null  <||@
  Comment 651 1950 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 651 1952 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 655 1954 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 658 1960 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 662 1956 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B176 -> B179 falseDestination: B176 -> B178  <||@
  Comment 668 block B178 null  <||@
  Comment 668 1964 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 668 1968 J (address: [rdi|QWORD[.]], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 673 1970 rsi|QWORD = MOVE input: long[4|0x4]  <||@
  Comment 680 1972 JUMP ~[] destination: B178 -> B179  <||@
  Comment 680 block B179 null  <||@
  Comment 680 1974 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 680 1976 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 684 1978 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 687 1984 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 691 1980 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B179 -> B182 falseDestination: B179 -> B181  <||@
  Comment 697 block B181 null  <||@
  Comment 697 1988 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 697 1992 J (address: [rdi|QWORD[.] + rsi|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 702 1994 rsi|QWORD = LEA [rsi|QWORD + 2] size: QWORD  <||@
  Comment 706 1996 JUMP ~[] destination: B181 -> B182  <||@
  Comment 706 block B182 null  <||@
  Comment 706 1998 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 706 2000 rdx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 712 2002 CMP (x: rsi|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 715 2004 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B182 -> B185 falseDestination: B182 -> B184  <||@
  Comment 721 block B184 null  <||@
  Comment 721 2010 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 721 2012 MOV (x: [rdi|QWORD[.] + rsi|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 726 2014 JUMP ~[] destination: B184 -> B185  <||@
  Comment 726 block B185 null  <||@
  Comment 726 2016 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 726 2018 rdi|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[char[36]{0, 1, 2, 3, 4, ...}]  <||@
  Comment 726 {Object[char[36]{0, 1, 2, 3, 4, ...}]}  <||@
  Comment 736 2020 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 739 2022 rbx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 742 2024 JUMP ~[] destination: B185 -> B186  <||@
  Comment 747 block B187 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 747 2034 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 752 2036 rdx|DWORD = AND rbx|DWORD y: 15 size: DWORD  <||@
  Comment 757 2038 rdx|DWORD = MOVSX [rdi|QWORD[.] + rdx|DWORD * 2 + 16] size: DWORD  <||@
  Comment 762 2040 MOV (x: [r9|QWORD[.] + rsi|DWORD * 2 + 16], y: rdx|DWORD) size: WORD  <||@
  Comment 768 2042 TEST rbx|DWORD y: -16 size: DWORD  <||@
  Comment 774 2044 BRANCH trueDestinationProbability: 0.4670070830596475 condition: = trueDestination: B187 -> B188 falseDestination: B187 -> B304  <||@
  Comment 780 block B304 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 780 3128 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 780 3130 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 783 3132 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B304 -> B305 falseDestination: B304 -> B306  <||@
  Comment 789 block B306 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 789 3144 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 789 3146 SAFEPOINT - config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 thread: r15 state [bci:32, 31, 2, 26]  <||@
  Comment 789 [rdi:0, r8:0, r9:0, r11:0, stack:56]at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32, duringCall: false, rethrow: false]
              |0          |1           |2            |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |r9|QWORD[.]  |int[0|0x0]  |-  |rsi|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4           
     locals:  |-  |-  |-  |-  |r9|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 789 {infopoint: SAFEPOINT}  <||@
  Comment 789 11  <||@
  Comment 795 3148 rbx|DWORD = SHR rbx|DWORD y: 4 size: DWORD  <||@
  Comment 798 3150 rdx|DWORD = MOVE rsi|DWORD moveKind: DWORD  <||@
  Comment 800 3152 JUMP ~[] destination: B306 -> B186  <||@
  Comment 800 block B186 loop 4 depth 1 header:101|LoopBegin  <||@
  Comment 800 2026 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 800 2028 rsi|DWORD = DEC rdx|DWORD size: DWORD  <||@
  Comment 804 2030 CMP (x: r10|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 807 2032 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B186 -> B187 falseDestination: B186 -> B307  <||@
  Comment 814 block B188 null  <||@
  Comment 814 2046 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 814 2048 rdi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 818 2050 rbx|DWORD = MOV [r11|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 826 2052 rdx|DWORD = ADD (x: rdi|DWORD, y: r10|DWORD) size: DWORD  <||@
  Comment 831 2054 rsi|DWORD = SUB (x: rdx|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 835 2056 rax|QWORD[.] = UNCOMPRESSPOINTER (input: r11|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 842 2058 CMP rsi|DWORD y: 1 size: DWORD  <||@
  Comment 845 2060 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B188 -> B238 falseDestination: B188 -> B190  <||@
  Comment 851 block B238 null  <||@
  Comment 851 2520 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 851 2522 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 853 2524 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B238 -> B242 falseDestination: B238 -> B240  <||@
  Comment 859 block B240 null  <||@
  Comment 859 2534 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 2536 r11|DWORD = MOV [rax|QWORD[.] + 12] size: DWORD  <||@
  Comment 863 2538 rsi|DWORD = SUB (x: r11|DWORD, ~y: r10|DWORD) size: DWORD  <||@
  Comment 869 2540 CMP (x: rdi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 871 2542 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B240 -> B242 falseDestination: B240 -> B243  <||@
  Comment 877 block B243 null  <||@
  Comment 877 2560 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 877 2562 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 882 2564 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 887 2566 r9|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 887 2568 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 890 2570 rdx|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 893 2572 stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 897 2574 rdi|QWORD = LEA [r9|QWORD[*] + 16] size: QWORD  <||@
  Comment 901 2576 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 906 2578 rdx|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 909 2580 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 914 2582 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 914 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 920 2584 r13|DWORD = ADD (x: stack:80|DWORD, y: stack:100|DWORD) size: DWORD  <||@
  Comment 930 2586 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 935 2588 MOV (x: [r8|QWORD[.] + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 939 2590 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 939 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 949 2592 CMP r13|DWORD y: 1 size: DWORD  <||@
  Comment 953 2594 BRANCH trueDestinationProbability: 0.09284041465770032 condition: < trueDestination: B243 -> B244 falseDestination: B243 -> B250  <||@
  Comment 959 block B250 null  <||@
  Comment 959 2666 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 959 2668 r11|DWORD = MOVE stack:84|DWORD moveKind: DWORD  <||@
  Comment 964 2670 rax|DWORD = SUB (x: r11|DWORD, ~y: r13|DWORD) size: DWORD  <||@
  Comment 970 2672 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 972 2674 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B250 -> B251 falseDestination: B250 -> B253  <||@
  Comment 978 block B253 null  <||@
  Comment 978 2690 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 978 2692 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 982 2694 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 986 2696 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 993 2698 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B253 -> B254 falseDestination: B253 -> B258  <||@
  Comment 999 block B254 null  <||@
  Comment 999 2700 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 999 2702 rdx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1004 2704 rdx|DWORD = LEA [rdx|DWORD + 23] size: DWORD  <||@
  Comment 1007 2706 rdx|DWORD = AND rdx|DWORD y: -8 size: DWORD  <||@
  Comment 1010 2708 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 1013 2710 rcx|QWORD = ADD (x: rdx|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1019 2712 CMP (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1022 2714 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B254 -> B258 falseDestination: B254 -> B256  <||@
  Comment 1028 block B256 null  <||@
  Comment 1028 2720 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1028 2722 MOV (x: [r15|QWORD + 96], y: rcx|QWORD) size: QWORD  <||@
  Comment 1032 2724 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 192] instr: 0  <||@
  Comment 1040 2726 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 256] instr: 0  <||@
  Comment 1048 2728 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 320] instr: 0  <||@
  Comment 1056 2730 AMD64PREFETCH ~[rdx|QWORD + rax|QWORD * 1 + 384] instr: 0  <||@
  Comment 1064 2732 MOV (x: [rax|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1068 2734 MOV [rax|QWORD] y: 1 size: QWORD  <||@
  Comment 1075 2736 MOV [rax|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1075 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1082 2738 rax|QWORD[.] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1082 2740 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1085 2742 JUMP ~[] destination: B256 -> B259  <||@
  Comment 1085 block B259 null  <||@
  Comment 1085 2762 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1085 2764 CMP (x: r13|DWORD, y: r14|DWORD) size: DWORD  <||@
  Comment 1088 2766 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r14|DWORD) condition: >  <||@
  Comment 1095 2768 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1098 2770 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1102 2772 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B259 -> B278 falseDestination: B259 -> B261  <||@
  Comment 1108 block B261 null  <||@
  Comment 1108 2778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1108 2780 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1113 2782 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1117 2784 r10|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1121 2786 r11|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1125 2788 TEST (x: r11|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1128 2794 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1135 2790 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B261 -> B266 falseDestination: B261 -> B264  <||@
  Comment 1141 block B266 null  <||@
  Comment 1141 2820 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1141 2822 r11|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1145 2824 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1148 2826 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B266 -> B269 falseDestination: B266 -> B268  <||@
  Comment 1154 block B268 null  <||@
  Comment 1154 2832 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1154 2834 xmm0|V128_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1160 2836 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1166 2838 r11|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 1170 2840 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1173 2842 JUMP ~[] destination: B268 -> B269  <||@
  Comment 1173 block B269 null  <||@
  Comment 1173 2844 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1173 2846 r11|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1177 2848 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1180 2850 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B269 -> B272 falseDestination: B269 -> B271  <||@
  Comment 1186 block B271 null  <||@
  Comment 1186 2856 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1186 2858 xmm0|V64_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 1192 2860 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1198 2862 r11|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 1202 2864 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1205 2866 JUMP ~[] destination: B271 -> B272  <||@
  Comment 1205 block B272 null  <||@
  Comment 1205 2868 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1205 2870 r11|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 1209 2872 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1212 2874 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B272 -> B275 falseDestination: B272 -> B274  <||@
  Comment 1218 block B274 null  <||@
  Comment 1218 2880 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1218 2882 xmm0|V32_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 1224 2884 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1230 2886 r11|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 1234 2888 r8|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1237 2890 JUMP ~[] destination: B274 -> B275  <||@
  Comment 1237 block B275 null  <||@
  Comment 1237 2892 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1237 2894 r11|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 1243 2896 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1246 2898 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B275 -> B278 falseDestination: B275 -> B277  <||@
  Comment 1252 block B277 null  <||@
  Comment 1252 2904 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1252 2906 r10|DWORD = MOVSX [r10|QWORD[.] + r8|QWORD * 2] size: DWORD  <||@
  Comment 1257 2908 MOV (x: [rdx|QWORD[.] + r8|QWORD * 2], y: r10|DWORD) size: WORD  <||@
  Comment 1262 2910 JUMP ~[] destination: B277 -> B278  <||@
  Comment 1262 block B278 null  <||@
  Comment 1262 2912 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1262 2914 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 1265 2916 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1268 2918 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B278 -> B279 falseDestination: B278 -> B298  <||@
  Comment 1274 block B298 null  <||@
  Comment 1274 3058 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1274 3060 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1278 3062 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 1282 3064 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1286 3066 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B298 -> B299 falseDestination: B298 -> B300  <||@
  Comment 1292 block B300 null  <||@
  Comment 1292 3088 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1292 3090 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 1296 3092 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 1303 3094 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1303 3096 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 1303 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 1313 3098 JUMP ~[] destination: B300 -> B301  <||@
  Comment 1313 block B301 null  <||@
  Comment 1313 3100 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1313 3102 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 1316 3104 r10|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1323 3106 MOV (x: [rsi|QWORD[*]], y: r10|QWORD) size: QWORD  <||@
  Comment 1326 3108 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1326 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1333 3110 rax|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 1337 3112 MOV (x: [rsi|QWORD[*] + 12], y: rax|DWORD[.]) size: DWORD  <||@
  Comment 1340 3114 MOV (x: [rsi|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1344 3116 rax|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1347 3118 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1356 12  <||@
  Comment 1366 block B279 null  <||@
  Comment 1366 2920 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1366 2922 r10|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 1371 2924 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 1374 2926 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 1378 2928 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1381 2930 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B279 -> B280 falseDestination: B279 -> B281  <||@
  Comment 1387 block B280 null  <||@
  Comment 1387 2932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1387 2934 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1394 2936 JUMP ~[] destination: B280 -> B284  <||@
  Comment 1394 block B284 null  <||@
  Comment 1394 2960 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1394 2962 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 1398 2964 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1401 2966 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B284 -> B287 falseDestination: B284 -> B286  <||@
  Comment 1407 block B286 null  <||@
  Comment 1407 2972 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1407 2974 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1411 2976 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1417 2978 rsi|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1421 2980 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1424 2982 JUMP ~[] destination: B286 -> B287  <||@
  Comment 1424 block B287 null  <||@
  Comment 1424 2984 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1424 2986 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 1428 2988 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1431 2990 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B287 -> B290 falseDestination: B287 -> B289  <||@
  Comment 1437 block B289 null  <||@
  Comment 1437 2996 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1437 2998 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 1441 3000 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 1447 3002 rsi|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 1451 3004 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1454 3006 JUMP ~[] destination: B289 -> B290  <||@
  Comment 1454 block B290 null  <||@
  Comment 1454 3008 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1454 3010 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 1458 3012 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1461 3014 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B290 -> B293 falseDestination: B290 -> B292  <||@
  Comment 1467 block B292 null  <||@
  Comment 1467 3020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1467 3022 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 1471 3024 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 1477 3026 rsi|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 1481 3028 r11|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1484 3030 JUMP ~[] destination: B292 -> B293  <||@
  Comment 1484 block B293 null  <||@
  Comment 1484 3032 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1484 3034 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 1487 3036 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1490 3038 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B293 -> B298 falseDestination: B293 -> B295  <||@
  Comment 1496 block B295 null  <||@
  Comment 1496 3044 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1496 3046 MOV (x: [r10|QWORD[.] + r11|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 1501 3048 JUMP ~[] destination: B295 -> B298  <||@
  Comment 1506 block B98 null  <||@
  Comment 1506 1186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1506 1188 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 1509 1190 r13|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1512 1192 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 1518 1194 JUMP ~[] destination: B98 -> B168  <||@
  Comment 1523 block B174 null  <||@
  Comment 1523 1932 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1523 1934 rsi|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1530 1936 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 1534 1938 JUMP ~[] destination: B174 -> B176  <||@
  Comment 1539 block B264 loop 7 depth 1 header:2549|LoopBegin  <||@
  Comment 1539 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1552 2806 xmm0|V256_WORD = H [r10|QWORD[.] + r8|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 1558 2808 J (address: [rdx|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1564 2810 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 1568 2812 CMP (x: r8|QWORD, y: r11|QWORD) size: QWORD  <||@
  Comment 1571 2814 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B264 -> B266 falseDestination: B264 -> B264  <||@
  Comment 1578 block B281 null  <||@
  Comment 1578 2938 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1578 2940 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 1582 2942 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1589 2944 JUMP ~[] destination: B281 -> B282  <||@
  Comment 1589 block B282 loop 8 depth 1 header:2612|LoopBegin  <||@
  Comment 1589 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1600 2948 J (address: [r10|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 1606 2950 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 1610 2952 CMP (x: r11|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1613 2954 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B282 -> B284 falseDestination: B282 -> B282  <||@
  Comment 1620 block B244 null  <||@
  Comment 1620 2596 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1620 2598 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1623 2600 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B244 -> B245 falseDestination: B244 -> B246  <||@
  Comment 1629 block B246 null  <||@
  Comment 1629 2608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1629 2610 rax|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1633 2612 rsi|QWORD = LEA [rax|QWORD + 24] size: QWORD  <||@
  Comment 1637 2614 CMP (x: rsi|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 1641 2616 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B246 -> B247 falseDestination: B246 -> B248  <||@
  Comment 1647 block B248 null  <||@
  Comment 1647 2638 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1647 2640 MOV (x: [r15|QWORD + 96], y: rsi|QWORD) size: QWORD  <||@
  Comment 1651 2642 AMD64PREFETCH ~[rax|QWORD + 216] instr: 0  <||@
  Comment 1658 2644 rax|QWORD[*] = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 1658 2646 JUMP ~[] destination: B248 -> B249  <||@
  Comment 1658 block B249 null  <||@
  Comment 1658 2648 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1658 2650 rsi|QWORD[.] = MOVE rax|QWORD[*] moveKind: QWORD  <||@
  Comment 1661 2652 rdx|QWORD = MOV [r14|QWORD + 168] size: QWORD  <||@
  Comment 1668 2654 MOV (x: [rax|QWORD[*]], y: rdx|QWORD) size: QWORD  <||@
  Comment 1671 2656 MOV [rax|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}  <||@
  Comment 1671 {meta{HotSpotType<Ljava/lang/String;, resolved>;compressed}}  <||@
  Comment 1678 2658 MOV [rax|QWORD[*] + 12] y: -559030611 size: DWORD c: NarrowOop[char[0]{}]  <||@
  Comment 1678 {NarrowOop[char[0]{}]}  <||@
  Comment 1685 2660 MOV (x: [rax|QWORD[*] + 16], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 1689 2662 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1692 2664 RETURN (savedRbp: stack:16|QWORD, value: rax|QWORD[.]) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1701 12  <||@
  Comment 1711 block B258 null  <||@
  Comment 1711 2748 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1711 2750 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 1711 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 1721 2752 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 1724 2754 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1729 2756 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 1732 2758 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 1732 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1737 [stack:32, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:72|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 1738 2760 JUMP ~[] destination: B258 -> B259  <||@
  Comment 1743 block B101 null  <||@
  Comment 1743 1204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1743 1206 stack:80|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 1748 1208 stack:96|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 1753 1210 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1758 1212 rdx|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 1760 1214 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 19]  <||@
  Comment 1760 9  <||@
  Comment 1767 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 1772 [stack:32, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:72|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 1773 1216 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 1776 1218 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 1779 1220 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B101 -> B102 falseDestination: B101 -> B103  <||@
  Comment 1785 block B103 null  <||@
  Comment 1785 1234 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1785 1236 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 1789 1238 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 1793 1240 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 1800 1242 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B103 -> B104 falseDestination: B103 -> B108  <||@
  Comment 1806 block B104 null  <||@
  Comment 1806 1244 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1806 1246 r10|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 1812 1248 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 1816 1250 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 1820 1252 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 1823 1254 r11|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 1829 1256 CMP (x: r11|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1832 1258 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B104 -> B108 falseDestination: B104 -> B106  <||@
  Comment 1838 block B106 null  <||@
  Comment 1838 1264 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1838 1266 MOV (x: [r15|QWORD + 96], y: r11|QWORD) size: QWORD  <||@
  Comment 1842 1268 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 1851 1270 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 1860 1272 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 1869 1274 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 1878 1276 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 1882 1278 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 1889 1280 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 1889 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 1896 1282 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 1896 1284 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 1899 1288 JUMP ~[] destination: B106 -> B109  <||@
  Comment 1899 block B109 null  <||@
  Comment 1899 1308 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1899 1286 r9|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 1904 1310 CMP (x: r13|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 1907 1312 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: r9|DWORD) condition: >  <||@
  Comment 1914 1314 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 1917 1316 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 1921 1318 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B109 -> B128 falseDestination: B109 -> B111  <||@
  Comment 1927 block B111 null  <||@
  Comment 1927 1324 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1927 1326 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1932 1328 rdx|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 1936 1330 rcx|QWORD[.] = LEA [r10|QWORD[.] + 16] size: QWORD  <||@
  Comment 1940 1332 r10|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 1944 1334 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1947 1340 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1954 1336 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B111 -> B116 falseDestination: B111 -> B114  <||@
  Comment 1960 block B116 null  <||@
  Comment 1960 1366 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1960 1368 r10|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 1964 1370 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1967 1372 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B116 -> B119 falseDestination: B116 -> B118  <||@
  Comment 1973 block B118 null  <||@
  Comment 1973 1378 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1973 1380 xmm0|V128_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 1979 1382 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 1985 1384 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 1989 1386 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 1992 1388 JUMP ~[] destination: B118 -> B119  <||@
  Comment 1992 block B119 null  <||@
  Comment 1992 1390 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1992 1392 r10|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 1996 1394 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 1999 1396 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B119 -> B122 falseDestination: B119 -> B121  <||@
  Comment 2005 block B121 null  <||@
  Comment 2005 1402 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2005 1404 xmm0|V64_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2011 1406 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2017 1408 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2021 1410 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2024 1412 JUMP ~[] destination: B121 -> B122  <||@
  Comment 2024 block B122 null  <||@
  Comment 2024 1414 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2024 1416 r10|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 2028 1418 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2031 1420 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B122 -> B125 falseDestination: B122 -> B124  <||@
  Comment 2037 block B124 null  <||@
  Comment 2037 1426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2037 1428 xmm0|V32_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2043 1430 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2049 1432 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2053 1434 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2056 1436 JUMP ~[] destination: B124 -> B125  <||@
  Comment 2056 block B125 null  <||@
  Comment 2056 1438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2056 1440 r10|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 2062 1442 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2065 1444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B125 -> B128 falseDestination: B125 -> B127  <||@
  Comment 2071 block B127 null  <||@
  Comment 2071 1450 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2071 1452 rcx|DWORD = MOVSX [rcx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2076 1454 MOV (x: [rdx|QWORD[.] + r11|QWORD * 2], y: rcx|DWORD) size: WORD  <||@
  Comment 2081 1456 JUMP ~[] destination: B127 -> B128  <||@
  Comment 2081 block B128 null  <||@
  Comment 2081 1458 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2081 1460 rdx|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2084 1462 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2087 1464 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B128 -> B129 falseDestination: B128 -> B147  <||@
  Comment 2093 block B147 null  <||@
  Comment 2093 1610 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2093 1612 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2098 1614 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2102 1616 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2106 1618 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2110 1620 JUMP ~[] destination: B147 -> B148  <||@
  Comment 2110 block B148 null  <||@
  Comment 2110 1622 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2110 1624 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2120 1626 rdx|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2127 1628 MOV (x: [r8|QWORD[.] + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 2131 1630 rdx|QWORD[*] = SHR r8|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2138 1632 MOVB (x: [rdx|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2142 1634 rsi|DWORD = MOV [r8|QWORD[.] + 12] size: DWORD  <||@
  Comment 2146 1636 TEST (x: rsi|DWORD, y: rsi|DWORD) size: DWORD  <||@
  Comment 2148 1638 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B148 -> B152 falseDestination: B148 -> B150  <||@
  Comment 2154 block B150 null  <||@
  Comment 2154 1646 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2154 1648 r13|DWORD = DEC r13|DWORD size: DWORD  <||@
  Comment 2157 1650 CMP (x: rsi|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 2160 1652 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B150 -> B152 falseDestination: B150 -> B153  <||@
  Comment 2166 block B153 null  <||@
  Comment 2166 1668 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2166 1670 rbx|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotMethod<Object.hashCode()>}  <||@
  Comment 2166 {meta{HotSpotMethod<Object.hashCode()>}}  <||@
  Comment 2176 1672 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 2181 1674 rdx|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 2184 1676 MOV [rax|QWORD[.] + rdx|QWORD * 2 + 16] y: 64 size: WORD  <||@
  Comment 2191 1678 rsi|DWORD = INC rsi|DWORD size: DWORD  <||@
  Comment 2193 1680 MOV (x: [r8|QWORD[.] + 12], y: rsi|DWORD) size: DWORD  <||@
  Comment 2197 1682 CMP (x: rbx|QWORD, y: [r10|DWORD * 8 + 464]) size: QWORD  <||@
  Comment 2205 1684 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B153 -> B154 falseDestination: B153 -> B164  <||@
  Comment 2211 block B154 null  <||@
  Comment 2211 1686 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2211 1688 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 2216 1690 rdx|QWORD = MOV [rsi|QWORD[.]] size: QWORD  <||@
  Comment 2219 1692 rcx|QWORD = AND rdx|QWORD y: 7 size: QWORD  <||@
  Comment 2226 1694 CMP rcx|QWORD y: 1 size: QWORD  <||@
  Comment 2230 1696 BRANCH trueDestinationProbability: 0.99 condition: = trueDestination: B154 -> B155 falseDestination: B154 -> B159  <||@
  Comment 2236 block B155 null  <||@
  Comment 2236 1698 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2236 1700 rdx|QWORD = SHR rdx|QWORD y: 8 size: QWORD  <||@
  Comment 2240 1702 rdx|DWORD = MOV rdx|QWORD size: DWORD  <||@
  Comment 2242 1704 TEST (x: rdx|DWORD, y: rdx|DWORD) size: DWORD  <||@
  Comment 2244 1706 BRANCH trueDestinationProbability: 0.010000000000000009 condition: = trueDestination: B155 -> B159 falseDestination: B155 -> B157  <||@
  Comment 2250 block B157 null  <||@
  Comment 2250 1714 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2250 1716 r13|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 2253 1718 JUMP ~[] destination: B157 -> B160  <||@
  Comment 2253 block B160 null  <||@
  Comment 2253 1744 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2253 1746 rsi|DWORD = LZCNT r13|DWORD size: DWORD  <||@
  Comment 2258 1748 rdx|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 2263 1750 rdx|DWORD = SUB (x: rdx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2265 1752 rcx|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 2270 1754 rcx|DWORD = SUB (x: rcx|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 2272 1756 TEST rcx|DWORD y: -4 size: DWORD  <||@
  Comment 2278 1758 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B160 -> B161 falseDestination: B160 -> B162  <||@
  Comment 2284 block B162 null  <||@
  Comment 2284 1768 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2284 1770 rdi|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2287 1772 r10|DWORD = MOVE rcx|DWORD moveKind: DWORD  <||@
  Comment 2290 1774 JUMP ~[] destination: B162 -> B167  <||@
  Comment 2295 block B24 null  <||@
  Comment 2295 430 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2295 432 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2298 434 r8|QWORD[.] = UNCOMPRESSPOINTER (input: r8|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2302 436 stack:48|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 2307 440 JUMP ~[] destination: B24 -> B25  <||@
  Comment 2307 block B25 null  <||@
  Comment 2307 442 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 2307 444 stack:52|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2312 446 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2316 448 rdx|QWORD = LEA [rsi|QWORD + 72] size: QWORD  <||@
  Comment 2320 450 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 2324 452 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B27  <||@
  Comment 2330 block B27 null  <||@
  Comment 2330 474 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2330 476 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 2334 478 AMD64PREFETCH ~[rsi|QWORD + 264] instr: 0  <||@
  Comment 2341 480 AMD64PREFETCH ~[rsi|QWORD + 328] instr: 0  <||@
  Comment 2348 482 AMD64PREFETCH ~[rsi|QWORD + 392] instr: 0  <||@
  Comment 2355 484 AMD64PREFETCH ~[rsi|QWORD + 456] instr: 0  <||@
  Comment 2362 486 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2362 488 JUMP ~[] destination: B27 -> B28  <||@
  Comment 2362 block B28 null  <||@
  Comment 2362 490 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2362 492 r10|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 2365 494 stack:64|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2370 496 rdx|QWORD[*] = LEA [rsi|QWORD[*] + 24] size: QWORD  <||@
  Comment 2374 498 rdx|QWORD[.] = MOVE rdx|QWORD[*] moveKind: QWORD  <||@
  Comment 2374 500 r9|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 2381 502 MOV (x: [rsi|QWORD[*]], y: r9|QWORD) size: QWORD  <||@
  Comment 2384 504 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 2384 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 2391 506 MOV (x: [rsi|QWORD[*] + 12], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 2395 508 r9|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2402 510 MOV (x: [rsi|QWORD[*] + 16], y: r9|DWORD[.]) size: DWORD  <||@
  Comment 2406 512 MOV [rsi|QWORD[*] + 36] y: 16 size: DWORD  <||@
  Comment 2413 514 MOV [rsi|QWORD[*] + 24] y: 1 size: QWORD  <||@
  Comment 2421 516 MOV [rsi|QWORD[*] + 32] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2421 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2428 518 J (address: [rsi|QWORD[*] + 40], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 2433 520 rsi|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 2436 522 stack:72|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 2441 524 rdx|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2444 526 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 14]  <||@
  Comment 2444 9  <||@
  Comment 2447 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 2452 [stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2              
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 2453 528 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 2458 530 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD  <||@
  Comment 2462 532 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2467 534 CMP (x: r11|DWORD, y: [r14|DWORD[.] * 8 + 12]) size: DWORD state [bci:20, 21, 2, 14]  <||@
  Comment 2467 [r13:0, r14:0, stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1             |2         
     locals:  |stack:64|QWORD[.]  |r13|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 2467 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 2475 536 BRANCH trueDestinationProbability: 0.0 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 2481 block B30 null  <||@
  Comment 2481 550 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2481 552 TEST (x: rax|DWORD, y: rax|DWORD) size: DWORD  <||@
  Comment 2483 554 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B30 -> B31 falseDestination: B30 -> B33  <||@
  Comment 2489 block B33 null  <||@
  Comment 2489 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2489 578 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 2493 580 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 2497 582 CMP rax|DWORD y: 16777215 size: DWORD  <||@
  Comment 2503 584 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B33 -> B34 falseDestination: B33 -> B38  <||@
  Comment 2509 block B34 null  <||@
  Comment 2509 586 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2509 588 r10|DWORD = SHL rax|DWORD size: DWORD  <||@
  Comment 2515 590 r10|DWORD = LEA [r10|DWORD + 23] size: DWORD  <||@
  Comment 2519 592 r10|DWORD = AND r10|DWORD y: -8 size: DWORD  <||@
  Comment 2523 594 r10|QWORD = MOVSXD r10|DWORD size: QWORD  <||@
  Comment 2526 596 r8|QWORD = ADD (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 2532 598 CMP (x: r8|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 2535 600 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B34 -> B38 falseDestination: B34 -> B36  <||@
  Comment 2541 block B36 null  <||@
  Comment 2541 608 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2541 610 MOV (x: [r15|QWORD + 96], y: r8|QWORD) size: QWORD  <||@
  Comment 2545 612 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 2554 614 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 2563 616 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 2572 618 AMD64PREFETCH ~[r10|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 2581 620 MOV (x: [rsi|QWORD + 12], y: rax|DWORD) size: DWORD  <||@
  Comment 2584 622 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 2591 624 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 2591 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 2598 626 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 2598 628 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 2603 630 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2606 632 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 2609 634 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 2612 636 JUMP ~[] destination: B36 -> B39  <||@
  Comment 2612 block B39 null  <||@
  Comment 2612 660 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2612 662 CMP r13|DWORD y: 17 size: DWORD  <||@
  Comment 2616 664 rdi|DWORD = CMOVE (falseValue: int[16|0x10], ~trueValue: r13|DWORD) condition: <  <||@
  Comment 2625 666 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 2628 668 CMP rdi|QWORD y: 1 size: QWORD  <||@
  Comment 2632 670 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B39 -> B58 falseDestination: B39 -> B41  <||@
  Comment 2638 block B41 null  <||@
  Comment 2638 676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2638 678 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2643 680 rsi|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 2647 682 rdx|QWORD[.] = LEA [rdx|QWORD[.] + 16] size: QWORD  <||@
  Comment 2651 684 r10|QWORD = LEA [rdi|QWORD - 16] size: QWORD  <||@
  Comment 2655 686 TEST (x: r10|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2658 692 r11|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 2665 688 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B41 -> B46 falseDestination: B41 -> B44  <||@
  Comment 2671 block B46 null  <||@
  Comment 2671 718 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2671 720 r10|QWORD = LEA [rdi|QWORD - 8] size: QWORD  <||@
  Comment 2675 722 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2678 724 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B46 -> B49 falseDestination: B46 -> B48  <||@
  Comment 2684 block B48 null  <||@
  Comment 2684 730 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2684 732 xmm0|V128_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 2690 734 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 2696 736 r10|QWORD = LEA [r11|QWORD + 8] size: QWORD  <||@
  Comment 2700 738 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2703 740 JUMP ~[] destination: B48 -> B49  <||@
  Comment 2703 block B49 null  <||@
  Comment 2703 742 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2703 744 r10|QWORD = LEA [rdi|QWORD - 4] size: QWORD  <||@
  Comment 2707 746 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2710 748 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B49 -> B52 falseDestination: B49 -> B51  <||@
  Comment 2716 block B51 null  <||@
  Comment 2716 754 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2716 756 xmm0|V64_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 2722 758 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 2728 760 r10|QWORD = LEA [r11|QWORD + 4] size: QWORD  <||@
  Comment 2732 762 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2735 764 JUMP ~[] destination: B51 -> B52  <||@
  Comment 2735 block B52 null  <||@
  Comment 2735 766 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2735 768 r10|QWORD = LEA [rdi|QWORD - 2] size: QWORD  <||@
  Comment 2739 770 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2742 772 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B52 -> B55 falseDestination: B52 -> B54  <||@
  Comment 2748 block B54 null  <||@
  Comment 2748 778 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2748 780 xmm0|V32_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 2754 782 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 2760 784 r10|QWORD = LEA [r11|QWORD + 2] size: QWORD  <||@
  Comment 2764 786 r11|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2767 788 JUMP ~[] destination: B54 -> B55  <||@
  Comment 2767 block B55 null  <||@
  Comment 2767 790 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 2767 792 r10|QWORD = DEC rdi|QWORD size: QWORD  <||@
  Comment 2773 794 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 2776 796 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B55 -> B58 falseDestination: B55 -> B57  <||@
  Comment 2782 block B57 null  <||@
  Comment 2782 802 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2782 804 rdx|DWORD = MOVSX [rdx|QWORD[.] + r11|QWORD * 2] size: DWORD  <||@
  Comment 2787 806 MOV (x: [rsi|QWORD[.] + r11|QWORD * 2], y: rdx|DWORD) size: WORD  <||@
  Comment 2792 808 JUMP ~[] destination: B57 -> B58  <||@
  Comment 2792 block B58 null  <||@
  Comment 2792 810 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2792 812 rsi|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 2795 814 CMP (x: rsi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 2798 816 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B58 -> B59 falseDestination: B58 -> B77  <||@
  Comment 2804 block B77 null  <||@
  Comment 2804 962 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2804 964 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2809 966 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 2813 968 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 2817 970 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 2821 972 JUMP ~[] destination: B77 -> B78  <||@
  Comment 2821 block B78 null  <||@
  Comment 2821 974 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2821 976 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 2831 978 rsi|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2838 980 MOV (x: [r10|QWORD[.] + 16], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 2842 982 rsi|QWORD[*] = SHR r10|QWORD[.] y: 9 size: QWORD  <||@
  Comment 2849 984 MOVB (x: [rsi|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 2853 986 r11|DWORD = MOV [r10|QWORD[.] + 12] size: DWORD  <||@
  Comment 2857 988 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 2860 990 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B78 -> B82 falseDestination: B78 -> B80  <||@
  Comment 2866 block B80 null  <||@
  Comment 2866 998 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2866 1000 rdi|DWORD = SUB (x: r13|DWORD, ~y: r14|DWORD) size: DWORD  <||@
  Comment 2872 1002 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 2875 1004 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B80 -> B82 falseDestination: B80 -> B83  <||@
  Comment 2881 block B83 null  <||@
  Comment 2881 1020 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2881 1022 stack:80|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 2886 1024 r10|DWORD[.] = MOVE stack:76|DWORD[.] moveKind: DWORD  <||@
  Comment 2891 1026 rdi|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 2898 1028 rdi|QWORD[*] = MOVE rdi|QWORD[.] moveKind: QWORD  <||@
  Comment 2898 1030 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2901 1032 rdx|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 2904 1034 r10|QWORD = MOV r14|DWORD size: DWORD  <||@
  Comment 2907 1036 rdi|QWORD = LEA [rdi|QWORD[*] + 16] size: QWORD  <||@
  Comment 2911 1038 rsi|QWORD = LEA [rsi|QWORD[*] + rdx|QWORD * 2 + 16] size: QWORD  <||@
  Comment 2916 1040 rdx|QWORD = MOVE r10|QWORD moveKind: QWORD  <||@
  Comment 2919 1042 stack:72|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2924 1044 stack:84|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2929 1046 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charArraycopy(Word,Word,Word)void@0x106812d40:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 2929 {Field[name=StubRoutines::_jshort_arraycopy, type=address, offset=0, address=0x105a7dc78, value=0x106812d40]:0x106812d40}  <||@
  Comment 2935 1048 r11|DWORD = ADD (x: stack:52|DWORD, y: stack:84|DWORD) size: DWORD  <||@
  Comment 2945 1050 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 2950 1052 MOV (x: [r8|QWORD[.] + 12], y: r11|DWORD) size: DWORD  <||@
  Comment 2954 1054 rsi|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 2957 1056 r10|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 2962 1058 rdi|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 2966 1060 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 2971 1062 JUMP ~[] destination: B83 -> B84  <||@
  Comment 2976 block B190 null  <||@
  Comment 2976 2066 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 2976 2068 stack:96|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 2981 2070 stack:100|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 2985 2072 stack:112|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 2990 2074 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 2995 2076 stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3000 2078 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3005 2080 rsi|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3010 2082 rax|DWORD = CALL_DIRECT [rsi|QWORD[.], rdx|DWORD] [] callTarget: HotSpotMethod<AbstractStringBuilder.newCapacity(int)> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:17, 21, 2, 29]  <||@
  Comment 3010 9  <||@
  Comment 3015 {HotSpotMethod<AbstractStringBuilder.newCapacity(int)>}  <||@
  Comment 3020 [stack:8, stack:32, stack:44, stack:56]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:125) [bci: 17, duringCall: true, rethrow: false]
              |0                  |1                 
     locals:  |-                  |-                 
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.] 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                                                           |2              
     locals:  |stack:72|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3021 2084 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 3024 2086 TEST (x: r13|DWORD, y: r13|DWORD) size: DWORD  <||@
  Comment 3027 2088 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B190 -> B191 falseDestination: B190 -> B192  <||@
  Comment 3033 block B192 null  <||@
  Comment 3033 2106 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3033 2108 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 3037 2110 rdx|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 3041 2112 CMP r13|DWORD y: 16777215 size: DWORD  <||@
  Comment 3048 2114 BRANCH trueDestinationProbability: 0.9 condition: |<| trueDestination: B192 -> B193 falseDestination: B192 -> B197  <||@
  Comment 3054 block B193 null  <||@
  Comment 3054 2116 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3054 2118 rcx|DWORD = SHL r13|DWORD size: DWORD  <||@
  Comment 3059 2120 rcx|DWORD = LEA [rcx|DWORD + 23] size: DWORD  <||@
  Comment 3062 2122 rcx|DWORD = AND rcx|DWORD y: -8 size: DWORD  <||@
  Comment 3065 2124 rcx|QWORD = MOVSXD rcx|DWORD size: QWORD  <||@
  Comment 3068 2126 r10|QWORD = ADD (x: rcx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3074 2128 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3077 2130 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B193 -> B197 falseDestination: B193 -> B195  <||@
  Comment 3083 block B195 null  <||@
  Comment 3083 2138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3083 2140 MOV (x: [r15|QWORD + 96], y: r10|QWORD) size: QWORD  <||@
  Comment 3087 2142 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 192] instr: 0  <||@
  Comment 3095 2144 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 256] instr: 0  <||@
  Comment 3103 2146 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 320] instr: 0  <||@
  Comment 3111 2148 AMD64PREFETCH ~[rcx|QWORD + rsi|QWORD * 1 + 384] instr: 0  <||@
  Comment 3119 2150 MOV (x: [rsi|QWORD + 12], y: r13|DWORD) size: DWORD  <||@
  Comment 3123 2152 MOV [rsi|QWORD] y: 1 size: QWORD  <||@
  Comment 3130 2154 MOV [rsi|QWORD + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 3130 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 3137 2156 rsi|QWORD[.] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3137 2158 rax|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 3140 2160 rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 3144 2162 r14|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3149 2164 JUMP ~[] destination: B195 -> B198  <||@
  Comment 3149 block B198 null  <||@
  Comment 3149 2188 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3149 2190 CMP (x: r13|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 3152 2192 rsi|DWORD = CMOVE (falseValue: r13|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 3158 2194 rsi|QWORD = MOVSXD rsi|DWORD size: QWORD  <||@
  Comment 3161 2196 CMP rsi|QWORD y: 1 size: QWORD  <||@
  Comment 3165 2198 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B198 -> B217 falseDestination: B198 -> B200  <||@
  Comment 3171 block B200 null  <||@
  Comment 3171 2204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3171 2206 r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3176 2208 r10|QWORD[.] = LEA [rax|QWORD[.] + 16] size: QWORD  <||@
  Comment 3180 2210 r11|QWORD[*] = LEA [r11|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 3188 2212 r8|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3192 2214 TEST (x: r8|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3195 2220 r9|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3202 2216 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B200 -> B205 falseDestination: B200 -> B203  <||@
  Comment 3208 block B205 null  <||@
  Comment 3208 2246 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3208 2248 r8|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3212 2250 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3215 2252 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B205 -> B208 falseDestination: B205 -> B207  <||@
  Comment 3221 block B207 null  <||@
  Comment 3221 2258 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3221 2260 xmm0|V128_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVDQU  <||@
  Comment 3227 2262 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3233 2264 r8|QWORD = LEA [r9|QWORD + 8] size: QWORD  <||@
  Comment 3237 2266 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3240 2268 JUMP ~[] destination: B207 -> B208  <||@
  Comment 3240 block B208 null  <||@
  Comment 3240 2270 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3240 2272 r8|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3244 2274 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3247 2276 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B208 -> B211 falseDestination: B208 -> B210  <||@
  Comment 3253 block B210 null  <||@
  Comment 3253 2282 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3253 2284 xmm0|V64_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVQ  <||@
  Comment 3259 2286 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3265 2288 r8|QWORD = LEA [r9|QWORD + 4] size: QWORD  <||@
  Comment 3269 2290 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3272 2292 JUMP ~[] destination: B210 -> B211  <||@
  Comment 3272 block B211 null  <||@
  Comment 3272 2294 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3272 2296 r8|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3276 2298 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3279 2300 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B211 -> B214 falseDestination: B211 -> B213  <||@
  Comment 3285 block B213 null  <||@
  Comment 3285 2306 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3285 2308 xmm0|V32_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: XMM oh: VMOVD  <||@
  Comment 3291 2310 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3297 2312 r8|QWORD = LEA [r9|QWORD + 2] size: QWORD  <||@
  Comment 3301 2314 r9|QWORD = MOVE r8|QWORD moveKind: QWORD  <||@
  Comment 3304 2316 JUMP ~[] destination: B213 -> B214  <||@
  Comment 3304 block B214 null  <||@
  Comment 3304 2318 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3304 2320 r8|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3310 2322 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 3313 2324 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B214 -> B217 falseDestination: B214 -> B216  <||@
  Comment 3319 block B216 null  <||@
  Comment 3319 2330 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3319 2332 r11|DWORD = MOVSX [r11|QWORD[*] + r9|QWORD * 2] size: DWORD  <||@
  Comment 3324 2334 MOV (x: [r10|QWORD[.] + r9|QWORD * 2], y: r11|DWORD) size: WORD  <||@
  Comment 3329 2336 JUMP ~[] destination: B216 -> B217  <||@
  Comment 3329 block B217 null  <||@
  Comment 3329 2338 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3329 2340 r10|QWORD = MOVSXD r13|DWORD size: QWORD  <||@
  Comment 3332 2342 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3335 2344 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B217 -> B218 falseDestination: B217 -> B236  <||@
  Comment 3341 block B236 null  <||@
  Comment 3341 2486 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3341 2488 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3345 2490 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3349 2492 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3353 2494 JUMP ~[] destination: B236 -> B237  <||@
  Comment 3353 block B237 null  <||@
  Comment 3353 2496 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3353 2498 rsi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 3363 2500 r10|DWORD[.] = COMPRESSPOINTER (input: rax|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 3370 2502 MOV (x: [r14|QWORD[.] + 16], y: r10|DWORD[.]) size: DWORD  <||@
  Comment 3374 2504 r8|QWORD[*] = SHR r14|QWORD[.] y: 9 size: QWORD  <||@
  Comment 3381 2506 MOVB (x: [r8|QWORD[*] + rsi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 3385 2508 rdi|DWORD = MOV [r14|QWORD[.] + 12] size: DWORD  <||@
  Comment 3389 2510 rcx|QWORD = MOVE stack:112|QWORD moveKind: QWORD  <||@
  Comment 3394 2512 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 3399 2514 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3404 2516 r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 3407 2518 JUMP ~[] destination: B237 -> B238  <||@
  Comment 3412 block B59 null  <||@
  Comment 3412 818 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3412 820 rdx|QWORD[.] = LEA [rax|QWORD[.] + rdi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3417 822 rsi|QWORD = SUB (x: rsi|QWORD, ~y: rdi|QWORD) size: QWORD  <||@
  Comment 3420 824 rdi|QWORD = LEA [rsi|QWORD - 16] size: QWORD  <||@
  Comment 3424 826 TEST (x: rdi|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3427 828 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B59 -> B60 falseDestination: B59 -> B61  <||@
  Comment 3433 block B60 null  <||@
  Comment 3433 830 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3433 832 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3440 834 JUMP ~[] destination: B60 -> B64  <||@
  Comment 3440 block B64 null  <||@
  Comment 3440 858 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3440 860 rdi|QWORD = LEA [rsi|QWORD - 8] size: QWORD  <||@
  Comment 3444 862 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3447 868 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3451 864 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B64 -> B67 falseDestination: B64 -> B66  <||@
  Comment 3457 block B66 null  <||@
  Comment 3457 872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3457 876 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3463 878 rdi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3467 880 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3470 882 JUMP ~[] destination: B66 -> B67  <||@
  Comment 3470 block B67 null  <||@
  Comment 3470 884 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3470 886 rdi|QWORD = LEA [rsi|QWORD - 4] size: QWORD  <||@
  Comment 3474 888 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3477 894 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3481 890 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B67 -> B70 falseDestination: B67 -> B69  <||@
  Comment 3487 block B69 null  <||@
  Comment 3487 898 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3487 902 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3493 904 rdi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3497 906 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3500 908 JUMP ~[] destination: B69 -> B70  <||@
  Comment 3500 block B70 null  <||@
  Comment 3500 910 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3500 912 rdi|QWORD = LEA [rsi|QWORD - 2] size: QWORD  <||@
  Comment 3504 914 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 3507 920 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3511 916 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B70 -> B73 falseDestination: B70 -> B72  <||@
  Comment 3517 block B72 null  <||@
  Comment 3517 924 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3517 928 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3523 930 rdi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3527 932 r10|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 3530 934 JUMP ~[] destination: B72 -> B73  <||@
  Comment 3530 block B73 null  <||@
  Comment 3530 936 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3530 938 rsi|QWORD = DEC rsi|QWORD size: QWORD  <||@
  Comment 3533 940 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3536 942 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B73 -> B74 falseDestination: B73 -> B75  <||@
  Comment 3542 block B75 null  <||@
  Comment 3542 950 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3542 952 MOV (x: [rdx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3547 954 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 3552 956 JUMP ~[] destination: B75 -> B78  <||@
  Comment 3557 block B129 null  <||@
  Comment 3557 1466 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3557 1468 rcx|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3562 1470 rdx|QWORD = SUB (x: rdx|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3565 1472 rsi|QWORD = LEA [rdx|QWORD - 16] size: QWORD  <||@
  Comment 3569 1474 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3572 1476 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B129 -> B130 falseDestination: B129 -> B131  <||@
  Comment 3578 block B130 null  <||@
  Comment 3578 1478 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3578 1480 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3585 1482 JUMP ~[] destination: B130 -> B134  <||@
  Comment 3585 block B134 null  <||@
  Comment 3585 1506 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3585 1508 rsi|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 3589 1510 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3592 1516 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3596 1512 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B134 -> B137 falseDestination: B134 -> B136  <||@
  Comment 3602 block B136 null  <||@
  Comment 3602 1520 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3602 1524 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3608 1526 rsi|QWORD = LEA [r10|QWORD + 8] size: QWORD  <||@
  Comment 3612 1528 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3615 1530 JUMP ~[] destination: B136 -> B137  <||@
  Comment 3615 block B137 null  <||@
  Comment 3615 1532 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3615 1534 rsi|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 3619 1536 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3622 1542 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3626 1538 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B137 -> B140 falseDestination: B137 -> B139  <||@
  Comment 3632 block B139 null  <||@
  Comment 3632 1546 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3632 1550 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3638 1552 rsi|QWORD = LEA [r10|QWORD + 4] size: QWORD  <||@
  Comment 3642 1554 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3645 1556 JUMP ~[] destination: B139 -> B140  <||@
  Comment 3645 block B140 null  <||@
  Comment 3645 1558 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3645 1560 rsi|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 3649 1562 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3652 1568 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3656 1564 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B140 -> B143 falseDestination: B140 -> B142  <||@
  Comment 3662 block B142 null  <||@
  Comment 3662 1572 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3662 1576 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3668 1578 rsi|QWORD = LEA [r10|QWORD + 2] size: QWORD  <||@
  Comment 3672 1580 r10|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3675 1582 JUMP ~[] destination: B142 -> B143  <||@
  Comment 3675 block B143 null  <||@
  Comment 3675 1584 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3675 1586 rdx|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 3678 1588 CMP (x: r10|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 3681 1590 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B143 -> B144 falseDestination: B143 -> B145  <||@
  Comment 3687 block B145 null  <||@
  Comment 3687 1598 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3687 1600 MOV (x: [rcx|QWORD[.] + r10|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3692 1602 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3697 1604 JUMP ~[] destination: B145 -> B148  <||@
  Comment 3702 block B218 null  <||@
  Comment 3702 2346 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3702 2348 r11|QWORD[.] = LEA [rax|QWORD[.] + rsi|QWORD * 2 + 16] size: QWORD  <||@
  Comment 3707 2350 r10|QWORD = SUB (x: r10|QWORD, ~y: rsi|QWORD) size: QWORD  <||@
  Comment 3710 2352 rsi|QWORD = LEA [r10|QWORD - 16] size: QWORD  <||@
  Comment 3714 2354 TEST (x: rsi|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3717 2356 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B218 -> B219 falseDestination: B218 -> B220  <||@
  Comment 3723 block B219 null  <||@
  Comment 3723 2358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3723 2360 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 3730 2362 JUMP ~[] destination: B219 -> B223  <||@
  Comment 3730 block B223 null  <||@
  Comment 3730 2386 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3730 2388 rsi|QWORD = LEA [r10|QWORD - 8] size: QWORD  <||@
  Comment 3734 2390 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3737 2396 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 3741 2392 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B223 -> B226 falseDestination: B223 -> B225  <||@
  Comment 3747 block B225 null  <||@
  Comment 3747 2400 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3747 2404 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm2|V128_WORD) nZ: XMM oh: VMOVDQU  <||@
  Comment 3753 2406 rsi|QWORD = LEA [r8|QWORD + 8] size: QWORD  <||@
  Comment 3757 2408 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3760 2410 JUMP ~[] destination: B225 -> B226  <||@
  Comment 3760 block B226 null  <||@
  Comment 3760 2412 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3760 2414 rsi|QWORD = LEA [r10|QWORD - 4] size: QWORD  <||@
  Comment 3764 2416 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3767 2422 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 3771 2418 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B226 -> B229 falseDestination: B226 -> B228  <||@
  Comment 3777 block B228 null  <||@
  Comment 3777 2426 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3777 2430 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm1|V64_WORD) nZ: XMM oh: VMOVQ  <||@
  Comment 3783 2432 rsi|QWORD = LEA [r8|QWORD + 4] size: QWORD  <||@
  Comment 3787 2434 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3790 2436 JUMP ~[] destination: B228 -> B229  <||@
  Comment 3790 block B229 null  <||@
  Comment 3790 2438 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3790 2440 rsi|QWORD = LEA [r10|QWORD - 2] size: QWORD  <||@
  Comment 3794 2442 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 3797 2448 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 3801 2444 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B229 -> B232 falseDestination: B229 -> B231  <||@
  Comment 3807 block B231 null  <||@
  Comment 3807 2452 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3807 2456 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V32_WORD) nZ: XMM oh: VMOVD  <||@
  Comment 3813 2458 rsi|QWORD = LEA [r8|QWORD + 2] size: QWORD  <||@
  Comment 3817 2460 r8|QWORD = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 3820 2462 JUMP ~[] destination: B231 -> B232  <||@
  Comment 3820 block B232 null  <||@
  Comment 3820 2464 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 3820 2466 r10|QWORD = DEC r10|QWORD size: QWORD  <||@
  Comment 3823 2468 CMP (x: r8|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 3826 2470 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B232 -> B237 falseDestination: B232 -> B234  <||@
  Comment 3832 block B234 null  <||@
  Comment 3832 2476 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3832 2478 MOV (x: [r11|QWORD[.] + r8|QWORD * 2], y: r12|ILLEGAL) size: WORD  <||@
  Comment 3837 2480 JUMP ~[] destination: B234 -> B237  <||@
  Comment 3842 block B161 null  <||@
  Comment 3842 1760 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3842 1762 r14|DWORD = MOVE rdx|DWORD moveKind: DWORD  <||@
  Comment 3845 1764 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3851 1766 JUMP ~[] destination: B161 -> B168  <||@
  Comment 3856 block B171 null  <||@
  Comment 3856 1872 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3856 1874 stack:84|DWORD[.] = MOVE r11|DWORD[.] moveKind: DWORD  <||@
  Comment 3861 1876 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3866 1878 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 3866 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 3876 1880 rdx|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3880 1882 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 3885 1884 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 16, 2, 26]  <||@
  Comment 3885 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 3890 [stack:44, stack:56]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:80|DWORD  |  
  at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16, duringCall: true, rethrow: false]
              |0          |1           |2          |3  |4 
     locals:  |r13|DWORD  |int[4|0x4]  |r14|DWORD  |-  |- 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:72|QWORD[.]   <||@
  Comment 3891 1886 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 3894 1888 r11|DWORD[.] = MOVE stack:84|DWORD[.] moveKind: DWORD  <||@
  Comment 3899 1890 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 3904 1892 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 3909 1894 JUMP ~[] destination: B171 -> B173  <||@
  Comment 3914 block B242 null  <||@
  Comment 3914 2552 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3914 2528 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 3919 2530 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 3924 2554 MOV [r15|QWORD + 668] y: -224097 size: DWORD  <||@
  Comment 3935 2556 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3942 2558 DEOPT info [bci:24, 2, 29]  <||@
  Comment 3942 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3947 [stack:8, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 24, duringCall: false, rethrow: false]
              |0                  |1                                                           |2              
     locals:  |stack:72|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 3948 block B89 null  <||@
  Comment 3948 1102 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3948 1104 MOV [r15|QWORD + 668] y: -239457 size: DWORD  <||@
  Comment 3959 1106 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 3966 1108 DEOPT info [bci:48, 2, 14]  <||@
  Comment 3966 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 3971 [stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2         
     locals:  |stack:72|QWORD[.]  |-  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 3972 block B16 null  <||@
  Comment 3972 270 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 3972 272 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 3975 274 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 3975 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 3985 276 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 3990 278 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 3995 280 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:0]  <||@
  Comment 3995 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4000 [r13:0, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4001 282 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4004 284 r11|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 4007 286 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4011 288 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4011 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 4021 290 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 4025 292 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4029 294 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 4033 296 r10|DWORD = MOVE stack:36|DWORD moveKind: DWORD  <||@
  Comment 4038 298 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4043 300 JUMP ~[] destination: B16 -> B18  <||@
  Comment 4048 block B20 null  <||@
  Comment 4048 358 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4048 360 r13|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4053 362 r14|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4058 364 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4058 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4068 366 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4073 368 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4078 370 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14]  <||@
  Comment 4078 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4083 [r13:0, stack:96]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                             |1  |2         
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |-  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                             |1 
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4084 372 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4087 376 JUMP ~[] destination: B20 -> B22  <||@
  Comment 4092 block B164 null  <||@
  Comment 4092 1780 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4092 1782 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4097 1784 rax|DWORD = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Object.hashCode()> invokeKind: Virtual config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:23]  <||@
  Comment 4097 7  <||@
  Comment 4111 {HotSpotMethod<Object.hashCode()>}  <||@
  Comment 4116 [stack:56]at java.lang.Object.toString(Object.java:236) [bci: 23, duringCall: true, rethrow: false]
              |0                 
     locals:  |-                 
     stack:   |stack:72|QWORD[.]   <||@
  Comment 4117 1786 rsi|DWORD = LZCNT rax|DWORD size: DWORD  <||@
  Comment 4121 1788 r10|DWORD = MOVE input: int[32|0x20]  <||@
  Comment 4127 1790 r10|DWORD = SUB (x: r10|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 4130 1792 r11|DWORD = MOVE input: int[35|0x23]  <||@
  Comment 4136 1794 r11|DWORD = SUB (x: r11|DWORD, ~y: rsi|DWORD) size: DWORD  <||@
  Comment 4139 1796 TEST r11|DWORD y: -4 size: DWORD  <||@
  Comment 4146 1798 BRANCH trueDestinationProbability: 0.26706320871864775 condition: = trueDestination: B164 -> B165 falseDestination: B164 -> B166  <||@
  Comment 4152 block B166 null  <||@
  Comment 4152 1812 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4152 1814 rdx|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4155 1816 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4157 1818 r10|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4160 1820 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4165 1822 JUMP ~[] destination: B166 -> B167  <||@
  Comment 4170 block B96 null  <||@
  Comment 4170 1158 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4170 1160 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 4175 1162 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19]  <||@
  Comment 4175 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 4180 [stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2          
     locals:  |stack:72|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4181 1164 rdi|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4183 1166 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4188 1168 JUMP ~[] destination: B96 -> B97  <||@
  Comment 4193 block B299 null  <||@
  Comment 4193 3068 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4193 3070 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4196 3072 r14|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/String;, resolved>}  <||@
  Comment 4196 {meta{HotSpotType<Ljava/lang/String;, resolved>}}  <||@
  Comment 4206 3074 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4206 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4216 3076 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4221 3078 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4226 3080 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 4226 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4231 [r13:0, stack:56]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:72|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4232 3082 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4235 3084 rax|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4238 3086 JUMP ~[] destination: B299 -> B301  <||@
  Comment 4243 block B61 null  <||@
  Comment 4243 836 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4243 838 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4247 840 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4254 842 JUMP ~[] destination: B61 -> B62  <||@
  Comment 4254 block B62 loop 1 depth 1 header:2738|LoopBegin  <||@
  Comment 4254 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4256 846 J (address: [rdx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4262 848 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 4266 850 CMP (x: r10|QWORD, y: rdi|QWORD) size: QWORD  <||@
  Comment 4269 852 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B62 -> B64 falseDestination: B62 -> B62  <||@
  Comment 4276 block B44 loop 0 depth 1 header:2675|LoopBegin  <||@
  Comment 4276 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4288 704 xmm0|V256_WORD = H [rdx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4294 706 J (address: [rsi|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4300 708 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 4304 710 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4307 712 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B46 falseDestination: B44 -> B44  <||@
  Comment 4314 block B74 null  <||@
  Comment 4314 944 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4314 946 r10|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 4319 948 JUMP ~[] destination: B74 -> B78  <||@
  Comment 4324 block B114 loop 2 depth 1 header:2801|LoopBegin  <||@
  Comment 4324 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4336 1352 xmm0|V256_WORD = H [rcx|QWORD[.] + r11|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4342 1354 J (address: [rdx|QWORD[.] + r11|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4348 1356 r11|QWORD = LEA [r11|QWORD + 16] size: QWORD  <||@
  Comment 4352 1358 CMP (x: r11|QWORD, y: r10|QWORD) size: QWORD  <||@
  Comment 4355 1360 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B114 -> B116 falseDestination: B114 -> B114  <||@
  Comment 4362 block B131 null  <||@
  Comment 4362 1484 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4362 1486 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4366 1488 r10|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4373 1490 JUMP ~[] destination: B131 -> B132  <||@
  Comment 4373 block B132 loop 3 depth 1 header:2864|LoopBegin  <||@
  Comment 4373 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4384 1494 J (address: [rcx|QWORD[.] + r10|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4390 1496 r10|QWORD = LEA [r10|QWORD + 16] size: QWORD  <||@
  Comment 4394 1498 CMP (x: r10|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4397 1500 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B132 -> B134 falseDestination: B132 -> B132  <||@
  Comment 4404 block B144 null  <||@
  Comment 4404 1592 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4404 1594 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4409 1596 JUMP ~[] destination: B144 -> B148  <||@
  Comment 4414 block B220 null  <||@
  Comment 4414 2364 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4414 2366 xmm0|V256_WORD = L oc: SIMD<0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0>  <||@
  Comment 4418 2368 r8|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 4425 2370 JUMP ~[] destination: B220 -> B221  <||@
  Comment 4425 block B221 loop 6 depth 1 header:2990|LoopBegin  <||@
  Comment 4425 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4432 2374 J (address: [r11|QWORD[.] + r8|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4438 2376 r8|QWORD = LEA [r8|QWORD + 16] size: QWORD  <||@
  Comment 4442 2378 CMP (x: r8|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4445 2380 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B221 -> B223 falseDestination: B221 -> B221  <||@
  Comment 4452 block B203 loop 5 depth 1 header:2927|LoopBegin  <||@
  Comment 4452 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 4464 2232 xmm0|V256_WORD = H [r11|QWORD[*] + r9|QWORD * 2] nZ: YMM oh: VMOVDQU  <||@
  Comment 4470 2234 J (address: [r10|QWORD[.] + r9|QWORD * 2], input: xmm0|V256_WORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4476 2236 r9|QWORD = LEA [r9|QWORD + 16] size: QWORD  <||@
  Comment 4480 2238 CMP (x: r9|QWORD, y: r8|QWORD) size: QWORD  <||@
  Comment 4483 2240 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B203 -> B205 falseDestination: B203 -> B203  <||@
  Comment 4490 block B38 null  <||@
  Comment 4490 644 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4490 640 stack:76|DWORD[.] = MOVE r14|DWORD[.] moveKind: DWORD  <||@
  Comment 4495 646 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4495 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4505 648 rdx|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4507 650 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4512 652 r14|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 4515 654 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4518 656 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 14]  <||@
  Comment 4518 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4523 [stack:52, stack:56, stack:64, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:64|QWORD[.]  |stack:72|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                  |2         
     locals:  |stack:64|QWORD[.]  |stack:48|QWORD[.]  |r14|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:64|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4524 658 JUMP ~[] destination: B38 -> B39  <||@
  Comment 4529 block B108 null  <||@
  Comment 4529 1294 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4529 1296 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4529 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4539 1298 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4542 1300 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4547 1302 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 19]  <||@
  Comment 4547 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4552 [stack:32, stack:56, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0                  |1                  |2         
     locals:  |-                  |-                  |          
     stack:   |stack:72|QWORD[.]  |stack:96|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0                  |1                   |2          
     locals:  |stack:72|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |stack:72|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 4553 1306 JUMP ~[] destination: B108 -> B109  <||@
  Comment 4558 block B197 null  <||@
  Comment 4558 2172 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4558 2168 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4563 2174 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[C, resolved>}  <||@
  Comment 4563 {meta{HotSpotType<[C, resolved>}}  <||@
  Comment 4573 2176 rdx|DWORD = MOVE r13|DWORD moveKind: DWORD  <||@
  Comment 4576 2178 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 4581 2180 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4584 2182 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:20, 21, 2, 29]  <||@
  Comment 4584 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4589 [r14:0, stack:8, stack:32, stack:44, stack:56]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0             |1                  |2         
     locals:  |-             |-                  |          
     stack:   |r14|QWORD[.]  |stack:96|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                                                           |2              
     locals:  |r14|QWORD[.]  |vobject:String:0{value=stack:120|QWORD[.],hash=int[0|0x0]}  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4590 2184 rbx|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 4594 2186 JUMP ~[] destination: B197 -> B198  <||@
  Comment 4599 block B1 null  <||@
  Comment 4599 30 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4599 32 rsi|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4602 34 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4607 36 rax|QWORD[.] = CALL_DIRECT [rsi|QWORD[.]] [] callTarget: HotSpotMethod<Class.getName0()> invokeKind: Special config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 state [bci:11, 11]  <||@
  Comment 4607 {HotSpotMethod<Class.getName0()>}  <||@
  Comment 4607 9  <||@
  Comment 4612 [stack:80, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 11, duringCall: true, rethrow: false]
              |0                  |1 
     locals:  |-                  |- 
     stack:   |stack:48|QWORD[.]  |  
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 4613 38 r13|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4616 40 r14|DWORD[.] = MOV [r13|QWORD[.] + 12] size: DWORD state [bci:14, 11]  <||@
  Comment 4616 [r13:0, stack:80, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 14, duringCall: false, rethrow: false]
              |0                  |1            
     locals:  |-                  |-            
     stack:   |stack:48|QWORD[.]  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 4616 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 4620 42 TEST (x: r14|DWORD[.], y: r14|DWORD[.]) size: DWORD  <||@
  Comment 4623 48 r11|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4628 44 BRANCH trueDestinationProbability: 0.0 condition: = trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 4634 block B3 null  <||@
  Comment 4634 56 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4634 60 rdi|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 4644 62 r10|DWORD = MOV [r14|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 4652 64 rsi|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4659 66 MOV (x: [r11|QWORD[.] + 20], y: rsi|DWORD[.]) size: DWORD  <||@
  Comment 4663 68 r11|QWORD[*] = SHR r11|QWORD[.] y: 9 size: QWORD  <||@
  Comment 4667 70 MOVB (x: [r11|QWORD[*] + rdi|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 4671 72 rdi|DWORD = LEA [r10|DWORD - 16] size: DWORD  <||@
  Comment 4675 74 CMP rdi|DWORD y: 1 size: DWORD  <||@
  Comment 4678 76 BRANCH trueDestinationProbability: 0.9529874218685634 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B13  <||@
  Comment 4684 block B4 null  <||@
  Comment 4684 78 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4684 80 stack:52|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4689 82 rdi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4693 84 rsi|QWORD = MOV [r15|QWORD + 112] size: QWORD  <||@
  Comment 4697 86 rdx|QWORD = LEA [rdi|QWORD + 48] size: QWORD  <||@
  Comment 4701 88 CMP (x: rdx|QWORD, y: rsi|QWORD) size: QWORD  <||@
  Comment 4704 90 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B4 -> B5 falseDestination: B4 -> B6  <||@
  Comment 4710 block B6 null  <||@
  Comment 4710 110 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4710 112 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 4714 114 AMD64PREFETCH ~[rdi|QWORD + 240] instr: 0  <||@
  Comment 4721 116 rdi|QWORD[*] = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 4721 120 JUMP ~[] destination: B6 -> B7  <||@
  Comment 4721 block B7 null  <||@
  Comment 4721 122 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4721 118 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4725 124 r11|QWORD[.] = MOVE rdi|QWORD[*] moveKind: QWORD  <||@
  Comment 4728 126 MOV [rdi|QWORD[*] + 12] y: 16 size: DWORD  <||@
  Comment 4735 128 MOV [rdi|QWORD[*]] y: 1 size: QWORD  <||@
  Comment 4742 130 MOV [rdi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[C, resolved>;compressed}  <||@
  Comment 4742 {meta{HotSpotType<[C, resolved>;compressed}}  <||@
  Comment 4749 132 J (address: [rdi|QWORD[*] + 16], input: xmm3|V256_QWORD) nZ: YMM oh: VMOVDQU  <||@
  Comment 4754 134 CMP r10|DWORD y: 17 size: DWORD  <||@
  Comment 4758 136 BRANCH trueDestinationProbability: 1.0 condition: |<| trueDestination: B7 -> B8 falseDestination: B7 -> B12  <||@
  Comment 4764 block B8 null  <||@
  Comment 4764 138 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4764 140 r14|QWORD[.] = UNCOMPRESSPOINTER (input: r14|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4768 142 r14|QWORD[*] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 4768 144 rsi|QWORD[*] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4771 146 rdx|QWORD = MOV r10|DWORD size: DWORD  <||@
  Comment 4774 148 rdi|QWORD = LEA [r14|QWORD[*] + 16] size: QWORD  <||@
  Comment 4778 150 rsi|QWORD = LEA [rsi|QWORD[*] + 16] size: QWORD  <||@
  Comment 4782 152 stack:48|QWORD[.] = MOVE r11|QWORD[.] moveKind: QWORD  <||@
  Comment 4787 154 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: charDisjointArraycopy(Word,Word,Word)void@0x106812c80:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 4787 {Field[name=StubRoutines::_jshort_disjoint_arraycopy, type=address, offset=0, address=0x105a7dca8, value=0x106812c80]:0x106812c80}  <||@
  Comment 4793 156 rsi|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 4797 158 rdx|QWORD = LEA [rsi|QWORD + 24] size: QWORD  <||@
  Comment 4801 160 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 4805 162 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B8 -> B9 falseDestination: B8 -> B10  <||@
  Comment 4811 block B10 null  <||@
  Comment 4811 184 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4811 186 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 4815 188 AMD64PREFETCH ~[rsi|QWORD + 216] instr: 0  <||@
  Comment 4822 190 rsi|QWORD[*] = MOVE rsi|QWORD moveKind: QWORD  <||@
  Comment 4822 192 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 4827 198 JUMP ~[] destination: B10 -> B11  <||@
  Comment 4827 block B11 null  <||@
  Comment 4827 200 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 4827 194 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4832 196 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4832 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 4842 202 rdx|QWORD[.] = MOVE rsi|QWORD[*] moveKind: QWORD  <||@
  Comment 4845 204 rcx|QWORD = MOV [r9|QWORD + 168] size: QWORD  <||@
  Comment 4852 206 MOV (x: [rsi|QWORD[*]], y: rcx|QWORD) size: QWORD  <||@
  Comment 4855 208 MOV [rsi|QWORD[*] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}  <||@
  Comment 4855 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>;compressed}}  <||@
  Comment 4862 210 MOV (x: [rsi|QWORD[*] + 12], y: r10|DWORD) size: DWORD  <||@
  Comment 4866 212 r11|DWORD[.] = COMPRESSPOINTER (input: r13|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@26e1e636 encoding: base: 0 shift: 3  <||@
  Comment 4873 214 MOV (x: [rsi|QWORD[*] + 16], y: r11|DWORD[.]) size: DWORD  <||@
  Comment 4877 216 r8|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 4880 218 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4883 220 rsi|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4886 222 r10|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 4889 224 rdi|DWORD = MOVE input: int[16|0x10]  <||@
  Comment 4894 226 JUMP ~[] destination: B11 -> B84  <||@
  Comment 4899 block B165 null  <||@
  Comment 4899 1800 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4899 1802 r14|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 4902 1804 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 4905 1806 r10|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4911 1808 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 4916 1810 JUMP ~[] destination: B165 -> B168  <||@
  Comment 4921 block B247 null  <||@
  Comment 4921 2618 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4921 2620 r13|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 4924 2622 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 4927 2624 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4927 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4937 2626 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 4942 2628 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4947 2630 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:48, 2, 29]  <||@
  Comment 4947 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4952 [r14:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2              
     locals:  |r14|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 4953 2632 rax|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4953 2634 r14|QWORD = MOVE r13|QWORD moveKind: QWORD  <||@
  Comment 4956 2636 JUMP ~[] destination: B247 -> B249  <||@
  Comment 4961 block B26 null  <||@
  Comment 4961 454 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 4961 456 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 4961 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 4971 458 rdx|DWORD = MOVE input: int[14|0xe]  <||@
  Comment 4976 460 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 4981 462 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:14]  <||@
  Comment 4981 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 4986 [stack:80, stack:96]at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: false, rethrow: false]
              |0                                                                                                                                                                                                                                                                                        |1                 
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                        |                  
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}  |stack:48|QWORD[.]   <||@
  Comment 4987 464 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 4990 466 r11|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 4995 468 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 4999 470 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 4999 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 5009 472 JUMP ~[] destination: B26 -> B28  <||@
  Comment 5014 block B82 null  <||@
  Comment 5014 1012 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5014 994 r8|QWORD[.] = MOVE r10|QWORD[.] moveKind: QWORD  <||@
  Comment 5017 1014 MOV [r15|QWORD + 668] y: -317281 size: DWORD  <||@
  Comment 5028 1016 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5035 1018 DEOPT info [bci:26, 21, 2, 14]  <||@
  Comment 5035 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5040 [r8:0, stack:80, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                  |2              
     locals:  |r8|QWORD[.]  |stack:48|QWORD[.]  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5041 block B152 null  <||@
  Comment 5041 1660 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5041 1642 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5044 1662 MOV [r15|QWORD + 668] y: -264033 size: DWORD  <||@
  Comment 5055 1664 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5062 1666 DEOPT info [bci:26, 21, 2, 19]  <||@
  Comment 5062 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5067 [r14:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:127) [bci: 26, duringCall: false, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0             |1                   |2          
     locals:  |r14|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5068 block B159 null  <||@
  Comment 5068 1726 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5068 1722 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5071 1730 rax|DWORD = NEAR_FOREIGN_CALL [rsi|QWORD[.]] [rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL] callTarget: Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL state [bci:48, 2, 19]  <||@
  Comment 5071 {Stub<identity_hashcode(Object)int>@0x1068cd360:CallingConvention[rsi|QWORD[.] -> rax|DWORD]:CallingConvention[rsi|QWORD[.] -> rax|DWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5076 [r14:0, stack:56, stack:96]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0             |1  |2          
     locals:  |r14|QWORD[.]  |-  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0             |1 
     locals:  |r14|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5077 1732 r13|DWORD = MOVE rax|DWORD moveKind: DWORD  <||@
  Comment 5080 1734 r8|QWORD[.] = MOVE r14|QWORD[.] moveKind: QWORD  <||@
  Comment 5083 1736 xmm2|V128_WORD = L oc: SIMD<0,0,0,0,0,0,0,0>  <||@
  Comment 5087 1738 xmm1|V64_WORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 5091 1740 xmm0|V32_WORD = L oc: SIMD<0,0>  <||@
  Comment 5095 1742 JUMP ~[] destination: B159 -> B160  <||@
  Comment 5100 block B13 null  <||@
  Comment 5100 236 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5100 238 stack:48|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 5105 240 r11|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5108 242 xmm3|V256_QWORD = L oc: SIMD<0,0,0,0>  <||@
  Comment 5112 244 r9|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}  <||@
  Comment 5112 {meta{HotSpotType<Ljava/lang/StringBuilder;, resolved>}}  <||@
  Comment 5122 246 JUMP ~[] destination: B13 -> B25  <||@
  Comment 5127 block B5 null  <||@
  Comment 5127 92 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5127 94 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 5127 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 5137 96 rdx|DWORD = MOVE input: int[8|0x8]  <||@
  Comment 5142 98 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 5147 100 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:19, 11]  <||@
  Comment 5147 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 5152 [r13:0, r14:0, stack:96]at java.lang.Class.getName(Class.java:643) [bci: 19, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5153 102 rdi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5156 104 r10|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 5161 108 JUMP ~[] destination: B5 -> B7  <||@
  Comment 5166 block B9 null  <||@
  Comment 5166 164 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5166 166 r13|QWORD[.] = MOVE stack:48|QWORD[.] moveKind: QWORD  <||@
  Comment 5171 168 rsi|QWORD = HOTSPOTLOADMETASPACECONSTANT input: meta{HotSpotType<[I, resolved>}  <||@
  Comment 5171 {meta{HotSpotType<[I, resolved>}}  <||@
  Comment 5181 170 rdx|DWORD = MOVE input: int[2|0x2]  <||@
  Comment 5186 172 rcx|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 5191 174 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:61, 35, 2, 14]  <||@
  Comment 5191 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 5196 [r13:0, stack:96]at java.lang.String.getChars(String.java:827) [bci: 61, duringCall: false, rethrow: false]
              |0  |1  |2  |3  |4 
     locals:  |-  |-  |-  |-  |- 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:449) [bci: 35, duringCall: true, rethrow: false]
              |0                                                             |1  |2              
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |-  |stack:52|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0                                                             |1 
     locals:  |vobject:StringBuilder:0{count=int[0|0x0],value=r13|QWORD[.]}  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5197 176 rsi|QWORD[*] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 5200 182 JUMP ~[] destination: B9 -> B11  <||@
  Comment 5205 block B12 null  <||@
  Comment 5205 228 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5205 230 MOV [r15|QWORD + 668] y: -288865 size: DWORD  <||@
  Comment 5216 232 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5223 234 DEOPT info [bci:19, 11]  <||@
  Comment 5223 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5228 [r13:0, stack:96]at java.lang.Class.getName(Class.java:643) [bci: 19, duringCall: false, rethrow: false]
              |0  |1            
     locals:  |-  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5229 block B251 null  <||@
  Comment 5229 2676 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5229 2678 r10|DWORD = MOVE input: int[-229395|0xfffffffffffc7fed]  <||@
  Comment 5235 2680 JUMP ~[] destination: B251 -> B252  <||@
  Comment 5235 block B252 null  <||@
  Comment 5235 2682 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5235 2684 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5242 2686 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5249 2688 DEOPT info [bci:48, 2, 29]  <||@
  Comment 5249 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5254 [r8:0]at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:451) [bci: 48, duringCall: false, rethrow: false]
              |0            |1  |2              
     locals:  |r8|QWORD[.]  |-  |stack:80|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5255 block B307 null  <||@
  Comment 5255 3154 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5255 3156 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 5260 3158 r14|QWORD[.] = MOVE r8|QWORD[.] moveKind: QWORD  <||@
  Comment 5263 3160 MOV [r15|QWORD + 668] y: -210971 size: DWORD  <||@
  Comment 5274 3162 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5281 3164 DEOPT info [bci:15, 31, 2, 26]  <||@
  Comment 5281 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5286 [r14:0, stack:8]at java.lang.Integer.formatUnsignedInt(Integer.java:335) [bci: 15, duringCall: false, rethrow: false]
              |0          |1           |2                   |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |stack:120|QWORD[.]  |int[0|0x0]  |-  |rdx|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                  
     locals:  |-  |-  |-  |-  |stack:120|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0            
     locals:  |-            
     stack:   |r14|QWORD[.]   <||@
  Comment 5287 block B2 null  <||@
  Comment 5287 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5287 50 MOV [r15|QWORD + 668] y: -279563 size: DWORD  <||@
  Comment 5298 52 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5305 54 DEOPT info [bci:14, 11]  <||@
  Comment 5305 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5310 [r11:0, r13:0, stack:96]at java.lang.Class.getName(Class.java:642) [bci: 14, duringCall: false, rethrow: false]
              |0             |1            
     locals:  |-             |-            
     stack:   |r11|QWORD[.]  |r13|QWORD[.] 
  at java.lang.Object.toString(Object.java:236) [bci: 11, duringCall: true, rethrow: false]
              |0                                                                                                                                                                                                                                                                                       
     locals:  |stack:32|QWORD[.]                                                                                                                                                                                                                                                                       
     stack:   |vobject:StringBuilder:0{count=int[0|0x0],value=vobject:char[]:1{0=int[0|0x0],1=int[0|0x0],2=int[0|0x0],3=int[0|0x0],4=int[0|0x0],5=int[0|0x0],6=int[0|0x0],7=int[0|0x0],8=int[0|0x0],9=int[0|0x0],10=int[0|0x0],11=int[0|0x0],12=int[0|0x0],13=int[0|0x0],14=int[0|0x0],15=int[0|0x0]}}   <||@
  Comment 5311 block B305 null  <||@
  Comment 5311 3134 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5311 3136 stack:120|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 5316 3138 MOV [r15|QWORD + 668] y: -230931 size: DWORD  <||@
  Comment 5327 3140 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5334 3142 DEOPT info [bci:32, 31, 2, 26]  <||@
  Comment 5334 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5339 [r8:0, stack:8]at java.lang.Integer.formatUnsignedInt(Integer.java:336) [bci: 32, duringCall: false, rethrow: false]
              |0          |1           |2                   |3           |4  |5          |6  |7           
     locals:  |rbx|DWORD  |int[4|0x4]  |stack:120|QWORD[.]  |int[0|0x0]  |-  |rsi|DWORD  |-  |int[15|0xf] 
  at java.lang.Integer.toUnsignedString0(Integer.java:315) [bci: 31, duringCall: true, rethrow: false]
              |0  |1  |2  |3  |4                  
     locals:  |-  |-  |-  |-  |stack:120|QWORD[.] 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 5340 block B31 null  <||@
  Comment 5340 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5340 558 r10|DWORD = MOVE input: int[-391265|0xfffffffffffa079f]  <||@
  Comment 5346 566 JUMP ~[] destination: B31 -> B32  <||@
  Comment 5346 block B32 null  <||@
  Comment 5346 568 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 5346 542 rdx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5351 544 r8|QWORD[.] = MOVE stack:64|QWORD[.] moveKind: QWORD  <||@
  Comment 5356 546 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 5361 570 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 5368 572 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5375 574 DEOPT info [bci:20, 21, 2, 14]  <||@
  Comment 5375 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5380 [rdx:0, rsi:0, r8:0, r13:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |rdx|QWORD[.]  |rax|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1             |2         
     locals:  |r8|QWORD[.]  |r13|QWORD[.]  |r11|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 14, duringCall: true, rethrow: false]
              |0            
     locals:  |rsi|QWORD[.]   <||@
  Comment 5381 block B169 null  <||@
  Comment 5381 1842 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5381 1844 stack:80|DWORD = MOVE r10|DWORD moveKind: DWORD  <||@
  Comment 5386 1846 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@437821581]  <||@
  Comment 5386 {Object[d.a@437821581]}  <||@
  Comment 5396 1848 MOV [r15|QWORD + 668] y: -214795 size: DWORD  <||@
  Comment 5407 1850 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 5414 1852 DEOPT info [bci:10, 16, 2, 26]  <||@
  Comment 5414 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5419 [r8:0]at java.lang.Math.max(Math.java:1252) [bci: 10, duringCall: false, rethrow: false]
              |0               |1 
     locals:  |-               |- 
     stack:   |stack:80|DWORD  |  
  at java.lang.Integer.toUnsignedString0(Integer.java:312) [bci: 16, duringCall: true, rethrow: false]
              |0          |1           |2          |3  |4 
     locals:  |r13|DWORD  |int[4|0x4]  |r14|DWORD  |-  |- 
  at java.lang.Integer.toHexString(Integer.java:233) [bci: 2, duringCall: true, rethrow: false]
              |0 
     locals:  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 26, duringCall: true, rethrow: false]
              |0           
     locals:  |-           
     stack:   |r8|QWORD[.]   <||@
  Comment 5420 block B245 null  <||@
  Comment 5420 2602 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5420 2604 r10|DWORD = MOVE input: int[-227091|0xfffffffffffc88ed]  <||@
  Comment 5426 2606 JUMP ~[] destination: B245 -> B252  <||@
  Comment 5431 block B191 null  <||@
  Comment 5431 2090 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5431 2092 rax|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 5436 2094 r9|QWORD[.] = MOVE stack:120|QWORD[.] moveKind: QWORD  <||@
  Comment 5441 2096 r10|DWORD = MOVE stack:80|DWORD moveKind: DWORD  <||@
  Comment 5446 2098 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5451 2100 MOV [r15|QWORD + 668] y: -411233 size: DWORD  <||@
  Comment 5462 2102 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5469 2104 DEOPT info [bci:20, 21, 2, 29]  <||@
  Comment 5469 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5474 [rax:0, r8:0, r9:0]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |rax|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                                                    |2         
     locals:  |r8|QWORD[.]  |vobject:String:0{value=r9|QWORD[.],hash=int[0|0x0]}  |r10|DWORD 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 29, duringCall: true, rethrow: false]
              |0 
     locals:  |-   <||@
  Comment 5475 block B23 null  <||@
  Comment 5475 422 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5475 424 MOV [r15|QWORD + 668] y: -302177 size: DWORD  <||@
  Comment 5486 426 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5493 428 DEOPT info [bci:0]  <||@
  Comment 5493 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5498 [stack:96]at java.lang.Object.toString(Object.java:236) [bci: 0, duringCall: false, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5499 block B102 null  <||@
  Comment 5499 1222 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5499 1224 r8|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 5504 1226 r10|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 5509 1228 MOV [r15|QWORD + 668] y: -401249 size: DWORD  <||@
  Comment 5520 1230 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 5527 1232 DEOPT info [bci:20, 21, 2, 19]  <||@
  Comment 5527 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 5532 [r8:0, r10:0, stack:96]at java.lang.AbstractStringBuilder.ensureCapacityInternal(AbstractStringBuilder.java:124) [bci: 20, duringCall: false, rethrow: false]
              |0            |1             |2         
     locals:  |-            |-             |          
     stack:   |r8|QWORD[.]  |r10|QWORD[.]  |r13|DWORD 
  at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:448) [bci: 21, duringCall: true, rethrow: false]
              |0            |1                   |2          
     locals:  |r8|QWORD[.]  |Object[String:"@"]  |int[1|0x1] 
  at java.lang.StringBuilder.append(StringBuilder.java:136) [bci: 2, duringCall: true, rethrow: false]
              |0            |1 
     locals:  |r8|QWORD[.]  |- 
  at java.lang.Object.toString(Object.java:236) [bci: 19, duringCall: true, rethrow: false]
              |0                 
     locals:  |stack:32|QWORD[.]   <||@
  Comment 5533 block B29 null  <||@
  Comment 5533 538 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 5533 540 r10|DWORD = MOVE input: int[-308755|0xfffffffffffb49ed]  <||@
  Comment 5539 548 JUMP ~[] destination: B29 -> B32  <||@
  Comment 5544 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 5544 4  <||@
  Comment 5550 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 5550 5  <||@
  HexCodeFile>>> <|@
end_nmethod
