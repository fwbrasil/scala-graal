begin_compilation
  name " HotSpotCompilation-9848[java.util.ArrayList$ListItr.add(Object)]"
  method "HotSpotCompilation-9848[java.util.ArrayList$ListItr.add(Object)]"
  date 1527005227391
end_compilation
begin_cfg
  name "Final HIR schedule"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a920 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a920  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v935 v937 v938 v939 ?56 v945 v981 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a920 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$ListItr.this$0
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 10]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
=== Succesors ===
next: a921 
=== Usages ===
a203 v942 v940 v941 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v939 #next: a921  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?72 a276 a913 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.add(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v476 a921 v980 i923 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
a921 v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a921 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v941 
=== Succesors ===
next: v980 
=== Usages ===
a212 v980 v346 v943 v947 v949 
=== Predecessor ===
a920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v941 #next: v980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a921 
=== Succesors ===
next: a922 
=== Usages ===
=== Predecessor ===
a921 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a921 #next: a922  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a922 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
=== Succesors ===
next: i923 
=== Usages ===
v936 
=== Predecessor ===
v980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v935 #next: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a922 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i923 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v936 
=== Succesors ===
next: i924 
=== Usages ===
v27 
=== Predecessor ===
a922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v936 #next: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i924 v282 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
=== Succesors ===
next: v375 
=== Usages ===
v27 
=== Predecessor ===
i923 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v937 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i924 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a492 v476 a492 a492 a492 a492 a492 a492 a492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i925 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i925  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
i925 v278 v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i925 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: i926 
=== Usages ===
v58 i37 i45 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i926 v279 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:963) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
=== Succesors ===
next: v379 
=== Usages ===
v242 ?56 i13 v58 v332 ?72 v268 i45 v309 v292 v946 v944 j518 j919 
=== Predecessor ===
i925 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v938 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i925 
y: i926 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i925 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53267
stableDimension: 0
stamp: i32 [-53267] ⇊00000000ffff2fed ⇈00000000ffff2fed
stampKind: i32
value: int[-53267|0xffffffffffff2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 v117 v408 v296 v292 v634 a569 v610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i60 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i926 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v382 #falseSuccessor: v380  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53523
stableDimension: 0
stamp: i32 [-53523] ⇊00000000ffff2eed ⇈00000000ffff2eed
stampKind: i32
value: int[-53523|0xffffffffffff2eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 20]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i37 v99 v128 i93 i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i925 
y: i12 
=== Succesors ===
=== Usages ===
i89 v80 i89 v340 v278 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i925 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a921 
y: a345 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a921 y: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.20650896819494347
=== Inputs ===
condition: v346 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v346 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608289988226728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i79 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.7298792811521303
=== Inputs ===
condition: v80 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v80 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594598518989064331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588199905032444021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322351375594582
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v87 
values: i37 i78 i37 
=== Succesors ===
=== Usages ===
i116 i350 ?95 i98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i37 i78 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v90 v91 
=== Succesors ===
next: i927 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v90 v91 #next: i927  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
i927 v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
=== Succesors ===
next: v215 
=== Usages ===
i93 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v942 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i927 
y: i12 
=== Succesors ===
=== Usages ===
v215 v343 v282 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i927 y: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
=== Predecessor ===
i927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: i93 stateAfter: - lastLocationAccess: - #next: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: v929 
=== Usages ===
i98 i114 i115 i451 i241 v268 v424 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: v102 
=== Usages ===
v516 v664 v602 
=== Predecessor ===
i928 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i89 
y: i928 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i89 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i98 
y: i12 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i98 y: i12  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.add(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 964
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i926 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i926  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 10]
op: Uncompress
stamp: a# Ljava/util/ArrayList;
=== Inputs ===
value: a920 
=== Succesors ===
=== Usages ===
j644 ?95 ?72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a920  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 479
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a203 i926 a2 
=== Succesors ===
=== Usages ===
?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a203 i926 a2  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: - - 
=== Succesors ===
=== Usages ===
?95 ?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: - -  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: a203 i89 
=== Succesors ===
=== Usages ===
a569 v493 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a203 i89  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 32]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i925 
y: i926 
=== Succesors ===
=== Usages ===
v303 j527 i314 i241 j911 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i925 y: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i60 
=== Succesors ===
=== Usages ===
v307 v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 21]
stamp: i32
=== Inputs ===
x: i926 
y: i12 
=== Succesors ===
=== Usages ===
v341 v296 j523 v279 v315 v248 j916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i926 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i60 
=== Succesors ===
=== Usages ===
v302 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@598408427
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@598408427]
=== Inputs ===
=== Succesors ===
=== Usages ===
a492 a492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 26]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v281 i617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 v648 v660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j531 j615 j621 j645 j657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 j636 v963 v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 v665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.7755172391223244
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v929 
y: v663 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v929 y: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v664 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v664 #trueSuccessor: v384 #falseSuccessor: v386  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i928 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i926 y: i928  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v388 #falseSuccessor: v390  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
v277 
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64865
stableDimension: 0
stamp: i32 [-64865] ⇊00000000ffff029f ⇈00000000ffff029f
stampKind: i32
value: int[-64865|0xffffffffffff029f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 i491 i491 i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v234 #falseSuccessor: v230  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591127175457534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090605460555194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v239 #falseSuccessor: v237  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501716125239788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021451601402406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i928 
y: i45 
=== Succesors ===
=== Usages ===
v242 v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i928 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i926 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v245 #falseSuccessor: v243  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413199185524219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952989280841146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i13 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v251 #falseSuccessor: v249  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325567415205806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885211583485499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j517 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j517  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a921 
=== Succesors ===
=== Usages ===
v944 j522 j517 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j517 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a212 
=== Succesors ===
next: j522 
=== Usages ===
v950 
=== Predecessor ===
v249 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a212 #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a212 
=== Succesors ===
next: v528 
=== Usages ===
v951 
=== Predecessor ===
j517 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a212 #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i926 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j517 
index: j518 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: j518  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j522 
index: j523 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: j523  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v950 v951 j527 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
j522 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v950 v951 j527 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a212 
index: i926 
=== Succesors ===
=== Usages ===
v277 j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v388 
address: v944 
value: a276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j529 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v388 address: v944 value: a276 stateAfter: - lastLocationAccess: - #next: j529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v944 
=== Succesors ===
next: v535 
=== Usages ===
j531 
=== Predecessor ===
v277 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v944 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j529 
y: i530 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j529 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j531 
index: j534 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
j529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: i536 stateAfter: - lastLocationAccess: - #next: v278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v940 value: i37 stateAfter: - lastLocationAccess: - #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: i13 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: i16 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:967) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: i93 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:971) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68891
stableDimension: 0
stamp: i32 [-68891] ⇊00000000fffef2e5 ⇈00000000fffef2e5
stampKind: i32
value: int[-68891|0xfffffffffffef2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67900
stableDimension: 0
stamp: i32 [-67900] ⇊00000000fffef6c4 ⇈00000000fffef6c4
stampKind: i32
value: int[-67900|0xfffffffffffef6c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i928 
y: i12 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i928 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i114 
y: i928 
=== Succesors ===
=== Usages ===
i116 i350 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i114 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i115 
y: i89 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i115 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i60 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v117 
trueValue: i89 
falseValue: i115 
=== Succesors ===
=== Usages ===
i314 v332 i127 j667 v408 v424 i451 a569 v598 i617 v610 i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v117 trueValue: i89 falseValue: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i126 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i350 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i12 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v392 #falseSuccessor: v394  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i350 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i926 y: i350  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
v339 
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i350 
y: i60 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i350 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v413 #falseSuccessor: v409  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107617
stableDimension: 0
stamp: i32 [-107617] ⇊00000000fffe5b9f ⇈00000000fffe5b9f
stampKind: i32
value: int[-107617|0xfffffffffffe5b9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j556 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j556 <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j595 
=== Usages ===
v953 v954 
=== Predecessor ===
v409 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
j595 v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: j596 
=== Usages ===
j560 v955 v956 a568 v961 v957 v958 v959 v960 
=== Predecessor ===
j556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: j596  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j596 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v564 
=== Usages ===
v561 
=== Predecessor ===
j595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 i618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i350 
y: i272 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i350 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i553 
y: i576 
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i553 y: i576  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i577 
y: i554 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i577 y: i554  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i555 
=== Succesors ===
=== Usages ===
j560 v957 v958 v959 v960 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i555  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j559 
y: j595 
=== Succesors ===
=== Usages ===
v561 v597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j559 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j596 
y: j560 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j596 y: j560  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 j623 v629 v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
j596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v562 #falseSuccessor: v563  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a569 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a569  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v929 
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a569 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?95 
arguments: v516 i350 i60 
=== Succesors ===
next: v572 
=== Usages ===
a573 
=== Predecessor ===
v562 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?95 arguments: v516 i350 i60 #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
a569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: j560 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: j560 stateAfter: - lastLocationAccess: - #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v957 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v957 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v958 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v958 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v959 
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v959 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v960 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v960 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: i350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: i350 stateAfter: - lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j540 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: v929 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: v929 stateAfter: - lastLocationAccess: - #next: v567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j595 
=== Succesors ===
next: v570 
=== Usages ===
a573 
=== Predecessor ===
v567 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j595 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
a568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a573 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v571 
values: a568 a569 
=== Succesors ===
=== Usages ===
v967 a457 v948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v571 values: a568 a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v572 
=== Succesors ===
next: v789 
=== Usages ===
a573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v572 #next: v789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v681 
=== Usages ===
j790 j792 
=== Predecessor ===
v571 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a573 
index: - 
=== Succesors ===
=== Usages ===
j792 j616 j614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a573 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i928 
y: i350 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i928 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v424 
trueValue: i928 
falseValue: i350 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v424 trueValue: i928 falseValue: i350  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
j841 v967 j672 v678 v786 j828 j834 j838 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j668 
y: j540 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j668 y: j540  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j628 j841 j883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 j859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 j880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j818 j865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j834 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j871 j826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j828 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j580 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j860 v873 j811 j819 v829 j866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v679 #falseSuccessor: v680  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v789 
address: v948 
=== Succesors ===
=== Usages ===
v968 v970 v972 v974 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v789 address: v948  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v789 
address: v947 
=== Succesors ===
=== Usages ===
v969 v971 v973 v975 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v789 address: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j668 
y: j827 
=== Succesors ===
=== Usages ===
v829 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j580 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v682 #falseSuccessor: v683  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j819 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v686 
values: j580 j826 
=== Succesors ===
=== Usages ===
v975 j826 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: j580 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v685 
=== Succesors ===
next: v930 
=== Usages ===
v930 v690 v691 j819 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v685 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j819 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v686 
address: v975 
=== Succesors ===
next: v898 
=== Usages ===
v898 
=== Predecessor ===
v686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v686 address: v975 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j819 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: v930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: v930 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j819 
y: j513 
=== Succesors ===
=== Usages ===
j811 j819 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j819 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j826 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v690 #falseSuccessor: v692  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j811 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v695 
values: j580 j826 
=== Succesors ===
=== Usages ===
v973 j818 j802 v835 v972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v695 values: j580 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 
=== Succesors ===
next: v714 
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j668 
y: j833 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j811 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j811  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v713 #falseSuccessor: v712  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
v931 
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j811 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v712 
address: v973 
=== Succesors ===
next: v896 
=== Usages ===
v896 
=== Predecessor ===
v712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v712 address: v973 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j811 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: v931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: v931 stateAfter: - lastLocationAccess: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j811 
y: j795 
=== Succesors ===
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j802 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v706 
values: j818 j811 
=== Succesors ===
=== Usages ===
v971 j810 j793 v839 v970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: j818 j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v717 
=== Succesors ===
next: v720 
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v717 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j668 
y: j837 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j802 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
v932 
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j802 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v718 
address: v971 
=== Succesors ===
next: v894 
=== Usages ===
v894 
=== Predecessor ===
v718 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v718 address: v971 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j802 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: v932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: v932 stateAfter: - lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j802 
y: j809 
=== Succesors ===
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j802 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j793 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j810 j802 
=== Succesors ===
=== Usages ===
v969 v842 v968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j810 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v723 
=== Succesors ===
next: v726 
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v723 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j668 
y: j627 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j841 
y: j793 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j841 y: j793  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v725 #falseSuccessor: v724  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
a933 
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a933  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j793 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v724 
address: v969 
=== Succesors ===
next: v892 
=== Usages ===
v892 
=== Predecessor ===
v724 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v724 address: v969 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j793 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: a933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
a933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: a933 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v711 v729 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v711 v729 #next: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v736 
=== Usages ===
j847 
=== Predecessor ===
v699 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i350 
=== Succesors ===
=== Usages ===
j672 v786 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i350  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j668 
y: j667 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j668 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v735 #falseSuccessor: v734  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a573 
index: j668 
=== Succesors ===
=== Usages ===
j847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a573 index: j668  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v845 
address: v967 
=== Succesors ===
=== Usages ===
v976 v977 v978 v979 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v845 address: v967  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j667 
y: j668 
=== Succesors ===
=== Usages ===
j883 j872 j877 j880 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j667 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j672 
y: j827 
=== Succesors ===
=== Usages ===
v873 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j580 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j866 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v741 
values: j580 j871 
=== Succesors ===
=== Usages ===
v979 j871 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v741 values: j580 j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v740 
=== Succesors ===
next: v906 
=== Usages ===
j866 v744 v745 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v740 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j866 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: v907 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: v907 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j871 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j866 
y: j513 
=== Succesors ===
=== Usages ===
j860 j866 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j866 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j871 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j871  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v744 #falseSuccessor: v746  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v741 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v741 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j860 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v749 
values: j580 j871 
=== Succesors ===
=== Usages ===
v978 j865 j854 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: j580 j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v768 
=== Usages ===
j860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j672 
y: j833 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j860 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j877 y: j860  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v767 #falseSuccessor: v766  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j860 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v910 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j860 
y: j795 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j860 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j854 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v760 
values: j865 j860 
=== Succesors ===
=== Usages ===
v977 j859 j848 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: j865 j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v759 v771 
=== Succesors ===
next: v774 
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v759 v771 #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j672 
y: j837 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j880 
y: j854 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j880 y: j854  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v773 #falseSuccessor: v772  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j854 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: v909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: v909 stateAfter: - lastLocationAccess: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j859 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j854 
y: j809 
=== Succesors ===
=== Usages ===
j848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j854 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j848 <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v763 
values: j859 j854 
=== Succesors ===
=== Usages ===
v976 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: j859 j854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v777 
=== Succesors ===
next: v780 
=== Usages ===
j848 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v777 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j672 
y: j627 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j883 
y: j848 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j883 y: j848  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v779 #falseSuccessor: v778  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j848 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j848  <|@  <|@
f <@~|@floating>@ <|@
tid a908 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
value: a908 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v976 value: a908 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v741  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v765 v783 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v765 v783 #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i350 
y: i60 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i350 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v948 
=== Succesors ===
next: j616 
=== Usages ===
j615 
=== Predecessor ===
v612 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v948 #next: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v948 
=== Succesors ===
next: v624 
=== Usages ===
j620 
=== Predecessor ===
j614 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v948 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i16 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i350 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i618 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i617 
y: i272 
=== Succesors ===
=== Usages ===
j619 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i617 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid j619 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i618 
=== Succesors ===
=== Usages ===
j620 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i618  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j616 
y: j619 
=== Succesors ===
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j616 y: j619  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j620 
y: i530 
=== Succesors ===
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j620 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j614 
y: i530 
=== Succesors ===
=== Usages ===
j622 j636 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j614 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j621 
y: j615 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j621 y: j615  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j622 
y: j540 
=== Succesors ===
=== Usages ===
j626 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
j616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255864116453824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j626 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v625 
values: j623 j628 
=== Succesors ===
=== Usages ===
j628 v629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v625 values: j623 j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v624 
=== Succesors ===
next: v632 
=== Usages ===
j626 v630 v635 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v624 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j626 
y: j540 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j626 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v630 #falseSuccessor: v631  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v625 
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v625 #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v639 
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v639 #next: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a573 
=== Succesors ===
next: v934 
=== Usages ===
v962 a286 j651 j653 v946 
=== Predecessor ===
v637 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a573 #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a457 
index: - 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v934 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v403 
=== Usages ===
v665 
=== Predecessor ===
a457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v934 
y: v663 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v934 y: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v665 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v665 #trueSuccessor: v400 #falseSuccessor: v402  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid a286 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n! -
=== Inputs ===
value: a457 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: a286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j644 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: a286 stateAfter: - lastLocationAccess: - #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a203 
=== Succesors ===
next: v648 
=== Usages ===
j645 
=== Predecessor ===
v287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a203 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j644 
y: i530 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j645 
index: j534 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i536 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v301 #falseSuccessor: v297  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270880374414351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094916024318048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i45 
=== Succesors ===
=== Usages ===
v315 v309 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i350 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i926 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v312 #falseSuccessor: v310  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219635795933332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015647066980222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i13 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v318 #falseSuccessor: v316  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168903663237123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252714856862251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v305 v311 v317 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v305 v311 v317 #next: v320  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - 
=== Succesors ===
=== Usages ===
?135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - -  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?135 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?135  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937170799215774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j651 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j651 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: j653 
=== Usages ===
v964 
=== Predecessor ===
v316 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j653 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v655 
=== Usages ===
v965 
=== Predecessor ===
j651 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid j919 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i926 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j651 
index: j919 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j651 index: j919  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j653 
index: j916 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j916  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v964 v965 j911 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
j653 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v964 v965 j911 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a457 
index: i926 
=== Succesors ===
=== Usages ===
v339 j656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a913 <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v396 
address: v946 
value: a913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j656 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v396 address: v946 value: a913 stateAfter: - lastLocationAccess: - #next: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j656 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v946 
=== Succesors ===
next: v660 
=== Usages ===
j657 
=== Predecessor ===
v339 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v946 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j656 
y: i530 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j656 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j657 
index: j534 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
j656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: i536 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v940 value: i37 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: i13 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i16 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:967) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: i93 stateAfter: - lastLocationAccess: - #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:971) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84796
stableDimension: 0
stamp: i32 [-84796] ⇊00000000fffeb4c4 ⇈00000000fffeb4c4
stampKind: i32
value: int[-84796|0xfffffffffffeb4c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid j628 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j626 
y: j627 
=== Succesors ===
=== Usages ===
j626 j633 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j615 
y: j534 
=== Succesors ===
=== Usages ===
j633 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j615 y: j534  <|@  <|@
f <@~|@floating>@ <|@
tid j633 <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j628 
y: j636 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j628 y: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: j633 
value: i60 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j633 value: i60 #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v625 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v625  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v686 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v686  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] ⇊00000000fffeb2e5 ⇈00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72467
stableDimension: 0
stamp: i32 [-72467] ⇊00000000fffee4ed ⇈00000000fffee4ed
stampKind: i32
value: int[-72467|0xfffffffffffee4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465101730097829
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i491 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-107617 - -64865] ⇊00000000fffe0084
valueDescription: i32
=== Inputs ===
merge: v487 
values: i489 i495 i497 i499 i501 i503 i505 i503 i503 i503 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: i489 i495 i497 i499 i501 i503 i505 i503 i503 i503  <|@  <|@
f <@~|@floating>@ <|@
tid a492 <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v487 
values: a490 a432 a432 a432 a490 a432 a432 a432 a432 a432 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: a490 a432 a432 a432 a490 a432 a432 a432 a432 a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v488 v494 v496 v498 v500 v502 v504 v506 v507 v508 
=== Succesors ===
next: v493 
=== Usages ===
i491 a492 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v488 v494 v496 v498 v500 v502 v504 v506 v507 v508 #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
actionAndReason: i491 
speculation: a492 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?95 actionAndReason: i491 speculation: a492  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50451
stableDimension: 0
stamp: i32 [-50451] ⇊00000000ffff3aed ⇈00000000ffff3aed
stampKind: i32
value: int[-50451|0xffffffffffff3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B2" "B86" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i474 <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55563 - -48395] ⇊00000000ffff02e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v471 
values: i482 i484 i486 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v471 values: i482 i484 i486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 v485 
=== Succesors ===
next: v476 
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 v485 #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i474 
speculation: a432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i474 speculation: a432  <|@  <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After LIR generation"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v0 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
=== Succesors ===
next: a920 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@StartNode|@org.graalvm.compiler.nodes.StartNode>@ stateAfter: - #next: a920  <|@  <|@
f <@~|@floating>@ <|@
tid a1 <|@
result v0|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 0
stamp: a!# Ljava/util/ArrayList$ListItr;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 v935 v937 v938 v939 ?56 v945 v981 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v939 <|@
result [v0|QWORD[.] + 28] <|@
d <@d|@=== Debug Properties ===
displacement: 28
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a920 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a920 <|@
result v2|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$ListItr.this$0
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 10]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v939 
=== Succesors ===
next: a921 
=== Usages ===
a203 v942 v940 v941 
=== Predecessor ===
v0 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v939 #next: a921  <|@  <|@
f <@~|@floating>@ <|@
tid a2 <|@
result v1|QWORD[.] <|@
d <@d|@=== Debug Properties ===
index: 1
stamp: a Ljava/lang/Object;
uncheckedStamp: [null]
=== Inputs ===
=== Succesors ===
=== Usages ===
?3 ?72 a276 a913 
=== Predecessor ===
- >@ <|@
instruction <@Parameter|@org.graalvm.compiler.nodes.ParameterNode>@  <|@  <|@
tid ?3 <|@
d <@d|@=== Debug Properties ===
bci: 0
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.add(Object)>
duringCall: false
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 960
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 a2 - 
=== Succesors ===
=== Usages ===
v476 a921 v980 i923 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 a2 -  <|@  <|@
f <@~|@floating>@ <|@
tid v941 <|@
result [v2|DWORD[.] * 8 + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
a921 v287 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a921 <|@
result v3|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: true
stamp: n [Ljava/lang/Object;
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v941 
=== Succesors ===
next: v980 
=== Usages ===
a212 v980 v346 v943 v947 v949 
=== Predecessor ===
a920 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v941 #next: v980  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v980 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
object: a921 
=== Succesors ===
next: a922 
=== Usages ===
=== Predecessor ===
a921 >@ <|@
instruction <@NullCheck|@org.graalvm.compiler.nodes.extended.NullCheckNode>@ stateBefore: ?3 object: a921 #next: a922  <|@  <|@
f <@~|@floating>@ <|@
tid v935 <|@
result [v0|QWORD[.] + 24] <|@
d <@d|@=== Debug Properties ===
displacement: 24
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
a922 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a922 <|@
result v4|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.this$0
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 1]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: false
stamp: n# Ljava/util/ArrayList;
=== Inputs ===
stateBefore: - 
guard: - 
address: v935 
=== Succesors ===
next: i923 
=== Usages ===
v936 
=== Predecessor ===
v980 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v935 #next: i923  <|@  <|@
f <@~|@floating>@ <|@
tid v936 <|@
result [v4|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a922 
=== Succesors ===
=== Usages ===
i923 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a922  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i923 <|@
result v5|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 4]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: true
stamp: i32
=== Inputs ===
stateBefore: ?3 
guard: - 
address: v936 
=== Succesors ===
next: i924 
=== Usages ===
v27 
=== Predecessor ===
a922 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: ?3 guard: - address: v936 #next: i924  <|@  <|@
f <@~|@floating>@ <|@
tid v937 <|@
result [v0|QWORD[.] + 20] <|@
d <@d|@=== Debug Properties ===
displacement: 20
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i924 v282 v343 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i924 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 8]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
=== Succesors ===
next: v375 
=== Usages ===
v27 
=== Predecessor ===
i923 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v937 #next: v375  <|@  <|@
f <@~|@floating>@ <|@
tid v27 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i923 
y: i924 
=== Succesors ===
=== Usages ===
v375 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i923 y: i924  <|@  <|@
f <@~|@floating>@ <|@
tid a432 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:178) [bci: 41]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: null
stableDimension: 0
stamp: a - NULL
stampKind: a -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
a492 v476 a492 a492 a492 a492 a492 a492 a492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v375 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v27 
=== Succesors ===
trueSuccessor: v372 
falseSuccessor: v374 
=== Usages ===
=== Predecessor ===
i924 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v27 #trueSuccessor: v372 #falseSuccessor: v374  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v372 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: i925 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: i925  <|@  <|@
f <@~|@floating>@ <|@
tid v940 <|@
result [v2|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
i925 v278 v340 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i925 <|@
result v6|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
=== Succesors ===
next: i926 
=== Usages ===
v58 i37 i45 
=== Predecessor ===
v372 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v940 #next: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v938 <|@
result [v0|QWORD[.] + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
i926 v279 v341 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i926 <|@
result v7|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:963) [bci: 5]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
=== Succesors ===
next: v379 
=== Usages ===
v242 ?56 i13 v58 v332 ?72 v268 i45 v309 v292 v946 v944 j518 j919 
=== Predecessor ===
i925 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v938 #next: v379  <|@  <|@
f <@~|@floating>@ <|@
tid v58 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i925 
y: i926 
=== Succesors ===
=== Usages ===
v379 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i925 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v379 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v58 
=== Succesors ===
trueSuccessor: v378 
falseSuccessor: v376 
=== Usages ===
=== Predecessor ===
i926 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v58 #trueSuccessor: v378 #falseSuccessor: v376  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v378 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v481 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v481  <|@  <|@
f <@~|@floating>@ <|@
tid i482 <|@
result int[-53267|0xffffffffffff2fed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53267
stableDimension: 0
stamp: i32 [-53267] ⇊00000000ffff2fed ⇈00000000ffff2fed
stampKind: i32
value: int[-53267|0xffffffffffff2fed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v481 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v378 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53267|0xffffffffffff2fed]] destination: B2 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v376 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v383 
=== Usages ===
=== Predecessor ===
v379 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v383  <|@  <|@
f <@~|@floating>@ <|@
tid i60 <|@
result int[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i32 [0] ⇈0000000000000000
stampKind: i32
value: int[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v303 v117 v408 v296 v292 v634 a569 v610 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v292 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i60 
=== Succesors ===
=== Usages ===
v383 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i926 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v383 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v292 
=== Succesors ===
trueSuccessor: v382 
falseSuccessor: v380 
=== Usages ===
=== Predecessor ===
v376 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v292 #trueSuccessor: v382 #falseSuccessor: v380  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v382 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v485 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v485  <|@  <|@
f <@~|@floating>@ <|@
tid i486 <|@
result int[-53523|0xffffffffffff2eed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -53523
stableDimension: 0
stamp: i32 [-53523] ⇊00000000ffff2eed ⇈00000000ffff2eed
stampKind: i32
value: int[-53523|0xffffffffffff2eed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v485 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v382 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53523|0xffffffffffff2eed]] destination: B4 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v380 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.rangeCheckForAdd(ArrayList.java:664) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:477) [bci: 2]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v77 
=== Usages ===
=== Predecessor ===
v383 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v77  <|@  <|@
f <@~|@floating>@ <|@
tid i12 <|@
result int[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 20]
rawvalue: 1
stableDimension: 0
stamp: i32 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i32
value: int[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
i13 i37 v99 v128 i93 i114 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i37 <|@
result v8|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:479) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i925 
y: i12 
=== Succesors ===
=== Usages ===
i89 v80 i89 v340 v278 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i925 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid a345 <|@
result NarrowOop[Object[0]{}] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: Object[0]{}
stableDimension: 0
stamp: n!# [Ljava/lang/Object;
stampKind: n -
value: NarrowOop[Object[0]{}]
=== Inputs ===
=== Succesors ===
=== Usages ===
v346 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v346 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: a921 
y: a345 
=== Succesors ===
=== Usages ===
v77 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: a921 y: a345  <|@  <|@
f <@*|@fixed>@ <|@
tid v77 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:224) [bci: 4]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.20650896819494347
=== Inputs ===
condition: v346 
=== Succesors ===
trueSuccessor: v75 
falseSuccessor: v76 
=== Usages ===
=== Predecessor ===
v380 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v346 #trueSuccessor: v75 #falseSuccessor: v76  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608289988226728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v75 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v83 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v83  <|@  <|@
f <@~|@floating>@ <|@
tid i79 <|@
result int[11|0xb] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 11
stableDimension: 0
stamp: i32 [11] ⇊000000000000000b ⇈000000000000000b
stampKind: i32
value: int[11|0xb]
=== Inputs ===
=== Succesors ===
=== Usages ===
v80 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v80 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i37 
y: i79 
=== Succesors ===
=== Usages ===
v83 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i37 y: i79  <|@  <|@
f <@*|@fixed>@ <|@
tid v83 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 2]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.7298792811521303
=== Inputs ===
condition: v80 
=== Succesors ===
trueSuccessor: v81 
falseSuccessor: v82 
=== Usages ===
=== Predecessor ===
v75 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v80 #trueSuccessor: v81 #falseSuccessor: v82  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594598518989064331
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v81 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 5]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v90 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v90  <|@  <|@
f <@~|@floating>@ <|@
tid i78 <|@
result int[10|0xa] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 10
stableDimension: 0
stamp: i32 [10] ⇊000000000000000a ⇈000000000000000a
stampKind: i32
value: int[10|0xa]
=== Inputs ===
=== Succesors ===
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v90 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v81 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588199905032444021
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v82 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.lang.Math.max(Math.java:1252) [bci: 9]
at java.util.ArrayList.calculateCapacity(ArrayList.java:225) [bci: 10]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v91 
=== Usages ===
=== Predecessor ===
v83 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v91  <|@  <|@
f <@*|@fixed>@ <|@
tid v91 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v82 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322351375594582
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v76 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.calculateCapacity(ArrayList.java:227) [bci: 14]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 6]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v88 
=== Usages ===
=== Predecessor ===
v77 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v88  <|@  <|@
f <@*|@fixed>@ <|@
tid v88 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v87 
=== Predecessor ===
v76 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i89 <|@
result v9|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
valueDescription: i32
=== Inputs ===
merge: v87 
values: i37 i78 i37 
=== Succesors ===
=== Usages ===
i116 i350 ?95 i98 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v87 values: i37 i78 i37  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v87 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v88 v90 v91 
=== Succesors ===
next: i927 
=== Usages ===
i89 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v88 v90 v91 #next: i927  <|@  <|@
f <@~|@floating>@ <|@
tid v942 <|@
result [v2|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a920 
=== Succesors ===
=== Usages ===
i927 v215 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a920  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i927 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 2]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
=== Succesors ===
next: v215 
=== Usages ===
i93 
=== Predecessor ===
v87 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v942 #next: v215  <|@  <|@
f <@~|@floating>@ <|@
tid i93 <|@
result v11|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 6]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i927 
y: i12 
=== Succesors ===
=== Usages ===
v215 v343 v282 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i927 y: i12  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v215 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: AbstractList.modCount
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v942 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: i928 
=== Usages ===
=== Predecessor ===
i927 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v942 value: i93 stateAfter: - lastLocationAccess: - #next: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v943 <|@
result [v3|DWORD[.] * 8 + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
i928 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid i928 <|@
result v12|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: [].length:final
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 15]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i32 [0 - 2147483647] ⇈000000007fffffff
=== Inputs ===
stateBefore: - 
guard: - 
address: v943 
=== Succesors ===
next: v929 
=== Usages ===
i98 i114 i115 i451 i241 v268 v424 
=== Predecessor ===
v215 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v943 #next: v929  <|@  <|@
f <@~|@floating>@ <|@
tid v949 <|@
result [v3|DWORD[.] * 8 + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
v929 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v929 <|@
result v13|DWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v949 
=== Succesors ===
next: v102 
=== Usages ===
v516 v664 v602 
=== Predecessor ===
i928 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v949 #next: v102  <|@  <|@
f <@~|@floating>@ <|@
tid i98 <|@
result v14|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 16]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i89 
y: i928 
=== Succesors ===
=== Usages ===
v99 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i89 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid v99 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i98 
y: i12 
=== Succesors ===
=== Usages ===
v102 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i98 y: i12  <|@  <|@
tid ?56 <|@
d <@d|@=== Debug Properties ===
bci: 15
code: ResolvedJavaMethodBytecode<ArrayList$ListItr.add(Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 964
stackSize: 0
=== Inputs ===
outerFrameState: - 
values: a1 - i926 
=== Succesors ===
=== Usages ===
?72 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: - values: a1 - i926  <|@  <|@
f <@~|@floating>@ <|@
tid a203 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 10]
op: Uncompress
stamp: a# Ljava/util/ArrayList;
=== Inputs ===
value: a920 
=== Succesors ===
=== Usages ===
j644 ?95 ?72 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a920  <|@  <|@
tid ?72 <|@
d <@d|@=== Debug Properties ===
bci: 12
code: ResolvedJavaMethodBytecode<ArrayList.add(int, Object)>
duringCall: true
localsSize: 3
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 479
stackSize: 0
=== Inputs ===
outerFrameState: ?56 
values: a203 i926 a2 
=== Succesors ===
=== Usages ===
?108 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?56 values: a203 i926 a2  <|@  <|@
tid ?108 <|@
d <@d|@=== Debug Properties ===
bci: 9
code: ResolvedJavaMethodBytecode<ArrayList.ensureCapacityInternal(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 231
stackSize: 0
=== Inputs ===
outerFrameState: ?72 
values: - - 
=== Succesors ===
=== Usages ===
?95 ?137 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?72 values: - -  <|@  <|@
tid ?95 <|@
d <@d|@=== Debug Properties ===
bci: 10
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: false
localsSize: 2
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:235) [bci: 7]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 238
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: a203 i89 
=== Succesors ===
=== Usages ===
a569 v493 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: a203 i89  <|@  <|@
f <@~|@floating>@ <|@
tid i45 <|@
result v16|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:480) [bci: 32]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i925 
y: i926 
=== Succesors ===
=== Usages ===
v303 j527 i314 i241 j911 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i925 y: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v303 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 41]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i45 
y: i60 
=== Succesors ===
=== Usages ===
v307 v240 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i45 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i13 <|@
result v17|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 21]
stamp: i32
=== Inputs ===
x: i926 
y: i12 
=== Succesors ===
=== Usages ===
v341 v296 j523 v279 v315 v248 j916 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i926 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid v296 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:257) [bci: 22]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i13 
y: i60 
=== Succesors ===
=== Usages ===
v302 v235 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i13 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid a490 <|@
result v18|QWORD[.] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: d.a@598408427
stableDimension: 0
stamp: a!# Lcom/oracle/graal/enterprise/l/d$a;
stampKind: a -
value: Object[d.a@598408427]
=== Inputs ===
=== Succesors ===
=== Usages ===
a492 a492 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i16 <|@
result int[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 26]
rawvalue: -1
stableDimension: 0
stamp: i32 [-1] ⇊00000000ffffffff
stampKind: i32
value: int[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
v342 v281 i617 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i536 <|@
result byte[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i8 [0] ⇈0000000000000000
stampKind: i8
value: byte[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
v535 v648 v660 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i530 <|@
result int[9|0x9] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.cardTableShift(GraalHotSpotVMConfig) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 9
stableDimension: 0
stamp: i32 [9] ⇊0000000000000009 ⇈0000000000000009
stampKind: i32
value: int[9|0x9]
=== Inputs ===
=== Succesors ===
=== Usages ===
j531 j615 j621 j645 j657 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j534 <|@
result v19|QWORD <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.loadLongConfigValue(int) [bci: -1]
at org.graalvm.compiler.hotspot.nodes.GraalHotSpotVMConfigNode.cardTableAddress(GraalHotSpotVMConfigNode.java:114) [bci: 6]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:133) [bci: 7]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 4682670080
stableDimension: 0
stamp: i64 [4682670080] ⇊00000001171be000 ⇈00000001171be000
stampKind: i64
value: long[4682670080|0x1171be000]
=== Inputs ===
=== Succesors ===
=== Usages ===
v952 j636 v963 v966 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid v663 <|@
result meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
stableDimension: 0
stamp: Klass*!(compressed base: 0 shift: 3)
stampKind: Klass*(compressed base: 0 shift: 3)
value: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}
=== Inputs ===
=== Succesors ===
=== Usages ===
v664 v665 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v102 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 17]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.7755172391223244
=== Inputs ===
condition: v99 
=== Succesors ===
trueSuccessor: v100 
falseSuccessor: v101 
=== Usages ===
=== Predecessor ===
v929 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v99 #trueSuccessor: v100 #falseSuccessor: v101  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, ~y: [v2|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v9|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v6|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v18|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v100 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:240) [bci: 25]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v387 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v387  <|@  <|@
f <@~|@floating>@ <|@
tid v664 <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v929 
y: v663 
=== Succesors ===
=== Usages ===
v387 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v929 y: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v387 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v664 
=== Succesors ===
trueSuccessor: v384 
falseSuccessor: v386 
=== Usages ===
=== Predecessor ===
v100 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v664 #trueSuccessor: v384 #falseSuccessor: v386  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v384 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v391 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v391  <|@  <|@
f <@~|@floating>@ <|@
tid v268 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i928 
=== Succesors ===
=== Usages ===
v391 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i926 y: i928  <|@  <|@
f <@*|@fixed>@ <|@
tid v391 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v268 
=== Succesors ===
trueSuccessor: v388 
falseSuccessor: v390 
=== Usages ===
=== Predecessor ===
v384 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v268 #trueSuccessor: v388 #falseSuccessor: v390  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v388 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v235 
=== Usages ===
v277 
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v235  <|@  <|@
f <@~|@floating>@ <|@
tid i503 <|@
result int[-64865|0xffffffffffff029f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -64865
stableDimension: 0
stamp: i32 [-64865] ⇊00000000ffff029f ⇈00000000ffff029f
stampKind: i32
value: int[-64865|0xffffffffffff029f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 i491 i491 i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v235 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v234 
falseSuccessor: v230 
=== Usages ===
=== Predecessor ===
v388 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v234 #falseSuccessor: v230  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591127175457534
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v234 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v502 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v502  <|@  <|@
f <@*|@fixed>@ <|@
tid v502 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v234 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090605460555194
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v230 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v240 
=== Usages ===
=== Predecessor ===
v235 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v240  <|@  <|@
f <@*|@fixed>@ <|@
tid v240 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v239 
falseSuccessor: v237 
=== Usages ===
=== Predecessor ===
v230 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v239 #falseSuccessor: v237  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501716125239788
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v239 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v508 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v508  <|@  <|@
f <@*|@fixed>@ <|@
tid v508 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v239 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021451601402406
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v237 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v246 
=== Usages ===
=== Predecessor ===
v240 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v246  <|@  <|@
f <@~|@floating>@ <|@
tid i241 <|@
result v20|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 65]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i928 
y: i45 
=== Succesors ===
=== Usages ===
v242 v248 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i928 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v242 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i926 
=== Succesors ===
=== Usages ===
v246 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v246 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v242 
=== Succesors ===
trueSuccessor: v245 
falseSuccessor: v243 
=== Usages ===
=== Predecessor ===
v237 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v242 #trueSuccessor: v245 #falseSuccessor: v243  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v12|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413199185524219
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v245 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v507 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v507  <|@  <|@
f <@*|@fixed>@ <|@
tid v507 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v245 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952989280841146
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v243 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v252 
=== Usages ===
=== Predecessor ===
v246 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v252  <|@  <|@
f <@~|@floating>@ <|@
tid v248 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i241 
y: i13 
=== Succesors ===
=== Usages ===
v252 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i241 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v252 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v248 
=== Succesors ===
trueSuccessor: v251 
falseSuccessor: v249 
=== Usages ===
=== Predecessor ===
v243 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v248 #trueSuccessor: v251 #falseSuccessor: v249  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325567415205806
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v251 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v506 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v506  <|@  <|@
f <@*|@fixed>@ <|@
tid v506 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v251 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885211583485499
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v249 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j517 
=== Usages ===
=== Predecessor ===
v252 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j517  <|@  <|@
f <@~|@floating>@ <|@
tid a212 <|@
result v21|QWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 2]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Uncompress
stamp: a [Ljava/lang/Object;
=== Inputs ===
value: a921 
=== Succesors ===
=== Usages ===
v944 j522 j517 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a921  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j517 <|@
result v22|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a212 
=== Succesors ===
next: j522 
=== Usages ===
v950 
=== Predecessor ===
v249 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a212 #next: j522  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j522 <|@
result v23|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a212 
=== Succesors ===
next: v528 
=== Usages ===
v951 
=== Predecessor ===
j517 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a212 #next: v528  <|@  <|@
f <@~|@floating>@ <|@
tid j518 <|@
result v24|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i926 
=== Succesors ===
=== Usages ===
v950 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v950 <|@
result [v22|QWORD[*] + v24|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j517 
index: j518 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j517 index: j518  <|@  <|@
f <@~|@floating>@ <|@
tid j523 <|@
result v25|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v951 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v951 <|@
result [v23|QWORD[*] + v25|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j522 
index: j523 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j522 index: j523  <|@  <|@
f <@~|@floating>@ <|@
tid j527 <|@
result v26|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v528 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v528 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v950 v951 j527 
=== Succesors ===
next: v277 
=== Usages ===
=== Predecessor ===
j522 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v950 v951 j527 #next: v277  <|@  <|@
f <@~|@floating>@ <|@
tid v944 <|@
result [v21|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a212 
index: i926 
=== Succesors ===
=== Usages ===
v277 j529 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a212 index: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a276 <|@
result v27|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v277 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v277 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v388 
address: v944 
value: a276 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j529 
=== Usages ===
=== Predecessor ===
v528 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v388 address: v944 value: a276 stateAfter: - lastLocationAccess: - #next: j529  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j529 <|@
result [v21|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v944 
=== Succesors ===
next: v535 
=== Usages ===
j531 
=== Predecessor ===
v277 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v944 #next: v535  <|@  <|@
f <@~|@floating>@ <|@
tid j531 <|@
result v28|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j529 
y: i530 
=== Succesors ===
=== Usages ===
v952 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j529 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v952 <|@
result [v28|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j531 
index: j534 
=== Succesors ===
=== Usages ===
v535 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j531 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v535 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v952 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v278 
=== Usages ===
=== Predecessor ===
j529 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v952 value: i536 stateAfter: - lastLocationAccess: - #next: v278  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v278 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v279 
=== Usages ===
=== Predecessor ===
v535 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v940 value: i37 stateAfter: - lastLocationAccess: - #next: v279  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v279 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v281 
=== Usages ===
=== Predecessor ===
v278 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: i13 stateAfter: - lastLocationAccess: - #next: v281  <|@  <|@
f <@~|@floating>@ <|@
tid v945 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v281 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v281 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v945 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v282 
=== Usages ===
=== Predecessor ===
v279 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v945 value: i16 stateAfter: - lastLocationAccess: - #next: v282  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v282 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:967) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v171 
=== Usages ===
=== Predecessor ===
v281 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: i93 stateAfter: - lastLocationAccess: - #next: v171  <|@  <|@
f <@*|@fixed>@ <|@
tid v171 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:971) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v282 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v24|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v25|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v7|DWORD * 4 + 16], y: v27|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v21|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v29|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v390 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v494 
=== Usages ===
=== Predecessor ===
v391 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v494  <|@  <|@
f <@~|@floating>@ <|@
tid i495 <|@
result int[-68891|0xfffffffffffef2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -68891
stableDimension: 0
stamp: i32 [-68891] ⇊00000000fffef2e5 ⇈00000000fffef2e5
stampKind: i32
value: int[-68891|0xfffffffffffef2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v494 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v390 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68891|0xfffffffffffef2e5], Object[null]] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v386 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v488 
=== Usages ===
=== Predecessor ===
v387 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v488  <|@  <|@
f <@~|@floating>@ <|@
tid i489 <|@
result int[-67900|0xfffffffffffef6c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -67900
stableDimension: 0
stamp: i32 [-67900] ⇊00000000fffef6c4 ⇈00000000fffef6c4
stampKind: i32
value: int[-67900|0xfffffffffffef6c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v488 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v386 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67900|0xfffffffffffef6c4], v18|QWORD[.]] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v101 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 20]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v395 
=== Usages ===
=== Predecessor ===
v102 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v395  <|@  <|@
f <@~|@floating>@ <|@
tid i114 <|@
result v30|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 9]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [0 - 1073741823] ⇈000000003fffffff
=== Inputs ===
x: i928 
y: i12 
=== Succesors ===
=== Usages ===
i115 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: i928 y: i12  <|@  <|@
f <@~|@floating>@ <|@
tid i115 <|@
result v31|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:259) [bci: 10]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i114 
y: i928 
=== Succesors ===
=== Usages ===
i116 i350 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i114 y: i928  <|@  <|@
f <@~|@floating>@ <|@
tid i116 <|@
result v32|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 14]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i115 
y: i89 
=== Succesors ===
=== Usages ===
v117 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i115 y: i89  <|@  <|@
f <@~|@floating>@ <|@
tid v117 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:260) [bci: 15]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i116 
y: i60 
=== Succesors ===
=== Usages ===
i350 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i116 y: i60  <|@  <|@
f <@~|@floating>@ <|@
tid i350 <|@
result v33|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v117 
trueValue: i89 
falseValue: i115 
=== Succesors ===
=== Usages ===
i314 v332 i127 j667 v408 v424 i451 a569 v598 i617 v610 i553 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v117 trueValue: i89 falseValue: i115  <|@  <|@
f <@~|@floating>@ <|@
tid i126 <|@
result int[-2147483639|0xffffffff80000009] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -2147483639
stableDimension: 0
stamp: i32 [-2147483639] ⇊0000000080000009 ⇈0000000080000009
stampKind: i32
value: int[-2147483639|0xffffffff80000009]
=== Inputs ===
=== Succesors ===
=== Usages ===
i127 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i127 <|@
result v34|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 23]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i126 
=== Succesors ===
=== Usages ===
v128 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i350 y: i126  <|@  <|@
f <@~|@floating>@ <|@
tid v128 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i127 
y: i12 
=== Succesors ===
=== Usages ===
v395 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i127 y: i12  <|@  <|@
f <@*|@fixed>@ <|@
tid v395 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v128 
=== Succesors ===
trueSuccessor: v392 
falseSuccessor: v394 
=== Usages ===
=== Predecessor ===
v101 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v128 #trueSuccessor: v392 #falseSuccessor: v394  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v392 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v399 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v399  <|@  <|@
f <@~|@floating>@ <|@
tid v332 <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i926 
y: i350 
=== Succesors ===
=== Usages ===
v399 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: i926 y: i350  <|@  <|@
f <@*|@fixed>@ <|@
tid v399 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v332 
=== Succesors ===
trueSuccessor: v396 
falseSuccessor: v398 
=== Usages ===
=== Predecessor ===
v392 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v332 #trueSuccessor: v396 #falseSuccessor: v398  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v396 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v414 
=== Usages ===
v339 
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v414  <|@  <|@
f <@~|@floating>@ <|@
tid v408 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 22]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i350 
y: i60 
=== Succesors ===
=== Usages ===
v414 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i350 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v414 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 33]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.0
=== Inputs ===
condition: v408 
=== Succesors ===
trueSuccessor: v413 
falseSuccessor: v409 
=== Usages ===
=== Predecessor ===
v396 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v408 #trueSuccessor: v413 #falseSuccessor: v409  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v413 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:187) [bci: 55]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v504 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v504  <|@  <|@
f <@~|@floating>@ <|@
tid i505 <|@
result int[-107617|0xfffffffffffe5b9f] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -107617
stableDimension: 0
stamp: i32 [-107617] ⇊00000000fffe5b9f ⇈00000000fffe5b9f
stampKind: i32
value: int[-107617|0xfffffffffffe5b9f]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v504 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v413 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107617|0xfffffffffffe5b9f], Object[null]] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v409 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.T.c.a(stripped:185) [bci: 36]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:171) [bci: 3]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j556 
=== Usages ===
=== Predecessor ===
v414 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j556  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j556 <|@
result r15|QWORD <|@
d <@d|@=== Debug Properties ===
directUse: true
incoming: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(Register, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.registerAsWord(HotSpotReplacementsUtil.java:772) [bci: 3]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:319) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
register: r15
stamp: i64
=== Inputs ===
=== Succesors ===
next: j595 
=== Usages ===
v953 v954 
=== Predecessor ===
v409 >@ <|@
instruction <@ReadRegister|@org.graalvm.compiler.replacements.nodes.ReadRegisterNode>@ #next: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v953 <|@
result [r15|QWORD + 96] <|@
d <@d|@=== Debug Properties ===
displacement: 96
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
j595 v597 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j595 <|@
result v35|QWORD <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabTop(HotSpotReplacementsUtil.java:245) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:320) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
=== Succesors ===
next: j596 
=== Usages ===
j560 v955 v956 a568 v961 v957 v958 v959 v960 
=== Predecessor ===
j556 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v953 #next: j596  <|@  <|@
f <@~|@floating>@ <|@
tid v954 <|@
result [r15|QWORD + 112] <|@
d <@d|@=== Debug Properties ===
displacement: 112
scale: Times1
stamp: void*
=== Inputs ===
base: j556 
index: - 
=== Succesors ===
=== Usages ===
j596 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j556 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j596 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: true
location: TlabEnd
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.readTlabEnd(HotSpotReplacementsUtil.java:249) [bci: 10]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:321) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: i64
=== Inputs ===
stateBefore: - 
guard: - 
address: v954 
=== Succesors ===
next: v564 
=== Usages ===
v561 
=== Predecessor ===
j595 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v954 #next: v564  <|@  <|@
f <@~|@floating>@ <|@
tid i272 <|@
result int[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 2
stableDimension: 0
stamp: i32 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i32
value: int[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
i553 i618 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i553 <|@
result v36|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 8]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i350 
y: i272 
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i350 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid i576 <|@
result int[23|0x17] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 23
stableDimension: 0
stamp: i32 [23] ⇊0000000000000017 ⇈0000000000000017
stampKind: i32
value: int[23|0x17]
=== Inputs ===
=== Succesors ===
=== Usages ===
i577 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i577 <|@
result v37|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:602) [bci: 15]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483645 - 2147483647] ⇊0000000000000003
=== Inputs ===
x: i553 
y: i576 
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i553 y: i576  <|@  <|@
f <@~|@floating>@ <|@
tid i554 <|@
result int[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:603) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -8
stableDimension: 0
stamp: i32 [-8] ⇊00000000fffffff8 ⇈00000000fffffff8
stampKind: i32
value: int[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
i555 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid i555 <|@
result v38|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AndNode$$Lambda$70/733025683@751be1e0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:604) [bci: 30]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.arrayAllocationSize(HotSpotReplacementsUtil.java:585) [bci: 9]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:318) [bci: 4]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483640] ⇈00000000fffffff8
=== Inputs ===
x: i577 
y: i554 
=== Succesors ===
=== Usages ===
j559 
=== Predecessor ===
- >@ <|@
instruction <@&|@org.graalvm.compiler.nodes.calc.AndNode>@ x: i577 y: i554  <|@  <|@
f <@~|@floating>@ <|@
tid j559 <|@
result v39|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483640] ⇈fffffffffffffff8
=== Inputs ===
value: i555 
=== Succesors ===
=== Usages ===
j560 v957 v958 v959 v960 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i555  <|@  <|@
f <@~|@floating>@ <|@
tid j560 <|@
result v40|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:322) [bci: 34]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j559 
y: j595 
=== Succesors ===
=== Usages ===
v561 v597 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j559 y: j595  <|@  <|@
f <@~|@floating>@ <|@
tid v561 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: BT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 83]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerBelowNode$BelowOp@19d5dcf
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j596 
y: j560 
=== Succesors ===
=== Usages ===
v564 
=== Predecessor ===
- >@ <|@
instruction <@|<||@org.graalvm.compiler.nodes.calc.IntegerBelowNode>@ x: j596 y: j560  <|@  <|@
f <@~|@floating>@ <|@
tid j540 <|@
result long[1|0x1] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 1
stableDimension: 0
stamp: i64 [1] ⇊0000000000000001 ⇈0000000000000001
stampKind: i64
value: long[1|0x1]
=== Inputs ===
=== Succesors ===
=== Usages ===
v599 j623 v629 v678 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v564 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:324) [bci: 89]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v561 
=== Succesors ===
trueSuccessor: v562 
falseSuccessor: v563 
=== Usages ===
=== Predecessor ===
j596 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v561 #trueSuccessor: v562 #falseSuccessor: v563  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v33|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA [v36|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = AND v37|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVSXD v38|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = ADD (x: v39|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v562 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 148]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a569 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a569  <|@  <|@
f <@~|@floating>@ <|@
tid v516 <|@
result v41|QWORD <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Uncompress
stamp: Klass*!
=== Inputs ===
value: v929 
=== Succesors ===
=== Usages ===
a569 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: v929  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a569 <|@
result v42|QWORD[.] <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: new_array(KlassPointer,int,boolean)Object
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.newArray(ForeignCallDescriptor, KlassPointer, int, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:332) [bci: 155]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! Ljava/lang/Object;
=== Inputs ===
stateAfter: - 
stateDuring: ?95 
arguments: v516 i350 i60 
=== Succesors ===
next: v572 
=== Usages ===
a573 
=== Predecessor ===
v562 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: ?95 arguments: v516 i350 i60 #next: v572  <|@  <|@
f <@*|@fixed>@ <|@
tid v572 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
a569 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v15|QWORD[.] v9|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v563 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 92]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v597 
=== Usages ===
=== Predecessor ===
v564 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v597  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v597 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: TlabTop
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.writeTlabTop(HotSpotReplacementsUtil.java:257) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:325) [bci: 96]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v953 
value: j560 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v582 
=== Usages ===
=== Predecessor ===
v563 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v953 value: j560 stateAfter: - lastLocationAccess: - #next: v582  <|@  <|@
f <@~|@floating>@ <|@
tid v957 <|@
result [v39|QWORD + v35|QWORD * 1 + 192] <|@
d <@d|@=== Debug Properties ===
displacement: 192
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v582 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v582 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v957 
=== Succesors ===
next: v585 
=== Usages ===
=== Predecessor ===
v597 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v957 #next: v585  <|@  <|@
f <@~|@floating>@ <|@
tid v958 <|@
result [v39|QWORD + v35|QWORD * 1 + 256] <|@
d <@d|@=== Debug Properties ===
displacement: 256
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v585 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v585 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v958 
=== Succesors ===
next: v588 
=== Usages ===
=== Predecessor ===
v582 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v958 #next: v588  <|@  <|@
f <@~|@floating>@ <|@
tid v959 <|@
result [v39|QWORD + v35|QWORD * 1 + 320] <|@
d <@d|@=== Debug Properties ===
displacement: 320
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v588 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v588 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v959 
=== Succesors ===
next: v591 
=== Usages ===
=== Predecessor ===
v585 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v959 #next: v591  <|@  <|@
f <@~|@floating>@ <|@
tid v960 <|@
result [v39|QWORD + v35|QWORD * 1 + 384] <|@
d <@d|@=== Debug Properties ===
displacement: 384
scale: Times1
stamp: void*
=== Inputs ===
base: j559 
index: j595 
=== Succesors ===
=== Usages ===
v591 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j559 index: j595  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v591 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.nodes.PrefetchAllocateNode.prefetch(AddressNode$Address) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.emitPrefetchAllocate(NewObjectSnippets.java:195) [bci: 61]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:326) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: v960 
=== Succesors ===
next: v598 
=== Usages ===
=== Predecessor ===
v588 >@ <|@
instruction <@PrefetchAllocate|@org.graalvm.compiler.nodes.PrefetchAllocateNode>@ address: v960 #next: v598  <|@  <|@
f <@~|@floating>@ <|@
tid v955 <|@
result [v35|QWORD + 12] <|@
d <@d|@=== Debug Properties ===
displacement: 12
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v598 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v598 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:549) [bci: 12]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v955 
value: i350 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v599 
=== Usages ===
=== Predecessor ===
v591 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v955 value: i350 stateAfter: - lastLocationAccess: - #next: v599  <|@  <|@
f <@~|@floating>@ <|@
tid v956 <|@
result [v35|QWORD] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v599 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v599 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: MarkWord
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v956 
value: j540 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v602 
=== Usages ===
=== Predecessor ===
v598 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v956 value: j540 stateAfter: - lastLocationAccess: - #next: v602  <|@  <|@
f <@~|@floating>@ <|@
tid v961 <|@
result [v35|QWORD + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: j595 
index: - 
=== Succesors ===
=== Usages ===
v602 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j595 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v602 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: Hub:write
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.StoreHubNode.write(Object, Object) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:470) [bci: 16]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v961 
value: v929 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v567 
=== Usages ===
=== Predecessor ===
v599 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v961 value: v929 stateAfter: - lastLocationAccess: - #next: v567  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v567 <|@
d <@d|@=== Debug Properties ===
barriers: 8
location: INIT_LOCATION
nodeSourcePosition: at org.graalvm.compiler.nodes.extended.MembarNode.memoryBarrier(int, LocationIdentity) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:560) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: a568 
=== Usages ===
=== Predecessor ===
v602 >@ <|@
instruction <@Membar|@org.graalvm.compiler.nodes.extended.MembarNode>@ #next: a568  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a568 <|@
result v43|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:561) [bci: 71]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! -
trackedPointer: true
=== Inputs ===
input: j595 
=== Succesors ===
next: v570 
=== Usages ===
a573 
=== Predecessor ===
v567 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: j595 #next: v570  <|@  <|@
f <@*|@fixed>@ <|@
tid v570 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v571 
=== Predecessor ===
a568 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 12], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE v35|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid a573 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: a! -
valueDescription: a -
=== Inputs ===
merge: v571 
values: a568 a569 
=== Succesors ===
=== Usages ===
v967 a457 v948 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v571 values: a568 a569  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v571 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:334) [bci: 160]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v570 v572 
=== Succesors ===
next: v789 
=== Usages ===
a573 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v570 v572 #next: v789  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v789 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v681 
=== Usages ===
j790 j792 
=== Predecessor ===
v571 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v681  <|@  <|@
f <@~|@floating>@ <|@
tid v948 <|@
result [v44|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a573 
index: - 
=== Succesors ===
=== Usages ===
j792 j616 j614 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a573 index: -  <|@  <|@
f <@~|@floating>@ <|@
tid v424 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at java.lang.Math.min(Math.java:1336) [bci: 2]
at com.oracle.graal.enterprise.T.c.b(stripped:192) [bci: 4]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:174) [bci: 19]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i928 
y: i350 
=== Succesors ===
=== Usages ===
i451 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i928 y: i350  <|@  <|@
f <@~|@floating>@ <|@
tid i451 <|@
result v45|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32
=== Inputs ===
condition: v424 
trueValue: i928 
falseValue: i350 
=== Succesors ===
=== Usages ===
j668 
=== Predecessor ===
- >@ <|@
instruction <@Conditional|@org.graalvm.compiler.nodes.calc.ConditionalNode>@ condition: v424 trueValue: i928 falseValue: i350  <|@  <|@
f <@~|@floating>@ <|@
tid j668 <|@
result v46|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i451 
=== Succesors ===
=== Usages ===
j841 v967 j672 v678 v786 j828 j834 j838 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i451  <|@  <|@
f <@~|@floating>@ <|@
tid v678 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j668 
y: j540 
=== Succesors ===
=== Usages ===
v681 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j668 y: j540  <|@  <|@
f <@~|@floating>@ <|@
tid j627 <|@
result long[-1|0xffffffffffffffff] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: -1
stableDimension: 0
stamp: i64 [-1] ⇊ffffffffffffffff
stampKind: i64
value: long[-1|0xffffffffffffffff]
=== Inputs ===
=== Succesors ===
=== Usages ===
j628 j841 j883 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j809 <|@
result long[2|0x2] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 2
stableDimension: 0
stamp: i64 [2] ⇊0000000000000002 ⇈0000000000000002
stampKind: i64
value: long[2|0x2]
=== Inputs ===
=== Succesors ===
=== Usages ===
j810 j859 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j837 <|@
result long[-2|0xfffffffffffffffe] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -2
stableDimension: 0
stamp: i64 [-2] ⇊fffffffffffffffe ⇈fffffffffffffffe
stampKind: i64
value: long[-2|0xfffffffffffffffe]
=== Inputs ===
=== Succesors ===
=== Usages ===
j838 j880 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j795 <|@
result long[4|0x4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: 4
stableDimension: 0
stamp: i64 [4] ⇊0000000000000004 ⇈0000000000000004
stampKind: i64
value: long[4|0x4]
=== Inputs ===
=== Succesors ===
=== Usages ===
j818 j865 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j833 <|@
result long[-4|0xfffffffffffffffc] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -4
stableDimension: 0
stamp: i64 [-4] ⇊fffffffffffffffc ⇈fffffffffffffffc
stampKind: i64
value: long[-4|0xfffffffffffffffc]
=== Inputs ===
=== Succesors ===
=== Usages ===
j834 j877 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j513 <|@
result long[8|0x8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.ClassGetHubNode.readClass(Class) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.HotSpotClassSubstitutions.getComponentType(HotSpotClassSubstitutions.java:120) [bci: 1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 6]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 8
stableDimension: 0
stamp: i64 [8] ⇊0000000000000008 ⇈0000000000000008
stampKind: i64
value: long[8|0x8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j871 j826 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j827 <|@
result long[-8|0xfffffffffffffff8] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -8
stableDimension: 0
stamp: i64 [-8] ⇊fffffffffffffff8 ⇈fffffffffffffff8
stampKind: i64
value: long[-8|0xfffffffffffffff8]
=== Inputs ===
=== Succesors ===
=== Usages ===
j828 j872 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@~|@floating>@ <|@
tid j580 <|@
result long[0|0x0] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.HotSpotReplacementsUtil.initializeObjectHeader(HotSpotReplacementsUtil.java:469) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.formatArray(NewObjectSnippets.java:554) [bci: 20]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayImpl(NewObjectSnippets.java:330) [bci: 140]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamicImpl(NewObjectSnippets.java:405) [bci: 214]
at org.graalvm.compiler.hotspot.replacements.NewObjectSnippets.allocateArrayDynamic(NewObjectSnippets.java:358) [bci: 16]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rawvalue: 0
stableDimension: 0
stamp: i64 [0] ⇈0000000000000000
stampKind: i64
value: long[0|0x0]
=== Inputs ===
=== Succesors ===
=== Usages ===
j860 v873 j811 j819 v829 j866 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v681 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v678 
=== Succesors ===
trueSuccessor: v679 
falseSuccessor: v680 
=== Usages ===
=== Predecessor ===
v789 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v678 #trueSuccessor: v679 #falseSuccessor: v680  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v33|DWORD, ~trueValue: v12|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v45|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v679 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v698 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v698  <|@  <|@
f <@*|@fixed>@ <|@
tid v698 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v679 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v680 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v684 
=== Usages ===
=== Predecessor ===
v681 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v684  <|@  <|@
f <@~|@floating>@ <|@
tid j792 <|@
result v47|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v789 
address: v948 
=== Succesors ===
=== Usages ===
v968 v970 v972 v974 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v789 address: v948  <|@  <|@
f <@~|@floating>@ <|@
tid v947 <|@
result [v3|DWORD[.] * 8 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times8
stamp: void*
=== Inputs ===
base: - 
index: a921 
=== Succesors ===
=== Usages ===
j790 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: - index: a921  <|@  <|@
f <@~|@floating>@ <|@
tid j790 <|@
result v48|QWORD[*] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v789 
address: v947 
=== Succesors ===
=== Usages ===
v969 v971 v973 v975 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v789 address: v947  <|@  <|@
f <@~|@floating>@ <|@
tid j828 <|@
result v49|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483656 - 2147483639]
=== Inputs ===
x: j668 
y: j827 
=== Succesors ===
=== Usages ===
v829 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v829 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j580 
=== Succesors ===
=== Usages ===
v684 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v684 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v829 
=== Succesors ===
trueSuccessor: v682 
falseSuccessor: v683 
=== Usages ===
=== Predecessor ===
v680 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v829 #trueSuccessor: v682 #falseSuccessor: v683  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v682 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v694 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v694  <|@  <|@
f <@*|@fixed>@ <|@
tid v694 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v682 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v683 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v685 
=== Usages ===
=== Predecessor ===
v684 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v685  <|@  <|@
f <@*|@fixed>@ <|@
tid v685 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v686 
=== Predecessor ===
v683 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j819 <|@
result v50|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v686 
values: j580 j826 
=== Succesors ===
=== Usages ===
v975 j826 v974 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v686 values: j580 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v686 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v685 
=== Succesors ===
next: v930 
=== Usages ===
v930 v690 v691 j819 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v685 #next: v930  <|@  <|@
f <@~|@floating>@ <|@
tid v975 <|@
result [v48|QWORD[*] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j819 
=== Succesors ===
=== Usages ===
v930 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v930 <|@
result v51|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v686 
address: v975 
=== Succesors ===
next: v898 
=== Usages ===
v898 
=== Predecessor ===
v686 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v686 address: v975 #next: v898  <|@  <|@
f <@~|@floating>@ <|@
tid v974 <|@
result [v47|QWORD[.] + v50|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j819 
=== Succesors ===
=== Usages ===
v898 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j819  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v898 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v974 
value: v930 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v693 
=== Usages ===
=== Predecessor ===
v930 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v974 value: v930 stateAfter: - lastLocationAccess: - #next: v693  <|@  <|@
f <@~|@floating>@ <|@
tid j826 <|@
result v52|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j819 
y: j513 
=== Succesors ===
=== Usages ===
j811 j819 v831 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j819 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v831 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j828 
y: j826 
=== Succesors ===
=== Usages ===
v693 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j828 y: j826  <|@  <|@
f <@*|@fixed>@ <|@
tid v693 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v831 
=== Succesors ===
trueSuccessor: v690 
falseSuccessor: v692 
=== Usages ===
=== Predecessor ===
v898 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v831 #trueSuccessor: v690 #falseSuccessor: v692  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V256_DWORD[........] = H [v48|QWORD[*] + v50|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v50|QWORD * 4], input: v51|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v690 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v686 
=== Succesors ===
next: v696 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v686 #next: v696  <|@  <|@
f <@*|@fixed>@ <|@
tid v696 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v695 
=== Predecessor ===
v690 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j811 <|@
result v53|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v695 
values: j580 j826 
=== Succesors ===
=== Usages ===
v973 j818 j802 v835 v972 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v695 values: j580 j826  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v695 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v694 v696 
=== Succesors ===
next: v714 
=== Usages ===
j811 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v694 v696 #next: v714  <|@  <|@
f <@~|@floating>@ <|@
tid j834 <|@
result v54|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483652 - 2147483643]
=== Inputs ===
x: j668 
y: j833 
=== Succesors ===
=== Usages ===
v835 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v835 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j834 
y: j811 
=== Succesors ===
=== Usages ===
v714 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j834 y: j811  <|@  <|@
f <@*|@fixed>@ <|@
tid v714 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v835 
=== Succesors ===
trueSuccessor: v713 
falseSuccessor: v712 
=== Usages ===
=== Predecessor ===
v695 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v835 #trueSuccessor: v713 #falseSuccessor: v712  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v46|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v713 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v717 
=== Usages ===
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v717  <|@  <|@
f <@*|@fixed>@ <|@
tid v717 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v713 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v712 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v931 
=== Usages ===
v931 
=== Predecessor ===
v714 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v931  <|@  <|@
f <@~|@floating>@ <|@
tid v973 <|@
result [v48|QWORD[*] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j811 
=== Succesors ===
=== Usages ===
v931 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v931 <|@
result v55|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v712 
address: v973 
=== Succesors ===
next: v896 
=== Usages ===
v896 
=== Predecessor ===
v712 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v712 address: v973 #next: v896  <|@  <|@
f <@~|@floating>@ <|@
tid v972 <|@
result [v47|QWORD[.] + v53|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j811 
=== Succesors ===
=== Usages ===
v896 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v896 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v972 
value: v931 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v705 
=== Usages ===
=== Predecessor ===
v931 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v972 value: v931 stateAfter: - lastLocationAccess: - #next: v705  <|@  <|@
f <@~|@floating>@ <|@
tid j818 <|@
result v56|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j811 
y: j795 
=== Succesors ===
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j811 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v705 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v706 
=== Predecessor ===
v896 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|V128_DWORD[....] = H [v48|QWORD[*] + v53|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v53|QWORD * 4], input: v55|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j802 <|@
result v57|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v706 
values: j818 j811 
=== Succesors ===
=== Usages ===
v971 j810 j793 v839 v970 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v706 values: j818 j811  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v706 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v705 v717 
=== Succesors ===
next: v720 
=== Usages ===
j802 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v705 v717 #next: v720  <|@  <|@
f <@~|@floating>@ <|@
tid j838 <|@
result v58|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483650 - 2147483645]
=== Inputs ===
x: j668 
y: j837 
=== Succesors ===
=== Usages ===
v839 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v839 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j838 
y: j802 
=== Succesors ===
=== Usages ===
v720 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j838 y: j802  <|@  <|@
f <@*|@fixed>@ <|@
tid v720 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v839 
=== Succesors ===
trueSuccessor: v719 
falseSuccessor: v718 
=== Usages ===
=== Predecessor ===
v706 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v839 #trueSuccessor: v719 #falseSuccessor: v718  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v46|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v719 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v723 
=== Usages ===
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v723  <|@  <|@
f <@*|@fixed>@ <|@
tid v723 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v719 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v718 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v932 
=== Usages ===
v932 
=== Predecessor ===
v720 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v932  <|@  <|@
f <@~|@floating>@ <|@
tid v971 <|@
result [v48|QWORD[*] + v57|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j802 
=== Succesors ===
=== Usages ===
v932 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v932 <|@
result v59|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: <n Ljava/lang/Object;,n Ljava/lang/Object;>
=== Inputs ===
stateBefore: - 
guard: v718 
address: v971 
=== Succesors ===
next: v894 
=== Usages ===
v894 
=== Predecessor ===
v718 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v718 address: v971 #next: v894  <|@  <|@
f <@~|@floating>@ <|@
tid v970 <|@
result [v47|QWORD[.] + v57|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j802 
=== Succesors ===
=== Usages ===
v894 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v894 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v970 
value: v932 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v708 
=== Usages ===
=== Predecessor ===
v932 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v970 value: v932 stateAfter: - lastLocationAccess: - #next: v708  <|@  <|@
f <@~|@floating>@ <|@
tid j810 <|@
result v60|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j802 
y: j809 
=== Succesors ===
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j802 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v708 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v709 
=== Predecessor ===
v894 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V64_DWORD[..] = H [v48|QWORD[*] + v57|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v57|QWORD * 4], input: v59|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j793 <|@
result v61|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v709 
values: j810 j802 
=== Succesors ===
=== Usages ===
v969 v842 v968 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v709 values: j810 j802  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v709 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v708 v723 
=== Succesors ===
next: v726 
=== Usages ===
j793 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v708 v723 #next: v726  <|@  <|@
f <@~|@floating>@ <|@
tid j841 <|@
result v62|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-2147483649 - 2147483646]
=== Inputs ===
x: j668 
y: j627 
=== Succesors ===
=== Usages ===
v842 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j668 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid v842 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j841 
y: j793 
=== Succesors ===
=== Usages ===
v726 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j841 y: j793  <|@  <|@
f <@*|@fixed>@ <|@
tid v726 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v842 
=== Succesors ===
trueSuccessor: v725 
falseSuccessor: v724 
=== Usages ===
=== Predecessor ===
v709 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v842 #trueSuccessor: v725 #falseSuccessor: v724  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v46|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v725 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v729 
=== Usages ===
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v729  <|@  <|@
f <@*|@fixed>@ <|@
tid v729 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v725 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v724 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: a933 
=== Usages ===
a933 
=== Predecessor ===
v726 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: a933  <|@  <|@
f <@~|@floating>@ <|@
tid v969 <|@
result [v48|QWORD[*] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j790 
index: j793 
=== Succesors ===
=== Usages ===
a933 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j790 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a933 <|@
result v63|DWORD[.] <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
forceFixed: false
location: Array: Object
nullCheck: false
stamp: n Ljava/lang/Object;
=== Inputs ===
stateBefore: - 
guard: v724 
address: v969 
=== Succesors ===
next: v892 
=== Usages ===
v892 
=== Predecessor ===
v724 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: v724 address: v969 #next: v892  <|@  <|@
f <@~|@floating>@ <|@
tid v968 <|@
result [v47|QWORD[.] + v61|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j792 
index: j793 
=== Succesors ===
=== Usages ===
v892 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j792 index: j793  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v892 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v968 
value: a933 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v711 
=== Usages ===
=== Predecessor ===
a933 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v968 value: a933 stateAfter: - lastLocationAccess: - #next: v711  <|@  <|@
f <@*|@fixed>@ <|@
tid v711 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v699 
=== Predecessor ===
v892 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v48|QWORD[*] + v61|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + v61|QWORD * 4], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v699 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v698 v711 v729 
=== Succesors ===
next: v845 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v698 v711 v729 #next: v845  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v845 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
anchored: - 
=== Succesors ===
next: v736 
=== Usages ===
j847 
=== Predecessor ===
v699 >@ <|@
instruction <@ValueAnchor|@org.graalvm.compiler.nodes.extended.ValueAnchorNode>@ anchored: - #next: v736  <|@  <|@
f <@~|@floating>@ <|@
tid j667 <|@
result v64|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i350 
=== Succesors ===
=== Usages ===
j672 v786 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i350  <|@  <|@
f <@~|@floating>@ <|@
tid v786 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j668 
y: j667 
=== Succesors ===
=== Usages ===
v736 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j668 y: j667  <|@  <|@
f <@*|@fixed>@ <|@
tid v736 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v786 
=== Succesors ===
trueSuccessor: v735 
falseSuccessor: v734 
=== Usages ===
=== Predecessor ===
v845 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v786 #trueSuccessor: v735 #falseSuccessor: v734  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v735 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v739 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v739  <|@  <|@
f <@~|@floating>@ <|@
tid v967 <|@
result [v44|QWORD[.] + v46|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a573 
index: j668 
=== Succesors ===
=== Usages ===
j847 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a573 index: j668  <|@  <|@
f <@~|@floating>@ <|@
tid j847 <|@
result v65|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: i64
=== Inputs ===
anchor: v845 
address: v967 
=== Succesors ===
=== Usages ===
v976 v977 v978 v979 
=== Predecessor ===
- >@ <|@
instruction <@d|@com.oracle.graal.enterprise.n.d>@ anchor: v845 address: v967  <|@  <|@
f <@~|@floating>@ <|@
tid j672 <|@
result v66|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
stamp: i64 [-4294967295 - 4294967295]
=== Inputs ===
x: j667 
y: j668 
=== Succesors ===
=== Usages ===
j883 j872 j877 j880 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j667 y: j668  <|@  <|@
f <@~|@floating>@ <|@
tid j872 <|@
result v67|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967303 - 4294967287]
=== Inputs ===
x: j672 
y: j827 
=== Succesors ===
=== Usages ===
v873 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j827  <|@  <|@
f <@~|@floating>@ <|@
tid v873 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j580 
=== Succesors ===
=== Usages ===
v739 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j580  <|@  <|@
f <@*|@fixed>@ <|@
tid v739 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.75
=== Inputs ===
condition: v873 
=== Succesors ===
trueSuccessor: v737 
falseSuccessor: v738 
=== Usages ===
=== Predecessor ===
v735 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v873 #trueSuccessor: v737 #falseSuccessor: v738  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = LEA [v44|QWORD[.] + v46|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SUB (x: v64|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v737 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v748 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v748  <|@  <|@
f <@*|@fixed>@ <|@
tid v748 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v737 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v738 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v740 
=== Usages ===
=== Predecessor ===
v739 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v740  <|@  <|@
f <@~|@floating>@ <|@
tid v907 <|@
result v68|V256_DWORD[........] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null,null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n -,n -,n -,n -,n ->
value: SIMD<null,null,null,null,null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v740 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v741 
=== Predecessor ===
v738 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j866 <|@
result v69|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v741 
values: j580 j871 
=== Succesors ===
=== Usages ===
v979 j871 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v741 values: j580 j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v741 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 4.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v740 
=== Succesors ===
next: v906 
=== Usages ===
j866 v744 v745 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v740 #next: v906  <|@  <|@
f <@~|@floating>@ <|@
tid v979 <|@
result [v65|QWORD[.] + v69|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j866 
=== Succesors ===
=== Usages ===
v906 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j866  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v906 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v979 
value: v907 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v747 
=== Usages ===
=== Predecessor ===
v741 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v979 value: v907 stateAfter: - lastLocationAccess: - #next: v747  <|@  <|@
f <@~|@floating>@ <|@
tid j871 <|@
result v70|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j866 
y: j513 
=== Succesors ===
=== Usages ===
j860 j866 v875 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j866 y: j513  <|@  <|@
f <@~|@floating>@ <|@
tid v875 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j872 
y: j871 
=== Succesors ===
=== Usages ===
v747 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j872 y: j871  <|@  <|@
f <@*|@fixed>@ <|@
tid v747 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v875 
=== Succesors ===
trueSuccessor: v744 
falseSuccessor: v746 
=== Usages ===
=== Predecessor ===
v906 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v875 #trueSuccessor: v744 #falseSuccessor: v746  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v69|QWORD * 4], input: v68|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v744 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v741 
=== Succesors ===
next: v750 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v741 #next: v750  <|@  <|@
f <@*|@fixed>@ <|@
tid v750 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v749 
=== Predecessor ===
v744 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j860 <|@
result v71|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v749 
values: j580 j871 
=== Succesors ===
=== Usages ===
v978 j865 j854 v878 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v749 values: j580 j871  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v749 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v748 v750 
=== Succesors ===
next: v768 
=== Usages ===
j860 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v748 v750 #next: v768  <|@  <|@
f <@~|@floating>@ <|@
tid j877 <|@
result v72|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967299 - 4294967291]
=== Inputs ===
x: j672 
y: j833 
=== Succesors ===
=== Usages ===
v878 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j833  <|@  <|@
f <@~|@floating>@ <|@
tid v878 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j877 
y: j860 
=== Succesors ===
=== Usages ===
v768 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j877 y: j860  <|@  <|@
f <@*|@fixed>@ <|@
tid v768 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v878 
=== Succesors ===
trueSuccessor: v767 
falseSuccessor: v766 
=== Usages ===
=== Predecessor ===
v749 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v878 #trueSuccessor: v767 #falseSuccessor: v766  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v66|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v767 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v771 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v771  <|@  <|@
f <@*|@fixed>@ <|@
tid v771 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v767 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v766 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v905 
=== Usages ===
=== Predecessor ===
v768 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v905  <|@  <|@
f <@~|@floating>@ <|@
tid v978 <|@
result [v65|QWORD[.] + v71|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j860 
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j860  <|@  <|@
f <@~|@floating>@ <|@
tid v910 <|@
result v73|V128_DWORD[....] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null,null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL,n - NULL,n - NULL>
stampKind: <n -,n -,n -,n ->
value: SIMD<null,null,null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v905 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v905 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v978 
value: v910 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v759 
=== Usages ===
=== Predecessor ===
v766 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v978 value: v910 stateAfter: - lastLocationAccess: - #next: v759  <|@  <|@
f <@~|@floating>@ <|@
tid j865 <|@
result v74|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j860 
y: j795 
=== Succesors ===
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j860 y: j795  <|@  <|@
f <@*|@fixed>@ <|@
tid v759 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v760 
=== Predecessor ===
v905 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v71|QWORD * 4], input: v73|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j854 <|@
result v75|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v760 
values: j865 j860 
=== Succesors ===
=== Usages ===
v977 j859 j848 v881 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v760 values: j865 j860  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v760 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v759 v771 
=== Succesors ===
next: v774 
=== Usages ===
j854 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v759 v771 #next: v774  <|@  <|@
f <@~|@floating>@ <|@
tid j880 <|@
result v76|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967297 - 4294967293]
=== Inputs ===
x: j672 
y: j837 
=== Succesors ===
=== Usages ===
v881 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j837  <|@  <|@
f <@~|@floating>@ <|@
tid v881 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j880 
y: j854 
=== Succesors ===
=== Usages ===
v774 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j880 y: j854  <|@  <|@
f <@*|@fixed>@ <|@
tid v774 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v881 
=== Succesors ===
trueSuccessor: v773 
falseSuccessor: v772 
=== Usages ===
=== Predecessor ===
v760 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v881 #trueSuccessor: v773 #falseSuccessor: v772  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v66|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v773 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v777 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v777  <|@  <|@
f <@*|@fixed>@ <|@
tid v777 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v773 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v772 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v903 
=== Usages ===
=== Predecessor ===
v774 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v903  <|@  <|@
f <@~|@floating>@ <|@
tid v977 <|@
result [v65|QWORD[.] + v75|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j854 
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j854  <|@  <|@
f <@~|@floating>@ <|@
tid v909 <|@
result v77|V64_DWORD[..] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: <null,null>
stableDimension: 0
stamp: <n - NULL,n - NULL>
stampKind: <n -,n ->
value: SIMD<null,null>
=== Inputs ===
=== Succesors ===
=== Usages ===
v903 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v903 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v977 
value: v909 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v762 
=== Usages ===
=== Predecessor ===
v772 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v977 value: v909 stateAfter: - lastLocationAccess: - #next: v762  <|@  <|@
f <@~|@floating>@ <|@
tid j859 <|@
result v78|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64
=== Inputs ===
x: j854 
y: j809 
=== Succesors ===
=== Usages ===
j848 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j854 y: j809  <|@  <|@
f <@*|@fixed>@ <|@
tid v762 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v763 
=== Predecessor ===
v903 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v75|QWORD * 4], input: v77|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j848 <|@
result v79|QWORD <|@
d <@d|@=== Debug Properties ===
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v763 
values: j859 j854 
=== Succesors ===
=== Usages ===
v976 v884 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v763 values: j859 j854  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v763 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v762 v777 
=== Succesors ===
next: v780 
=== Usages ===
j848 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v762 v777 #next: v780  <|@  <|@
f <@~|@floating>@ <|@
tid j883 <|@
result v80|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
stamp: i64 [-4294967296 - 4294967294]
=== Inputs ===
x: j672 
y: j627 
=== Succesors ===
=== Usages ===
v884 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j672 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid v884 <|@
d <@d|@=== Debug Properties ===
condition: LT
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j883 
y: j848 
=== Succesors ===
=== Usages ===
v780 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j883 y: j848  <|@  <|@
f <@*|@fixed>@ <|@
tid v780 <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 0.25
=== Inputs ===
condition: v884 
=== Succesors ===
trueSuccessor: v779 
falseSuccessor: v778 
=== Usages ===
=== Predecessor ===
v763 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v884 #trueSuccessor: v779 #falseSuccessor: v778  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v66|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v779 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v783 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v783  <|@  <|@
f <@*|@fixed>@ <|@
tid v783 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v779 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v778 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v901 
=== Usages ===
=== Predecessor ===
v780 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v901  <|@  <|@
f <@~|@floating>@ <|@
tid v976 <|@
result [v65|QWORD[.] + v79|QWORD * 4] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times4
stamp: void*
=== Inputs ===
base: j847 
index: j848 
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j847 index: j848  <|@  <|@
f <@~|@floating>@ <|@
tid a908 <|@
result Object[null] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: null
stableDimension: 0
stamp: n - NULL
stampKind: n -
value: Object[null]
=== Inputs ===
=== Succesors ===
=== Usages ===
v901 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v901 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: VectorInitialization
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v976 
value: a908 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v765 
=== Usages ===
=== Predecessor ===
v778 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v976 value: a908 stateAfter: - lastLocationAccess: - #next: v765  <|@  <|@
f <@*|@fixed>@ <|@
tid v765 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v901 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + v79|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v746 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v745 
=== Usages ===
=== Predecessor ===
v747 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v745  <|@  <|@
f <@*|@fixed>@ <|@
tid v745 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v741 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v746 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v741  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v734 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v752 
=== Usages ===
=== Predecessor ===
v736 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v752  <|@  <|@
f <@*|@fixed>@ <|@
tid v752 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v753 
=== Predecessor ===
v734 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v753 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v752 v765 v783 
=== Succesors ===
next: v613 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v752 v765 v783 #next: v613  <|@  <|@
f <@~|@floating>@ <|@
tid v610 <|@
d <@d|@=== Debug Properties ===
condition: EQ
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i350 
y: i60 
=== Succesors ===
=== Usages ===
v613 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.IntegerEqualsNode>@ x: i350 y: i60  <|@  <|@
f <@*|@fixed>@ <|@
tid v613 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:154) [bci: 1]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v610 
=== Succesors ===
trueSuccessor: v611 
falseSuccessor: v612 
=== Usages ===
=== Predecessor ===
v753 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v610 #trueSuccessor: v611 #falseSuccessor: v612  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v611 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:155) [bci: 4]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v638 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v638  <|@  <|@
f <@*|@fixed>@ <|@
tid v638 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v611 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v612 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:157) [bci: 5]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j614 
=== Usages ===
=== Predecessor ===
v613 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j614  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j614 <|@
result [v44|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToFirstArrayElement(WriteBarrierSnippets.java:376) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 20]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v948 
=== Succesors ===
next: j616 
=== Usages ===
j615 
=== Predecessor ===
v612 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v948 #next: j616  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j616 <|@
result [v44|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:385) [bci: 1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v948 
=== Succesors ===
next: v624 
=== Usages ===
j620 
=== Predecessor ===
j614 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v948 #next: v624  <|@  <|@
f <@~|@floating>@ <|@
tid i617 <|@
result v81|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 23]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i16 
=== Succesors ===
=== Usages ===
i618 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: i350 y: i16  <|@  <|@
f <@~|@floating>@ <|@
tid i618 <|@
result v82|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.LeftShiftNode$$Lambda$14/80425111@613f0d83
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 25]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32 [-2147483648 - 2147483644] ⇈00000000fffffffc
=== Inputs ===
x: i617 
y: i272 
=== Succesors ===
=== Usages ===
j619 
=== Predecessor ===
- >@ <|@
instruction <@<<|@org.graalvm.compiler.nodes.calc.LeftShiftNode>@ x: i617 y: i272  <|@  <|@
f <@~|@floating>@ <|@
tid j619 <|@
result v83|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 26]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483644] ⇈fffffffffffffffc
=== Inputs ===
value: i618 
=== Succesors ===
=== Usages ===
j620 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i618  <|@  <|@
f <@~|@floating>@ <|@
tid j620 <|@
result v85|QWORD[.] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.getPointerToLastArrayElement(WriteBarrierSnippets.java:390) [bci: 27]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 30]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j616 
y: j619 
=== Succesors ===
=== Usages ===
j621 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j616 y: j619  <|@  <|@
f <@~|@floating>@ <|@
tid j621 <|@
result v86|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:160) [bci: 34]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j620 
y: i530 
=== Succesors ===
=== Usages ===
j622 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j620 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid j615 <|@
result v87|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:159) [bci: 24]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j614 
y: i530 
=== Succesors ===
=== Usages ===
j622 j636 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j614 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid j622 <|@
result v89|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 41]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [-36028797018963967 - 36028797018963967]
=== Inputs ===
x: j621 
y: j615 
=== Succesors ===
=== Usages ===
j623 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: j621 y: j615  <|@  <|@
f <@~|@floating>@ <|@
tid j623 <|@
result v90|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:161) [bci: 43]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [-36028797018963966 - 36028797018963968]
=== Inputs ===
x: j622 
y: j540 
=== Succesors ===
=== Usages ===
j626 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j622 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v624 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v625 
=== Predecessor ===
j616 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = DEC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHL v81|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVSXD v82|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = ADD (x: v84|QWORD[.], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v85|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[*] = SUB (x: v86|QWORD[*], ~y: v87|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = INC v89|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD[*]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255864116453824
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid j626 <|@
result v91|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
valueDescription: i64
=== Inputs ===
merge: v625 
values: j623 j628 
=== Succesors ===
=== Usages ===
j628 v629 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v625 values: j623 j628  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v625 <|@
d <@d|@=== Debug Properties ===
canEndsSafepoint: false
inversionCount: 0
loopFrequency: 2.0
loopOrigFrequency: 1.0
loopType: SIMPLE_LOOP
nextEndIndex: 1
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
splits: 0
stamp: void
unrollFactor: 1
unswitches: 0
=== Inputs ===
stateAfter: - 
overflowGuard: - 
ends: v624 
=== Succesors ===
next: v632 
=== Usages ===
j626 v630 v635 
=== Predecessor ===
- >@ <|@
instruction <@LoopBegin|@org.graalvm.compiler.nodes.LoopBeginNode>@ stateAfter: - overflowGuard: - ends: v624 #next: v632  <|@  <|@
f <@~|@floating>@ <|@
tid v629 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: j626 
y: j540 
=== Succesors ===
=== Usages ===
v632 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: j626 y: j540  <|@  <|@
f <@*|@fixed>@ <|@
tid v632 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 55]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.5
=== Inputs ===
condition: v629 
=== Succesors ===
trueSuccessor: v630 
falseSuccessor: v631 
=== Usages ===
=== Predecessor ===
v625 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v629 #trueSuccessor: v630 #falseSuccessor: v631  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v630 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:165) [bci: 76]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
loopBegin: v625 
=== Succesors ===
next: v639 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@LoopExit|@org.graalvm.compiler.nodes.LoopExitNode>@ stateAfter: - loopBegin: v625 #next: v639  <|@  <|@
f <@*|@fixed>@ <|@
tid v639 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v637 
=== Predecessor ===
v630 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v637 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v638 v639 
=== Succesors ===
next: a457 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v638 v639 #next: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid a457 <|@
result v44|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
predefinedStamp: [null]
stamp: a! -
=== Inputs ===
object: a573 
=== Succesors ===
next: v934 
=== Usages ===
v962 a286 j651 j653 v946 
=== Predecessor ===
v637 >@ <|@
instruction <@FixedValueAnchor|@org.graalvm.compiler.nodes.extended.FixedValueAnchorNode>@ object: a573 #next: v934  <|@  <|@
f <@~|@floating>@ <|@
tid v962 <|@
result [v44|QWORD[.] + 8] <|@
d <@d|@=== Debug Properties ===
displacement: 8
scale: Times1
stamp: void*
=== Inputs ===
base: a457 
index: - 
=== Succesors ===
=== Usages ===
v934 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v934 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
forceFixed: false
location: CompressedHub:final
nullCheck: false
stamp: Klass*!(compressed base: 0 shift: 3)
=== Inputs ===
stateBefore: - 
guard: - 
address: v962 
=== Succesors ===
next: v403 
=== Usages ===
v665 
=== Predecessor ===
a457 >@ <|@
instruction <@Read|@org.graalvm.compiler.nodes.memory.ReadNode>@ stateBefore: - guard: - address: v962 #next: v403  <|@  <|@
f <@~|@floating>@ <|@
tid v665 <|@
result INTERIOR_MATCH <|@
d <@d|@=== Debug Properties ===
condition: EQ
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: v934 
y: v663 
=== Succesors ===
=== Usages ===
v403 
=== Predecessor ===
- >@ <|@
instruction <@==|@org.graalvm.compiler.nodes.calc.PointerEqualsNode>@ x: v934 y: v663  <|@  <|@
f <@*|@fixed>@ <|@
tid v403 <|@
result org.graalvm.compiler.core.match.ComplexMatchValue@d98b27eb <|@
d <@d|@=== Debug Properties ===
stamp: void
trueSuccessorProbability: 1.0
=== Inputs ===
condition: v665 
=== Succesors ===
trueSuccessor: v400 
falseSuccessor: v402 
=== Usages ===
=== Predecessor ===
v934 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v665 #trueSuccessor: v400 #falseSuccessor: v402  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v44|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v400 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v287 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v287  <|@  <|@
f <@~|@floating>@ <|@
tid a286 <|@
result v92|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n! -
=== Inputs ===
value: a457 
=== Succesors ===
=== Usages ===
v287 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a457  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v287 <|@
d <@d|@=== Debug Properties ===
barrierType: IMPRECISE
location: ArrayList.elementData
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v941 
value: a286 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j644 
=== Usages ===
=== Predecessor ===
v400 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v941 value: a286 stateAfter: - lastLocationAccess: - #next: j644  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j644 <|@
result v15|QWORD[.] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 1]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: a203 
=== Succesors ===
next: v648 
=== Usages ===
j645 
=== Predecessor ===
v287 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: a203 #next: v648  <|@  <|@
f <@~|@floating>@ <|@
tid j645 <|@
result v93|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j644 
y: i530 
=== Succesors ===
=== Usages ===
v963 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j644 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v963 <|@
result [v93|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j645 
index: j534 
=== Succesors ===
=== Usages ===
v648 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j645 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v648 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialImpreciseWriteBarrier(WriteBarrierSnippets.java:144) [bci: 5]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v963 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v302 
=== Usages ===
=== Predecessor ===
j644 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v963 value: i536 stateAfter: - lastLocationAccess: - #next: v302  <|@  <|@
f <@*|@fixed>@ <|@
tid v302 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 33]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v296 
=== Succesors ===
trueSuccessor: v301 
falseSuccessor: v297 
=== Usages ===
=== Predecessor ===
v648 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v296 #trueSuccessor: v301 #falseSuccessor: v297  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = SHR v15|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v93|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v301 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v300 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v300  <|@  <|@
f <@*|@fixed>@ <|@
tid v300 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v301 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v297 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:258) [bci: 36]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v307 
=== Usages ===
=== Predecessor ===
v302 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v307  <|@  <|@
f <@*|@fixed>@ <|@
tid v307 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 52]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v303 
=== Succesors ===
trueSuccessor: v306 
falseSuccessor: v304 
=== Usages ===
=== Predecessor ===
v297 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v303 #trueSuccessor: v306 #falseSuccessor: v304  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270880374414351
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v306 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v305 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v305  <|@  <|@
f <@*|@fixed>@ <|@
tid v305 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v306 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094916024318048
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v304 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:259) [bci: 55]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v313 
=== Usages ===
=== Predecessor ===
v307 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v313  <|@  <|@
f <@~|@floating>@ <|@
tid i314 <|@
result v94|DWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SubNode$$Lambda$64/1952983589@24889bdf
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 90]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i32
=== Inputs ===
x: i350 
y: i45 
=== Succesors ===
=== Usages ===
v315 v309 
=== Predecessor ===
- >@ <|@
instruction <@-|@org.graalvm.compiler.nodes.calc.SubNode>@ x: i350 y: i45  <|@  <|@
f <@~|@floating>@ <|@
tid v309 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i926 
=== Succesors ===
=== Usages ===
v313 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i926  <|@  <|@
f <@*|@fixed>@ <|@
tid v313 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 77]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v309 
=== Succesors ===
trueSuccessor: v312 
falseSuccessor: v310 
=== Usages ===
=== Predecessor ===
v304 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v309 #trueSuccessor: v312 #falseSuccessor: v310  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = SUB (x: v33|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219635795933332
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v312 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v311 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v311  <|@  <|@
f <@*|@fixed>@ <|@
tid v311 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v312 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015647066980222
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v310 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:260) [bci: 80]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v319 
=== Usages ===
=== Predecessor ===
v313 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v319  <|@  <|@
f <@~|@floating>@ <|@
tid v315 <|@
d <@d|@=== Debug Properties ===
condition: LT
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 91]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: org.graalvm.compiler.nodes.calc.IntegerLessThanNode$LessThanOp@7cc8d043
stamp: void
unorderedIsTrue: false
=== Inputs ===
x: i314 
y: i13 
=== Succesors ===
=== Usages ===
v319 
=== Predecessor ===
- >@ <|@
instruction <@<|@org.graalvm.compiler.nodes.calc.IntegerLessThanNode>@ x: i314 y: i13  <|@  <|@
f <@*|@fixed>@ <|@
tid v319 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:261) [bci: 102]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
trueSuccessorProbability: 0.010000000000000009
=== Inputs ===
condition: v315 
=== Succesors ===
trueSuccessor: v318 
falseSuccessor: v316 
=== Usages ===
=== Predecessor ===
v310 >@ <|@
instruction <@If|@org.graalvm.compiler.nodes.IfNode>@ condition: v315 #trueSuccessor: v318 #falseSuccessor: v316  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168903663237123
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v318 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v317 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v317  <|@  <|@
f <@*|@fixed>@ <|@
tid v317 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v299 
=== Predecessor ===
v318 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252714856862251
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v299 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:262) [bci: 105]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
ends: v300 v305 v311 v317 
=== Succesors ===
next: v320 
=== Usages ===
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v300 v305 v311 v317 #next: v320  <|@  <|@
tid ?137 <|@
d <@d|@=== Debug Properties ===
bci: 22
code: ResolvedJavaMethodBytecode<ArrayList.ensureExplicitCapacity(int)>
duringCall: true
localsSize: 2
locksSize: 0
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 239
stackSize: 0
=== Inputs ===
outerFrameState: ?108 
values: - - 
=== Succesors ===
=== Usages ===
?135 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?108 values: - -  <|@  <|@
tid ?135 <|@
d <@d|@=== Debug Properties ===
bci: 44
code: ResolvedJavaMethodBytecode<ArrayList.grow(int)>
duringCall: false
localsSize: 4
locksSize: 0
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:265) [bci: 41]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
rethrowException: false
sourceFile: ArrayList.java
sourceLine: 266
stackSize: 0
=== Inputs ===
outerFrameState: ?137 
values: - - - - 
=== Succesors ===
=== Usages ===
v320 
=== Predecessor ===
- >@ <|@
instruction <@FrameState|@org.graalvm.compiler.nodes.FrameState>@ outerFrameState: ?137 values: - - - -  <|@  <|@
f <@*|@fixed>@ <|@
tid v320 <|@
d <@d|@=== Debug Properties ===
action: None
debugId: 0
nodeSourcePosition: at org.graalvm.compiler.nodes.DeoptimizeNode.deopt(DeoptimizationAction, DeoptimizationReason) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:263) [bci: 119]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
reason: RuntimeConstraint
speculation: Object[null]
stamp: void
=== Inputs ===
stateBefore: ?135 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v299 >@ <|@
instruction <@Deopt|@org.graalvm.compiler.nodes.DeoptimizeNode>@ stateBefore: ?135  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82017 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937170799215774
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v316 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.checkLimits(ArrayCopySnippets.java:265) [bci: 122]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:120) [bci: 31]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: j651 
=== Usages ===
=== Predecessor ===
v319 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: j651  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j651 <|@
result v95|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: j653 
=== Usages ===
v964 
=== Predecessor ===
v316 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: j653  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j653 <|@
result v96|QWORD[*] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
object: a457 
=== Succesors ===
next: v655 
=== Usages ===
v965 
=== Predecessor ===
j651 >@ <|@
instruction <@GetObjectAddress|@org.graalvm.compiler.hotspot.nodes.GetObjectAddressNode>@ object: a457 #next: v655  <|@  <|@
f <@~|@floating>@ <|@
tid j919 <|@
result v97|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i926 
=== Succesors ===
=== Usages ===
v964 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i926  <|@  <|@
f <@~|@floating>@ <|@
tid v964 <|@
result [v95|QWORD[*] + v97|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j651 
index: j919 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j651 index: j919  <|@  <|@
f <@~|@floating>@ <|@
tid j916 <|@
result v98|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i13 
=== Succesors ===
=== Usages ===
v965 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i13  <|@  <|@
f <@~|@floating>@ <|@
tid v965 <|@
result [v96|QWORD[*] + v98|QWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: j653 
index: j916 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j653 index: j916  <|@  <|@
f <@~|@floating>@ <|@
tid j911 <|@
result v99|QWORD <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$11/490840598@f525850
getReverseOp: org.graalvm.compiler.nodes.calc.SignExtendNode$$Lambda$12/742109885@1e2e35ef
inputBits: 32
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
resultBits: 64
stamp: i64 [-2147483648 - 2147483647]
=== Inputs ===
value: i45 
=== Succesors ===
=== Usages ===
v655 
=== Predecessor ===
- >@ <|@
instruction <@SignExtend|@org.graalvm.compiler.nodes.calc.SignExtendNode>@ value: i45  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v655 <|@
d <@d|@=== Debug Properties ===
bci: -5
descriptor: ObjectArraycopy(Word,Word,Word)void
foreignCalls: org.graalvm.compiler.hotspot.amd64.AMD64HotSpotForeignCallsProvider@596abc54
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(Object, int, Object, int, int, JavaKind, boolean, boolean, boolean) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopyCallNode.arraycopy(ArrayCopyCallNode.java:203) [bci: 11]
at org.graalvm.compiler.hotspot.replacements.arraycopy.ArrayCopySnippets.arraycopyExactSnippet(ArrayCopySnippets.java:125) [bci: 63]
at java.lang.System.arraycopy(Object, int, Object, int, int) [bci: -1]
at java.util.ArrayList.add(ArrayList.java:480) [bci: 33]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
stateAfter: - 
stateDuring: - 
arguments: v964 v965 j911 
=== Succesors ===
next: v339 
=== Usages ===
=== Predecessor ===
j653 >@ <|@
instruction <@ForeignCall|@org.graalvm.compiler.nodes.extended.ForeignCallNode>@ stateAfter: - stateDuring: - arguments: v964 v965 j911 #next: v339  <|@  <|@
f <@~|@floating>@ <|@
tid v946 <|@
result [v44|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times4
stamp: void*
=== Inputs ===
base: a457 
index: i926 
=== Succesors ===
=== Usages ===
v339 j656 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a457 index: i926  <|@  <|@
f <@~|@floating>@ <|@
tid a913 <|@
result v100|DWORD[.] <|@
d <@d|@=== Debug Properties ===
encoding: base: 0 shift: 3
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
op: Compress
stamp: n Ljava/lang/Object;
=== Inputs ===
value: a2 
=== Succesors ===
=== Usages ===
v339 
=== Predecessor ===
- >@ <|@
instruction <@HotSpotCompression|@org.graalvm.compiler.hotspot.nodes.HotSpotCompressionNode>@ value: a2  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v339 <|@
d <@d|@=== Debug Properties ===
barrierType: PRECISE
location: Array: Object
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: v396 
address: v946 
value: a913 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: j656 
=== Usages ===
=== Predecessor ===
v655 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: v396 address: v946 value: a913 stateAfter: - lastLocationAccess: - #next: j656  <|@  <|@
f <@#|@fixed with next>@ <|@
tid j656 <|@
result [v44|QWORD[.] + v7|DWORD * 4 + 16] <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 1]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
trackedPointer: true
=== Inputs ===
input: v946 
=== Succesors ===
next: v660 
=== Usages ===
j657 
=== Predecessor ===
v339 >@ <|@
instruction <@WordCast|@org.graalvm.compiler.word.WordCastNode>@ input: v946 #next: v660  <|@  <|@
f <@~|@floating>@ <|@
tid j657 <|@
result v101|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode$$Lambda$68/774788493@3e7195e9
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:134) [bci: 18]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [0 - 36028797018963967] ⇈007fffffffffffff
=== Inputs ===
x: j656 
y: i530 
=== Succesors ===
=== Usages ===
v966 
=== Predecessor ===
- >@ <|@
instruction <@>>>|@org.graalvm.compiler.nodes.calc.UnsignedRightShiftNode>@ x: j656 y: i530  <|@  <|@
f <@~|@floating>@ <|@
tid v966 <|@
result [v101|QWORD[*] + v19|QWORD * 1] <|@
d <@d|@=== Debug Properties ===
displacement: 0
scale: Times1
stamp: void*
=== Inputs ===
base: j657 
index: j534 
=== Succesors ===
=== Usages ===
v660 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: j657 index: j534  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v660 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: GC-Card
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialWriteBarrier(WriteBarrierSnippets.java:138) [bci: 66]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialPreciseWriteBarrier(WriteBarrierSnippets.java:149) [bci: 5]
at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v966 
value: i536 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v340 
=== Usages ===
=== Predecessor ===
j656 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v966 value: i536 stateAfter: - lastLocationAccess: - #next: v340  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v340 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList.size
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:483) [bci: 50]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v940 
value: i37 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v341 
=== Usages ===
=== Predecessor ===
v660 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v940 value: i37 stateAfter: - lastLocationAccess: - #next: v341  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v341 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.cursor
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:965) [bci: 22]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v938 
value: i13 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v342 
=== Usages ===
=== Predecessor ===
v340 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v938 value: i13 stateAfter: - lastLocationAccess: - #next: v342  <|@  <|@
f <@~|@floating>@ <|@
tid v981 <|@
result [v0|QWORD[.] + 16] <|@
d <@d|@=== Debug Properties ===
displacement: 16
scale: Times1
stamp: void*
=== Inputs ===
base: a1 
index: - 
=== Succesors ===
=== Usages ===
v342 
=== Predecessor ===
- >@ <|@
instruction <@AMD64Address|@org.graalvm.compiler.core.amd64.AMD64AddressNode>@ base: a1 index: -  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v342 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.lastRet
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:966) [bci: 27]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v981 
value: i16 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v343 
=== Usages ===
=== Predecessor ===
v341 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v981 value: i16 stateAfter: - lastLocationAccess: - #next: v343  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v343 <|@
d <@d|@=== Debug Properties ===
barrierType: NONE
location: ArrayList$Itr.expectedModCount
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:967) [bci: 38]
nullCheck: false
stamp: void
=== Inputs ===
stateBefore: - 
guard: - 
address: v937 
value: i93 
stateAfter: - 
lastLocationAccess: - 
=== Succesors ===
next: v23 
=== Usages ===
=== Predecessor ===
v342 >@ <|@
instruction <@Write|@org.graalvm.compiler.nodes.memory.WriteNode>@ stateBefore: - guard: - address: v937 value: i93 stateAfter: - lastLocationAccess: - #next: v23  <|@  <|@
f <@*|@fixed>@ <|@
tid v23 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$ListItr.add(ArrayList.java:971) [bci: 53]
stamp: void
=== Inputs ===
result: - 
memoryMap: - 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v343 >@ <|@
instruction <@Return|@org.graalvm.compiler.nodes.ReturnNode>@ result: - memoryMap: -  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + v97|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v98|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v99|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v7|DWORD * 4 + 16], y: v100|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = LEA [v44|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = SHR v102|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v101|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v402 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v500 
=== Usages ===
=== Predecessor ===
v403 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v500  <|@  <|@
f <@~|@floating>@ <|@
tid i501 <|@
result int[-84796|0xfffffffffffeb4c4] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -84796
stableDimension: 0
stamp: i32 [-84796] ⇊00000000fffeb4c4 ⇈00000000fffeb4c4
stampKind: i32
value: int[-84796|0xfffffffffffeb4c4]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v500 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v402 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84796|0xfffffffffffeb4c4], v18|QWORD[.]] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v631 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 58]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v634 
=== Usages ===
=== Predecessor ===
v632 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v634  <|@  <|@
f <@~|@floating>@ <|@
tid j628 <|@
result v103|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 50]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j626 
y: j627 
=== Succesors ===
=== Usages ===
j626 j633 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j626 y: j627  <|@  <|@
f <@~|@floating>@ <|@
tid j636 <|@
result v104|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 62]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64 [4682670080 - 36028801701634047] ⇈00ffffffffffffff
=== Inputs ===
x: j615 
y: j534 
=== Succesors ===
=== Usages ===
j633 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j615 y: j534  <|@  <|@
f <@~|@floating>@ <|@
tid j633 <|@
result v105|QWORD[*] <|@
d <@d|@=== Debug Properties ===
getOp: org.graalvm.compiler.nodes.calc.AddNode$$Lambda$15/1271304513@1406efde
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 65]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: i64
=== Inputs ===
x: j628 
y: j636 
=== Succesors ===
=== Usages ===
v634 
=== Predecessor ===
- >@ <|@
instruction <@+|@org.graalvm.compiler.nodes.calc.AddNode>@ x: j628 y: j636  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v634 <|@
d <@d|@=== Debug Properties ===
kind: boolean
nodeSourcePosition: at org.graalvm.compiler.replacements.nodes.DirectStoreNode.storeBoolean(long, boolean, JavaKind) [bci: -1]
at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:163) [bci: 70]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
address: j633 
value: i60 
=== Succesors ===
next: v635 
=== Usages ===
=== Predecessor ===
v631 >@ <|@
instruction <@DirectStore|@org.graalvm.compiler.replacements.nodes.DirectStoreNode>@ address: j633 value: i60 #next: v635  <|@  <|@
f <@*|@fixed>@ <|@
tid v635 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
nodeSourcePosition: at org.graalvm.compiler.hotspot.replacements.WriteBarrierSnippets.serialArrayRangeWriteBarrier(WriteBarrierSnippets.java:162) [bci: 46]
at com.oracle.graal.enterprise.E.f.materializeVector(Object, a$h, int) [bci: -1]
at com.oracle.graal.enterprise.E.f.a(stripped:78) [bci: 6]
at com.oracle.graal.enterprise.T.c.copyOfObject(stripped:181) [bci: 67]
at com.oracle.graal.enterprise.T.b.copyOf(Object[], int, int, int, Class) [bci: -1]
at com.oracle.graal.enterprise.T.a.copyOf(stripped:15) [bci: 9]
at java.util.Arrays.copyOf(Arrays.java:3181) [bci: 6]
at java.util.ArrayList.grow(ArrayList.java:265) [bci: 38]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
loopBegin: v625 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v634 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v625  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = DEC v91|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = ADD (x: v87|QWORD[*], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = ADD (x: v104|QWORD[*], y: v103|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v105|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD[*]] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v692 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
next: v691 
=== Usages ===
=== Predecessor ===
v693 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v691  <|@  <|@
f <@*|@fixed>@ <|@
tid v691 <|@
d <@d|@=== Debug Properties ===
canSafepoint: false
endIndex: 0
stamp: void
=== Inputs ===
loopBegin: v686 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v692 >@ <|@
instruction <@LoopEnd|@org.graalvm.compiler.nodes.LoopEndNode>@ loopBegin: v686  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v398 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.add(ArrayList.java:482) [bci: 42]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v498 
=== Usages ===
=== Predecessor ===
v399 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v498  <|@  <|@
f <@~|@floating>@ <|@
tid i499 <|@
result int[-85275|0xfffffffffffeb2e5] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -85275
stableDimension: 0
stamp: i32 [-85275] ⇊00000000fffeb2e5 ⇈00000000fffeb2e5
stampKind: i32
value: int[-85275|0xfffffffffffeb2e5]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v498 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v398 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85275|0xfffffffffffeb2e5], Object[null]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v394 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList.grow(ArrayList.java:262) [bci: 24]
at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
at java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
stamp: void
=== Inputs ===
=== Succesors ===
next: v496 
=== Usages ===
=== Predecessor ===
v395 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v496  <|@  <|@
f <@~|@floating>@ <|@
tid i497 <|@
result int[-72467|0xfffffffffffee4ed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -72467
stableDimension: 0
stamp: i32 [-72467] ⇊00000000fffee4ed ⇈00000000fffee4ed
stampKind: i32
value: int[-72467|0xfffffffffffee4ed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i491 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v496 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v487 
=== Predecessor ===
v394 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72467|0xfffffffffffee4ed], Object[null]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465101730097829
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i491 <|@
result v106|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-107617 - -64865] ⇊00000000fffe0084
valueDescription: i32
=== Inputs ===
merge: v487 
values: i489 i495 i497 i499 i501 i503 i505 i503 i503 i503 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: i489 i495 i497 i499 i501 i503 i505 i503 i503 i503  <|@  <|@
f <@~|@floating>@ <|@
tid a492 <|@
result v107|QWORD[.] <|@
d <@d|@=== Debug Properties ===
stamp: a# Lcom/oracle/graal/enterprise/l/d$a;
valueDescription: a -
=== Inputs ===
merge: v487 
values: a490 a432 a432 a432 a490 a432 a432 a432 a432 a432 
=== Succesors ===
=== Usages ===
v493 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v487 values: a490 a432 a432 a432 a490 a432 a432 a432 a432 a432  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v487 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v488 v494 v496 v498 v500 v502 v504 v506 v507 v508 
=== Succesors ===
next: v493 
=== Usages ===
i491 a492 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v488 v494 v496 v498 v500 v502 v504 v506 v507 v508 #next: v493  <|@  <|@
f <@*|@fixed>@ <|@
tid v493 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?95 
actionAndReason: i491 
speculation: a492 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v487 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?95 actionAndReason: i491 speculation: a492  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v107|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v15|QWORD[.] v9|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      HIR
f <@#|@fixed with next>@ <|@
tid v374 <|@
d <@d|@=== Debug Properties ===
nodeSourcePosition: at java.util.ArrayList$Itr.checkForComodification(ArrayList.java:908) [bci: 11]
at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 1]
stamp: void
=== Inputs ===
=== Succesors ===
next: v483 
=== Usages ===
=== Predecessor ===
v375 >@ <|@
instruction <@Begin|@org.graalvm.compiler.nodes.BeginNode>@ #next: v483  <|@  <|@
f <@~|@floating>@ <|@
tid i484 <|@
result int[-50451|0xffffffffffff3aed] <|@
d <@d|@=== Debug Properties ===
isDefaultStable: false
rawvalue: -50451
stableDimension: 0
stamp: i32 [-50451] ⇊00000000ffff3aed ⇈00000000ffff3aed
stampKind: i32
value: int[-50451|0xffffffffffff3aed]
=== Inputs ===
=== Succesors ===
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Constant|@org.graalvm.compiler.nodes.ConstantNode>@  <|@  <|@
f <@*|@fixed>@ <|@
tid v483 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
=== Succesors ===
=== Usages ===
v471 
=== Predecessor ===
v374 >@ <|@
instruction <@EndNode|@org.graalvm.compiler.nodes.EndNode>@  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50451|0xffffffffffff3aed]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B2" "B86" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      HIR
f <@~|@floating>@ <|@
tid i474 <|@
result v108|DWORD <|@
d <@d|@=== Debug Properties ===
stamp: i32 [-55563 - -48395] ⇊00000000ffff02e5 ⇈00000000ffff7ffd
valueDescription: i32
=== Inputs ===
merge: v471 
values: i482 i484 i486 
=== Succesors ===
=== Usages ===
v476 
=== Predecessor ===
- >@ <|@
instruction <@ValuePhi|@org.graalvm.compiler.nodes.ValuePhiNode>@ merge: v471 values: i482 i484 i486  <|@  <|@
f <@#|@fixed with next>@ <|@
tid v471 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateAfter: - 
ends: v481 v483 v485 
=== Succesors ===
next: v476 
=== Usages ===
i474 
=== Predecessor ===
- >@ <|@
instruction <@Merge|@org.graalvm.compiler.nodes.MergeNode>@ stateAfter: - ends: v481 v483 v485 #next: v476  <|@  <|@
f <@*|@fixed>@ <|@
tid v476 <|@
d <@d|@=== Debug Properties ===
stamp: void
=== Inputs ===
stateBefore: ?3 
actionAndReason: i474 
speculation: a432 
=== Succesors ===
=== Usages ===
=== Predecessor ===
v471 >@ <|@
instruction <@DynamicDeoptimize|@org.graalvm.compiler.nodes.DynamicDeoptimizeNode>@ stateBefore: ?3 actionAndReason: i474 speculation: a432  <|@  <|@
    end_IR
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
end_cfg
begin_cfg
  name "After PreAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v0|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v1|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v2|DWORD[.] = MOV [v0|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v3|DWORD[.] = MOV [v2|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + v3|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   -1  <|@ instruction v4|DWORD[.] = MOV [v0|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction v5|DWORD = MOV [v4|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   -1  <|@ instruction CMP (x: v5|DWORD, y: [v0|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v6|DWORD = MOV [v2|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v7|DWORD = MOV [v0|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v6|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v7|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v8|DWORD = INC v6|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v3|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322351375594582
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   -1  <|@ instruction [v9|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v10|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr   -1  <|@ instruction v11|DWORD = ADD (x: v10|DWORD, ~y: [v2|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 12], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v12|DWORD = MOV [v3|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v13|DWORD = MOV [v3|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v14|DWORD = SUB (x: v9|DWORD, ~y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v15|QWORD[.] = UNCOMPRESSPOINTER (input: v2|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v16|DWORD = SUB (x: v6|DWORD, ~y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v17|DWORD = INC v7|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v19|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr   -1  <|@ instruction CMP v14|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v13|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v12|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090605460555194
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021451601402406
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v20|DWORD = SUB (x: v12|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952989280841146
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v20|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885211583485499
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v21|QWORD[.] = UNCOMPRESSPOINTER (input: v3|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction v22|QWORD[*] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v23|QWORD[*] = MOVE v21|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v24|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v25|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v26|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v22|QWORD[*] + v24|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v23|QWORD[*] + v25|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v26|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v27|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v21|QWORD[.] + v7|DWORD * 4 + 16], y: v27|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v29|QWORD[.] = LEA [v21|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v28|QWORD[*] = SHR v29|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v28|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v30|DWORD = SHR v12|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v31|DWORD = ADD (x: v30|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v32|DWORD = SUB (x: v31|DWORD, ~y: v9|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v32|DWORD, y: v32|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v33|DWORD = CMOVE (falseValue: v31|DWORD, ~trueValue: v9|DWORD) condition: < <|@ <|@
      nr   -1  <|@ instruction v34|DWORD = LEA [v33|DWORD - 2147483639] size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP v34|DWORD y: 1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v7|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v35|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v36|DWORD = SHL v33|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v37|DWORD = LEA [v36|DWORD + 23] size: DWORD <|@ <|@
      nr   -1  <|@ instruction v38|DWORD = AND v37|DWORD y: -8 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v39|QWORD = MOVSXD v38|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v40|QWORD = ADD (x: v39|QWORD, y: v35|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v40|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 96], y: v40|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr   -1  <|@ instruction AMD64PREFETCH ~[v39|QWORD + v35|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 12], y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v35|QWORD] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v35|QWORD + 8], y: v13|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v43|QWORD[.] = MOVE v35|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v43|QWORD[.]] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [v44|QWORD[.]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v33|DWORD, y: v12|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v45|DWORD = CMOVE (falseValue: v33|DWORD, ~trueValue: v12|DWORD) condition: > <|@ <|@
      nr   -1  <|@ instruction v46|QWORD = MOVSXD v45|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP v46|QWORD y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v47|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v48|QWORD[*] = LEA [v3|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v49|QWORD = LEA [v46|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v49|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v53|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v54|QWORD = LEA [v46|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v53|QWORD, y: v54|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v55|V128_DWORD[....] = H [v48|QWORD[*] + v53|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v53|QWORD * 4], input: v55|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v56|QWORD = LEA [v53|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v56|QWORD] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v57|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v58|QWORD = LEA [v46|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v57|QWORD, y: v58|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v59|V64_DWORD[..] = H [v48|QWORD[*] + v57|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v57|QWORD * 4], input: v59|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v60|QWORD = LEA [v57|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v60|QWORD] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v61|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v62|QWORD = DEC v46|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v61|QWORD, y: v62|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v63|DWORD[.] = MOV [v48|QWORD[*] + v61|QWORD * 4] size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v47|QWORD[.] + v61|QWORD * 4], y: v63|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v64|QWORD = MOVSXD v33|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v64|QWORD, y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v33|DWORD, y: v33|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v81|DWORD = DEC v33|DWORD size: DWORD <|@ <|@
      nr   -1  <|@ instruction v82|DWORD = SHL v81|DWORD y: 2 size: DWORD <|@ <|@
      nr   -1  <|@ instruction v83|QWORD = MOVSXD v82|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v84|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v85|QWORD[.] = ADD (x: v84|QWORD[.], y: v83|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v86|QWORD[*] = SHR v85|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v88|QWORD[.] = LEA [v44|QWORD[.] + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v87|QWORD[*] = SHR v88|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction v89|QWORD[*] = SUB (x: v86|QWORD[*], ~y: v87|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v90|QWORD[*] = INC v89|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v90|QWORD[*]] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction v103|QWORD[*] = DEC v91|QWORD[*] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v104|QWORD[*] = ADD (x: v87|QWORD[*], y: v19|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v105|QWORD[*] = ADD (x: v104|QWORD[*], y: v103|QWORD[*]) size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v105|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v103|QWORD[*]] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [v91|QWORD[*]] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v91|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608289988226728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP v8|DWORD y: 11 size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594598518989064331
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[10|0xa]] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v65|QWORD[.] = LEA [v44|QWORD[.] + v46|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v66|QWORD = SUB (x: v64|QWORD, ~y: v46|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction v67|QWORD = LEA [v66|QWORD - 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction TEST (x: v67|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v71|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v72|QWORD = LEA [v66|QWORD - 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v71|QWORD, y: v72|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v73|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v71|QWORD * 4], input: v73|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v74|QWORD = LEA [v71|QWORD + 4] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v74|QWORD] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v75|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v76|QWORD = LEA [v66|QWORD - 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v75|QWORD, y: v76|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v77|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v75|QWORD * 4], input: v77|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr   -1  <|@ instruction v78|QWORD = LEA [v75|QWORD + 2] size: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v78|QWORD] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v79|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v80|QWORD = DEC v66|QWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v79|QWORD, y: v80|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v65|QWORD[.] + v79|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP [v44|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v92|DWORD[.] = COMPRESSPOINTER (input: v44|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 20], y: v92|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v93|QWORD[*] = SHR v15|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v93|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction TEST (x: v17|DWORD, y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction TEST (x: v16|DWORD, y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094916024318048
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v94|DWORD = SUB (x: v33|DWORD, ~y: v16|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v7|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015647066980222
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction CMP (x: v17|DWORD, y: v94|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937170799215774
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v95|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v96|QWORD[*] = MOVE v44|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction v97|QWORD = MOVSXD v7|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v98|QWORD = MOVSXD v17|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction v99|QWORD = MOVSXD v16|DWORD size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdi|QWORD = LEA [v95|QWORD[*] + v97|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = LEA [v96|QWORD[*] + v98|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|QWORD = MOVE v99|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr   -1  <|@ instruction v100|DWORD[.] = COMPRESSPOINTER (input: v1|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v44|QWORD[.] + v7|DWORD * 4 + 16], y: v100|DWORD[.]) size: DWORD <|@ <|@
      nr   -1  <|@ instruction v102|QWORD[.] = LEA [v44|QWORD[.] + v7|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr   -1  <|@ instruction v101|QWORD[*] = SHR v102|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr   -1  <|@ instruction MOVB (x: [v101|QWORD[*] + v19|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v2|DWORD[.] * 8 + 16], y: v8|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 12], y: v17|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV [v0|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [v0|QWORD[.] + 20], y: v11|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588199905032444021
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v8|DWORD] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v71|QWORD] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v75|QWORD] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v50|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v51|V256_DWORD[........] = H [v48|QWORD[*] + v50|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction J (address: [v47|QWORD[.] + v50|QWORD * 4], input: v51|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v52|QWORD = LEA [v50|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v52|QWORD, y: v49|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v68|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr   -1  <|@ instruction JUMP ~[long[0|0x0]] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [v69|QWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction J (address: [v65|QWORD[.] + v69|QWORD * 4], input: v68|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr   -1  <|@ instruction v70|QWORD = LEA [v69|QWORD + 8] size: QWORD <|@ <|@
      nr   -1  <|@ instruction CMP (x: v70|QWORD, y: v67|QWORD) size: QWORD <|@ <|@
      nr   -1  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v53|QWORD] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v52|QWORD] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v70|QWORD] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v57|QWORD] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591127175457534
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465101730097829
    begin_IR
      LIR
      nr   -1  <|@ instruction [v106|DWORD, v107|QWORD[.]] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v106|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: v107|QWORD[.]) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v15|QWORD[.] v9|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501716125239788
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413199185524219
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325567415205806
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-64865|0xffffffffffff029f], Object[null]] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v41|QWORD = UNCOMPRESSPOINTER (input: v13|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr   -1  <|@ instruction rsi|QWORD = MOVE v41|QWORD moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction rdx|DWORD = MOVE v33|DWORD moveKind: DWORD <|@ <|@
      nr   -1  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: v15|QWORD[.] v9|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15] <|@ <|@
      nr   -1  <|@ instruction v42|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr   -1  <|@ instruction JUMP ~[v42|QWORD[.]] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252714856862251
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV [r15|QWORD + 668] y: -82017 size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: v15|QWORD[.] v7|DWORD v1|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: v0|QWORD[.] - v7|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270880374414351
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219635795933332
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168903663237123
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-72467|0xfffffffffffee4ed], Object[null]] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53267|0xffffffffffff2fed]] destination: B2 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B2" "B86" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr   -1  <|@ instruction [v108|DWORD] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 668], y: v108|DWORD) size: DWORD <|@ <|@
      nr   -1  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr   -1  <|@ st <@st|@java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: v0|QWORD[.] v1|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-107617|0xfffffffffffe5b9f], Object[null]] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-50451|0xffffffffffff3aed]] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-53523|0xffffffffffff2eed]] destination: B4 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v110|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-67900|0xfffffffffffef6c4], v110|QWORD[.]] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction v109|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-84796|0xfffffffffffeb4c4], v109|QWORD[.]] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-85275|0xfffffffffffeb2e5], Object[null]] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   -1  <|@ instruction JUMP ~[int[-68891|0xfffffffffffef2e5], Object[null]] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: istore_2      
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: iload_2       
    14: aload_1       
    15: invokevirtual #10         // java.util.ArrayList.add:(int, java.lang.Object)void
    18: aload_0       
    19: iload_2       
    20: iconst_1      
    21: iadd          
    22: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    25: aload_0       
    26: iconst_m1     
    27: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    30: aload_0       
    31: aload_0       
    32: getfield      #0          // this$0:java.util.ArrayList
    35: getfield      #11         // java.util.AbstractList.modCount:int
    38: putfield      #12         // java.util.ArrayList$Itr.expectedModCount:int
    41: goto          53
    44: astore_2      
    45: new           #8          // java.util.ConcurrentModificationException
    48: dup           
    49: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    52: athrow        
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After AllocationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r13|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction CMP (x: rdi|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322351375594582
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, ~y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  102  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = SUB (x: r14|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  124  <|@ instruction stack:88|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090605460555194
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021451601402406
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952989280841146
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885211583485499
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  226  <|@ instruction r10|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  230  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r13|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD[.] = LEA [r13|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  256  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  260  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = SHR rbx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  322  <|@ instruction r9|DWORD = LEA [r8|DWORD - 2147483639] size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  358  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  362  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r9|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction MOV [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r9|QWORD + 8], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction r9|QWORD[.] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B32" "B33" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  440  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B32 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B34" "B35" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  452  <|@ instruction rbx|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B34 falseDestination: B33 -> B35 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B34"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B38" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  460  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  462  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  464  <|@ instruction JUMP ~[] destination: B34 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B34" "B37" 
    successors "B39" "B40" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B39 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction xmm0|V128_DWORD[....] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  504  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  506  <|@ instruction rax|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr  508  <|@ instruction r13|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B39" 
    successors "B42" "B43" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B42 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V64_DWORD[..] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  528  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  530  <|@ instruction rax|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr  532  <|@ instruction r13|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B42" 
    successors "B45" "B46" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rax|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B45 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rbx|DWORD[.] = MOV [rbx|QWORD[*] + r13|QWORD * 4] size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + r13|QWORD * 4], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B32" "B46" "B45" 
    successors "B48" "B63" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B63 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B63"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B64" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  674  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  676  <|@ instruction JUMP ~[] destination: B63 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B63" "B61" "B60" 
    successors "B65" "B66" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B65 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  698  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  702  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  876  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  878  <|@ instruction rbx|QWORD[*] = ADD (x: rdx|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  880  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  882  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B68" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255864116453824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B68 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608289988226728
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP r8|DWORD y: 11 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594598518989064331
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B32"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B47" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  444  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  446  <|@ instruction JUMP ~[] destination: B32 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + rdx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B52" 
    successors "B54" "B55" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B54 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  620  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4] size: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B54" 
    successors "B57" "B58" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B57 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  644  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 2] size: QWORD <|@ <|@
      nr  648  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B57" 
    successors "B60" "B61" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B60 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction MOV (x: [rbx|QWORD[.] + rax|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B65"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  684  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  686  <|@ instruction JUMP ~[] destination: B65 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B65" "B68" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B71" "B72" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  734  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  738  <|@ instruction MOVB (x: [rdx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  740  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B71 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B73" "B74" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B73 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B75" "B76" 
    xhandlers
    flags 
    probability 4597094916024318048
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B75 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B77" "B79" 
    xhandlers
    flags 
    probability 4597015647066980222
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B77 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937170799215774
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rax|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r13|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  804  <|@ instruction r10|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = LEA [rbx|QWORD[*] + r13|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction stack:96|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  820  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r9|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  832  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  834  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  838  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  856  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B68"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B69" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  718  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  720  <|@ instruction JUMP ~[] destination: B68 -> B69 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588199905032444021
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B60"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  660  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  662  <|@ instruction JUMP ~[] destination: B60 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B54"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  612  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  614  <|@ instruction JUMP ~[] destination: B54 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B57"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  636  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  638  <|@ instruction JUMP ~[] destination: B57 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B35"
    from_bci -1
    to_bci -1
    predecessors "B33" 
    successors "B36" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  466  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  468  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  470  <|@ instruction JUMP ~[] destination: B35 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B82"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B36" 
    xhandlers
    flags "lle" 
    loop_index 0
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      LIR
      nr  886  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  888  <|@ instruction JUMP ~[] destination: B82 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B35" "B82" 
    successors "B37" "B82" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr  472  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V256_DWORD[........] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  476  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B37 falseDestination: B36 -> B82 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  586  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B62"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B51" 
    xhandlers
    flags "lle" 
    loop_index 1
    loop_depth 1
    probability 4590730303532603728
    begin_IR
      LIR
      nr  670  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  672  <|@ instruction JUMP ~[] destination: B62 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B62" 
    successors "B52" "B62" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr  590  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  592  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction rax|QWORD = LEA [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B52 falseDestination: B51 -> B62 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B39"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  496  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  498  <|@ instruction JUMP ~[] destination: B39 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B37"
    from_bci -1
    to_bci -1
    predecessors "B36" 
    successors "B38" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  484  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  486  <|@ instruction JUMP ~[] destination: B37 -> B38 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B52"
    from_bci -1
    to_bci -1
    predecessors "B51" 
    successors "B53" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  600  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  602  <|@ instruction JUMP ~[] destination: B52 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B42"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  520  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  522  <|@ instruction JUMP ~[] destination: B42 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B45"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  544  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  546  <|@ instruction JUMP ~[] destination: B45 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591127175457534
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465101730097829
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: rcx|QWORD[.] stack:56|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: rcx|QWORD[.] r11|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: rsi|QWORD[.] - r11|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501716125239788
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  170  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413199185524219
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325567415205806
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  208  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:104|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction stack:108|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:72|QWORD[.] stack:56|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:72|QWORD[.] stack:48|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: stack:32|QWORD[.] - stack:48|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15] <|@ <|@
      nr  390  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rdi|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B71"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      LIR
      nr  744  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  748  <|@ instruction JUMP ~[] destination: B71 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B71" "B73" "B75" "B77" 
    successors 
    xhandlers
    flags 
    probability 4576252714856862251
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -82017 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:80]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:72|QWORD[.] stack:48|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: stack:32|QWORD[.] - stack:48|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B73"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567270880374414351
    begin_IR
      LIR
      nr  756  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  758  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  760  <|@ instruction JUMP ~[] destination: B73 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B75"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567219635795933332
    begin_IR
      LIR
      nr  770  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  772  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  774  <|@ instruction JUMP ~[] destination: B75 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B77"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors "B78" 
    xhandlers
    flags 
    probability 4567168903663237123
    begin_IR
      LIR
      nr  782  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  784  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  786  <|@ instruction JUMP ~[] destination: B77 -> B78 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  906  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: int[-72467|0xfffffffffffee4ed] <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-53267|0xffffffffffff2fed] <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B2" "B86" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  932  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  936  <|@ st <@st|@reference-map: [r14:0, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: stack:32|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD = MOVE input: int[-107617|0xfffffffffffe5b9f] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-50451|0xffffffffffff3aed] <|@ <|@
      nr  926  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-53523|0xffffffffffff2eed] <|@ <|@
      nr   56  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVE input: int[-67900|0xfffffffffffef6c4] <|@ <|@
      nr  300  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  302  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr  864  <|@ instruction rdx|DWORD = MOVE input: int[-84796|0xfffffffffffeb4c4] <|@ <|@
      nr  866  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  868  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rdx|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE input: int[-68891|0xfffffffffffef2e5] <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: istore_2      
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: iload_2       
    14: aload_1       
    15: invokevirtual #10         // java.util.ArrayList.add:(int, java.lang.Object)void
    18: aload_0       
    19: iload_2       
    20: iconst_1      
    21: iadd          
    22: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    25: aload_0       
    26: iconst_m1     
    27: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    30: aload_0       
    31: aload_0       
    32: getfield      #0          // this$0:java.util.ArrayList
    35: getfield      #11         // java.util.AbstractList.modCount:int
    38: putfield      #12         // java.util.ArrayList$Itr.expectedModCount:int
    41: goto          53
    44: astore_2      
    45: new           #8          // java.util.ConcurrentModificationException
    48: dup           
    49: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    52: athrow        
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After PostAllocationOptimizationStage"
  begin_block
    name "B0"
    from_bci -1
    to_bci -1
    predecessors 
    successors "B1" "B86" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr    0  <|@ instruction [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr    2  <|@ instruction stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD <|@ <|@
      nr    4  <|@ instruction [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD <|@ <|@
      nr    6  <|@ instruction stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD <|@ <|@
      nr    8  <|@ instruction stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr   10  <|@ instruction r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD <|@ <|@
      nr   12  <|@ instruction stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD <|@ <|@
      nr   14  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction r13|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0] <|@ <|@
      nr   16  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0] <|@ <|@
      nr   18  <|@ instruction rdi|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD <|@ <|@
      nr   20  <|@ st <@st|@reference-map: [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: rsi|QWORD[.] rdx|QWORD[.] - 
>@ <|@ instruction rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0] <|@ <|@
      nr   22  <|@ instruction CMP (x: rdi|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD <|@ <|@
      nr   24  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B1"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B2" "B3" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   26  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   28  <|@ instruction rdi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD <|@ <|@
      nr   30  <|@ instruction r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD <|@ <|@
      nr   32  <|@ instruction stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD <|@ <|@
      nr   34  <|@ instruction CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr   36  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B3"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B4" "B5" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   46  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   48  <|@ instruction TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr   50  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B5"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B6" "B9" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   60  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   62  <|@ instruction r8|DWORD = INC rdi|DWORD size: DWORD <|@ <|@
      nr   64  <|@ instruction stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   66  <|@ instruction CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}] <|@ <|@
      nr   68  <|@ instruction BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B9"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B10" 
    xhandlers
    flags 
    probability 4605322351375594582
    begin_IR
      LIR
      nr   88  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   90  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   92  <|@ instruction JUMP ~[] destination: B9 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B10"
    from_bci -1
    to_bci -1
    predecessors "B9" "B7" "B8" 
    successors "B11" "B24" 
    xhandlers
    flags 
    probability 4607182418800017408
    begin_IR
      LIR
      nr   94  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   96  <|@ instruction stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD <|@ <|@
      nr   98  <|@ instruction r9|DWORD = MOVE input: int[1|0x1] <|@ <|@
      nr  100  <|@ instruction r9|DWORD = ADD (x: r9|DWORD, ~y: [r10|DWORD[.] * 8 + 12]) size: DWORD <|@ <|@
      nr  102  <|@ instruction stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD <|@ <|@
      nr  104  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD <|@ <|@
      nr  106  <|@ instruction rbx|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD <|@ <|@
      nr  108  <|@ instruction rcx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD <|@ <|@
      nr  110  <|@ instruction rax|DWORD = SUB (x: r14|DWORD, ~y: rbx|DWORD) size: DWORD <|@ <|@
      nr  112  <|@ instruction rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  114  <|@ instruction stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD <|@ <|@
      nr  116  <|@ instruction rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD <|@ <|@
      nr  118  <|@ instruction rbp|DWORD = INC r11|DWORD size: DWORD <|@ <|@
      nr  120  <|@ instruction stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD <|@ <|@
      nr  122  <|@ instruction r14|QWORD = MOVE input: long[4682670080|0x1171be000] <|@ <|@
      nr  124  <|@ instruction stack:88|QWORD = MOVE r14|QWORD moveKind: QWORD <|@ <|@
      nr  126  <|@ instruction CMP rax|DWORD y: 1 size: DWORD <|@ <|@
      nr  128  <|@ instruction BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B11"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B12" "B23" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  130  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  132  <|@ instruction CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  134  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B12"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B13" "B22" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  136  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  138  <|@ instruction CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  140  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B13"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B14" "B15" 
    xhandlers
    flags 
    probability 4605160457843537808
    begin_IR
      LIR
      nr  142  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  144  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  146  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B15"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B16" "B17" 
    xhandlers
    flags 
    probability 4605090605460555194
    begin_IR
      LIR
      nr  160  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  162  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  164  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B17"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B18" "B19" 
    xhandlers
    flags 
    probability 4605021451601402406
    begin_IR
      LIR
      nr  178  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  180  <|@ instruction rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  182  <|@ instruction CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  184  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B19"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B20" "B21" 
    xhandlers
    flags 
    probability 4604952989280841146
    begin_IR
      LIR
      nr  198  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  200  <|@ instruction CMP (x: rbp|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  202  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B21"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors 
    xhandlers
    flags 
    probability 4604885211583485499
    begin_IR
      LIR
      nr  216  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  218  <|@ instruction r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  220  <|@ instruction rcx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  222  <|@ instruction rbx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  224  <|@ instruction rax|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  226  <|@ instruction r10|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  228  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  230  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  232  <|@ instruction rdi|QWORD = LEA [rcx|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  234  <|@ instruction rsi|QWORD = LEA [rbx|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  236  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  238  <|@ instruction stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD <|@ <|@
      nr  240  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  242  <|@ instruction rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  244  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  246  <|@ instruction r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  248  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  250  <|@ instruction MOV (x: [r13|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  252  <|@ instruction rdi|QWORD[.] = LEA [r13|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  254  <|@ instruction rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  256  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  258  <|@ instruction MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  260  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  262  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  264  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  266  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  268  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  270  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  272  <|@ instruction MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  274  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  276  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  278  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B24"
    from_bci -1
    to_bci -1
    predecessors "B10" 
    successors "B25" "B84" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  308  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  310  <|@ instruction rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD <|@ <|@
      nr  312  <|@ instruction r8|DWORD = SHR rbx|DWORD size: DWORD <|@ <|@
      nr  314  <|@ instruction r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  316  <|@ instruction r9|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD <|@ <|@
      nr  318  <|@ instruction TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD <|@ <|@
      nr  320  <|@ instruction r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: < <|@ <|@
      nr  322  <|@ instruction r9|DWORD = LEA [r8|DWORD - 2147483639] size: DWORD <|@ <|@
      nr  324  <|@ instruction CMP r9|DWORD y: 1 size: DWORD <|@ <|@
      nr  326  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B25"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B26" "B83" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  328  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  330  <|@ instruction CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD <|@ <|@
      nr  332  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B26"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B27" "B28" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  334  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  336  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  338  <|@ instruction BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B28"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B29" "B30" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  352  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  354  <|@ instruction r9|QWORD = MOV [r15|QWORD + 96] size: QWORD <|@ <|@
      nr  356  <|@ instruction rax|DWORD = SHL r8|DWORD y: 2 size: DWORD <|@ <|@
      nr  358  <|@ instruction rax|DWORD = LEA [rax|DWORD + 23] size: DWORD <|@ <|@
      nr  360  <|@ instruction rax|DWORD = AND rax|DWORD y: -8 size: DWORD <|@ <|@
      nr  362  <|@ instruction rax|QWORD = MOVSXD rax|DWORD size: QWORD <|@ <|@
      nr  364  <|@ instruction rdx|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD <|@ <|@
      nr  366  <|@ instruction CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD <|@ <|@
      nr  368  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B30"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr  410  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  412  <|@ instruction MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  414  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 192] instr: 0 <|@ <|@
      nr  416  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 256] instr: 0 <|@ <|@
      nr  418  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 320] instr: 0 <|@ <|@
      nr  420  <|@ instruction AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 384] instr: 0 <|@ <|@
      nr  422  <|@ instruction MOV (x: [r9|QWORD + 12], y: r8|DWORD) size: DWORD <|@ <|@
      nr  424  <|@ instruction MOV [r9|QWORD] y: 1 size: QWORD <|@ <|@
      nr  426  <|@ instruction MOV (x: [r9|QWORD + 8], y: rcx|DWORD) size: DWORD <|@ <|@
      nr  428  <|@ instruction r9|QWORD[.] = MOVE r9|QWORD moveKind: QWORD <|@ <|@
      nr  430  <|@ instruction JUMP ~[] destination: B30 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B31"
    from_bci -1
    to_bci -1
    predecessors "B30" "B29" 
    successors "B47" "B33" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  432  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  434  <|@ instruction CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD <|@ <|@
      nr  436  <|@ instruction rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: > <|@ <|@
      nr  438  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  440  <|@ instruction CMP rdx|QWORD y: 1 size: QWORD <|@ <|@
      nr  442  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B33"
    from_bci -1
    to_bci -1
    predecessors "B31" 
    successors "B38" "B36" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  448  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  450  <|@ instruction rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  452  <|@ instruction rbx|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD <|@ <|@
      nr  454  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD <|@ <|@
      nr  456  <|@ instruction TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  462  <|@ instruction r13|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  458  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B38"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B41" "B40" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  488  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  490  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 4] size: QWORD <|@ <|@
      nr  492  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  494  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B40"
    from_bci -1
    to_bci -1
    predecessors "B38" 
    successors "B41" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  500  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  502  <|@ instruction xmm0|V128_DWORD[....] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU <|@ <|@
      nr  504  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  506  <|@ instruction rax|QWORD = LEA [r13|QWORD + 4] size: QWORD <|@ <|@
      nr  508  <|@ instruction r13|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  510  <|@ instruction JUMP ~[] destination: B40 -> B41 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B41"
    from_bci -1
    to_bci -1
    predecessors "B40" "B38" 
    successors "B44" "B43" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  512  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  514  <|@ instruction rax|QWORD = LEA [rdx|QWORD - 2] size: QWORD <|@ <|@
      nr  516  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  518  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B43"
    from_bci -1
    to_bci -1
    predecessors "B41" 
    successors "B44" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  524  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  526  <|@ instruction xmm0|V64_DWORD[..] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVQ <|@ <|@
      nr  528  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  530  <|@ instruction rax|QWORD = LEA [r13|QWORD + 2] size: QWORD <|@ <|@
      nr  532  <|@ instruction r13|QWORD = MOVE rax|QWORD moveKind: QWORD <|@ <|@
      nr  534  <|@ instruction JUMP ~[] destination: B43 -> B44 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B44"
    from_bci -1
    to_bci -1
    predecessors "B43" "B41" 
    successors "B47" "B46" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  536  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  538  <|@ instruction rax|QWORD = DEC rdx|QWORD size: QWORD <|@ <|@
      nr  540  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  542  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B46"
    from_bci -1
    to_bci -1
    predecessors "B44" 
    successors "B47" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  548  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  550  <|@ instruction rbx|DWORD[.] = MOV [rbx|QWORD[*] + r13|QWORD * 4] size: DWORD <|@ <|@
      nr  552  <|@ instruction MOV (x: [rcx|QWORD[.] + r13|QWORD * 4], y: rbx|DWORD[.]) size: DWORD <|@ <|@
      nr  554  <|@ instruction JUMP ~[] destination: B46 -> B47 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B47"
    from_bci -1
    to_bci -1
    predecessors "B31" "B46" "B44" 
    successors "B48" "B64" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  556  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  558  <|@ instruction rcx|QWORD = MOVSXD r8|DWORD size: QWORD <|@ <|@
      nr  560  <|@ instruction CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  562  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B64"
    from_bci -1
    to_bci -1
    predecessors "B47" "B61" "B59" 
    successors "B69" "B66" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  678  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  680  <|@ instruction TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  682  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B66"
    from_bci -1
    to_bci -1
    predecessors "B64" 
    successors "B67" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  688  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  690  <|@ instruction rdx|DWORD = DEC r8|DWORD size: DWORD <|@ <|@
      nr  692  <|@ instruction rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD <|@ <|@
      nr  694  <|@ instruction rdx|QWORD = MOVSXD rdx|DWORD size: QWORD <|@ <|@
      nr  696  <|@ instruction rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  698  <|@ instruction rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD <|@ <|@
      nr  700  <|@ instruction rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  702  <|@ instruction rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD <|@ <|@
      nr  704  <|@ instruction rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  706  <|@ instruction rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD <|@ <|@
      nr  708  <|@ instruction rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  710  <|@ instruction JUMP ~[] destination: B66 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B81"
    from_bci -1
    to_bci -1
    predecessors "B67" 
    successors "B67" 
    xhandlers
    flags "lle" 
    loop_index 2
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr  874  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  876  <|@ instruction rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD <|@ <|@
      nr  878  <|@ instruction rbx|QWORD[*] = ADD (x: rdx|QWORD[*], y: r14|QWORD) size: QWORD <|@ <|@
      nr  880  <|@ instruction rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD <|@ <|@
      nr  882  <|@ instruction MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  884  <|@ instruction JUMP ~[] destination: B81 -> B67 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B67"
    from_bci -1
    to_bci -1
    predecessors "B66" "B81" 
    successors "B69" "B81" 
    xhandlers
    flags "llh" 
    loop_index 2
    loop_depth 1
    probability 4597255864116453824
    begin_IR
      LIR
      nr  712  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  714  <|@ instruction CMP rcx|QWORD[*] y: 1 size: QWORD <|@ <|@
      nr  716  <|@ instruction BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B6"
    from_bci -1
    to_bci -1
    predecessors "B5" 
    successors "B7" "B8" 
    xhandlers
    flags 
    probability 4596608289988226728
    begin_IR
      LIR
      nr   70  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   72  <|@ instruction CMP r8|DWORD y: 11 size: DWORD <|@ <|@
      nr   74  <|@ instruction BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B7"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4594598518989064331
    begin_IR
      LIR
      nr   76  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   78  <|@ instruction r14|DWORD = MOVE input: int[10|0xa] <|@ <|@
      nr   80  <|@ instruction JUMP ~[] destination: B7 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B48"
    from_bci -1
    to_bci -1
    predecessors "B47" 
    successors "B49" "B50" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  564  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  566  <|@ instruction rbx|QWORD[.] = LEA [r9|QWORD[.] + rdx|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  568  <|@ instruction rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD <|@ <|@
      nr  570  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD <|@ <|@
      nr  572  <|@ instruction TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  574  <|@ instruction BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B49"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B53" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  576  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  578  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  580  <|@ instruction JUMP ~[] destination: B49 -> B53 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B53"
    from_bci -1
    to_bci -1
    predecessors "B49" "B51" 
    successors "B56" "B55" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  604  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  606  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD <|@ <|@
      nr  608  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  610  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B55"
    from_bci -1
    to_bci -1
    predecessors "B53" 
    successors "B56" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  616  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  618  <|@ instruction xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null> <|@ <|@
      nr  620  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU <|@ <|@
      nr  622  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 4] size: QWORD <|@ <|@
      nr  624  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  626  <|@ instruction JUMP ~[] destination: B55 -> B56 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B56"
    from_bci -1
    to_bci -1
    predecessors "B55" "B53" 
    successors "B59" "B58" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  628  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  630  <|@ instruction rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD <|@ <|@
      nr  632  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  634  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B58"
    from_bci -1
    to_bci -1
    predecessors "B56" 
    successors "B59" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  640  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  642  <|@ instruction xmm0|V64_DWORD[..] = L oc: SIMD<null,null> <|@ <|@
      nr  644  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ <|@ <|@
      nr  646  <|@ instruction rdx|QWORD = LEA [rax|QWORD + 2] size: QWORD <|@ <|@
      nr  648  <|@ instruction rax|QWORD = MOVE rdx|QWORD moveKind: QWORD <|@ <|@
      nr  650  <|@ instruction JUMP ~[] destination: B58 -> B59 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B59"
    from_bci -1
    to_bci -1
    predecessors "B58" "B56" 
    successors "B64" "B61" 
    xhandlers
    flags 
    probability 4592752264489083328
    begin_IR
      LIR
      nr  652  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr  654  <|@ instruction rcx|QWORD = DEC rcx|QWORD size: QWORD <|@ <|@
      nr  656  <|@ instruction CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD <|@ <|@
      nr  658  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B61"
    from_bci -1
    to_bci -1
    predecessors "B59" 
    successors "B64" 
    xhandlers
    flags 
    probability 4590730303532603728
    begin_IR
      LIR
      nr  664  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  666  <|@ instruction MOV (x: [rbx|QWORD[.] + rax|QWORD * 4], y: r12|ILLEGAL) size: DWORD <|@ <|@
      nr  668  <|@ instruction JUMP ~[] destination: B61 -> B64 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B69"
    from_bci -1
    to_bci -1
    predecessors "B64" "B67" 
    successors "B70" "B80" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  722  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  724  <|@ instruction CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed} <|@ <|@
      nr  726  <|@ instruction BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B70"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B78" "B72" 
    xhandlers
    flags 
    probability 4597255864116453824
    begin_IR
      LIR
      nr  728  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  730  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  732  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  734  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 20], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  736  <|@ instruction rdx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  738  <|@ instruction MOVB (x: [rdx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  740  <|@ instruction TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD <|@ <|@
      nr  742  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B72"
    from_bci -1
    to_bci -1
    predecessors "B70" 
    successors "B78" "B74" 
    xhandlers
    flags 
    probability 4597174985678194640
    begin_IR
      LIR
      nr  750  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  752  <|@ instruction TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD <|@ <|@
      nr  754  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B74"
    from_bci -1
    to_bci -1
    predecessors "B72" 
    successors "B78" "B76" 
    xhandlers
    flags 
    probability 4597094916024318048
    begin_IR
      LIR
      nr  762  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  764  <|@ instruction r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD <|@ <|@
      nr  766  <|@ instruction CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  768  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B76"
    from_bci -1
    to_bci -1
    predecessors "B74" 
    successors "B78" "B79" 
    xhandlers
    flags 
    probability 4597015647066980222
    begin_IR
      LIR
      nr  776  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  778  <|@ instruction CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD <|@ <|@
      nr  780  <|@ instruction BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B79"
    from_bci -1
    to_bci -1
    predecessors "B76" 
    successors 
    xhandlers
    flags 
    probability 4596937170799215774
    begin_IR
      LIR
      nr  796  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  798  <|@ instruction rbx|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  800  <|@ instruction rax|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  802  <|@ instruction r13|QWORD = MOVSXD r11|DWORD size: QWORD <|@ <|@
      nr  804  <|@ instruction r10|QWORD = MOVSXD rbp|DWORD size: QWORD <|@ <|@
      nr  806  <|@ instruction rdi|QWORD = MOVSXD rdi|DWORD size: QWORD <|@ <|@
      nr  808  <|@ instruction r11|QWORD = MOVE rdi|QWORD moveKind: QWORD <|@ <|@
      nr  810  <|@ instruction rdi|QWORD = LEA [rbx|QWORD[*] + r13|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  812  <|@ instruction rsi|QWORD = LEA [rax|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD <|@ <|@
      nr  814  <|@ instruction rdx|QWORD = MOVE r11|QWORD moveKind: QWORD <|@ <|@
      nr  816  <|@ instruction stack:96|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD <|@ <|@
      nr  818  <|@ instruction - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL <|@ <|@
      nr  820  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  822  <|@ instruction rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  824  <|@ instruction r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD <|@ <|@
      nr  826  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  828  <|@ instruction MOV (x: [r9|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD <|@ <|@
      nr  830  <|@ instruction rsi|QWORD[.] = LEA [r9|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD <|@ <|@
      nr  832  <|@ instruction rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD <|@ <|@
      nr  834  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  836  <|@ instruction MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE <|@ <|@
      nr  838  <|@ instruction r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD <|@ <|@
      nr  840  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  842  <|@ instruction MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD <|@ <|@
      nr  844  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  846  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  848  <|@ instruction MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD <|@ <|@
      nr  850  <|@ instruction MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD <|@ <|@
      nr  852  <|@ instruction r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD <|@ <|@
      nr  854  <|@ instruction MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD <|@ <|@
      nr  856  <|@ instruction RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B8"
    from_bci -1
    to_bci -1
    predecessors "B6" 
    successors "B10" 
    xhandlers
    flags 
    probability 4588199905032444021
    begin_IR
      LIR
      nr   82  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   84  <|@ instruction r14|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr   86  <|@ instruction JUMP ~[] destination: B8 -> B10 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B36"
    from_bci -1
    to_bci -1
    predecessors "B33" "B36" 
    successors "B38" "B36" 
    xhandlers
    flags "llh" 
    loop_index 0
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  474  <|@ instruction xmm0|V256_DWORD[........] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU <|@ <|@
      nr  476  <|@ instruction J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  478  <|@ instruction r13|QWORD = LEA [r13|QWORD + 8] size: QWORD <|@ <|@
      nr  480  <|@ instruction CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD <|@ <|@
      nr  482  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B50"
    from_bci -1
    to_bci -1
    predecessors "B48" 
    successors "B51" 
    xhandlers
    flags 
    probability 4583745065234342336
    begin_IR
      LIR
      nr  582  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  584  <|@ instruction xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null> <|@ <|@
      nr  586  <|@ instruction rax|QWORD = MOVE input: long[0|0x0] <|@ <|@
      nr  588  <|@ instruction JUMP ~[] destination: B50 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B51"
    from_bci -1
    to_bci -1
    predecessors "B50" "B51" 
    successors "B53" "B51" 
    xhandlers
    flags "llh" 
    loop_index 1
    loop_depth 1
    probability 4592752264489083328
    begin_IR
      LIR
      nr   -1  <|@ instruction [] = LABEL numbPhis: 0 align: true label: ? <|@ <|@
      nr  592  <|@ instruction J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU <|@ <|@
      nr  594  <|@ instruction rax|QWORD = LEA [rax|QWORD + 8] size: QWORD <|@ <|@
      nr  596  <|@ instruction CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD <|@ <|@
      nr  598  <|@ instruction BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B14"
    from_bci -1
    to_bci -1
    predecessors "B13" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575591127175457534
    begin_IR
      LIR
      nr  148  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  150  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  152  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  154  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  156  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  158  <|@ instruction JUMP ~[] destination: B14 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B85"
    from_bci -1
    to_bci -1
    predecessors "B23" "B22" "B84" "B83" "B80" "B14" "B27" "B20" "B18" "B16" 
    successors 
    xhandlers
    flags 
    probability 4584465101730097829
    begin_IR
      LIR
      nr  914  <|@ instruction [] = LABEL numbPhis: 2 align: false label: ? <|@ <|@
      nr  916  <|@ instruction MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD <|@ <|@
      nr  918  <|@ instruction MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD <|@ <|@
      nr  920  <|@ st <@st|@reference-map: [rcx:0, rsi:0, r14:0]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: rcx|QWORD[.] stack:56|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: rcx|QWORD[.] r11|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: rsi|QWORD[.] - r11|DWORD 
>@ <|@ instruction DEOPT info [bci:10, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B16"
    from_bci -1
    to_bci -1
    predecessors "B15" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575501716125239788
    begin_IR
      LIR
      nr  166  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  168  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  170  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  172  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  174  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  176  <|@ instruction JUMP ~[] destination: B16 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B18"
    from_bci -1
    to_bci -1
    predecessors "B17" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575413199185524219
    begin_IR
      LIR
      nr  186  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  188  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  190  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  192  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  194  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  196  <|@ instruction JUMP ~[] destination: B18 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B20"
    from_bci -1
    to_bci -1
    predecessors "B19" 
    successors "B85" 
    xhandlers
    flags 
    probability 4575325567415205806
    begin_IR
      LIR
      nr  204  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  206  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  208  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  210  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  212  <|@ instruction rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f] <|@ <|@
      nr  214  <|@ instruction JUMP ~[] destination: B20 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B29"
    from_bci -1
    to_bci -1
    predecessors "B28" 
    successors "B31" 
    xhandlers
    flags 
    probability 4567322642574900229
    begin_IR
      LIR
      nr  370  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  372  <|@ instruction stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD <|@ <|@
      nr  374  <|@ instruction stack:104|DWORD = MOVE rbx|DWORD moveKind: DWORD <|@ <|@
      nr  376  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  378  <|@ instruction rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3 <|@ <|@
      nr  380  <|@ instruction rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD <|@ <|@
      nr  382  <|@ instruction rdx|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  384  <|@ instruction rcx|DWORD = MOVE input: int[0|0x0] <|@ <|@
      nr  386  <|@ instruction stack:108|DWORD = MOVE r8|DWORD moveKind: DWORD <|@ <|@
      nr  388  <|@ st <@st|@reference-map: [r13:0, r14:0, stack:40, stack:68, stack:72, stack:80]
live-base-pointers: []
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10]
locals: stack:72|QWORD[.] stack:56|DWORD 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:72|QWORD[.] stack:48|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: stack:32|QWORD[.] - stack:48|DWORD 
>@ <|@ instruction rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15] <|@ <|@
      nr  390  <|@ instruction r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD <|@ <|@
      nr  392  <|@ instruction r8|DWORD = MOVE stack:108|DWORD moveKind: DWORD <|@ <|@
      nr  394  <|@ instruction rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD <|@ <|@
      nr  396  <|@ instruction rdi|DWORD = MOVE stack:100|DWORD moveKind: DWORD <|@ <|@
      nr  398  <|@ instruction rbx|DWORD = MOVE stack:104|DWORD moveKind: DWORD <|@ <|@
      nr  400  <|@ instruction r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD <|@ <|@
      nr  402  <|@ instruction r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD <|@ <|@
      nr  404  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  406  <|@ instruction r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD <|@ <|@
      nr  408  <|@ instruction JUMP ~[] destination: B29 -> B31 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B78"
    from_bci -1
    to_bci -1
    predecessors "B70" "B72" "B74" "B76" 
    successors 
    xhandlers
    flags 
    probability 4576252714856862251
    begin_IR
      LIR
      nr  788  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  746  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  790  <|@ instruction MOV [r15|QWORD + 668] y: -82017 size: DWORD <|@ <|@
      nr  792  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  794  <|@ st <@st|@reference-map: [r14:0, stack:40, stack:80]
live-base-pointers: []
java.util.ArrayList.grow(ArrayList.java:266) [bci: 44]
locals: - - - - 
java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22]
locals: - - 
java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9]
locals: - - 
java.util.ArrayList.add(ArrayList.java:479) [bci: 12]
locals: stack:72|QWORD[.] stack:48|DWORD r14|QWORD[.] 
java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15]
locals: stack:32|QWORD[.] - stack:48|DWORD 
>@ <|@ instruction DEOPT info [bci:44, 22, 9, 12, 15] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B84"
    from_bci -1
    to_bci -1
    predecessors "B24" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  902  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  904  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  906  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  908  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  910  <|@ instruction rdx|DWORD = MOVE input: int[-72467|0xfffffffffffee4ed] <|@ <|@
      nr  912  <|@ instruction JUMP ~[] destination: B84 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B2"
    from_bci -1
    to_bci -1
    predecessors "B1" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   38  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   40  <|@ instruction r10|DWORD = MOVE input: int[-53267|0xffffffffffff2fed] <|@ <|@
      nr   44  <|@ instruction JUMP ~[] destination: B2 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B87"
    from_bci -1
    to_bci -1
    predecessors "B2" "B86" "B4" 
    successors 
    xhandlers
    flags 
    probability 2362138004555825152
    begin_IR
      LIR
      nr  930  <|@ instruction [] = LABEL numbPhis: 1 align: false label: ? <|@ <|@
      nr   42  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  932  <|@ instruction MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD <|@ <|@
      nr  934  <|@ instruction MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD <|@ <|@
      nr  936  <|@ st <@st|@reference-map: [r14:0, stack:80]
live-base-pointers: []
java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0]
locals: stack:32|QWORD[.] r14|QWORD[.] - 
>@ <|@ instruction DEOPT info [bci:0] <|@ <|@
    end_IR
  end_block
  begin_block
    name "B27"
    from_bci -1
    to_bci -1
    predecessors "B26" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  340  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  342  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  344  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  346  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  348  <|@ instruction rdx|DWORD = MOVE input: int[-107617|0xfffffffffffe5b9f] <|@ <|@
      nr  350  <|@ instruction JUMP ~[] destination: B27 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B86"
    from_bci -1
    to_bci -1
    predecessors "B0" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  922  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  924  <|@ instruction r10|DWORD = MOVE input: int[-50451|0xffffffffffff3aed] <|@ <|@
      nr  928  <|@ instruction JUMP ~[] destination: B86 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B4"
    from_bci -1
    to_bci -1
    predecessors "B3" 
    successors "B87" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr   52  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr   54  <|@ instruction r10|DWORD = MOVE input: int[-53523|0xffffffffffff2eed] <|@ <|@
      nr   58  <|@ instruction JUMP ~[] destination: B4 -> B87 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B23"
    from_bci -1
    to_bci -1
    predecessors "B11" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  292  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  294  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  296  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr  298  <|@ instruction rdx|DWORD = MOVE input: int[-67900|0xfffffffffffef6c4] <|@ <|@
      nr  300  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  304  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  306  <|@ instruction JUMP ~[] destination: B23 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B80"
    from_bci -1
    to_bci -1
    predecessors "B69" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  858  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  860  <|@ instruction r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD <|@ <|@
      nr  862  <|@ instruction r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427] <|@ <|@
      nr  864  <|@ instruction rdx|DWORD = MOVE input: int[-84796|0xfffffffffffeb4c4] <|@ <|@
      nr  866  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  870  <|@ instruction rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD <|@ <|@
      nr  872  <|@ instruction JUMP ~[] destination: B80 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B83"
    from_bci -1
    to_bci -1
    predecessors "B25" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  890  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  892  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  894  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  896  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  898  <|@ instruction rdx|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5] <|@ <|@
      nr  900  <|@ instruction JUMP ~[] destination: B83 -> B85 <|@ <|@
    end_IR
  end_block
  begin_block
    name "B22"
    from_bci -1
    to_bci -1
    predecessors "B12" 
    successors "B85" 
    xhandlers
    flags 
    probability 2355382605114769408
    begin_IR
      LIR
      nr  280  <|@ instruction [] = LABEL numbPhis: 0 align: false label: ? <|@ <|@
      nr  282  <|@ instruction r10|QWORD[.] = MOVE input: Object[null] <|@ <|@
      nr  284  <|@ instruction rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD <|@ <|@
      nr  286  <|@ instruction r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD <|@ <|@
      nr  288  <|@ instruction rdx|DWORD = MOVE input: int[-68891|0xfffffffffffef2e5] <|@ <|@
      nr  290  <|@ instruction JUMP ~[] destination: B22 -> B85 <|@ <|@
    end_IR
  end_block
end_cfg
begin_bytecodes
     0: aload_0       
     1: invokevirtual #3          // java.util.ArrayList$Itr.checkForComodification:()void
     4: aload_0       
     5: getfield      #2          // java.util.ArrayList$Itr.cursor:int
     8: istore_2      
     9: aload_0       
    10: getfield      #0          // this$0:java.util.ArrayList
    13: iload_2       
    14: aload_1       
    15: invokevirtual #10         // java.util.ArrayList.add:(int, java.lang.Object)void
    18: aload_0       
    19: iload_2       
    20: iconst_1      
    21: iadd          
    22: putfield      #2          // java.util.ArrayList$Itr.cursor:int
    25: aload_0       
    26: iconst_m1     
    27: putfield      #7          // java.util.ArrayList$Itr.lastRet:int
    30: aload_0       
    31: aload_0       
    32: getfield      #0          // this$0:java.util.ArrayList
    35: getfield      #11         // java.util.AbstractList.modCount:int
    38: putfield      #12         // java.util.ArrayList$Itr.expectedModCount:int
    41: goto          53
    44: astore_2      
    45: new           #8          // java.util.ConcurrentModificationException
    48: dup           
    49: invokespecial #6          // java.util.ConcurrentModificationException.<init>:()void
    52: athrow        
    53: return        
   <|@
end_bytecodes
begin_cfg
  name "After code generation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 0 448b560849c1e203493bc20f85efffffff900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424504889542448448b561c4489542444468b2cd514000000438504ec8b7e188b3cfd0c0000003b7e140f85ed050000428b3cd510000000448b5e0c44895c2440443bdf0f8f9a0500004585db0f8cd2050000448bc741ffc0448944243c4181fdaddeadde0f84be020000458bf0448974243841b90100000046030cd50c00000044894c243446890cd50c000000428b1ced0c000000428b0ced08000000418bc62bc3418bea48c1e50348896c2428412bfb418bebffc5896c242449be00e01b17010000004c8974241883f8010f8dd100000081f9addeadde0f854e050000413bdb0f86a505000085ed0f8cf103000085ff0f8c140400002bdf443bdb0f8f220400003beb0f8f3304000049c1e503498bcd498bdd4963c34c63d54863ff4c8bdf488d7c81104a8d749310498bd34c896c2410e80000000090488b54244848c1ea034c8b6c2410448b5c24404389549d104b8d7c9d1048c1ef094c8b74241846882437448b542444448b44243c468904d510000000488b7424508b6c2424896e0cc74610ffffffff448b4c243444894e14488b6c24604883c468850500000000c5f877c38b442438448bc341d1e84403c3458bc8442bc84585c9440f4cc0458d88090000804183f9010f8df9030000453bc30f86990400004585c00f8c200400004d8b4f60418bc0c1e0028d401783e0f84863c0488bd04903d1493b57700f875303000049895760420f188408c0000000420f18840800010000420f18840840010000420f188408800100004589410c49c7010100000041894908443bc3418bd00f4fd34863d24883fa010f8c77000000498d49104a8d1ced10000000488d42f84885c049c7c5000000000f8d2d020000488d42fc4c3be80f8f13000000c4a17a6f04abc4a17a7f04a9498d45044c8be8488d42fe4c3be80f8f13000000c4a1f96e04abc4a1f97e04a9498d45024c8be8488bc248ffc84c3be80f8f08000000428b1cab42891ca94963c8483bca0f8f6a0000004585c00f84cd000000418bd0ffcac1e2024863d2498d49104803ca48c1e909498d511048c1ea09482bca48ffc1e9170000000f1f84000000000048ffc9488bda4903de4803d94488234883f9010f8c83000000ebe54183f80b0f8d6101000041be0a000000e930fdffff498d5c9110482bca488d51f84885d20f8d6501000048c7c000000000488d51fc483bc20f8f10000000c5f9efc0c5fa7f0483488d5004488bc2488d51fe483bc20f8f11000000c5f9efc0c4e1f97e0483488d5002488bc248ffc9483bc10f8f33ffffff44892483e92affffff41817908addeadde0f8596020000488b4c2428498bd148c1ea03428914d514000000488bd148c1ea094688243285ed0f8ccc01000085ff0f8cc4010000442bc7453bd80f8fb8010000413be80f8faf010000498bd9498bc14d63eb4c63d54863ff4c8bdf4a8d7cab104a8d749010498bd34c894c2410e800000000904c8b742448498bd648c1ea034c8b4c2410448b5c244043895499104b8d74991048c1ee094c8b74241846882436448b44243c448b542444468904d510000000488b7424508b6c2424896e0cc74610ffffffff448b4c243444894e14488b6c24604883c468850500000000c5f877c3458bf0e9d2fbffff6690c4a17e6f04abc4a17e7f04a94d8d6d084c3be87eebe9b9fdffffc5f9efc048c7c0000000006666660f1f840000000000c5fe7f0483488d4008483bc27ef2e979feffff49ba0000000000000000488b4c24284c8bf2ba9f02ffff4189979c0200004d8997a8020000e8000000009049ba0000000000000000488b4c24284c8bf2ba9f02ffffebd349ba0000000000000000488b4c24284c8bf2ba9f02ffffebba49ba0000000000000000488b4c24284c8bf2ba9f02ffffeba1897c240c895c24084c8b74244848c1e103488bf1418bd0b9000000004489442404e800000000904c8bc8448b4424048b6c24248b7c240c8b5c2408448b5c2440448b542444488b7424504c8b742418e990fcffff4c8b74244841c7879c0200009fbffeff4d89a7a8020000e8000000009049ba0000000000000000488b4c24284c8bf2baede4feffe914ffffff41baed2fffff4c8bf24589979c0200004d89a7a8020000e8000000009049ba0000000000000000488b4c24284c8bf2ba9f5bfeffe9dbfeffff41baed3affffebc541baed2effffebbd4c8bf249baaddeaddeaddeaddebac4f6feff488b4c2428488b742450e9aafeffff4c8b74244849baaddeaddeaddeaddebac4b4feff488b4c2428488b742450e987feffff49ba0000000000000000488b4c24284c8bf2bae5b2feffe96bfeffff49ba0000000000000000488b4c24284c8bf2bae5f2feffe94ffeffffe80000000090e80000000090  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 62 12 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 67 14 r13|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 16 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0]  <||@
  Comment 75 [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 18 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 82 20 rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 22 CMP (x: rdi|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 92 24 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86  <||@
  Comment 98 block B1 null  <||@
  Comment 98 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 28 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 106 30 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 110 32 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 115 34 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 118 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 124 block B3 null  <||@
  Comment 124 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 48 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 127 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 133 block B5 null  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 r8|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 139 64 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 144 66 CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 144 {NarrowOop[Object[0]{}]}  <||@
  Comment 151 68 BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 157 block B9 null  <||@
  Comment 157 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 90 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 160 92 JUMP ~[] destination: B9 -> B10  <||@
  Comment 160 block B10 null  <||@
  Comment 160 94 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 160 96 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 165 98 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 171 100 r9|DWORD = ADD (x: r9|DWORD, ~y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 179 102 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 184 104 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 192 106 rbx|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 200 108 rcx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 208 110 rax|DWORD = SUB (x: r14|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 213 112 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 220 114 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 225 116 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 228 118 rbp|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 233 120 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 237 122 r14|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 247 124 stack:88|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 252 126 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 255 128 BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 261 block B11 null  <||@
  Comment 261 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 132 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 267 134 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 273 block B12 null  <||@
  Comment 273 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 138 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 276 140 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22  <||@
  Comment 282 block B13 null  <||@
  Comment 282 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 144 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 284 146 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 290 block B15 null  <||@
  Comment 290 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 162 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 292 164 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 298 block B17 null  <||@
  Comment 298 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 180 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 300 182 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 303 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 309 block B19 null  <||@
  Comment 309 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 200 CMP (x: rbp|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 311 202 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 317 block B21 null  <||@
  Comment 317 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 218 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 321 220 rcx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 324 222 rbx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 327 224 rax|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 330 226 r10|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 333 228 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 336 230 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 339 232 rdi|QWORD = LEA [rcx|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 344 234 rsi|QWORD = LEA [rbx|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 349 236 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 352 238 stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 357 240 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 357 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 363 242 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 368 244 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 372 246 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 377 248 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 382 250 MOV (x: [r13|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 387 252 rdi|QWORD[.] = LEA [r13|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 392 254 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 396 256 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 401 258 MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 405 260 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 410 262 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 415 264 MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 423 266 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 428 268 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 432 270 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 435 272 MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 442 274 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 447 276 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 451 278 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 460 12  <||@
  Comment 470 block B24 null  <||@
  Comment 470 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 310 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 474 312 r8|DWORD = SHR rbx|DWORD size: DWORD  <||@
  Comment 480 314 r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 483 316 r9|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 489 318 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 492 320 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 496 322 r9|DWORD = LEA [r8|DWORD - 2147483639] size: DWORD  <||@
  Comment 503 324 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 507 326 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84  <||@
  Comment 513 block B25 null  <||@
  Comment 513 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 330 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 516 332 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83  <||@
  Comment 522 block B26 null  <||@
  Comment 522 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 336 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 525 338 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 531 block B28 null  <||@
  Comment 531 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 354 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 356 rax|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 541 358 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 544 360 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 547 362 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 550 364 rdx|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 556 366 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 560 368 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 566 block B30 null  <||@
  Comment 566 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 412 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 570 414 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 192] instr: 0  <||@
  Comment 579 416 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 256] instr: 0  <||@
  Comment 588 418 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 320] instr: 0  <||@
  Comment 597 420 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 384] instr: 0  <||@
  Comment 606 422 MOV (x: [r9|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 610 424 MOV [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 617 426 MOV (x: [r9|QWORD + 8], y: rcx|DWORD) size: DWORD  <||@
  Comment 621 428 r9|QWORD[.] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 621 430 JUMP ~[] destination: B30 -> B31  <||@
  Comment 621 block B31 null  <||@
  Comment 621 432 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 434 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 624 436 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 630 438 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 633 440 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 637 442 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33  <||@
  Comment 643 block B33 null  <||@
  Comment 643 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 450 rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 647 452 rbx|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 655 454 rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 659 456 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 662 462 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 669 458 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 675 block B38 null  <||@
  Comment 675 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 675 490 rax|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 679 492 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 682 494 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 688 block B40 null  <||@
  Comment 688 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 502 xmm0|V128_DWORD[....] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 694 504 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 700 506 rax|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 704 508 r13|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 707 510 JUMP ~[] destination: B40 -> B41  <||@
  Comment 707 block B41 null  <||@
  Comment 707 512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 514 rax|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 711 516 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 714 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 720 block B43 null  <||@
  Comment 720 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 526 xmm0|V64_DWORD[..] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 726 528 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 732 530 rax|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 736 532 r13|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 739 534 JUMP ~[] destination: B43 -> B44  <||@
  Comment 739 block B44 null  <||@
  Comment 739 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 739 538 rax|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 745 540 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 748 542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 550 rbx|DWORD[.] = MOV [rbx|QWORD[*] + r13|QWORD * 4] size: DWORD  <||@
  Comment 758 552 MOV (x: [rcx|QWORD[.] + r13|QWORD * 4], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 762 554 JUMP ~[] destination: B46 -> B47  <||@
  Comment 762 block B47 null  <||@
  Comment 762 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 558 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 765 560 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 768 562 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 774 block B64 null  <||@
  Comment 774 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 680 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 777 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66  <||@
  Comment 783 block B66 null  <||@
  Comment 783 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 690 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 788 692 rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 791 694 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 794 696 rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 798 698 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD  <||@
  Comment 801 700 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 805 702 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 809 704 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 813 706 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 816 708 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 819 710 JUMP ~[] destination: B66 -> B67  <||@
  Comment 824 block B81 loop 2 depth 1 header:625|LoopBegin  <||@
  Comment 824 874 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 876 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 835 878 rbx|QWORD[*] = ADD (x: rdx|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 841 880 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 844 882 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 847 884 JUMP ~[] destination: B81 -> B67  <||@
  Comment 847 block B67 loop 2 depth 1 header:625|LoopBegin  <||@
  Comment 847 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 847 714 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 851 716 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81  <||@
  Comment 859 block B6 null  <||@
  Comment 859 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 72 CMP r8|DWORD y: 11 size: DWORD  <||@
  Comment 863 74 BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 869 block B7 null  <||@
  Comment 869 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 78 r14|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 875 80 JUMP ~[] destination: B7 -> B10  <||@
  Comment 880 block B48 null  <||@
  Comment 880 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 566 rbx|QWORD[.] = LEA [r9|QWORD[.] + rdx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 885 568 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 888 570 rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 892 572 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 895 574 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 901 block B49 null  <||@
  Comment 901 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 578 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 908 580 JUMP ~[] destination: B49 -> B53  <||@
  Comment 908 block B53 null  <||@
  Comment 908 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 908 606 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 912 608 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 915 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 921 block B55 null  <||@
  Comment 921 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 618 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 925 620 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 930 622 rdx|QWORD = LEA [rax|QWORD + 4] size: QWORD  <||@
  Comment 934 624 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 937 626 JUMP ~[] destination: B55 -> B56  <||@
  Comment 937 block B56 null  <||@
  Comment 937 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 937 630 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 941 632 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 944 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 950 block B58 null  <||@
  Comment 950 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 642 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 954 644 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 960 646 rdx|QWORD = LEA [rax|QWORD + 2] size: QWORD  <||@
  Comment 964 648 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 967 650 JUMP ~[] destination: B58 -> B59  <||@
  Comment 967 block B59 null  <||@
  Comment 967 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 967 654 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 970 656 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 973 658 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61  <||@
  Comment 979 block B61 null  <||@
  Comment 979 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 666 MOV (x: [rbx|QWORD[.] + rax|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 983 668 JUMP ~[] destination: B61 -> B64  <||@
  Comment 988 block B69 null  <||@
  Comment 988 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 724 CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 988 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 996 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80  <||@
  Comment 1002 block B70 null  <||@
  Comment 1002 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 730 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 732 rdx|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1014 734 MOV (x: [r10|DWORD[.] * 8 + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1022 736 rdx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1029 738 MOVB (x: [rdx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1033 740 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1035 742 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72  <||@
  Comment 1041 block B72 null  <||@
  Comment 1041 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1041 752 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1043 754 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74  <||@
  Comment 1049 block B74 null  <||@
  Comment 1049 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 764 r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1052 766 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1055 768 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76  <||@
  Comment 1061 block B76 null  <||@
  Comment 1061 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 778 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1064 780 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79  <||@
  Comment 1070 block B79 null  <||@
  Comment 1070 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 798 rbx|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 800 rax|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 802 r13|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1079 804 r10|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1082 806 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1085 808 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1088 810 rdi|QWORD = LEA [rbx|QWORD[*] + r13|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1093 812 rsi|QWORD = LEA [rax|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1098 814 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1101 816 stack:96|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 818 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1106 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 1112 820 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 822 rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1124 824 r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1129 826 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1134 828 MOV (x: [r9|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1139 830 rsi|QWORD[.] = LEA [r9|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1144 832 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1148 834 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1153 836 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1157 838 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1162 840 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1167 842 MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 1175 844 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1180 846 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1184 848 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1187 850 MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1194 852 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1199 854 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 1203 856 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1212 12  <||@
  Comment 1222 block B8 null  <||@
  Comment 1222 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 84 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1225 86 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1230 block B36 loop 0 depth 1 header:686|LoopBegin  <||@
  Comment 1230 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1232 474 xmm0|V256_DWORD[........] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1238 476 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1244 478 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 1248 480 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1251 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1258 block B50 null  <||@
  Comment 1258 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1258 584 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1262 586 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1269 588 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1269 block B51 loop 1 depth 1 header:741|LoopBegin  <||@
  Comment 1269 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 592 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1285 594 rax|QWORD = LEA [rax|QWORD + 8] size: QWORD  <||@
  Comment 1289 596 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1292 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51  <||@
  Comment 1299 block B14 null  <||@
  Comment 1299 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 150 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1309 152 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 154 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1317 156 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1322 158 JUMP ~[] destination: B14 -> B85  <||@
  Comment 1322 block B85 null  <||@
  Comment 1322 914 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1322 916 MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD  <||@
  Comment 1329 918 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1336 920 DEOPT info [bci:10, 9, 12, 15]  <||@
  Comment 1336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1341 [rcx:0, rsi:0, r14:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rcx|QWORD[.]  |stack:56|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r11|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD   <||@
  Comment 1342 block B16 null  <||@
  Comment 1342 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 168 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1352 170 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 172 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 174 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1365 176 JUMP ~[] destination: B16 -> B85  <||@
  Comment 1367 block B18 null  <||@
  Comment 1367 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 188 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1377 190 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 192 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 194 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1390 196 JUMP ~[] destination: B18 -> B85  <||@
  Comment 1392 block B20 null  <||@
  Comment 1392 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 206 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1402 208 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1407 210 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 212 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1415 214 JUMP ~[] destination: B20 -> B85  <||@
  Comment 1417 block B29 null  <||@
  Comment 1417 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1417 372 stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1421 374 stack:104|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1425 376 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1430 378 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1434 380 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1437 382 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1440 384 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1445 386 stack:108|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1450 388 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15]  <||@
  Comment 1450 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1455 [r13:0, r14:0, stack:40, stack:68, stack:72, stack:80]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:56|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:72|QWORD[.]  |stack:48|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD   <||@
  Comment 1456 390 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 392 r8|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 1464 394 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1468 396 rdi|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 1472 398 rbx|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1476 400 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1481 402 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1486 404 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1491 406 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1496 408 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1501 block B78 null  <||@
  Comment 1501 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 746 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 790 MOV [r15|QWORD + 668] y: -82017 size: DWORD  <||@
  Comment 1517 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1524 794 DEOPT info [bci:44, 22, 9, 12, 15]  <||@
  Comment 1524 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1529 [r14:0, stack:40, stack:80]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:72|QWORD[.]  |stack:48|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD   <||@
  Comment 1530 block B84 null  <||@
  Comment 1530 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 904 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1540 906 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 908 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 910 rdx|DWORD = MOVE input: int[-72467|0xfffffffffffee4ed]  <||@
  Comment 1553 912 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1558 block B2 null  <||@
  Comment 1558 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 40 r10|DWORD = MOVE input: int[-53267|0xffffffffffff2fed]  <||@
  Comment 1564 44 JUMP ~[] destination: B2 -> B87  <||@
  Comment 1564 block B87 null  <||@
  Comment 1564 930 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1564 42 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 932 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1574 934 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1581 936 DEOPT info [bci:0]  <||@
  Comment 1581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1586 [r14:0, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 1587 block B27 null  <||@
  Comment 1587 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 342 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1597 344 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1602 346 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 348 rdx|DWORD = MOVE input: int[-107617|0xfffffffffffe5b9f]  <||@
  Comment 1610 350 JUMP ~[] destination: B27 -> B85  <||@
  Comment 1615 block B86 null  <||@
  Comment 1615 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 924 r10|DWORD = MOVE input: int[-50451|0xffffffffffff3aed]  <||@
  Comment 1621 928 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1623 block B4 null  <||@
  Comment 1623 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1623 54 r10|DWORD = MOVE input: int[-53523|0xffffffffffff2eed]  <||@
  Comment 1629 58 JUMP ~[] destination: B4 -> B87  <||@
  Comment 1631 block B23 null  <||@
  Comment 1631 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 294 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 296 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427]  <||@
  Comment 1634 {Object[d.a@598408427]}  <||@
  Comment 1644 298 rdx|DWORD = MOVE input: int[-67900|0xfffffffffffef6c4]  <||@
  Comment 1649 300 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 304 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1659 306 JUMP ~[] destination: B23 -> B85  <||@
  Comment 1664 block B80 null  <||@
  Comment 1664 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1664 860 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 862 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427]  <||@
  Comment 1669 {Object[d.a@598408427]}  <||@
  Comment 1679 864 rdx|DWORD = MOVE input: int[-84796|0xfffffffffffeb4c4]  <||@
  Comment 1684 866 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1689 870 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1694 872 JUMP ~[] destination: B80 -> B85  <||@
  Comment 1699 block B83 null  <||@
  Comment 1699 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 892 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1709 894 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 896 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1717 898 rdx|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 1722 900 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1727 block B22 null  <||@
  Comment 1727 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 282 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1737 284 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1742 286 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 288 rdx|DWORD = MOVE input: int[-68891|0xfffffffffffef2e5]  <||@
  Comment 1750 290 JUMP ~[] destination: B22 -> B85  <||@
  Comment 1755 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1755 4  <||@
  Comment 1761 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1761 5  <||@
  HexCodeFile>>> <|@
end_nmethod
begin_compilation
  name " HotSpotCompilation-9848[java.util.ArrayList$ListItr.add(Object)]"
  method "HotSpotCompilation-9848[java.util.ArrayList$ListItr.add(Object)]"
  date 1527005227855
end_compilation
begin_cfg
  name "After code installation"
end_cfg
begin_nmethod
  <<<HexCodeFile
  Platform AMD64 64  <||@
  HexCode 107c44600 448b560849c1e203493bc20f854f18bcfe900f1f80000000000f1f800000000089842400c0feff4883ec6848896c246048897424504889542448448b561c4489542444468b2cd514000000438504ec8b7e188b3cfd0c0000003b7e140f85ed050000428b3cd510000000448b5e0c44895c2440443bdf0f8f9a0500004585db0f8cd2050000448bc741ffc0448944243c4181fdf7a700d80f84be020000458bf0448974243841b90100000046030cd50c00000044894c243446890cd50c000000428b1ced0c000000428b0ced08000000418bc62bc3418bea48c1e50348896c2428412bfb418bebffc5896c242449be00e01b17010000004c8974241883f8010f8dd100000081f9f52200f80f854e050000413bdb0f86a505000085ed0f8cf103000085ff0f8c140400002bdf443bdb0f8f220400003beb0f8f3304000049c1e503498bcd498bdd4963c34c63d54863ff4c8bdf488d7c81104a8d749310498bd34c896c2410e8b6e9bcfe90488b54244848c1ea034c8b6c2410448b5c24404389549d104b8d7c9d1048c1ef094c8b74241846882437448b542444448b44243c468904d510000000488b7424508b6c2424896e0cc74610ffffffff448b4c243444894e14488b6c24604883c468850534a8c4fcc5f877c38b442438448bc341d1e84403c3458bc8442bc84585c9440f4cc0458d88090000804183f9010f8df9030000453bc30f86990400004585c00f8c200400004d8b4f60418bc0c1e0028d401783e0f84863c0488bd04903d1493b57700f875303000049895760420f188408c0000000420f18840800010000420f18840840010000420f188408800100004589410c49c7010100000041894908443bc3418bd00f4fd34863d24883fa010f8c77000000498d49104a8d1ced10000000488d42f84885c049c7c5000000000f8d2d020000488d42fc4c3be80f8f13000000c4a17a6f04abc4a17a7f04a9498d45044c8be8488d42fe4c3be80f8f13000000c4a1f96e04abc4a1f97e04a9498d45024c8be8488bc248ffc84c3be80f8f08000000428b1cab42891ca94963c8483bca0f8f6a0000004585c00f84cd000000418bd0ffcac1e2024863d2498d49104803ca48c1e909498d511048c1ea09482bca48ffc1e9170000000f1f84000000000048ffc9488bda4903de4803d94488234883f9010f8c83000000ebe54183f80b0f8d6101000041be0a000000e930fdffff498d5c9110482bca488d51f84885d20f8d6501000048c7c000000000488d51fc483bc20f8f10000000c5f9efc0c5fa7f0483488d5004488bc2488d51fe483bc20f8f11000000c5f9efc0c4e1f97e0483488d5002488bc248ffc9483bc10f8f33ffffff44892483e92affffff41817908f52200f80f8596020000488b4c2428498bd148c1ea03428914d514000000488bd148c1ea094688243285ed0f8ccc01000085ff0f8cc4010000442bc7453bd80f8fb8010000413be80f8faf010000498bd9498bc14d63eb4c63d54863ff4c8bdf4a8d7cab104a8d749010498bd34c894c2410e8c9e6bcfe904c8b742448498bd648c1ea034c8b4c2410448b5c244043895499104b8d74991048c1ee094c8b74241846882436448b44243c448b542444468904d510000000488b7424508b6c2424896e0cc74610ffffffff448b4c243444894e14488b6c24604883c468850544a5c4fcc5f877c3458bf0e9d2fbffff6690c4a17e6f04abc4a17e7f04a94d8d6d084c3be87eebe9b9fdffffc5f9efc048c7c0000000006666660f1f840000000000c5fe7f0483488d4008483bc27ef2e979feffff49ba0000000000000000488b4c24284c8bf2ba9f02ffff4189979c0200004d8997a8020000e8c12abcfe9049ba0000000000000000488b4c24284c8bf2ba9f02ffffebd349ba0000000000000000488b4c24284c8bf2ba9f02ffffebba49ba0000000000000000488b4c24284c8bf2ba9f02ffffeba1897c240c895c24084c8b74244848c1e103488bf1418bd0b9000000004489442404e8312235ff904c8bc8448b4424048b6c24248b7c240c8b5c2408448b5c2440448b542444488b7424504c8b742418e990fcffff4c8b74244841c7879c0200009fbffeff4d89a7a8020000e8052abcfe9049ba0000000000000000488b4c24284c8bf2baede4feffe914ffffff41baed2fffff4c8bf24589979c0200004d89a7a8020000e8cc29bcfe9049ba0000000000000000488b4c24284c8bf2ba9f5bfeffe9dbfeffff41baed3affffebc541baed2effffebbd4c8bf249ba783c72bd07000000bac4f6feff488b4c2428488b742450e9aafeffff4c8b74244849ba783c72bd07000000bac4b4feff488b4c2428488b742450e987feffff49ba0000000000000000488b4c24284c8bf2bae5b2feffe96bfeffff49ba0000000000000000488b4c24284c8bf2bae5f2feffe94ffeffffe8405900ff90e81a28bcfe90f4  <||@
  Comment 0 2  <||@
  Comment 11 {Field[name=CompilerToVM::Data::SharedRuntime_ic_miss_stub, type=address, offset=0, address=0x105aa1f78, value=0x106805e60]:0x106805e60}  <||@
  Comment 32 [stack overflow check]  <||@
  Comment 32 3  <||@
  Comment 32 1  <||@
  Comment 43 block B0 null  <||@
  Comment 43 0 [rsi|QWORD[.], rdx|QWORD[.], rbp|QWORD] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 43 2 stack:16|QWORD = MOVE rbp|QWORD moveKind: QWORD  <||@
  Comment 48 4 [] = HOTSPOTLOCKSTACK frameMapBuilder: org.graalvm.compiler.lir.amd64.AMD64FrameMapBuilder@33365d slotKind: QWORD  <||@
  Comment 48 6 stack:32|QWORD[.] = MOVE rsi|QWORD[.] moveKind: QWORD  <||@
  Comment 53 8 stack:40|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 58 10 r10|DWORD[.] = MOV [rsi|QWORD[.] + 28] size: DWORD  <||@
  Comment 62 12 stack:44|DWORD[.] = MOVE r10|DWORD[.] moveKind: DWORD  <||@
  Comment 67 14 r13|DWORD[.] = MOV [r10|DWORD[.] * 8 + 20] size: DWORD state [bci:0]  <||@
  Comment 67 [rdx:0, rsi:0, r10:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 67 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 75 16 NULLCHECK [r12|QWORD[*] + r13|DWORD[.] * 8] state [bci:0]  <||@
  Comment 75 [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 75 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 79 18 rdi|DWORD[.] = MOV [rsi|QWORD[.] + 24] size: DWORD  <||@
  Comment 82 20 rdi|DWORD = MOV [rdi|DWORD[.] * 8 + 12] size: DWORD state [bci:0]  <||@
  Comment 82 [rdx:0, rsi:0, r10:0, r13:0, stack:68, stack:72, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0             |1             |2 
     locals:  |rsi|QWORD[.]  |rdx|QWORD[.]  |-   <||@
  Comment 82 {infopoint: IMPLICIT_EXCEPTION}  <||@
  Comment 89 22 CMP (x: rdi|DWORD, y: [rsi|QWORD[.] + 20]) size: DWORD  <||@
  Comment 92 24 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B0 -> B1 falseDestination: B0 -> B86  <||@
  Comment 98 block B1 null  <||@
  Comment 98 26 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 98 28 rdi|DWORD = MOV [r10|DWORD[.] * 8 + 16] size: DWORD  <||@
  Comment 106 30 r11|DWORD = MOV [rsi|QWORD[.] + 12] size: DWORD  <||@
  Comment 110 32 stack:48|DWORD = MOVE r11|DWORD moveKind: DWORD  <||@
  Comment 115 34 CMP (x: r11|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 118 36 BRANCH trueDestinationProbability: 0.0 condition: > trueDestination: B1 -> B2 falseDestination: B1 -> B3  <||@
  Comment 124 block B3 null  <||@
  Comment 124 46 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 124 48 TEST (x: r11|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 127 50 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B3 -> B4 falseDestination: B3 -> B5  <||@
  Comment 133 block B5 null  <||@
  Comment 133 60 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 133 62 r8|DWORD = INC rdi|DWORD size: DWORD  <||@
  Comment 139 64 stack:52|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 144 66 CMP r13|DWORD[.] y: -559030611 size: DWORD c: NarrowOop[Object[0]{}]  <||@
  Comment 144 {NarrowOop[Object[0]{}]}  <||@
  Comment 151 68 BRANCH trueDestinationProbability: 0.20650896819494347 condition: = trueDestination: B5 -> B6 falseDestination: B5 -> B9  <||@
  Comment 157 block B9 null  <||@
  Comment 157 88 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 157 90 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 160 92 JUMP ~[] destination: B9 -> B10  <||@
  Comment 160 block B10 null  <||@
  Comment 160 94 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 160 96 stack:56|DWORD = MOVE r14|DWORD moveKind: DWORD  <||@
  Comment 165 98 r9|DWORD = MOVE input: int[1|0x1]  <||@
  Comment 171 100 r9|DWORD = ADD (x: r9|DWORD, ~y: [r10|DWORD[.] * 8 + 12]) size: DWORD  <||@
  Comment 179 102 stack:60|DWORD = MOVE r9|DWORD moveKind: DWORD  <||@
  Comment 184 104 MOV (x: [r10|DWORD[.] * 8 + 12], y: r9|DWORD) size: DWORD  <||@
  Comment 192 106 rbx|DWORD = MOV [r13|DWORD[.] * 8 + 12] size: DWORD  <||@
  Comment 200 108 rcx|DWORD = MOV [r13|DWORD[.] * 8 + 8] size: DWORD  <||@
  Comment 208 110 rax|DWORD = SUB (x: r14|DWORD, ~y: rbx|DWORD) size: DWORD  <||@
  Comment 213 112 rbp|QWORD[.] = UNCOMPRESSPOINTER (input: r10|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 220 114 stack:72|QWORD[.] = MOVE rbp|QWORD[.] moveKind: QWORD  <||@
  Comment 225 116 rdi|DWORD = SUB (x: rdi|DWORD, ~y: r11|DWORD) size: DWORD  <||@
  Comment 228 118 rbp|DWORD = INC r11|DWORD size: DWORD  <||@
  Comment 233 120 stack:76|DWORD = MOVE rbp|DWORD moveKind: DWORD  <||@
  Comment 237 122 r14|QWORD = MOVE input: long[4682670080|0x1171be000]  <||@
  Comment 247 124 stack:88|QWORD = MOVE r14|QWORD moveKind: QWORD  <||@
  Comment 252 126 CMP rax|DWORD y: 1 size: DWORD  <||@
  Comment 255 128 BRANCH trueDestinationProbability: 0.7755172391223244 condition: < trueDestination: B10 -> B11 falseDestination: B10 -> B24  <||@
  Comment 261 block B11 null  <||@
  Comment 261 130 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 261 132 CMP rcx|DWORD y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 261 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 267 134 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B11 -> B12 falseDestination: B11 -> B23  <||@
  Comment 273 block B12 null  <||@
  Comment 273 136 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 273 138 CMP (x: rbx|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 276 140 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B12 -> B13 falseDestination: B12 -> B22  <||@
  Comment 282 block B13 null  <||@
  Comment 282 142 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 282 144 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 284 146 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B13 -> B14 falseDestination: B13 -> B15  <||@
  Comment 290 block B15 null  <||@
  Comment 290 160 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 290 162 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 292 164 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B15 -> B16 falseDestination: B15 -> B17  <||@
  Comment 298 block B17 null  <||@
  Comment 298 178 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 298 180 rbx|DWORD = SUB (x: rbx|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 300 182 CMP (x: r11|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 303 184 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B17 -> B18 falseDestination: B17 -> B19  <||@
  Comment 309 block B19 null  <||@
  Comment 309 198 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 309 200 CMP (x: rbp|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 311 202 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B19 -> B20 falseDestination: B19 -> B21  <||@
  Comment 317 block B21 null  <||@
  Comment 317 216 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 317 218 r13|QWORD[.] = UNCOMPRESSPOINTER (input: r13|DWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 321 220 rcx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 324 222 rbx|QWORD[*] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 327 224 rax|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 330 226 r10|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 333 228 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 336 230 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 339 232 rdi|QWORD = LEA [rcx|QWORD[*] + rax|QWORD * 4 + 16] size: QWORD  <||@
  Comment 344 234 rsi|QWORD = LEA [rbx|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 349 236 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 352 238 stack:96|QWORD[.] = MOVE r13|QWORD[.] moveKind: QWORD  <||@
  Comment 357 240 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 357 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 363 242 rdx|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 368 244 rdx|DWORD[.] = COMPRESSPOINTER (input: rdx|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 372 246 r13|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 377 248 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 382 250 MOV (x: [r13|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 387 252 rdi|QWORD[.] = LEA [r13|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 392 254 rdi|QWORD[*] = SHR rdi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 396 256 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 401 258 MOVB (x: [rdi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 405 260 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 410 262 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 415 264 MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 423 266 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 428 268 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 432 270 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 435 272 MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 442 274 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 447 276 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 451 278 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 460 12  <||@
  Comment 470 block B24 null  <||@
  Comment 470 308 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 470 310 rax|DWORD = MOVE stack:56|DWORD moveKind: DWORD  <||@
  Comment 474 312 r8|DWORD = SHR rbx|DWORD size: DWORD  <||@
  Comment 480 314 r8|DWORD = ADD (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 483 316 r9|DWORD = SUB (x: r8|DWORD, ~y: rax|DWORD) size: DWORD  <||@
  Comment 489 318 TEST (x: r9|DWORD, y: r9|DWORD) size: DWORD  <||@
  Comment 492 320 r8|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rax|DWORD) condition: <  <||@
  Comment 496 322 r9|DWORD = LEA [r8|DWORD - 2147483639] size: DWORD  <||@
  Comment 503 324 CMP r9|DWORD y: 1 size: DWORD  <||@
  Comment 507 326 BRANCH trueDestinationProbability: 1.0 condition: < trueDestination: B24 -> B25 falseDestination: B24 -> B84  <||@
  Comment 513 block B25 null  <||@
  Comment 513 328 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 513 330 CMP (x: r8|DWORD, y: r11|DWORD) size: DWORD  <||@
  Comment 516 332 BRANCH trueDestinationProbability: 1.0 condition: |>| trueDestination: B25 -> B26 falseDestination: B25 -> B83  <||@
  Comment 522 block B26 null  <||@
  Comment 522 334 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 522 336 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 525 338 BRANCH trueDestinationProbability: 0.0 condition: < trueDestination: B26 -> B27 falseDestination: B26 -> B28  <||@
  Comment 531 block B28 null  <||@
  Comment 531 352 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 531 354 r9|QWORD = MOV [r15|QWORD + 96] size: QWORD  <||@
  Comment 535 356 rax|DWORD = SHL r8|DWORD y: 2 size: DWORD  <||@
  Comment 541 358 rax|DWORD = LEA [rax|DWORD + 23] size: DWORD  <||@
  Comment 544 360 rax|DWORD = AND rax|DWORD y: -8 size: DWORD  <||@
  Comment 547 362 rax|QWORD = MOVSXD rax|DWORD size: QWORD  <||@
  Comment 550 364 rdx|QWORD = ADD (x: rax|QWORD, y: r9|QWORD) size: QWORD  <||@
  Comment 556 366 CMP (x: rdx|QWORD, y: [r15|QWORD + 112]) size: QWORD  <||@
  Comment 560 368 BRANCH trueDestinationProbability: 0.010000000000000009 condition: |>| trueDestination: B28 -> B29 falseDestination: B28 -> B30  <||@
  Comment 566 block B30 null  <||@
  Comment 566 410 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 566 412 MOV (x: [r15|QWORD + 96], y: rdx|QWORD) size: QWORD  <||@
  Comment 570 414 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 192] instr: 0  <||@
  Comment 579 416 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 256] instr: 0  <||@
  Comment 588 418 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 320] instr: 0  <||@
  Comment 597 420 AMD64PREFETCH ~[rax|QWORD + r9|QWORD * 1 + 384] instr: 0  <||@
  Comment 606 422 MOV (x: [r9|QWORD + 12], y: r8|DWORD) size: DWORD  <||@
  Comment 610 424 MOV [r9|QWORD] y: 1 size: QWORD  <||@
  Comment 617 426 MOV (x: [r9|QWORD + 8], y: rcx|DWORD) size: DWORD  <||@
  Comment 621 428 r9|QWORD[.] = MOVE r9|QWORD moveKind: QWORD  <||@
  Comment 621 430 JUMP ~[] destination: B30 -> B31  <||@
  Comment 621 block B31 null  <||@
  Comment 621 432 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 621 434 CMP (x: r8|DWORD, y: rbx|DWORD) size: DWORD  <||@
  Comment 624 436 rdx|DWORD = CMOVE (falseValue: r8|DWORD, ~trueValue: rbx|DWORD) condition: >  <||@
  Comment 630 438 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 633 440 CMP rdx|QWORD y: 1 size: QWORD  <||@
  Comment 637 442 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B31 -> B47 falseDestination: B31 -> B33  <||@
  Comment 643 block B33 null  <||@
  Comment 643 448 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 643 450 rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 647 452 rbx|QWORD[*] = LEA [r13|DWORD[.] * 8 + 16] size: QWORD  <||@
  Comment 655 454 rax|QWORD = LEA [rdx|QWORD - 8] size: QWORD  <||@
  Comment 659 456 TEST (x: rax|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 662 462 r13|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 669 458 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B33 -> B38 falseDestination: B33 -> B36  <||@
  Comment 675 block B38 null  <||@
  Comment 675 488 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 675 490 rax|QWORD = LEA [rdx|QWORD - 4] size: QWORD  <||@
  Comment 679 492 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 682 494 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B38 -> B41 falseDestination: B38 -> B40  <||@
  Comment 688 block B40 null  <||@
  Comment 688 500 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 688 502 xmm0|V128_DWORD[....] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVDQU  <||@
  Comment 694 504 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 700 506 rax|QWORD = LEA [r13|QWORD + 4] size: QWORD  <||@
  Comment 704 508 r13|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 707 510 JUMP ~[] destination: B40 -> B41  <||@
  Comment 707 block B41 null  <||@
  Comment 707 512 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 707 514 rax|QWORD = LEA [rdx|QWORD - 2] size: QWORD  <||@
  Comment 711 516 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 714 518 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B41 -> B44 falseDestination: B41 -> B43  <||@
  Comment 720 block B43 null  <||@
  Comment 720 524 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 720 526 xmm0|V64_DWORD[..] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: XMM oh: VMOVQ  <||@
  Comment 726 528 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 732 530 rax|QWORD = LEA [r13|QWORD + 2] size: QWORD  <||@
  Comment 736 532 r13|QWORD = MOVE rax|QWORD moveKind: QWORD  <||@
  Comment 739 534 JUMP ~[] destination: B43 -> B44  <||@
  Comment 739 block B44 null  <||@
  Comment 739 536 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 739 538 rax|QWORD = DEC rdx|QWORD size: QWORD  <||@
  Comment 745 540 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 748 542 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B44 -> B47 falseDestination: B44 -> B46  <||@
  Comment 754 block B46 null  <||@
  Comment 754 548 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 754 550 rbx|DWORD[.] = MOV [rbx|QWORD[*] + r13|QWORD * 4] size: DWORD  <||@
  Comment 758 552 MOV (x: [rcx|QWORD[.] + r13|QWORD * 4], y: rbx|DWORD[.]) size: DWORD  <||@
  Comment 762 554 JUMP ~[] destination: B46 -> B47  <||@
  Comment 762 block B47 null  <||@
  Comment 762 556 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 762 558 rcx|QWORD = MOVSXD r8|DWORD size: QWORD  <||@
  Comment 765 560 CMP (x: rcx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 768 562 BRANCH trueDestinationProbability: 0.5 condition: > trueDestination: B47 -> B48 falseDestination: B47 -> B64  <||@
  Comment 774 block B64 null  <||@
  Comment 774 678 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 774 680 TEST (x: r8|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 777 682 BRANCH trueDestinationProbability: 0.5 condition: = trueDestination: B64 -> B69 falseDestination: B64 -> B66  <||@
  Comment 783 block B66 null  <||@
  Comment 783 688 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 783 690 rdx|DWORD = DEC r8|DWORD size: DWORD  <||@
  Comment 788 692 rdx|DWORD = SHL rdx|DWORD y: 2 size: DWORD  <||@
  Comment 791 694 rdx|QWORD = MOVSXD rdx|DWORD size: QWORD  <||@
  Comment 794 696 rcx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 798 698 rcx|QWORD[.] = ADD (x: rcx|QWORD[.], y: rdx|QWORD) size: QWORD  <||@
  Comment 801 700 rcx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 805 702 rdx|QWORD[.] = LEA [r9|QWORD[.] + 16] size: QWORD  <||@
  Comment 809 704 rdx|QWORD[*] = SHR rdx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 813 706 rcx|QWORD[*] = SUB (x: rcx|QWORD[*], ~y: rdx|QWORD[*]) size: QWORD  <||@
  Comment 816 708 rcx|QWORD[*] = INC rcx|QWORD[*] size: QWORD  <||@
  Comment 819 710 JUMP ~[] destination: B66 -> B67  <||@
  Comment 824 block B81 loop 2 depth 1 header:625|LoopBegin  <||@
  Comment 824 874 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 832 876 rcx|QWORD[*] = DEC rcx|QWORD[*] size: QWORD  <||@
  Comment 835 878 rbx|QWORD[*] = ADD (x: rdx|QWORD[*], y: r14|QWORD) size: QWORD  <||@
  Comment 841 880 rbx|QWORD[*] = ADD (x: rbx|QWORD[*], y: rcx|QWORD[*]) size: QWORD  <||@
  Comment 844 882 MOVB (x: [rbx|QWORD[*]], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 847 884 JUMP ~[] destination: B81 -> B67  <||@
  Comment 847 block B67 loop 2 depth 1 header:625|LoopBegin  <||@
  Comment 847 712 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 847 714 CMP rcx|QWORD[*] y: 1 size: QWORD  <||@
  Comment 851 716 BRANCH trueDestinationProbability: 0.5 condition: < trueDestination: B67 -> B69 falseDestination: B67 -> B81  <||@
  Comment 859 block B6 null  <||@
  Comment 859 70 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 859 72 CMP r8|DWORD y: 11 size: DWORD  <||@
  Comment 863 74 BRANCH trueDestinationProbability: 0.7298792811521303 condition: < trueDestination: B6 -> B7 falseDestination: B6 -> B8  <||@
  Comment 869 block B7 null  <||@
  Comment 869 76 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 869 78 r14|DWORD = MOVE input: int[10|0xa]  <||@
  Comment 875 80 JUMP ~[] destination: B7 -> B10  <||@
  Comment 880 block B48 null  <||@
  Comment 880 564 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 880 566 rbx|QWORD[.] = LEA [r9|QWORD[.] + rdx|QWORD * 4 + 16] size: QWORD  <||@
  Comment 885 568 rcx|QWORD = SUB (x: rcx|QWORD, ~y: rdx|QWORD) size: QWORD  <||@
  Comment 888 570 rdx|QWORD = LEA [rcx|QWORD - 8] size: QWORD  <||@
  Comment 892 572 TEST (x: rdx|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 895 574 BRANCH trueDestinationProbability: 0.75 condition: < trueDestination: B48 -> B49 falseDestination: B48 -> B50  <||@
  Comment 901 block B49 null  <||@
  Comment 901 576 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 901 578 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 908 580 JUMP ~[] destination: B49 -> B53  <||@
  Comment 908 block B53 null  <||@
  Comment 908 604 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 908 606 rdx|QWORD = LEA [rcx|QWORD - 4] size: QWORD  <||@
  Comment 912 608 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 915 610 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B53 -> B56 falseDestination: B53 -> B55  <||@
  Comment 921 block B55 null  <||@
  Comment 921 616 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 921 618 xmm0|V128_DWORD[....] = L oc: SIMD<null,null,null,null>  <||@
  Comment 925 620 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V128_DWORD[....]) nZ: XMM oh: VMOVDQU  <||@
  Comment 930 622 rdx|QWORD = LEA [rax|QWORD + 4] size: QWORD  <||@
  Comment 934 624 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 937 626 JUMP ~[] destination: B55 -> B56  <||@
  Comment 937 block B56 null  <||@
  Comment 937 628 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 937 630 rdx|QWORD = LEA [rcx|QWORD - 2] size: QWORD  <||@
  Comment 941 632 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 944 634 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B56 -> B59 falseDestination: B56 -> B58  <||@
  Comment 950 block B58 null  <||@
  Comment 950 640 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 950 642 xmm0|V64_DWORD[..] = L oc: SIMD<null,null>  <||@
  Comment 954 644 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V64_DWORD[..]) nZ: XMM oh: VMOVQ  <||@
  Comment 960 646 rdx|QWORD = LEA [rax|QWORD + 2] size: QWORD  <||@
  Comment 964 648 rax|QWORD = MOVE rdx|QWORD moveKind: QWORD  <||@
  Comment 967 650 JUMP ~[] destination: B58 -> B59  <||@
  Comment 967 block B59 null  <||@
  Comment 967 652 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 967 654 rcx|QWORD = DEC rcx|QWORD size: QWORD  <||@
  Comment 970 656 CMP (x: rax|QWORD, y: rcx|QWORD) size: QWORD  <||@
  Comment 973 658 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B59 -> B64 falseDestination: B59 -> B61  <||@
  Comment 979 block B61 null  <||@
  Comment 979 664 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 979 666 MOV (x: [rbx|QWORD[.] + rax|QWORD * 4], y: r12|ILLEGAL) size: DWORD  <||@
  Comment 983 668 JUMP ~[] destination: B61 -> B64  <||@
  Comment 988 block B69 null  <||@
  Comment 988 722 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 988 724 CMP [r9|QWORD[.] + 8] y: -559030611 size: DWORD c: meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}  <||@
  Comment 988 {meta{HotSpotType<[Ljava/lang/Object;, resolved>;compressed}}  <||@
  Comment 996 726 BRANCH trueDestinationProbability: 1.0 condition: = trueDestination: B69 -> B70 falseDestination: B69 -> B80  <||@
  Comment 1002 block B70 null  <||@
  Comment 1002 728 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1002 730 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1007 732 rdx|DWORD[.] = COMPRESSPOINTER (input: r9|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1014 734 MOV (x: [r10|DWORD[.] * 8 + 20], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1022 736 rdx|QWORD[*] = SHR rcx|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1029 738 MOVB (x: [rdx|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1033 740 TEST (x: rbp|DWORD, y: rbp|DWORD) size: DWORD  <||@
  Comment 1035 742 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B70 -> B78 falseDestination: B70 -> B72  <||@
  Comment 1041 block B72 null  <||@
  Comment 1041 750 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1041 752 TEST (x: rdi|DWORD, y: rdi|DWORD) size: DWORD  <||@
  Comment 1043 754 BRANCH trueDestinationProbability: 0.010000000000000009 condition: < trueDestination: B72 -> B78 falseDestination: B72 -> B74  <||@
  Comment 1049 block B74 null  <||@
  Comment 1049 762 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1049 764 r8|DWORD = SUB (x: r8|DWORD, ~y: rdi|DWORD) size: DWORD  <||@
  Comment 1052 766 CMP (x: r11|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1055 768 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B74 -> B78 falseDestination: B74 -> B76  <||@
  Comment 1061 block B76 null  <||@
  Comment 1061 776 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1061 778 CMP (x: rbp|DWORD, y: r8|DWORD) size: DWORD  <||@
  Comment 1064 780 BRANCH trueDestinationProbability: 0.010000000000000009 condition: > trueDestination: B76 -> B78 falseDestination: B76 -> B79  <||@
  Comment 1070 block B79 null  <||@
  Comment 1070 796 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1070 798 rbx|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1073 800 rax|QWORD[*] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1076 802 r13|QWORD = MOVSXD r11|DWORD size: QWORD  <||@
  Comment 1079 804 r10|QWORD = MOVSXD rbp|DWORD size: QWORD  <||@
  Comment 1082 806 rdi|QWORD = MOVSXD rdi|DWORD size: QWORD  <||@
  Comment 1085 808 r11|QWORD = MOVE rdi|QWORD moveKind: QWORD  <||@
  Comment 1088 810 rdi|QWORD = LEA [rbx|QWORD[*] + r13|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1093 812 rsi|QWORD = LEA [rax|QWORD[*] + r10|QWORD * 4 + 16] size: QWORD  <||@
  Comment 1098 814 rdx|QWORD = MOVE r11|QWORD moveKind: QWORD  <||@
  Comment 1101 816 stack:96|QWORD[.] = MOVE r9|QWORD[.] moveKind: QWORD  <||@
  Comment 1106 818 - = NEAR_FOREIGN_CALL [rdi|QWORD, rsi|QWORD, rdx|QWORD] [rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, rdi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r10|ILLEGAL, r11|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL] callTarget: ObjectArraycopy(Word,Word,Word)void@0x106813120:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]:CallingConvention[rdi|QWORD, rsi|QWORD, rdx|QWORD]; temps=rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,rdi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL  <||@
  Comment 1106 {Field[name=StubRoutines::_oop_arraycopy, type=address, offset=0, address=0x105a7dc90, value=0x106813120]:0x106813120}  <||@
  Comment 1112 820 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1117 822 rdx|DWORD[.] = COMPRESSPOINTER (input: r14|QWORD[.], ~baseRegister: r12|ILLEGAL) nonNull: false lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1124 824 r9|QWORD[.] = MOVE stack:96|QWORD[.] moveKind: QWORD  <||@
  Comment 1129 826 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1134 828 MOV (x: [r9|QWORD[.] + r11|DWORD * 4 + 16], y: rdx|DWORD[.]) size: DWORD  <||@
  Comment 1139 830 rsi|QWORD[.] = LEA [r9|QWORD[.] + r11|DWORD * 4 + 16] size: QWORD  <||@
  Comment 1144 832 rsi|QWORD[*] = SHR rsi|QWORD[.] y: 9 size: QWORD  <||@
  Comment 1148 834 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1153 836 MOVB (x: [rsi|QWORD[*] + r14|QWORD * 1], y: r12|ILLEGAL) size: BYTE  <||@
  Comment 1157 838 r8|DWORD = MOVE stack:52|DWORD moveKind: DWORD  <||@
  Comment 1162 840 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1167 842 MOV (x: [r10|DWORD[.] * 8 + 16], y: r8|DWORD) size: DWORD  <||@
  Comment 1175 844 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1180 846 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1184 848 MOV (x: [rsi|QWORD[.] + 12], y: rbp|DWORD) size: DWORD  <||@
  Comment 1187 850 MOV [rsi|QWORD[.] + 16] y: -1 size: DWORD  <||@
  Comment 1194 852 r9|DWORD = MOVE stack:60|DWORD moveKind: DWORD  <||@
  Comment 1199 854 MOV (x: [rsi|QWORD[.] + 20], y: r9|DWORD) size: DWORD  <||@
  Comment 1203 856 RETURN (savedRbp: stack:16|QWORD, value: -) isStub: false thread: r15 scratchForSafepointOnReturn: rcx config: org.graalvm.compiler.hotspot.GraalHotSpotVMConfig@7222fe45  <||@
  Comment 1212 12  <||@
  Comment 1222 block B8 null  <||@
  Comment 1222 82 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1222 84 r14|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1225 86 JUMP ~[] destination: B8 -> B10  <||@
  Comment 1230 block B36 loop 0 depth 1 header:686|LoopBegin  <||@
  Comment 1230 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1232 474 xmm0|V256_DWORD[........] = H [rbx|QWORD[*] + r13|QWORD * 4] nZ: YMM oh: VMOVDQU  <||@
  Comment 1238 476 J (address: [rcx|QWORD[.] + r13|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1244 478 r13|QWORD = LEA [r13|QWORD + 8] size: QWORD  <||@
  Comment 1248 480 CMP (x: r13|QWORD, y: rax|QWORD) size: QWORD  <||@
  Comment 1251 482 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B36 -> B38 falseDestination: B36 -> B36  <||@
  Comment 1258 block B50 null  <||@
  Comment 1258 582 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1258 584 xmm0|V256_DWORD[........] = L oc: SIMD<null,null,null,null,null,null,null,null>  <||@
  Comment 1262 586 rax|QWORD = MOVE input: long[0|0x0]  <||@
  Comment 1269 588 JUMP ~[] destination: B50 -> B51  <||@
  Comment 1269 block B51 loop 1 depth 1 header:741|LoopBegin  <||@
  Comment 1269 -1 [] = LABEL numbPhis: 0 align: true label: ?  <||@
  Comment 1280 592 J (address: [rbx|QWORD[.] + rax|QWORD * 4], input: xmm0|V256_DWORD[........]) nZ: YMM oh: VMOVDQU  <||@
  Comment 1285 594 rax|QWORD = LEA [rax|QWORD + 8] size: QWORD  <||@
  Comment 1289 596 CMP (x: rax|QWORD, y: rdx|QWORD) size: QWORD  <||@
  Comment 1292 598 BRANCH trueDestinationProbability: 0.25 condition: > trueDestination: B51 -> B53 falseDestination: B51 -> B51  <||@
  Comment 1299 block B14 null  <||@
  Comment 1299 148 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1299 150 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1309 152 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1314 154 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1317 156 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1322 158 JUMP ~[] destination: B14 -> B85  <||@
  Comment 1322 block B85 null  <||@
  Comment 1322 914 [] = LABEL numbPhis: 2 align: false label: ?  <||@
  Comment 1322 916 MOV (x: [r15|QWORD + 668], y: rdx|DWORD) size: DWORD  <||@
  Comment 1329 918 MOV (x: [r15|QWORD + 680], y: r10|QWORD[.]) size: QWORD  <||@
  Comment 1336 920 DEOPT info [bci:10, 9, 12, 15]  <||@
  Comment 1336 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1341 [rcx:0, rsi:0, r14:0]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0             |1              
     locals:  |rcx|QWORD[.]  |stack:56|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0             |1          |2            
     locals:  |rcx|QWORD[.]  |r11|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0             |1  |2         
     locals:  |rsi|QWORD[.]  |-  |r11|DWORD   <||@
  Comment 1342 block B16 null  <||@
  Comment 1342 166 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1342 168 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1352 170 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1357 172 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1360 174 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1365 176 JUMP ~[] destination: B16 -> B85  <||@
  Comment 1367 block B18 null  <||@
  Comment 1367 186 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1367 188 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1377 190 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1382 192 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1385 194 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1390 196 JUMP ~[] destination: B18 -> B85  <||@
  Comment 1392 block B20 null  <||@
  Comment 1392 204 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1392 206 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1402 208 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1407 210 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1410 212 rdx|DWORD = MOVE input: int[-64865|0xffffffffffff029f]  <||@
  Comment 1415 214 JUMP ~[] destination: B20 -> B85  <||@
  Comment 1417 block B29 null  <||@
  Comment 1417 370 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1417 372 stack:100|DWORD = MOVE rdi|DWORD moveKind: DWORD  <||@
  Comment 1421 374 stack:104|DWORD = MOVE rbx|DWORD moveKind: DWORD  <||@
  Comment 1425 376 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1430 378 rcx|QWORD = UNCOMPRESSPOINTER (input: rcx|DWORD, ~baseRegister: -) nonNull: true lirKindTool: com.oracle.graal.enterprise.z.a@4a08016d encoding: base: 0 shift: 3  <||@
  Comment 1434 380 rsi|QWORD = MOVE rcx|QWORD moveKind: QWORD  <||@
  Comment 1437 382 rdx|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1440 384 rcx|DWORD = MOVE input: int[0|0x0]  <||@
  Comment 1445 386 stack:108|DWORD = MOVE r8|DWORD moveKind: DWORD  <||@
  Comment 1450 388 rax|QWORD[.] = NEAR_FOREIGN_CALL [rsi|QWORD, rdx|DWORD, rcx|DWORD] [r10|ILLEGAL, rdi|ILLEGAL, xmm0|ILLEGAL, xmm1|ILLEGAL, xmm2|ILLEGAL, xmm3|ILLEGAL, xmm4|ILLEGAL, xmm5|ILLEGAL, xmm6|ILLEGAL, xmm7|ILLEGAL, xmm8|ILLEGAL, xmm9|ILLEGAL, xmm10|ILLEGAL, xmm11|ILLEGAL, xmm12|ILLEGAL, xmm13|ILLEGAL, xmm14|ILLEGAL, xmm15|ILLEGAL, xmm16|ILLEGAL, xmm17|ILLEGAL, xmm18|ILLEGAL, xmm19|ILLEGAL, xmm20|ILLEGAL, xmm21|ILLEGAL, xmm22|ILLEGAL, xmm23|ILLEGAL, xmm24|ILLEGAL, xmm25|ILLEGAL, xmm26|ILLEGAL, xmm27|ILLEGAL, xmm28|ILLEGAL, xmm29|ILLEGAL, xmm30|ILLEGAL, xmm31|ILLEGAL, rax|ILLEGAL, rcx|ILLEGAL, rdx|ILLEGAL, rsi|ILLEGAL, r8|ILLEGAL, r9|ILLEGAL, r11|ILLEGAL, rbx|ILLEGAL, rbp|ILLEGAL] callTarget: Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL state [bci:10, 9, 12, 15]  <||@
  Comment 1450 {Stub<NewArrayStub.newArray>@0x106f96de0:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]:CallingConvention[rsi|QWORD, rdx|DWORD, rcx|DWORD -> rax|QWORD[.]]; temps=r10|ILLEGAL,rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r11|ILLEGAL,rbx|ILLEGAL,rbp|ILLEGAL}  <||@
  Comment 1455 [r13:0, r14:0, stack:40, stack:68, stack:72, stack:80]at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:238) [bci: 10, duringCall: false, rethrow: false]
              |0                  |1              
     locals:  |stack:72|QWORD[.]  |stack:56|DWORD 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:72|QWORD[.]  |stack:48|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD   <||@
  Comment 1456 390 r9|QWORD[.] = MOVE rax|QWORD[.] moveKind: QWORD  <||@
  Comment 1459 392 r8|DWORD = MOVE stack:108|DWORD moveKind: DWORD  <||@
  Comment 1464 394 rbp|DWORD = MOVE stack:76|DWORD moveKind: DWORD  <||@
  Comment 1468 396 rdi|DWORD = MOVE stack:100|DWORD moveKind: DWORD  <||@
  Comment 1472 398 rbx|DWORD = MOVE stack:104|DWORD moveKind: DWORD  <||@
  Comment 1476 400 r11|DWORD = MOVE stack:48|DWORD moveKind: DWORD  <||@
  Comment 1481 402 r10|DWORD[.] = MOVE stack:44|DWORD[.] moveKind: DWORD  <||@
  Comment 1486 404 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1491 406 r14|QWORD = MOVE stack:88|QWORD moveKind: QWORD  <||@
  Comment 1496 408 JUMP ~[] destination: B29 -> B31  <||@
  Comment 1501 block B78 null  <||@
  Comment 1501 788 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1501 746 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1506 790 MOV [r15|QWORD + 668] y: -82017 size: DWORD  <||@
  Comment 1517 792 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1524 794 DEOPT info [bci:44, 22, 9, 12, 15]  <||@
  Comment 1524 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1529 [r14:0, stack:40, stack:80]at java.util.ArrayList.grow(ArrayList.java:266) [bci: 44, duringCall: false, rethrow: false]
              |0  |1  |2  |3 
     locals:  |-  |-  |-  |- 
  at java.util.ArrayList.ensureExplicitCapacity(ArrayList.java:239) [bci: 22, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.ensureCapacityInternal(ArrayList.java:231) [bci: 9, duringCall: true, rethrow: false]
              |0  |1 
     locals:  |-  |- 
  at java.util.ArrayList.add(ArrayList.java:479) [bci: 12, duringCall: true, rethrow: false]
              |0                  |1               |2            
     locals:  |stack:72|QWORD[.]  |stack:48|DWORD  |r14|QWORD[.] 
  at java.util.ArrayList$ListItr.add(ArrayList.java:964) [bci: 15, duringCall: true, rethrow: false]
              |0                  |1  |2              
     locals:  |stack:32|QWORD[.]  |-  |stack:48|DWORD   <||@
  Comment 1530 block B84 null  <||@
  Comment 1530 902 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1530 904 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1540 906 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1545 908 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1548 910 rdx|DWORD = MOVE input: int[-72467|0xfffffffffffee4ed]  <||@
  Comment 1553 912 JUMP ~[] destination: B84 -> B85  <||@
  Comment 1558 block B2 null  <||@
  Comment 1558 38 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1558 40 r10|DWORD = MOVE input: int[-53267|0xffffffffffff2fed]  <||@
  Comment 1564 44 JUMP ~[] destination: B2 -> B87  <||@
  Comment 1564 block B87 null  <||@
  Comment 1564 930 [] = LABEL numbPhis: 1 align: false label: ?  <||@
  Comment 1564 42 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1567 932 MOV (x: [r15|QWORD + 668], y: r10|DWORD) size: DWORD  <||@
  Comment 1574 934 MOV (x: [r15|QWORD + 680], y: r12|ILLEGAL) size: QWORD  <||@
  Comment 1581 936 DEOPT info [bci:0]  <||@
  Comment 1581 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_uncommon_trap, type=address, offset=0, address=0x105aa1f90, value=0x1068075fe]:0x1068075fe}  <||@
  Comment 1586 [r14:0, stack:80]at java.util.ArrayList$ListItr.add(ArrayList.java:960) [bci: 0, duringCall: false, rethrow: false]
              |0                  |1             |2 
     locals:  |stack:32|QWORD[.]  |r14|QWORD[.]  |-   <||@
  Comment 1587 block B27 null  <||@
  Comment 1587 340 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1587 342 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1597 344 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1602 346 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1605 348 rdx|DWORD = MOVE input: int[-107617|0xfffffffffffe5b9f]  <||@
  Comment 1610 350 JUMP ~[] destination: B27 -> B85  <||@
  Comment 1615 block B86 null  <||@
  Comment 1615 922 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1615 924 r10|DWORD = MOVE input: int[-50451|0xffffffffffff3aed]  <||@
  Comment 1621 928 JUMP ~[] destination: B86 -> B87  <||@
  Comment 1623 block B4 null  <||@
  Comment 1623 52 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1623 54 r10|DWORD = MOVE input: int[-53523|0xffffffffffff2eed]  <||@
  Comment 1629 58 JUMP ~[] destination: B4 -> B87  <||@
  Comment 1631 block B23 null  <||@
  Comment 1631 292 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1631 294 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1634 296 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427]  <||@
  Comment 1634 {Object[d.a@598408427]}  <||@
  Comment 1644 298 rdx|DWORD = MOVE input: int[-67900|0xfffffffffffef6c4]  <||@
  Comment 1649 300 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1654 304 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1659 306 JUMP ~[] destination: B23 -> B85  <||@
  Comment 1664 block B80 null  <||@
  Comment 1664 858 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1664 860 r14|QWORD[.] = MOVE stack:40|QWORD[.] moveKind: QWORD  <||@
  Comment 1669 862 r10|QWORD[.] = HOTSPOTLOADOBJECTCONSTANT input: Object[d.a@598408427]  <||@
  Comment 1669 {Object[d.a@598408427]}  <||@
  Comment 1679 864 rdx|DWORD = MOVE input: int[-84796|0xfffffffffffeb4c4]  <||@
  Comment 1684 866 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1689 870 rsi|QWORD[.] = MOVE stack:32|QWORD[.] moveKind: QWORD  <||@
  Comment 1694 872 JUMP ~[] destination: B80 -> B85  <||@
  Comment 1699 block B83 null  <||@
  Comment 1699 890 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1699 892 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1709 894 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1714 896 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1717 898 rdx|DWORD = MOVE input: int[-85275|0xfffffffffffeb2e5]  <||@
  Comment 1722 900 JUMP ~[] destination: B83 -> B85  <||@
  Comment 1727 block B22 null  <||@
  Comment 1727 280 [] = LABEL numbPhis: 0 align: false label: ?  <||@
  Comment 1727 282 r10|QWORD[.] = MOVE input: Object[null]  <||@
  Comment 1737 284 rcx|QWORD[.] = MOVE stack:72|QWORD[.] moveKind: QWORD  <||@
  Comment 1742 286 r14|QWORD[.] = MOVE rdx|QWORD[.] moveKind: QWORD  <||@
  Comment 1745 288 rdx|DWORD = MOVE input: int[-68891|0xfffffffffffef2e5]  <||@
  Comment 1750 290 JUMP ~[] destination: B22 -> B85  <||@
  Comment 1755 {Stub<ExceptionHandlerStub.exceptionHandler>@0x106c4a620:CallingConvention[rax|QWORD[.], rdx|QWORD]:CallingConvention[rax|QWORD[.], rdx|QWORD]; temps=rdi|ILLEGAL,xmm0|ILLEGAL,xmm1|ILLEGAL,xmm2|ILLEGAL,xmm3|ILLEGAL,xmm4|ILLEGAL,xmm5|ILLEGAL,xmm6|ILLEGAL,xmm7|ILLEGAL,xmm8|ILLEGAL,xmm9|ILLEGAL,xmm10|ILLEGAL,xmm11|ILLEGAL,xmm12|ILLEGAL,xmm13|ILLEGAL,xmm14|ILLEGAL,xmm15|ILLEGAL,xmm16|ILLEGAL,xmm17|ILLEGAL,xmm18|ILLEGAL,xmm19|ILLEGAL,xmm20|ILLEGAL,xmm21|ILLEGAL,xmm22|ILLEGAL,xmm23|ILLEGAL,xmm24|ILLEGAL,xmm25|ILLEGAL,xmm26|ILLEGAL,xmm27|ILLEGAL,xmm28|ILLEGAL,xmm29|ILLEGAL,xmm30|ILLEGAL,xmm31|ILLEGAL,rax|ILLEGAL,rcx|ILLEGAL,rdx|ILLEGAL,rsi|ILLEGAL,r8|ILLEGAL,r9|ILLEGAL,r10|ILLEGAL,r11|ILLEGAL}  <||@
  Comment 1755 4  <||@
  Comment 1761 {Field[name=CompilerToVM::Data::SharedRuntime_deopt_blob_unpack, type=address, offset=0, address=0x105aa1f88, value=0x106807500]:0x106807500}  <||@
  Comment 1761 5  <||@
  HexCodeFile>>> <|@
end_nmethod
